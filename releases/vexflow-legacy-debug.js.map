{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 77f51e1283af2818266f","webpack:///./src/index.js","webpack:///./src/vex.js","webpack:///./src/tables.js","webpack:///./src/fraction.js","webpack:///./src/glyph.js","webpack:///./src/element.js","webpack:///./src/registry.js","webpack:///./src/boundingboxcomputation.js","webpack:///./src/boundingbox.js","webpack:///./src/fonts/vexflow_font.js","webpack:///./src/renderer.js","webpack:///./src/canvascontext.js","webpack:///./src/raphaelcontext.js","webpack:///./src/svgcontext.js","webpack:///./src/formatter.js","webpack:///./src/beam.js","webpack:///./src/tuplet.js","webpack:///./src/stem.js","webpack:///./src/voice.js","webpack:///./src/staveconnector.js","webpack:///./src/stavenote.js","webpack:///./src/notehead.js","webpack:///./src/note.js","webpack:///./src/tickable.js","webpack:///./src/stemmablenote.js","webpack:///./src/modifier.js","webpack:///./src/dot.js","webpack:///./src/modifiercontext.js","webpack:///./src/frethandfinger.js","webpack:///./src/accidental.js","webpack:///./src/music.js","webpack:///./src/notesubgroup.js","webpack:///./src/gracenotegroup.js","webpack:///./src/stavetie.js","webpack:///./src/tabtie.js","webpack:///./src/strokes.js","webpack:///./src/stringnumber.js","webpack:///./src/articulation.js","webpack:///./src/ornament.js","webpack:///./src/tickcontext.js","webpack:///./src/annotation.js","webpack:///./src/bend.js","webpack:///./src/vibrato.js","webpack:///./src/stave.js","webpack:///./src/stavebarline.js","webpack:///./src/stavemodifier.js","webpack:///./src/staverepetition.js","webpack:///./src/stavesection.js","webpack:///./src/stavetempo.js","webpack:///./src/stavetext.js","webpack:///./src/textnote.js","webpack:///./src/clef.js","webpack:///./src/keysignature.js","webpack:///./src/timesignature.js","webpack:///./src/stavevolta.js","webpack:///./src/tabstave.js","webpack:///./src/tabnote.js","webpack:///./src/vibratobracket.js","webpack:///./src/clefnote.js","webpack:///./src/timesignote.js","webpack:///./src/tabslide.js","webpack:///./src/gracenote.js","webpack:///./src/gracetabnote.js","webpack:///./src/tuning.js","webpack:///./src/keymanager.js","webpack:///./src/stavehairpin.js","webpack:///./src/curve.js","webpack:///./src/textdynamics.js","webpack:///./src/staveline.js","webpack:///./src/pedalmarking.js","webpack:///./src/textbracket.js","webpack:///./src/barnote.js","webpack:///./src/ghostnote.js","webpack:///./src/tremolo.js","webpack:///./src/crescendo.js","webpack:///./src/system.js","webpack:///./src/factory.js","webpack:///./src/easyscore.js","webpack:///./src/parser.js"],"names":["Flow","Element","Fraction","Renderer","Formatter","Music","Glyph","Stave","StaveNote","StaveModifier","Voice","Accidental","Beam","StaveTie","TabStave","TabNote","Bend","Vibrato","VibratoBracket","Note","ModifierContext","TickContext","Articulation","Annotation","Barline","NoteHead","StaveConnector","ClefNote","KeySignature","TimeSignature","TimeSigNote","Stem","TabTie","Clef","Modifier","TabSlide","Tuplet","GraceNote","GraceTabNote","Tuning","KeyManager","StaveHairpin","BoundingBox","Stroke","TextNote","Curve","TextDynamics","StaveLine","Ornament","PedalMarking","TextBracket","FretHandFinger","Repetition","BarNote","GhostNote","NoteSubGroup","GraceNoteGroup","Tremolo","StringNumber","Crescendo","Volta","Font","System","Factory","Parser","EasyScore","Registry","StaveTempo","Vex","L","block","args","line","Array","prototype","slice","call","join","window","console","log","MakeException","name","exception","message","data","Error","RuntimeError","code","toString","RERR","Merge","destination","source","property","Min","Math","min","Max","max","forEach","a","fn","i","length","RoundN","x","n","parseInt","MidLine","b","mid_line","SortAndUnique","arr","cmp","eq","newArr","last","sort","push","Contains","obj","getCanvasContext","canvas_sel","canvas","document","getElementById","getContext","drawDot","ctx","y","color","save","setFillStyle","beginPath","arc","PI","closePath","fill","restore","BM","s","f","start_time","Date","getTime","elapsed","StackTrace","err","stack","W","Prefix","prefix","text","STEM_WIDTH","STEM_HEIGHT","STAVE_LINE_THICKNESS","RESOLUTION","DEFAULT_NOTATION_FONT_SCALE","DEFAULT_TABLATURE_FONT_SCALE","SLASH_NOTEHEAD_WIDTH","TEXT_HEIGHT_OFFSET_HACK","IsKerned","clefProperties","clef","props","values","line_shift","keyProperties","key","params","undefined","options","octave_shift","pieces","split","k","toUpperCase","value","note_values","octave","base_index","index","stroke","int_value","int_val","shift_right","glyph_name","note_glyph","accidental","displaced","rest","integerToNote","integer","noteValue","table","tabToGlyph","fret","scale","glyph","width","shift_y","glyphMetrics","getMetrics","height","textWidth","getWidth","articulationCodes","articulations","artic","between_lines","accidentalCodes","accidentals","acc","parenRightPaddingAdjustment","accidentalColumnsTable","second_on_bottom","spaced_out_tetrachord","spaced_out_pentachord","very_spaced_out_pentachord","spaced_out_hexachord","very_spaced_out_hexachord","ornamentCodes","ornaments","keySignature","keySpec","keySpecs","spec","notes","accidentalList","acc_list","num","type","unicode","String","fromCharCode","patterns","parseNoteDurationString","durationString","regexp","result","exec","duration","dots","parseNoteData","noteData","durationStringData","ticks","durationToTicks","currentTicks","sanitizeDuration","alias","durationAliases","durations","durationToFraction","parse","durationToNumber","durationToGlyph","duration_codes","glyphTypeProperties","common","code_head","stem","stem_offset","flag","stem_up_extension","stem_down_extension","gracenote_stem_up_extension","gracenote_stem_down_extension","tabnote_stem_up_extension","tabnote_stem_down_extension","dot_shiftY","line_above","line_below","position","beam_count","code_flag_upstem","code_flag_downstem","TIME4_4","num_beats","beat_value","resolution","GCD","t","LCM","LCMM","arg0","shift","numerator","denominator","set","simplify","u","d","gcd","add","param1","param2","otherNumerator","otherDenominator","lcm","subtract","multiply","divide","equals","compare","__compareA","copy","__compareB","greaterThan","greaterThanEquals","lessThan","lessThanEquals","clone","quotient","floor","fraction","abs","toSimplifiedString","__tmp","toMixedString","q","str","processOutline","outline","originX","originY","scaleX","scaleY","outlineFns","command","nextX","nextY","loadMetrics","font","cache","glyphs","x_min","x_max","ha","o","cached_outline","renderGlyph","x_pos","y_pos","point","val","nocache","metrics","renderOutline","moveTo","m","bind","l","lineTo","quadraticCurveTo","bezierCurveTo","getOutlineBoundingBox","bboxComp","addPoint","addQuadraticCurve","addBezierCurve","x1","y1","setAttribute","x_shift","y_shift","originShift","setOptions","reset","setPoint","setStave","stave","setXShift","setYShift","bbox","getW","getH","setOriginX","getX","xShift","setOriginY","getY","yShift","setOrigin","render","setRendered","renderToStave","checkContext","context","getYForGlyphs","newID","ID","attrs","id","el","classes","boundingBox","rendered","getDefaultRegistry","register","hasClass","className","addClass","registry","onUpdate","getAttribute","oldValue","removeClass","onRegister","isRendered","getAttributes","setContext","getBoundingBox","X","setIndexValue","elem","clear","enableDefaultRegistry","defaultRegistry","disableDefaultRegistry","class","updateIndex","INDEXES","getElementsByAttribute","attrName","Object","keys","map","getElementsByType","getElementsByClass","includes","array","filter","concat","BoundingBoxComputation","x2","y2","Number","NaN","isNaN","addX","addY","p0x","p0y","p1x","p1y","p2x","p2y","cp1x","cp1y","cp2x","cp2y","p3x","p3y","p0","p1","p2","p3","pow","c","b2ac","t1","sqrt","t2","that","w","h","setX","setY","setW","setH","move","mergeWith","new_x","new_y","new_w","new_h","draw","rect","lastContext","buildContext","elementId","backend","background","renderer","resize","setBackgroundFillStyle","Backends","CANVAS","getRaphaelContext","RAPHAEL","getSVGContext","SVG","bolsterCanvasContext","USE_CANVAS_PROXY","methodNames","vexFlowCanvasContext","methodName","drawDashedLine","fromX","fromY","toX","toY","dashPattern","dx","dy","angle","atan2","idx","dashLength","nx","cos","ny","sin","VML","NONE","UP","DOWN","element","paper","devicePixelRatio","style","CanvasContext","WIDTH","HEIGHT","clearRect","openGroup","closeGroup","setFont","family","size","weight","setRawFont","fillStyle","background_fillStyle","setStrokeStyle","strokeStyle","setShadowColor","shadowColor","setShadowBlur","blur","shadowBlur","setLineWidth","lineWidth","setLineCap","cap_type","lineCap","setLineDash","dash","lineDash","parseFloat","fillRect","radius","startAngle","endAngle","antiClockwise","glow","measureText","fillText","RaphaelContext","Raphael","path","pen","state","font_family","font_size","font_weight","attributes","background_attributes","shadow_attributes","state_stack","transform","setSize","setViewBox","viewBox","attr","normalizeAngle","tmp","delta","arcHelper","largeArcFlag","sweepFlag","out","sa","num_paths","toFixed","opacity","strokeWidth","txt","bounds","getBBox","remove","pop","SVGContext","svgNS","svg","create","appendChild","groups","parent","iePolyfill","svgElementType","createElementNS","cls","group","pointerBBox","navigator","ie","test","userAgent","bold","italic","indexOf","replace","fontAttributes","fontSize","trim","fontArray","match","applyAttributes","visibleWidth","visibleHeight","xMin","yMin","viewBoxString","setAttributeNS","propertyName","lastChild","removeChild","rectangle","textContent","ieMeasureTextFix","widthCorrection","box","DEBUG","lookAhead","restLine","nextRestLine","note","isRest","shouldIgnoreTicks","getLineForRest","top","bot","createContexts","voices","ContextType","addToContext","totalTicks","getTotalTicks","resolutionMultiplier","reduce","voice","getMode","Mode","STRICT","isComplete","getResolutionMultiplier","tickToContextMap","tickList","contexts","ticksUsed","getTickables","integerTicks","newContext","tickable","getTicks","list","SimpleFormat","paddingBetween","addToModifierContext","tick","addTickable","preFormat","extra","getExtraPx","left","right","plotDebugging","formatter","xPos","STAVEPADDING","contextGaps","gaps","gap","round","total","lossHistory","loss","FormatAndDraw","auto_beam","align_rests","setMode","SOFT","addTickables","beams","applyAndGetBeams","joinVoices","formatToStave","beam","FormatAndDrawTab","tabstave","tabnotes","autobeam","opts","notevoice","tabvoice","AlignRestsToNotes","alignAllNotes","alignTuplets","tuplet","getGlyph","getKeyProps","setKeyLine","minTotalWidth","hasMinTotalWidth","tickContexts","modiferContexts","alignRests","preCalculateMinTotalWidth","createTickContexts","contextList","contextMap","getMinTotalWidth","createModifierContexts","tContexts","getTicksUsed","justifyWidth","renderingContext","centerX","extraLeftPx","remainingX","leftoverPxPerTick","spaceAccum","prevTick","tickSpace","getCenterAlignedTickables","center_x_shift","evaluate","prevContext","prevMetrics","insideRightEdge","insideLeftEdge","getFormatterMetrics","freedom","durationStats","updateStats","space","stats","mean","count","formatterMetrics","leftNoteEdge","noteWidth","modRightPx","extraRightPx","rightNote","rightMetrics","rightNoteEdge","modLeftPx","used","totalDeviation","iterations","deviation","totalCost","tune","sum","means","current","prev","next","nextContext","cost","minShift","postFormat","postFormatContexts","format","getNoteEndX","getNoteStartX","calculateStemDirection","lineSum","keyProps","keyProp","getStemSlope","firstNote","lastNote","firstStemTipY","getStemExtents","topY","firstStemX","getStemX","lastStemTipY","lastStemX","getDefaultBeamGroups","time_sig","defaults","beatTotal","beatValue","tripleMeter","stem_direction","generateBeams","config","tickGroups","unprocessedNotes","currentTickGroup","noteGroups","currentGroup","vf_notes","memo","nextTickGroup","createGroups","nextGroup","unprocessedNote","ticksPerGroup","unbeamable","getBeamGroups","beamable","getIntrinsicTicks","sanitizeGroups","sanitizedGroups","tempGroup","isFirstOrLast","prevNote","breaksOnEachRest","beam_rests","breaksOnFirstOrLastRest","beam_middle_only","breakOnStemChange","maintain_stem_directions","prevDirection","getStemDirection","currentDirection","isUnbeamableDuration","shouldBreak","formatStems","stemDirection","findFirstNote","applyStemDirection","direction","setStemDirection","getTuplets","uniqueTuplets","beamedNoteGroups","allTuplets","show_stemlets","render_options","secondary_breaks","secondary_break_ticks","flat_beams","flat_beam_offset","LOCATION_BOTTOM","LOCATION_TOP","setTupletLocation","bracketed","setBracketed","auto_stem","hasStem","getCategory","stem_weight","setBeam","postFormatted","getBeamCount","break_on_indices","beam_width","max_slope","min_slope","slope_iterations","slope_cost","stemlet_extension","partial_beam_length","min_flat_beam_offset","getNotes","beamCounts","maxBeamCount","beamCount","breakSecondaryAt","indices","getSlopeY","first_x_px","first_y_px","slope","calculateSlope","initialSlope","increment","minCost","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","adjustedStemTipY","stemTipY","diff","idealSlope","distanceFromIdeal","calculateFlatSlope","extremeY","extremeBeamCount","currentExtreme","getYs","offset","beamWidth","extremeTest","newOffset","applyStemExtensions","stemX","beamedStemTipY","preBeamExtension","getStem","getExtension","beamExtension","setExtension","renderHeightAdjustment","totalBeamWidth","setVisibility","setStemlet","getBeamLines","beam_lines","beam_started","current_beam","previous_should_break","tick_tally","should_break","note_gets_beam","stem_x","next_note","beam_next","end","start","last_beam","drawStems","drawBeamLines","valid_beam_durations","beamY","beamThickness","beamLines","j","beam_line","startBeamX","startBeamY","lastBeamX","lastBeamY","num_notes","beats_occupied","beatsOccupiedDeprecationWarning","notes_occupied","some","ratioed","location","resolveGlyphs","attach","setTuplet","detach","resetTuplet","setRatioed","getNoteCount","msg","warn","getBeatsOccupied","getNotesOccupied","setBeatsOccupied","beats","setNotesOccupied","num_glyphs","denom_glyphs","getNestedTupletCount","first_note","maxTupletCount","countTuplets","minTupletCount","tupletStack","tupletCount","getYPosition","nested_tuplet_y_offset","NESTING_OFFSET","y_offset","getStave","getYForLine","top_y","baseY","bottom_y","last_note","getTieLeftX","getTieRightX","addGlyphWidth","notation_center_x","notation_start_x","line_width","x_offset","colon_x","colon_radius","x_begin","x_end","y_top","y_bottom","stem_extension","hide","isStemlet","stemletHeight","setNoteHeadXBounds","setDirection","ext","setYBounds","CATEGORY","getHeight","getExtents","isStemUp","ys","stemHeight","innerMostNoteheadY","outerMostNoteheadY","setStyle","getStyle","isVisible","applyStyle","stem_y","stemletYOffset","FULL","time","tickables","smallestTickCount","largestTickWidth","mode","voiceGroup","getLargestTickWidth","getSmallestTickCount","getActualResolution","bb","getVoiceGroup","setVoiceGroup","g","setStrict","strict","setVoice","preFormatted","tickable_bb","drawBoldDoubleLine","topX","botY","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","thickLineOffset","SINGLE_RIGHT","SINGLE_LEFT","SINGLE","DOUBLE","BRACE","BRACKET","THIN_DOUBLE","singleRight","singleLeft","single","double","brace","bracket","boldDoubleLeft","boldDoubleRight","thinDouble","none","top_stave","bottom_stave","thickness","texts","setType","typeString","setText","content","shift_x","getNumLines","isRightSidedConnector","attachment_height","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","text_width","getBottomLineY","getStemAdjustment","isInnerNoteIndex","shiftRestVertical","dir","isrest","maxLine","minLine","getKeyLine","centerRest","noteU","noteL","formatByY","notesList","minL","stemMax","getStemLength","stemMin","getStemMinumumLength","maxL","voice_shift","getVoiceShiftWidth","is_displaced","isDisplaced","noteM","voiceXShift","stemDelta","lineSpacing","setStemLength","restHeight","hasStave","topNote","bottomNote","topKeys","bottomKeys","HALF_NOTEHEAD_HEIGHT","topNotBottomY","bottomNoteTopY","areNotesColliding","right_shift","noteStruct","noteType","JSON","stringify","use_default_head_x","note_heads","modifiers","glyph_font_scale","stroke_px","DEFAULT_LEDGER_LINE_OFFSET","calculateKeyProps","buildStem","autoStem","buildFlag","buildNoteHeads","head","calcExtraPx","yExtend","setStem","getKeys","lastLine","lineDiff","step","noteProps","notehead","note_type","custom_glyph_code","MIDDLE_LINE","decider","Infinity","getAbsoluteX","minY","maxY","halfLineSpacing","getSpacingBetweenLines","frac","yy","getLineNumber","isTopNote","resultLine","thisLine","isChord","hasFlag","getCenterGlyphX","getYForTopText","textLine","extents","annotation_spacing","getYForBottomText","setYs","getNoteHeadBounds","setNoteDisplaced","tieStartX","getGlyphWidth","modifierContext","getExtraRightPx","tieEndX","getModifierStartXY","Position","ABOVE","BELOW","LEFT","RIGHT","setKeyStyle","mContext","setModifierContext","addModifier","setPreFormatted","modifier","setNote","setIndex","addAccidental","addArticulation","articulation","addAnnotation","annotation","addDot","dot","setDotShiftY","addDotToAll","getAccidentals","getModifiers","getDots","setExtraLeftPx","setExtraRightPx","setWidth","yTop","yBottom","highestLine","lowestLine","getLine","highest_line","lowest_line","getNoteHeadBeginX","getNoteHeadEndX","xBegin","drawLedgerLines","headX","drawLedgerLine","getYForNote","drawModifiers","getIndex","noteheadStyle","drawFlag","shouldRenderFlag","noteStemHeight","flagX","flagY","drawNoteHeads","drawStem","stemStruct","shouldRenderStem","drawSlashNoteHead","staveSpace","breve_lines","head_options","STEM_UP","glyph_code","custom_glyph","slashed","setLine","displacementStemAdjustment","spacing","half_spacing","min_y","head_x","line_y","plotMetrics","yPos","xStart","xPre1","xAbs","xPost1","xPost2","xEnd","xFreedomRight","xWidth","getXShift","spaceDeviation","note_struct","initData","duration_override","setDuration","setIntrinsicTicks","positions","playNote","tickContext","ignore_ticks","left_modPx","right_modPx","align_center","setCenterAlignment","stave_padding","getPlayNote","setPlayNote","addStroke","getExtraLeftPx","text_line","getVoice","getTickContext","setTickContext","tc","getDuration","isDotted","getNoteType","mc","left_shift","isCenterAligned","getCenterXShift","Tickable","intrinsicTicks","tickMultiplier","getTuplet","noteCount","notesOccupied","splice","applyTickMultiplier","mod","getTickMultiplier","StemmableNote","stemExtensionOverride","flagCode","getStemExtension","stem_struct","above","below","modifier_context","spacingFromNextModifier","getNote","getModifierContext","getPosition","setPosition","PositionString","setTextLine","setSpacingFromNextModifier","getSpacingFromNextModifier","Dot","dot_spacing","dot_list","dot_shift","x_width","last_line","prev_dotted_space","half_shiftY","lineSpace","spacing_between_lines_px","top_text_line","PREFORMAT","POSTFORMAT","getState","formatted","extra_left_px","extra_right_px","nums","num_spacing","nums_list","prev_note","shiftLeft","shiftRight","pos","props_tmp","shiftL","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","num_shift","numWidth","number","finger","setFretHandFinger","setOffsetX","setOffsetY","dot_x","dot_y","noteheadAccidentalPadding","leftShift","accidentalSpacing","accList","propsTemp","accLine","lineList","accShift","previousLine","flatLine","dblSharpLine","numAcc","totalColumns","noFurtherConflicts","groupStart","groupEnd","checkCollision","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","item","notColliding","indexPairs","every","lines","groupLength","endCase","groupMember","column","patternLength","collisionDetected","columnWidths","columnXOffsets","totalShift","accCount","lastAccOnLine","line1","line2","clearance","clearanceRequired","collision","applyAccidentals","tickPositions","tickNoteMap","tickPosition","notesAtPosition","music","scaleMap","createScaleMap","modifiedPitches","processNote","keyString","keyIndex","getNoteParts","accidentalString","pitch","root","sameAccidental","previouslyModified","getGraceNotes","font_scale","parenLeftPadding","parenRightPadding","cautionary","parenLeft","parenRight","fontScale","parenWidth","setAsCautionary","accX","accY","isValidNoteValue","NUM_TONES","isValidIntervalValue","interval","noteString","toLowerCase","regex","getKeyParts","getNoteValue","noteValues","getIntervalValue","intervalString","intervals","getCanonicalNoteName","canonical_notes","getCanonicalIntervalName","intervalValue","diatonic_intervals","getRelativeNoteValue","getRelativeNoteName","parts","rootValue","multiplier","reverse_interval","relativeNoteName","getScaleTones","tones","nextNote","getIntervalBetween","note1","note2","difference","keySigParts","scaleName","scaleTypes","keySigString","noteLocation","root_indices","roots","rootName","noteName","major","dorian","mixolydian","minor","scales","root_index","subNotes","subNote","alignSubNotesWithNote","extraPx","extraLeft","tick_context","gracenote_groups","group_spacing_stave","group_spacing_tab","group_list","gracenote_group","is_stavenote","group_shift","formatWidth","grace_notes","show_slur","slur","slur_y_shift","beamNotes","alignGraceNotesWithNote","graceNote","TieClass","first_indices","last_indices","cp2","cp1","text_shift_x","first_x_shift","last_x_shift","tie_spacing","setNotes","isPartial","renderTie","first_ys","last_ys","last_x_px","cp_x","last_y_px","top_cp_y","bottom_cp_y","renderText","center_x","getTieStartX","getTieEndX","createHammeron","createPulloff","strokes","stroke_spacing","strokeList","string","getPositions","strokeShift","BRUSH_DOWN","BRUSH_UP","ROLL_DOWN","ROLL_UP","RASQUEDO_DOWN","RASQUEDO_UP","all_voices","note_end","addEndNote","line_space","arrow","arrow_shift_x","arrow_y","text_y","Type","shift_left","num_shiftL","num_shiftR","x_widthL","x_widthR","num_width","string_number","dashed","leg","LineEndType","setLineEndType","setStringNumber","setLastNote","setDashed","stem_ext","bottom","STEM_DOWN","len","pattern","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","ceil","snapLineToStaff","canSitBetweenLines","offsetDirection","snappedLine","canSnapToStaffSpace","onStaffLine","HALF_STAFF_SPACE","getTopY","stemBaseY","getBottomY","getInitialOffset","isOnStemTip","isAbove","isBelow","margin","getIncrement","maxWidth","articWidth","easyScoreHook","builder","articNameToCode","staccato","tenuto","articString","getFactory","staffSpace","isTab","shouldSitOutsideStaff","initialOffset","INITIAL_OFFSET","noteLine","distanceFromNote","articLine","ornament","delayed","accidentalUpper","accidentalLower","accidentalLowerPadding","accidentalUpperPadding","setDelayed","setUpperAccidental","accid","setLowerAccidental","stemDir","stemExtents","isPlacedOnNoteheadSide","totalSpacing","glyphYBetweenLines","glyphX","glyphY","getNextContext","tContext","currentTick","maxTicks","minTicks","padding","notePx","setPadding","getMaxTicks","getMinTicks","getCurrentTick","setCurrentTick","extraRight","annotations","CENTER","CENTER_STEM","Justify","center","centerStem","TOP","BOTTOM","VerticalJustify","justification","vert_justification","setVerticalJustification","just","VerticalJustifyString","getJustification","setJustification","JustifyString","text_height","has_stem","stem_base","yt","yb","bends","last_width","bend","release","phrase","line_style","bend_width","release_width","updateWidth","getText","measure_text","total_width","additional_width","draw_width","bend_height","annotation_y","renderBend","cp_y","renderRelease","renderArrowHead","render_x","last_bend","last_drawn_width","vibratos","vibrato","harsh","vibrato_width","wave_height","wave_width","wave_girth","setVibratoWidth","setHarsh","vx","vy","renderVibrato","num_waves","start_x","end_x","measure","vertical_bar_width","glyph_spacing_px","num_lines","fill_style","left_bar","right_bar","space_above_staff_ln","space_below_staff_ln","top_text_position","resetLines","BARTYPE","addEndModifier","line_config","visible","bottom_text_position","getOptions","setNoteStartX","setNumLines","getTopLineTopY","getBottomLineBottomY","setMeasure","getModifierXShift","BEGIN","begBarline","getType","REPEAT_BEGIN","setRepetitionTypeLeft","setRepetitionTypeRight","setVoltaType","number_t","setSection","section","setTempo","tempo","score_bottom","headroom","getLineForY","END","setBegBarType","setEndBarType","setClef","clefSpec","clefs","addClef","setEndClef","setKeySignature","cancelKeySpec","alterKeySpec","keySignatures","addKeySignature","setKeySig","setEndKeySignature","setTimeSignature","timeSpec","customPadding","timeSignatures","addTimeSignature","setTimeSig","setEndTimeSignature","addEndClef","addEndTimeSignature","addTrebleGlyph","category","sortByCategory","items","order","temp","endBarline","begModifiers","endModifiers","barlines","keysignatures","timesignatures","getPadding","drawVertical","isDouble","drawVerticalFixed","top_line","bottom_line","drawVerticalBar","drawVerticalBarFixed","getConfigForLines","setConfigForLine","line_number","setConfigForLines","lines_configuration","REPEAT_END","REPEAT_BOTH","repeatBegin","repeatEnd","repeatBoth","TYPE","widths","paddings","drawVerticalEndBar","drawRepeatBar","double_bar","begin","dot_radius","makeSpacer","placeGlyphOnLine","CODA_LEFT","CODA_RIGHT","SEGNO_LEFT","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","symbol_type","setShiftX","setShiftY","drawCodaFixed","drawSymbolText","drawSignoFixed","draw_coda","text_x","symbol_x","StaveSection","setStaveSection","bpm","stem_height","StaveText","Justification","setStaveText","text_struct","superscript","subscript","glyph_type","struct","GLYPHS","glyph_struct","smooth","sizes","attachments","types","anno_dict","attachment","glyphScale","glyphOffset","numLines","glyphFontScale","xPositions","paddingForced","convertToGlyph","nextAcc","accGlyphData","extraWidth","xPosition","glyphWidth","cancelKey","convertToCancelAccList","cancel_accList","different_types","naturals","cancelled","addToStave","convertAccLines","customLines","alterKey","convertToAlterAccList","firstAccidentalType","assertIsValidFraction","numbers","topLine","bottomLine","timeSig","parseTimeSpec","topDigits","botDigits","makeTimeSignatureGlyph","topGlyphs","botGlyphs","topWidth","topGlyph","botWidth","botGlyph","topStartX","botStartX","getTimeSig","MID","BEGIN_END","volta","vert_height","tab_options","addTabGlyph","getUnusedStringGroups","strings_used","stem_through","is_used","getPartialStemLines","unused_strings","up_stem","down_stem","line_spacing","total_lines","stem_lines","containsLastString","strings","containsFirstString","line_ys","isTopBound","isBottomBound","tab_struct","draw_stem","ghost","draw_dots","draw_stem_through_stave","setGhost","stem_extension_override","getStemY","note_glyph_width","stemUpLine","stemDownLine","stemStartLine","shouldDrawFlag","flag_x","flag_y","flag_code","drawStemThrough","drawPositions","tab_x","render_stem","bracket_data","stop","stop_x","clef_obj","getClef","abs_x","timeSignature","createSlideUp","SLIDE_UP","createSlideDown","SLIDE_DOWN","first_fret","last_fret","slide_direction","slide_y","SCALE","LEDGER_LINE_OFFSET","slash","tuningString","setTuning","noteToInteger","names","tuningValues","numStrings","getValueForString","stringNum","getValueForFret","fretNum","stringValue","getNoteForFret","setKey","getKey","keyParts","is_supported_type","scaleMapByValue","originalScaleMapByValue","getAccidental","selectNote","scaleNote","modparts","valueNote","originalValueNote","FormatByTicksAndDraw","ppt","pixelsPerTick","l_shift_px","left_shift_ticks","r_shift_px","right_shift_ticks","hairpin_options","left_shift_px","right_shift_px","setRenderOptions","CRESC","DECRESC","hairpin","renderHairpin","dis","first_y","staff_height","l_shift","r_shift","last_x","first_x","last_y","NEAR_HEAD","NEAR_TOP","nearHead","nearTop","from","to","position_end","invert","cps","renderCurve","cp_spacing","metric","end_metric","sequence","glyph_font_size","glyph_data","letter","letter_x","current_letter","drawArrowHead","x0","y0","drawArrowLine","point1","point2","both_arrows","draw_start_arrow","draw_end_arrow","distance","ratio","arrowhead_length","end_y","start_y","line_angle","arrowhead_angle","angle1","angle2","top_x","bottom_x","padding_left","padding_right","line_dash","rounded_end","text_position_vertical","TextVerticalPosition","text_justification","TextJustification","applyLineStyle","applyFontStyle","start_position","end_position","first_index","last_index","upwards_slope","notehead_width","first_displaced","last_displaced","delta_x","vertical_position","drawPedalGlyph","createSustain","pedal","createSostenuto","Styles","MIXED","setCustomText","createUnaCorda","TEXT","mixed","custom_depress_text","custom_release_text","bracket_height","text_margin_right","bracket_line_width","glyph_point_size","depress","drawBracketed","is_pedal_depressed","prev_x","prev_y","next_is_same","prev_is_same","drawText","Positions","show_bracket","underline_superscript","main_width","main_height","super_y","superscript_width","super_height","barline","parameter","y_spacing","begin_x","half_height","reverse","decrescendo","extend_left","extend_right","setHeight","setDecrescendo","decresc","next_context","setDefaults","default_options","connector","spaceBetweenStaves","factory","debugFormatter","formatIterations","addConnector","addStave","spaceAbove","spaceBelow","debugNoteMetrics","startX","allVoices","debugNoteMetricsYs","part","lastY","face","newFromElementId","renderQ","systems","staves","initRenderer","getVoices","ghostNote","textNoteStruct","textNote","barNote","clefNote","timeSigNote","vJustify","hJustify","fontFamily","fontWeight","Fingering","fingering","stringNumber","secondaryBeamBreaks","curve","tie","vibratoBracket","textBracket","system","StylesString","Grammar","LINE","expect","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","run","commitPiece","COMMA","zeroOrMore","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","or","LPAREN","NOTES","RPAREN","addChord","matches","NOTE","oneOrMore","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","ACCIDENTALS","maybe","DOT","setNoteDots","SLASH","MAYBESLASH","TYPES","setNoteType","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","unquote","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","token","Builder","commitHooks","elements","rollingDuration","resetPiece","getElements","addCommitHook","commitHook","piece","chord","addNote","accids","setId","setClass","commaSeparatedRegex","throwOnError","grammar","parser","success","voiceOptions","flattenMatches","results","matchedString","errorPos","matchFail","returnPos","matchSuccess","matchToken","noSpace","RegExp","workingLine","incrementPos","expectOne","rule","allMatches","oneMatch","localPos","gotOne","numMatches","expectOneOrMore","more","expectZeroOrMore","rules","r"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;ACpCA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,UAAIA,IAAJ,gB,CAxEA;;AAyEA,UAAIA,IAAJ,CAASC,OAAT;AACA,UAAID,IAAJ,CAASE,QAAT;AACA,UAAIF,IAAJ,CAASG,QAAT;AACA,UAAIH,IAAJ,CAASI,SAAT;AACA,UAAIJ,IAAJ,CAASK,KAAT;AACA,UAAIL,IAAJ,CAASM,KAAT;AACA,UAAIN,IAAJ,CAASO,KAAT;AACA,UAAIP,IAAJ,CAASQ,SAAT;AACA,UAAIR,IAAJ,CAASS,aAAT;AACA,UAAIT,IAAJ,CAASU,KAAT;AACA,UAAIV,IAAJ,CAASW,UAAT;AACA,UAAIX,IAAJ,CAASY,IAAT;AACA,UAAIZ,IAAJ,CAASa,QAAT;AACA,UAAIb,IAAJ,CAASc,QAAT;AACA,UAAId,IAAJ,CAASe,OAAT;AACA,UAAIf,IAAJ,CAASgB,IAAT;AACA,UAAIhB,IAAJ,CAASiB,OAAT;AACA,UAAIjB,IAAJ,CAASkB,cAAT;AACA,UAAIlB,IAAJ,CAASmB,IAAT;AACA,UAAI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","file":"/media/kratib/data/src/music/vexflow/build/vexflow-legacy-debug.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 77f51e1283af2818266f","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Renderer } from './renderer';\nimport { Formatter } from './formatter';\nimport { Music } from './music';\nimport { Glyph } from './glyph';\nimport { Stave } from './stave';\nimport { StaveNote } from './stavenote';\nimport { StaveModifier } from './stavemodifier';\nimport { Voice } from './voice';\nimport { Accidental } from './accidental';\nimport { Beam } from './beam';\nimport { StaveTie } from './stavetie';\nimport { TabStave } from './tabstave';\nimport { TabNote } from './tabnote';\nimport { Bend } from './bend';\nimport { Vibrato } from './vibrato';\nimport { VibratoBracket } from './vibratobracket';\nimport { Note } from './note';\nimport { ModifierContext } from './modifiercontext';\nimport { TickContext } from './tickcontext';\nimport { Articulation } from './articulation';\nimport { Annotation } from './annotation';\nimport { Barline } from './stavebarline';\nimport { NoteHead } from './notehead';\nimport { StaveConnector } from './staveconnector';\nimport { ClefNote } from './clefnote';\nimport { KeySignature } from './keysignature';\nimport { TimeSignature } from './timesignature';\nimport { TimeSigNote } from './timesignote';\nimport { Stem } from './stem';\nimport { TabTie } from './tabtie';\nimport { Clef } from './clef';\nimport { Modifier } from './modifier';\nimport { TabSlide } from './tabslide';\nimport { Tuplet } from './tuplet';\nimport { GraceNote } from './gracenote';\nimport { GraceTabNote } from './gracetabnote';\nimport { Tuning } from './tuning';\nimport { KeyManager } from './keymanager';\nimport { StaveHairpin } from './stavehairpin';\nimport { BoundingBox } from './boundingbox';\nimport { Stroke } from './strokes';\nimport { TextNote } from './textnote';\nimport { Curve } from './curve';\nimport { TextDynamics } from './textdynamics';\nimport { StaveLine } from './staveline';\nimport { Ornament } from './ornament';\nimport { PedalMarking } from './pedalmarking';\nimport { TextBracket } from './textbracket';\nimport { FretHandFinger } from './frethandfinger';\nimport { Repetition } from './staverepetition';\nimport { BarNote } from './barnote';\nimport { GhostNote } from './ghostnote';\nimport { NoteSubGroup } from './notesubgroup';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { Tremolo } from './tremolo';\nimport { StringNumber } from './stringnumber';\nimport { Crescendo } from './crescendo';\nimport { Volta } from './stavevolta';\nimport { Font } from './fonts/vexflow_font';\nimport { System } from './system';\nimport { Factory } from './factory';\nimport { Parser } from './parser';\nimport { EasyScore } from './easyscore';\nimport { Registry } from './registry';\nimport { StaveTempo } from './stavetempo';\n\nVex.Flow = Flow;\nVex.Flow.Element = Element;\nVex.Flow.Fraction = Fraction;\nVex.Flow.Renderer = Renderer;\nVex.Flow.Formatter = Formatter;\nVex.Flow.Music = Music;\nVex.Flow.Glyph = Glyph;\nVex.Flow.Stave = Stave;\nVex.Flow.StaveNote = StaveNote;\nVex.Flow.StaveModifier = StaveModifier;\nVex.Flow.Voice = Voice;\nVex.Flow.Accidental = Accidental;\nVex.Flow.Beam = Beam;\nVex.Flow.StaveTie = StaveTie;\nVex.Flow.TabStave = TabStave;\nVex.Flow.TabNote = TabNote;\nVex.Flow.Bend = Bend;\nVex.Flow.Vibrato = Vibrato;\nVex.Flow.VibratoBracket = VibratoBracket;\nVex.Flow.Note = Note;\nVex.Flow.ModifierContext = ModifierContext;\nVex.Flow.TickContext = TickContext;\nVex.Flow.Articulation = Articulation;\nVex.Flow.Annotation = Annotation;\nVex.Flow.Barline = Barline;\nVex.Flow.NoteHead = NoteHead;\nVex.Flow.StaveConnector = StaveConnector;\nVex.Flow.ClefNote = ClefNote;\nVex.Flow.KeySignature = KeySignature;\nVex.Flow.TimeSignature = TimeSignature;\nVex.Flow.TimeSigNote = TimeSigNote;\nVex.Flow.Stem = Stem;\nVex.Flow.TabTie = TabTie;\nVex.Flow.Clef = Clef;\nVex.Flow.Modifier = Modifier;\nVex.Flow.TabSlide = TabSlide;\nVex.Flow.Tuplet = Tuplet;\nVex.Flow.GraceNote = GraceNote;\nVex.Flow.GraceTabNote = GraceTabNote;\nVex.Flow.Tuning = Tuning;\nVex.Flow.KeyManager = KeyManager;\nVex.Flow.StaveHairpin = StaveHairpin;\nVex.Flow.BoundingBox = BoundingBox;\nVex.Flow.Stroke = Stroke;\nVex.Flow.TextNote = TextNote;\nVex.Flow.Curve = Curve;\nVex.Flow.TextDynamics = TextDynamics;\nVex.Flow.StaveLine = StaveLine;\nVex.Flow.Ornament = Ornament;\nVex.Flow.PedalMarking = PedalMarking;\nVex.Flow.TextBracket = TextBracket;\nVex.Flow.FretHandFinger = FretHandFinger;\nVex.Flow.Repetition = Repetition;\nVex.Flow.BarNote = BarNote;\nVex.Flow.GhostNote = GhostNote;\nVex.Flow.NoteSubGroup = NoteSubGroup;\nVex.Flow.GraceNoteGroup = GraceNoteGroup;\nVex.Flow.Tremolo = Tremolo;\nVex.Flow.StringNumber = StringNumber;\nVex.Flow.Crescendo = Crescendo;\nVex.Flow.Volta = Volta;\nVex.Flow.Font = Font;\nVex.Flow.System = System;\nVex.Flow.Factory = Factory;\nVex.Flow.Parser = Parser;\nVex.Flow.EasyScore = EasyScore;\nVex.Flow.Registry = Registry;\nVex.Flow.StaveTempo = StaveTempo;\n\nexport default Vex;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements utility methods used by the rest of the VexFlow\n// codebase.\n//\n\nconst Vex = () => {};\n\n// Default log function sends all arguments to console.\nVex.L = (block, args) => {\n  if (!args) return;\n  const line = Array.prototype.slice.call(args).join(' ');\n  window.console.log(block + ': ' + line);\n};\n\nVex.MakeException = (name) => {\n  const exception = class extends Error {\n    constructor(message, data) {\n      super(message);\n      this.name = name;\n      this.message = message;\n      this.data = data;\n    }\n  };\n\n  return exception;\n};\n\n// Default runtime exception.\nclass RuntimeError {\n  constructor(code, message) {\n    this.code = code;\n    this.message = message;\n  }\n\n  toString() {\n    return '[RuntimeError] ' + this.code + ':' + this.message;\n  }\n}\n\n// Shortcut method for `RuntimeError`.\nVex.RuntimeError = RuntimeError;\nVex.RERR = Vex.RuntimeError;\n\n// Merge `destination` hash with `source` hash, overwriting like keys\n// in `source` if necessary.\nVex.Merge = (destination, source) => {\n  for (const property in source) { // eslint-disable-line guard-for-in\n    destination[property] = source[property];\n  }\n  return destination;\n};\n\n// DEPRECATED. Use `Math.*`.\nVex.Min = Math.min;\nVex.Max = Math.max;\nVex.forEach = (a, fn) => {\n  for (let i = 0; i < a.length; i++) {\n    fn(a[i], i);\n  }\n};\n\n// Round number to nearest fractional value (`.5`, `.25`, etc.)\nVex.RoundN = (x, n) =>\n  (x % n) >= (n / 2)\n    ? parseInt(x / n, 10) * n + n\n    : parseInt(x / n, 10) * n;\n\n// Locate the mid point between stave lines. Returns a fractional line if a space.\nVex.MidLine = (a, b) => {\n  let mid_line = b + (a - b) / 2;\n  if (mid_line % 2 > 0) {\n    mid_line = Vex.RoundN(mid_line * 10, 5) / 10;\n  }\n  return mid_line;\n};\n\n// Take `arr` and return a new list consisting of the sorted, unique,\n// contents of arr. Does not modify `arr`.\nVex.SortAndUnique = (arr, cmp, eq) => {\n  if (arr.length > 1) {\n    const newArr = [];\n    let last;\n    arr.sort(cmp);\n\n    for (let i = 0; i < arr.length; ++i) {\n      if (i === 0 || !eq(arr[i], last)) {\n        newArr.push(arr[i]);\n      }\n      last = arr[i];\n    }\n\n    return newArr;\n  } else {\n    return arr;\n  }\n};\n\n// Check if array `a` contains `obj`.\nVex.Contains = (a, obj) => {\n  let i = a.length;\n  while (i--) {\n    if (a[i] === obj) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Get the 2D Canvas context from DOM element `canvas_sel`.\nVex.getCanvasContext = canvas_sel => {\n  if (!canvas_sel) {\n    throw new Vex.RERR('BadArgument', 'Invalid canvas selector: ' + canvas_sel);\n  }\n\n  const canvas = document.getElementById(canvas_sel);\n  if (!(canvas && canvas.getContext)) {\n    throw new Vex.RERR(\n      'UnsupportedBrowserError', 'This browser does not support HTML5 Canvas'\n    );\n  }\n\n  return canvas.getContext('2d');\n};\n\n// Draw a tiny dot marker on the specified canvas. A great debugging aid.\n//\n// `ctx`: Canvas context.\n// `x`, `y`: Dot coordinates.\nVex.drawDot = (ctx, x, y, color = '#55') => {\n  ctx.save();\n  ctx.setFillStyle(color);\n\n  // draw a circle\n  ctx.beginPath();\n  ctx.arc(x, y, 3, 0, Math.PI * 2, true);\n  ctx.closePath();\n  ctx.fill();\n  ctx.restore();\n};\n\n// Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds.\nVex.BM = (s, f) => {\n  const start_time = new Date().getTime();\n  f();\n  const elapsed = new Date().getTime() - start_time;\n  Vex.L(s + elapsed + 'ms');\n};\n\n// Get stack trace.\nVex.StackTrace = () => {\n  const err = new Error();\n  return err.stack;\n};\n\n// Dump warning to console.\nVex.W = (...args) => {\n  const line = args.join(' ');\n  window.console.log('Warning: ', line, Vex.StackTrace());\n};\n\n// Used by various classes (e.g., SVGContext) to provide a\n// unique prefix to element names (or other keys in shared namespaces).\nVex.Prefix = text => Vex.Prefix.prefix + text;\nVex.Prefix.prefix = 'vf-';\n\nexport { Vex };\n\n\n\n// WEBPACK FOOTER //\n// ./src/vex.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\n/* eslint-disable key-spacing */\n\nimport { Vex } from './vex';\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\n\nconst Flow = {\n  STEM_WIDTH: 1.5,\n  STEM_HEIGHT: 35,\n  STAVE_LINE_THICKNESS: 1,\n  RESOLUTION: 16384,\n  DEFAULT_NOTATION_FONT_SCALE: 39,\n  DEFAULT_TABLATURE_FONT_SCALE: 39,\n  SLASH_NOTEHEAD_WIDTH: 15,\n\n  // HACK:\n  // Since text origins are positioned at the baseline, we must\n  // compensate for the ascender of the text. Of course, 1 staff space is\n  // a very poor approximation.\n  //\n  // This will be deprecated in the future. This is a temporary solution until\n  // we have more robust text metrics.\n  TEXT_HEIGHT_OFFSET_HACK: 1,\n\n  /* Kerning (DEPRECATED) */\n  IsKerned: true,\n};\n\n\nFlow.clefProperties = clef => {\n  if (!clef) throw new Vex.RERR('BadArgument', 'Invalid clef: ' + clef);\n\n  const props = Flow.clefProperties.values[clef];\n  if (!props) throw new Vex.RERR('BadArgument', 'Invalid clef: ' + clef);\n\n  return props;\n};\n\nFlow.clefProperties.values = {\n  'treble': { line_shift: 0 },\n  'bass': { line_shift: 6 },\n  'tenor': { line_shift: 4 },\n  'alto': { line_shift: 3 },\n  'soprano': { line_shift: 1 },\n  'percussion': { line_shift: 0 },\n  'mezzo-soprano': { line_shift: 2 },\n  'baritone-c': { line_shift: 5 },\n  'baritone-f': { line_shift: 5 },\n  'subbass': { line_shift: 7 },\n  'french': { line_shift: -1 },\n};\n\n/*\n  Take a note in the format \"Key/Octave\" (e.g., \"C/5\") and return properties.\n\n  The last argument, params, is a struct the currently can contain one option,\n  octave_shift for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n*/\nFlow.keyProperties = (key, clef, params) => {\n  if (clef === undefined) {\n    clef = 'treble';\n  }\n\n  const options = { octave_shift: 0 };\n\n  if (typeof params === 'object') {\n    Vex.Merge(options, params);\n  }\n\n  const pieces = key.split('/');\n\n  if (pieces.length < 2) {\n    throw new Vex.RERR('BadArguments', `Key must have note + octave and an optional glyph: ${key}`);\n  }\n\n  const k = pieces[0].toUpperCase();\n  const value = Flow.keyProperties.note_values[k];\n  if (!value) throw new Vex.RERR('BadArguments', 'Invalid key name: ' + k);\n  if (value.octave) pieces[1] = value.octave;\n\n  let octave = parseInt(pieces[1], 10);\n\n  // Octave_shift is the shift to compensate for clef 8va/8vb.\n  octave += -1 * options.octave_shift;\n\n  const base_index = (octave * 7) - (4 * 7);\n  let line = (base_index + value.index) / 2;\n  line += Flow.clefProperties(clef).line_shift;\n\n  let stroke = 0;\n\n  if (line <= 0 && (((line * 2) % 2) === 0)) stroke = 1;  // stroke up\n  if (line >= 6 && (((line * 2) % 2) === 0)) stroke = -1; // stroke down\n\n  // Integer value for note arithmetic.\n  const int_value = typeof(value.int_val) !== 'undefined'\n    ? (octave * 12) + value.int_val\n    : null;\n\n  /* Check if the user specified a glyph. */\n  let code = value.code;\n  let shift_right = value.shift_right;\n  if (pieces.length > 2 && pieces[2]) {\n    const glyph_name = pieces[2].toUpperCase();\n    const note_glyph = Flow.keyProperties.note_glyph[glyph_name];\n    if (note_glyph) {\n      code = note_glyph.code;\n      shift_right = note_glyph.shift_right;\n    }\n  }\n\n  return {\n    key: k,\n    octave,\n    line,\n    int_value,\n    accidental: value.accidental,\n    code,\n    stroke,\n    shift_right,\n    displaced: false,\n  };\n};\n\nFlow.keyProperties.note_values = {\n  'C': { index: 0, int_val: 0, accidental: null },\n  'CN': { index: 0, int_val: 0, accidental: 'n' },\n  'C#': { index: 0, int_val: 1, accidental: '#' },\n  'C##': { index: 0, int_val: 2, accidental: '##' },\n  'CB': { index: 0, int_val: -1, accidental: 'b' },\n  'CBB': { index: 0, int_val: -2, accidental: 'bb' },\n  'D': { index: 1, int_val: 2, accidental: null },\n  'DN': { index: 1, int_val: 2, accidental: 'n' },\n  'D#': { index: 1, int_val: 3, accidental: '#' },\n  'D##': { index: 1, int_val: 4, accidental: '##' },\n  'DB': { index: 1, int_val: 1, accidental: 'b' },\n  'DBB': { index: 1, int_val: 0, accidental: 'bb' },\n  'E': { index: 2, int_val: 4, accidental: null },\n  'EN': { index: 2, int_val: 4, accidental: 'n' },\n  'E#': { index: 2, int_val: 5, accidental: '#' },\n  'E##': { index: 2, int_val: 6, accidental: '##' },\n  'EB': { index: 2, int_val: 3, accidental: 'b' },\n  'EBB': { index: 2, int_val: 2, accidental: 'bb' },\n  'F': { index: 3, int_val: 5, accidental: null },\n  'FN': { index: 3, int_val: 5, accidental: 'n' },\n  'F#': { index: 3, int_val: 6, accidental: '#' },\n  'F##': { index: 3, int_val: 7, accidental: '##' },\n  'FB': { index: 3, int_val: 4, accidental: 'b' },\n  'FBB': { index: 3, int_val: 3, accidental: 'bb' },\n  'G': { index: 4, int_val: 7, accidental: null },\n  'GN': { index: 4, int_val: 7, accidental: 'n' },\n  'G#': { index: 4, int_val: 8, accidental: '#' },\n  'G##': { index: 4, int_val: 9, accidental: '##' },\n  'GB': { index: 4, int_val: 6, accidental: 'b' },\n  'GBB': { index: 4, int_val: 5, accidental: 'bb' },\n  'A': { index: 5, int_val: 9, accidental: null },\n  'AN': { index: 5, int_val: 9, accidental: 'n' },\n  'A#': { index: 5, int_val: 10, accidental: '#' },\n  'A##': { index: 5, int_val: 11, accidental: '##' },\n  'AB': { index: 5, int_val: 8, accidental: 'b' },\n  'ABB': { index: 5, int_val: 7, accidental: 'bb' },\n  'B': { index: 6, int_val: 11, accidental: null },\n  'BN': { index: 6, int_val: 11, accidental: 'n' },\n  'B#': { index: 6, int_val: 12, accidental: '#' },\n  'B##': { index: 6, int_val: 13, accidental: '##' },\n  'BB': { index: 6, int_val: 10, accidental: 'b' },\n  'BBB': { index: 6, int_val: 9, accidental: 'bb' },\n  'R': { index: 6, int_val: 9, rest: true }, // Rest\n  'X': {\n    index: 6,\n    accidental: '',\n    octave: 4,\n    code: 'v3e',\n    shift_right: 5.5,\n  },\n};\n\nFlow.keyProperties.note_glyph = {\n  /* Diamond */\n  'D0': { code: 'v27', shift_right: -0.5 },\n  'D1': { code: 'v2d', shift_right: -0.5 },\n  'D2': { code: 'v22', shift_right: -0.5 },\n  'D3': { code: 'v70', shift_right: -0.5 },\n\n  /* Triangle */\n  'T0': { code: 'v49', shift_right: -2 },\n  'T1': { code: 'v93', shift_right: 0.5 },\n  'T2': { code: 'v40', shift_right: 0.5 },\n  'T3': { code: 'v7d', shift_right: 0.5 },\n\n  /* Cross */\n  'X0': { code: 'v92', shift_right: -2 },\n  'X1': { code: 'v95', shift_right: -0.5 },\n  'X2': { code: 'v7f', shift_right: 0.5 },\n  'X3': { code: 'v3b', shift_right: -2 },\n};\n\nFlow.integerToNote = integer => {\n  if (typeof(integer) === 'undefined') {\n    throw new Vex.RERR('BadArguments', 'Undefined integer for integerToNote');\n  }\n\n  if (integer < -2) {\n    throw new Vex.RERR('BadArguments', `integerToNote requires integer > -2: ${integer}`);\n  }\n\n  const noteValue = Flow.integerToNote.table[integer];\n  if (!noteValue) {\n    throw new Vex.RERR('BadArguments', `Unknown note value for integer: ${integer}`);\n  }\n\n  return noteValue;\n};\n\nFlow.integerToNote.table = {\n  0: 'C',\n  1: 'C#',\n  2: 'D',\n  3: 'D#',\n  4: 'E',\n  5: 'F',\n  6: 'F#',\n  7: 'G',\n  8: 'G#',\n  9: 'A',\n  10: 'A#',\n  11: 'B',\n};\n\n\nFlow.tabToGlyph = (fret, scale = 1.0) => {\n  let glyph = null;\n  let width = 0;\n  let shift_y = 0;\n\n  if (fret.toString().toUpperCase() === 'X') {\n    const glyphMetrics = new Glyph('v7f', Flow.DEFAULT_TABLATURE_FONT_SCALE).getMetrics();\n    glyph = 'v7f';\n    width = glyphMetrics.width;\n    shift_y = -glyphMetrics.height / 2;\n  } else {\n    width = Flow.textWidth(fret.toString());\n  }\n\n  return {\n    text: fret,\n    code: glyph,\n    getWidth: () => width * scale,\n    shift_y,\n  };\n};\n\nFlow.textWidth = text => 7 * text.toString().length;\n\nFlow.articulationCodes = artic => Flow.articulationCodes.articulations[artic];\n\nFlow.articulationCodes.articulations = {\n  'a.': { code: 'v23', between_lines: true }, // Staccato\n  'av': { code: 'v28', between_lines: true }, // Staccatissimo\n  'a>': { code: 'v42', between_lines: true }, // Accent\n  'a-': { code: 'v25', between_lines: true }, // Tenuto\n  'a^': { code: 'va',  between_lines: false }, // Marcato\n  'a+': { code: 'v8b', between_lines: false }, // Left hand pizzicato\n  'ao': { code: 'v94', between_lines: false }, // Snap pizzicato\n  'ah': { code: 'vb9', between_lines: false }, // Natural harmonic or open note\n  'a@a': { code: 'v43', between_lines: false }, // Fermata above staff\n  'a@u': { code: 'v5b', between_lines: false }, // Fermata below staff\n  'a|': { code: 'v75', between_lines: false }, // Bow up - up stroke\n  'am': { code: 'v97', between_lines: false }, // Bow down - down stroke\n  'a,': { code: 'vb3', between_lines: false }, // Choked\n};\n\nFlow.accidentalCodes = acc => Flow.accidentalCodes.accidentals[acc];\n\nFlow.accidentalCodes.accidentals = {\n  '#':   { code: 'v18', parenRightPaddingAdjustment: -1 },\n  '##':  { code: 'v7f', parenRightPaddingAdjustment: -1 },\n  'b':   { code: 'v44', parenRightPaddingAdjustment: -2 },\n  'bb':  { code: 'v26', parenRightPaddingAdjustment: -2 },\n  'n':   { code: 'v4e', parenRightPaddingAdjustment: -1 },\n  '{':   { code: 'v9c', parenRightPaddingAdjustment: -1 },\n  '}':   { code: 'v84', parenRightPaddingAdjustment: -1 },\n  'db':  { code: 'v9e', parenRightPaddingAdjustment: -1 },\n  'd':   { code: 'vab', parenRightPaddingAdjustment:  0 },\n  'bbs': { code: 'v90', parenRightPaddingAdjustment: -1 },\n  '++':  { code: 'v51', parenRightPaddingAdjustment: -1 },\n  '+':   { code: 'v78', parenRightPaddingAdjustment: -1 },\n  '+-':  { code: 'v8d', parenRightPaddingAdjustment: -1 },\n  '++-': { code: 'v7a', parenRightPaddingAdjustment: -1 },\n  'bs':  { code: 'vb7', parenRightPaddingAdjustment: -1 },\n  'bss': { code: 'v39', parenRightPaddingAdjustment: -1 },\n  'o':   { code: 'vd0', parenRightPaddingAdjustment: -1 },\n  'k':   { code: 'vd1', parenRightPaddingAdjustment: -1 },\n};\n\nFlow.accidentalColumnsTable = {\n  1: {\n    a: [1],\n    b: [1],\n  },\n  2: {\n    a: [1, 2],\n  },\n  3: {\n    a: [1, 3, 2],\n    b: [1, 2, 1],\n    second_on_bottom: [1, 2, 3],\n  },\n  4: {\n    a: [1, 3, 4, 2],\n    b: [1, 2, 3, 1],\n    spaced_out_tetrachord: [1, 2, 1, 2],\n  },\n  5: {\n    a: [1, 3, 5, 4, 2],\n    b: [1, 2, 4, 3, 1],\n    spaced_out_pentachord: [1, 2, 3, 2, 1],\n    very_spaced_out_pentachord: [1, 2, 1, 2, 1] },\n  6: {\n    a: [1, 3, 5, 6, 4, 2],\n    b: [1, 2, 4, 5, 3, 1],\n    spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n    very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2],\n  },\n};\n\nFlow.ornamentCodes = acc => Flow.ornamentCodes.ornaments[acc];\n\nFlow.ornamentCodes.ornaments = {\n  'mordent': { code: 'v1e' },\n  'mordent_inverted': { code: 'v45' },\n  'turn': { code: 'v72' },\n  'turn_inverted': { code: 'v33' },\n  'tr': { code: 'v1f' },\n  'upprall': { code: 'v60' },\n  'downprall': { code: 'vb4' },\n  'prallup': { code: 'v6d' },\n  'pralldown': { code: 'v2c' },\n  'upmordent': { code: 'v29' },\n  'downmordent': { code: 'v68' },\n  'lineprall': { code: 'v20' },\n  'prallprall': { code: 'v86' },\n};\n\nFlow.keySignature = spec => {\n  const keySpec = Flow.keySignature.keySpecs[spec];\n\n  if (!keySpec) {\n    throw new Vex.RERR('BadKeySignature', `Bad key signature spec: '${spec}'`);\n  }\n\n  if (!keySpec.acc) {\n    return [];\n  }\n\n  const notes = Flow.keySignature.accidentalList(keySpec.acc);\n\n  const acc_list = [];\n  for (let i = 0; i < keySpec.num; ++i) {\n    const line = notes[i];\n    acc_list.push({ type: keySpec.acc, line });\n  }\n\n  return acc_list;\n};\n\nFlow.keySignature.keySpecs = {\n  'C': { acc: null, num: 0 },\n  'Am': { acc: null, num: 0 },\n  'F': { acc: 'b', num: 1 },\n  'Dm': { acc: 'b', num: 1 },\n  'Bb': { acc: 'b', num: 2 },\n  'Gm': { acc: 'b', num: 2 },\n  'Eb': { acc: 'b', num: 3 },\n  'Cm': { acc: 'b', num: 3 },\n  'Ab': { acc: 'b', num: 4 },\n  'Fm': { acc: 'b', num: 4 },\n  'Db': { acc: 'b', num: 5 },\n  'Bbm': { acc: 'b', num: 5 },\n  'Gb': { acc: 'b', num: 6 },\n  'Ebm': { acc: 'b', num: 6 },\n  'Cb': { acc: 'b', num: 7 },\n  'Abm': { acc: 'b', num: 7 },\n  'G': { acc: '#', num: 1 },\n  'Em': { acc: '#', num: 1 },\n  'D': { acc: '#', num: 2 },\n  'Bm': { acc: '#', num: 2 },\n  'A': { acc: '#', num: 3 },\n  'F#m': { acc: '#', num: 3 },\n  'E': { acc: '#', num: 4 },\n  'C#m': { acc: '#', num: 4 },\n  'B': { acc: '#', num: 5 },\n  'G#m': { acc: '#', num: 5 },\n  'F#': { acc: '#', num: 6 },\n  'D#m': { acc: '#', num: 6 },\n  'C#': { acc: '#', num: 7 },\n  'A#m': { acc: '#', num: 7 },\n};\n\nFlow.unicode = {\n  // Unicode accidentals\n  'sharp': String.fromCharCode(parseInt('266F', 16)),\n  'flat': String.fromCharCode(parseInt('266D', 16)),\n  'natural': String.fromCharCode(parseInt('266E', 16)),\n  // Major Chord\n  'triangle': String.fromCharCode(parseInt('25B3', 16)),\n  // half-diminished\n  'o-with-slash': String.fromCharCode(parseInt('00F8', 16)),\n   // Diminished\n  'degrees': String.fromCharCode(parseInt('00B0', 16)),\n  'circle': String.fromCharCode(parseInt('25CB', 16)),\n};\n\nFlow.keySignature.accidentalList = (acc) => {\n  const patterns = {\n    'b': [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n    '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n  };\n\n  return patterns[acc];\n};\n\nFlow.parseNoteDurationString = durationString => {\n  if (typeof(durationString) !== 'string') {\n    return null;\n  }\n\n  const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n\n  const result = regexp.exec(durationString);\n  if (!result) {\n    return null;\n  }\n\n  const duration = result[1];\n  const dots = result[2].length;\n  let type = result[3];\n\n  if (type.length === 0) {\n    type = 'n';\n  }\n\n  return {\n    duration,\n    dots,\n    type,\n  };\n};\n\nFlow.parseNoteData = noteData => {\n  const duration = noteData.duration;\n\n  // Preserve backwards-compatibility\n  const durationStringData = Flow.parseNoteDurationString(duration);\n  if (!durationStringData) {\n    return null;\n  }\n\n  let ticks = Flow.durationToTicks(durationStringData.duration);\n  if (ticks == null) {\n    return null;\n  }\n\n  let type = noteData.type;\n\n  if (type) {\n    if (!(type === 'n' || type === 'r' || type === 'h' || type === 'm' || type === 's')) {\n      return null;\n    }\n  } else {\n    type = durationStringData.type;\n    if (!type) {\n      type = 'n';\n    }\n  }\n\n  const dots = noteData.dots ? noteData.dots : durationStringData.dots;\n\n  if (typeof(dots) !== 'number') {\n    return null;\n  }\n\n  let currentTicks = ticks;\n\n  for (let i = 0; i < dots; i++) {\n    if (currentTicks <= 1) return null;\n\n    currentTicks = currentTicks / 2;\n    ticks += currentTicks;\n  }\n\n  return {\n    duration: durationStringData.duration,\n    type,\n    dots,\n    ticks,\n  };\n};\n\n// Used to convert duration aliases to the number based duration.\n// If the input isn't an alias, simply return the input.\n//\n// example: 'q' -> '4', '8' -> '8'\nFlow.sanitizeDuration = duration => {\n  const alias = Flow.durationAliases[duration];\n  if (alias !== undefined) {\n    duration = alias;\n  }\n\n  if (Flow.durationToTicks.durations[duration] === undefined) {\n    throw new Vex.RERR('BadArguments', `The provided duration is not valid: ${duration}`);\n  }\n\n  return duration;\n};\n\n// Convert the `duration` to an fraction\nFlow.durationToFraction = duration => new Fraction().parse(Flow.sanitizeDuration(duration));\n\n// Convert the `duration` to an number\nFlow.durationToNumber = duration => Flow.durationToFraction(duration).value();\n\n// Convert the `duration` to total ticks\nFlow.durationToTicks = duration => {\n  duration = Flow.sanitizeDuration(duration);\n\n  const ticks = Flow.durationToTicks.durations[duration];\n  if (ticks === undefined) {\n    return null;\n  }\n\n  return ticks;\n};\n\nFlow.durationToTicks.durations = {\n  '1/2': Flow.RESOLUTION * 2,\n  '1': Flow.RESOLUTION / 1,\n  '2': Flow.RESOLUTION / 2,\n  '4': Flow.RESOLUTION / 4,\n  '8': Flow.RESOLUTION / 8,\n  '16': Flow.RESOLUTION / 16,\n  '32': Flow.RESOLUTION / 32,\n  '64': Flow.RESOLUTION / 64,\n  '128': Flow.RESOLUTION / 128,\n  '256': Flow.RESOLUTION / 256,\n};\n\nFlow.durationAliases = {\n  'w': '1',\n  'h': '2',\n  'q': '4',\n\n  // This is the default duration used to render bars (BarNote). Bars no longer\n  // consume ticks, so this should be a no-op.\n  //\n  // TODO(0xfe): This needs to be cleaned up.\n  'b': '256',\n};\n\nFlow.durationToGlyph = (duration, type) => {\n  duration = Flow.sanitizeDuration(duration);\n\n  const code = Flow.durationToGlyph.duration_codes[duration];\n  if (code === undefined) {\n    return null;\n  }\n\n  if (!type) {\n    type = 'n';\n  }\n\n  const glyphTypeProperties = code.type[type];\n  if (glyphTypeProperties === undefined) {\n    return null;\n  }\n\n  return Vex.Merge(Vex.Merge({}, code.common), glyphTypeProperties);\n};\n\nFlow.durationToGlyph.duration_codes = {\n  '1/2': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v53', scale).getMetrics().width;\n      },\n      stem: false,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: -Flow.STEM_HEIGHT,\n      stem_down_extension: -Flow.STEM_HEIGHT,\n      gracenote_stem_up_extension: -Flow.STEM_HEIGHT,\n      gracenote_stem_down_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Breve note\n        code_head: 'v53',\n      },\n      'h': { // Breve note harmonic\n        code_head: 'v59',\n      },\n      'm': { // Breve note muted -\n        code_head: 'vf',\n        stem_offset: 0,\n      },\n      'r': { // Breve rest\n        code_head: 'v31',\n        rest: true,\n        position: 'B/5',\n        dot_shiftY: 0.5,\n      },\n      's': { // Breve note slash -\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '1': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v1d', scale).getMetrics().width;\n      },\n      stem: false,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: -Flow.STEM_HEIGHT,\n      stem_down_extension: -Flow.STEM_HEIGHT,\n      gracenote_stem_up_extension: -Flow.STEM_HEIGHT,\n      gracenote_stem_down_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Whole note\n        code_head: 'v1d',\n      },\n      'h': { // Whole note harmonic\n        code_head: 'v46',\n      },\n      'm': { // Whole note muted\n        code_head: 'v92',\n        stem_offset: -3,\n      },\n      'r': { // Whole rest\n        code_head: 'v5c',\n        rest: true,\n        position: 'D/5',\n        dot_shiftY: 0.5,\n      },\n      's': { // Whole note slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '2': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v81', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      gracenote_stem_up_extension: -14,\n      gracenote_stem_down_extension: -14,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Half note\n        code_head: 'v81',\n      },\n      'h': { // Half note harmonic\n        code_head: 'v2d',\n      },\n      'm': { // Half note muted\n        code_head: 'v95',\n        stem_offset: -3,\n      },\n      'r': { // Half rest\n        code_head: 'vc',\n        stem: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n      },\n      's': { // Half note slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '4': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      gracenote_stem_up_extension: -14,\n      gracenote_stem_down_extension: -14,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Quarter note\n        code_head: 'vb',\n      },\n      'h': { // Quarter harmonic\n        code_head: 'v22',\n      },\n      'm': { // Quarter muted\n        code_head: 'v3e',\n        stem_offset: -3,\n      },\n      'r': { // Quarter rest\n        code_head: 'v7c',\n        stem: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.5,\n        line_below: 1.5,\n      },\n      's': { // Quarter slash\n         // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '8': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      beam_count: 1,\n      code_flag_upstem: 'v54',\n      code_flag_downstem: 'v9a',\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      gracenote_stem_up_extension: -14,\n      gracenote_stem_down_extension: -14,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Eighth note\n        code_head: 'vb',\n      },\n      'h': { // Eighth note harmonic\n        code_head: 'v22',\n      },\n      'm': { // Eighth note muted\n        code_head: 'v3e',\n      },\n      'r': { // Eighth rest\n        code_head: 'va5',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 1.0,\n      },\n      's': { // Eight slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '16': {\n    common: {\n      beam_count: 2,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v3f',\n      code_flag_downstem: 'v8f',\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      gracenote_stem_up_extension: -14,\n      gracenote_stem_down_extension: -14,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Sixteenth note\n        code_head: 'vb',\n      },\n      'h': { // Sixteenth note harmonic\n        code_head: 'v22',\n      },\n      'm': { // Sixteenth note muted\n        code_head: 'v3e',\n      },\n      'r': { // Sixteenth rest\n        code_head: 'v3c',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 2.0,\n      },\n      's': { // Sixteenth slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '32': {\n    common: {\n      beam_count: 3,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v47',\n      code_flag_downstem: 'v2a',\n      stem_up_extension: 9,\n      stem_down_extension: 9,\n      gracenote_stem_up_extension: -12,\n      gracenote_stem_down_extension: -12,\n      tabnote_stem_up_extension: 8,\n      tabnote_stem_down_extension: 5,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Thirty-second note\n        code_head: 'vb',\n      },\n      'h': { // Thirty-second harmonic\n        code_head: 'v22',\n      },\n      'm': { // Thirty-second muted\n        code_head: 'v3e',\n      },\n      'r': { // Thirty-second rest\n        code_head: 'v55',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 2.0,\n      },\n      's': { // Thirty-second slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '64': {\n    common: {\n      beam_count: 4,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'va9',\n      code_flag_downstem: 'v58',\n      stem_up_extension: 13,\n      stem_down_extension: 13,\n      gracenote_stem_up_extension: -10,\n      gracenote_stem_down_extension: -10,\n      tabnote_stem_up_extension: 12,\n      tabnote_stem_down_extension: 9,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Sixty-fourth note\n        code_head: 'vb',\n      },\n      'h': { // Sixty-fourth harmonic\n        code_head: 'v22',\n      },\n      'm': { // Sixty-fourth muted\n        code_head: 'v3e',\n      },\n      'r': { // Sixty-fourth rest\n        code_head: 'v38',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 3.0,\n      },\n      's': { // Sixty-fourth slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '128': {\n    common: {\n      beam_count: 5,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v9b',\n      code_flag_downstem: 'v30',\n      stem_up_extension: 22,\n      stem_down_extension: 22,\n      gracenote_stem_up_extension: -8,\n      gracenote_stem_down_extension: -8,\n      tabnote_stem_up_extension: 21,\n      tabnote_stem_down_extension: 18,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': {  // Hundred-twenty-eight note\n        code_head: 'vb',\n      },\n      'h': { // Hundred-twenty-eight harmonic\n        code_head: 'v22',\n      },\n      'm': { // Hundred-twenty-eight muted\n        code_head: 'v3e',\n      },\n      'r': {  // Hundred-twenty-eight rest\n        code_head: 'vaa',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: 1.5,\n        line_above: 3.0,\n        line_below: 3.0,\n      },\n      's': { // Hundred-twenty-eight rest\n              // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n};\n\n// Some defaults\nFlow.TIME4_4 = {\n  num_beats: 4,\n  beat_value: 4,\n  resolution: Flow.RESOLUTION,\n};\nexport { Flow };\n\n\n\n// WEBPACK FOOTER //\n// ./src/tables.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Fraction class that represents a rational number\n//\n// @author zz85\n// @author incompleteopus (modifications)\n\n/* eslint-disable no-underscore-dangle */\n\nimport { Vex } from './vex';\nexport class Fraction {\n\n  /**\n   * GCD: Find greatest common divisor using Euclidean algorithm\n   */\n  static GCD(a, b) {\n    if (typeof a !== 'number' || typeof b !== 'number') {\n      throw new Vex.RERR('BadArgument', `Invalid numbers: ${a}, ${b}`);\n    }\n\n    let t;\n\n    while (b !== 0) {\n      t = b;\n      b = a % b;\n      a = t;\n    }\n\n    return a;\n  }\n\n  /**\n   * LCM: Lowest common multiple\n   */\n  static LCM(a, b) {\n    return ((a * b) / Fraction.GCD(a, b));\n  }\n\n  /**\n   * LCMM: Lowest common multiple for more than two numbers\n   */\n  static LCMM(args) {\n    if (args.length === 0) {\n      return 0;\n    } else if (args.length === 1) {\n      return args[0];\n    } else if (args.length === 2) {\n      return Fraction.LCM(args[0], args[1]);\n    } else {\n      const arg0 = args[0];\n      args.shift();\n      return Fraction.LCM(arg0, Fraction.LCMM(args));\n    }\n  }\n\n  constructor(numerator, denominator) {\n    this.set(numerator, denominator);\n  }\n  set(numerator, denominator) {\n    this.numerator = numerator === undefined ? 1 : numerator;\n    this.denominator = denominator === undefined ? 1 : denominator;\n    return this;\n  }\n  value() {\n    return this.numerator / this.denominator;\n  }\n  simplify() {\n    let u = this.numerator;\n    let d = this.denominator;\n\n    const gcd = Fraction.GCD(u, d);\n    u /= gcd;\n    d /= gcd;\n\n    if (d < 0) {\n      d = -d;\n      u = -u;\n    }\n    return this.set(u, d);\n  }\n  add(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 0;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n\n    const u = this.numerator * a + otherNumerator * b;\n    return this.set(u, lcm);\n  }\n  subtract(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 0;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n\n    const u = this.numerator * a - otherNumerator * b;\n    return this.set(u, lcm);\n  }\n  multiply(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 1;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n  }\n  divide(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 1;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n  }\n\n  // Simplifies both sides and checks if they are equal.\n  equals(compare) {\n    const a = Fraction.__compareA.copy(compare).simplify();\n    const b = Fraction.__compareB.copy(this).simplify();\n\n    return (a.numerator === b.numerator) && (a.denominator === b.denominator);\n  }\n\n  // Greater than operator.\n  greaterThan(compare) {\n    const a = Fraction.__compareB.copy(this);\n    a.subtract(compare);\n    return (a.numerator > 0);\n  }\n\n  // Greater than or equals operator.\n  greaterThanEquals(compare) {\n    const a = Fraction.__compareB.copy(this);\n    a.subtract(compare);\n    return (a.numerator >= 0);\n  }\n\n  // Less than operator.\n  lessThan(compare) {\n    return !(this.greaterThanEquals(compare));\n  }\n\n  // Less than or equals operator.\n  lessThanEquals(compare) {\n    return !(this.greaterThan(compare));\n  }\n\n  // Creates a new copy with this current values.\n  clone() {\n    return new Fraction(this.numerator, this.denominator);\n  }\n\n  // Copies value of another Fraction into itself.\n  copy(copy) {\n    return this.set(copy.numerator, copy.denominator);\n  }\n\n  // Returns the integer component eg. (4/2) == 2\n  quotient() {\n    return Math.floor(this.numerator / this.denominator);\n  }\n\n  // Returns the fraction component when reduced to a mixed number\n  fraction() {\n    return this.numerator % this.denominator;\n  }\n\n  // Returns the absolute value\n  abs() {\n    this.denominator = Math.abs(this.denominator);\n    this.numerator = Math.abs(this.numerator);\n    return this;\n  }\n\n  // Returns a raw string representation\n  toString() {\n    return this.numerator + '/' + this.denominator;\n  }\n\n  // Returns a simplified string respresentation\n  toSimplifiedString() {\n    return Fraction.__tmp.copy(this).simplify().toString();\n  }\n\n  // Returns string representation in mixed form\n  toMixedString() {\n    let s = '';\n    const q = this.quotient();\n    const f = Fraction.__tmp.copy(this);\n\n    if (q < 0) {\n      f.abs().fraction();\n    } else {\n      f.fraction();\n    }\n\n    if (q !== 0) {\n      s += q;\n\n      if (f.numerator !== 0) {\n        s += ' ' + f.toSimplifiedString();\n      }\n    } else {\n      if (f.numerator === 0) {\n        s = '0';\n      } else {\n        s = f.toSimplifiedString();\n      }\n    }\n\n    return s;\n  }\n\n  // Parses a fraction string\n  parse(str) {\n    const i = str.split('/');\n    const n = parseInt(i[0], 10);\n    const d = (i[1]) ? parseInt(i[1], 10) : 1;\n\n    return this.set(n, d);\n  }\n}\n\n// Temporary cached objects\nFraction.__compareA = new Fraction();\nFraction.__compareB = new Fraction();\nFraction.__tmp = new Fraction();\n\n\n\n// WEBPACK FOOTER //\n// ./src/fraction.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { BoundingBox } from './boundingbox';\nimport { Font } from './fonts/vexflow_font';\n\nfunction processOutline(outline, originX, originY, scaleX, scaleY, outlineFns) {\n  let command;\n  let x;\n  let y;\n  let i = 0;\n\n  function nextX() { return originX + outline[i++] * scaleX; }\n  function nextY() { return originY + outline[i++] * scaleY; }\n\n  while (i < outline.length) {\n    command = outline[i++];\n    switch (command) {\n      case 'm':\n      case 'l':\n        outlineFns[command](nextX(), nextY());\n        break;\n      case 'q':\n        x = nextX();\n        y = nextY();\n        outlineFns.q(nextX(), nextY(), x, y);\n        break;\n      case 'b':\n        x = nextX();\n        y = nextY();\n        outlineFns.b(nextX(), nextY(), nextX(), nextY(), x, y);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class Glyph extends Element {\n  /* Static methods used to implement loading / unloading of glyphs */\n  static loadMetrics(font, code, cache) {\n    const glyph = font.glyphs[code];\n    if (!glyph) {\n      throw new Vex.RERR('BadGlyph', `Glyph ${code} does not exist in font.`);\n    }\n\n    const x_min = glyph.x_min;\n    const x_max = glyph.x_max;\n    const ha = glyph.ha;\n\n    let outline;\n\n    if (glyph.o) {\n      if (cache) {\n        if (glyph.cached_outline) {\n          outline = glyph.cached_outline;\n        } else {\n          outline = glyph.o.split(' ');\n          glyph.cached_outline = outline;\n        }\n      } else {\n        if (glyph.cached_outline) delete glyph.cached_outline;\n        outline = glyph.o.split(' ');\n      }\n\n      return {\n        x_min,\n        x_max,\n        ha,\n        outline,\n      };\n    } else {\n      throw new Vex.RERR('BadGlyph', `Glyph ${code} has no outline defined.`);\n    }\n  }\n\n  /**\n   * A quick and dirty static glyph renderer. Renders glyphs from the default\n   * font defined in Vex.Flow.Font.\n   *\n   * @param {!Object} ctx The canvas context.\n   * @param {number} x_pos X coordinate.\n   * @param {number} y_pos Y coordinate.\n   * @param {number} point The point size to use.\n   * @param {string} val The glyph code in Vex.Flow.Font.\n   * @param {boolean} nocache If set, disables caching of font outline.\n   */\n  static renderGlyph(ctx, x_pos, y_pos, point, val, nocache) {\n    const scale = point * 72.0 / (Font.resolution * 100.0);\n    const metrics = Glyph.loadMetrics(Font, val, !nocache);\n    Glyph.renderOutline(ctx, metrics.outline, scale, x_pos, y_pos);\n  }\n\n  static renderOutline(ctx, outline, scale, x_pos, y_pos) {\n    ctx.beginPath();\n    ctx.moveTo(x_pos, y_pos);\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: ctx.moveTo.bind(ctx),\n      l: ctx.lineTo.bind(ctx),\n      q: ctx.quadraticCurveTo.bind(ctx),\n      b: ctx.bezierCurveTo.bind(ctx),\n    });\n    ctx.fill();\n  }\n\n  static getOutlineBoundingBox(outline, scale, x_pos, y_pos) {\n    const bboxComp = new BoundingBoxComputation();\n\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: bboxComp.addPoint.bind(bboxComp),\n      l: bboxComp.addPoint.bind(bboxComp),\n      q: bboxComp.addQuadraticCurve.bind(bboxComp),\n      b: bboxComp.addBezierCurve.bind(bboxComp),\n    });\n\n    return new BoundingBox(\n      bboxComp.x1,\n      bboxComp.y1,\n      bboxComp.width(),\n      bboxComp.height()\n    );\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(code, point, options) {\n    super();\n    this.setAttribute('type', 'Glyph');\n\n    this.code = code;\n    this.point = point;\n    this.options = {\n      cache: true,\n      font: Font,\n    };\n\n    this.metrics = null;\n    this.x_shift = 0;\n    this.y_shift = 0;\n\n    this.originShift = {\n      x: 0,\n      y: 0,\n    };\n\n    if (options) {\n      this.setOptions(options);\n    } else {\n      this.reset();\n    }\n  }\n\n  setOptions(options) {\n    Vex.Merge(this.options, options);\n    this.reset();\n  }\n\n  setPoint(point) { this.point = point; return this; }\n  setStave(stave) { this.stave = stave; return this; }\n  setXShift(x_shift) { this.x_shift = x_shift; return this; }\n  setYShift(y_shift) { this.y_shift = y_shift; return this; }\n\n  reset() {\n    this.scale = this.point * 72 / (this.options.font.resolution * 100);\n    this.metrics = Glyph.loadMetrics(\n      this.options.font,\n      this.code,\n      this.options.cache\n    );\n    this.bbox = Glyph.getOutlineBoundingBox(\n      this.metrics.outline,\n      this.scale,\n      0,\n      0\n    );\n  }\n\n  getMetrics() {\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    return {\n      x_min: this.metrics.x_min * this.scale,\n      x_max: this.metrics.x_max * this.scale,\n      width: this.bbox.getW(),\n      height: this.bbox.getH(),\n    };\n  }\n\n  setOriginX(x) {\n    const { bbox } = this;\n    const originX = Math.abs(bbox.getX() / bbox.getW());\n    const xShift = (x - originX) * bbox.getW();\n    this.originShift.x = -xShift;\n  }\n\n  setOriginY(y) {\n    const { bbox } = this;\n    const originY = Math.abs(bbox.getY() / bbox.getH());\n    const yShift = (y - originY) * bbox.getH();\n    this.originShift.y = -yShift;\n  }\n\n  setOrigin(x, y) {\n    this.setOriginX(x);\n    this.setOriginY(y);\n  }\n\n  render(ctx, x, y) {\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale;\n\n    this.setRendered();\n    Glyph.renderOutline(ctx, outline, scale, x + this.originShift.x, y + this.originShift.y);\n  }\n\n  renderToStave(x) {\n    this.checkContext();\n\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    if (!this.stave) {\n      throw new Vex.RuntimeError('GlyphError', 'No valid stave');\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale;\n\n    this.setRendered();\n    Glyph.renderOutline(this.context, outline, scale,\n        x + this.x_shift, this.stave.getYForGlyphs() + this.y_shift);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/glyph.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a generic base class for VexFlow, with implementations\n// of general functions and properties that can be inherited by all VexFlow elements.\n\nimport { Vex } from './vex';\nimport { Registry } from './registry';\n\nexport class Element {\n  static newID() { return 'auto' + (Element.ID++); }\n\n  constructor({ type } = {}) {\n    this.attrs = {\n      id: Element.newID(),\n      el: null,\n      type: type || 'Base',\n      classes: {},\n    };\n\n    this.boundingBox = null;\n    this.context = null;\n    this.rendered = false;\n\n    // If a default registry exist, then register with it right away.\n    if (Registry.getDefaultRegistry()) {\n      Registry.getDefaultRegistry().register(this);\n    }\n  }\n\n  // An element can have multiple class labels.\n  hasClass(className) { return (this.attrs.classes[className] === true); }\n  addClass(className) {\n    this.attrs.classes[className] = true;\n    if (this.registry) {\n      this.registry.onUpdate({\n        id: this.getAttribute('id'),\n        name: 'class',\n        value: className,\n        oldValue: null,\n      });\n    }\n    return this;\n  }\n\n  removeClass(className) {\n    delete this.attrs.classes[className];\n    if (this.registry) {\n      this.registry.onUpdate({\n        id: this.getAttribute('id'),\n        name: 'class',\n        value: null,\n        oldValue: className,\n      });\n    }\n    return this;\n  }\n\n  // This is called by the registry after the element is registered.\n  onRegister(registry) { this.registry = registry; return this; }\n  isRendered() { return this.rendered; }\n  setRendered(rendered = true) { this.rendered = rendered; return this; }\n\n  getAttributes() { return this.attrs; }\n  getAttribute(name) { return this.attrs[name]; }\n  setAttribute(name, value) {\n    const id = this.attrs.id;\n    const oldValue = this.attrs[name];\n    this.attrs[name] = value;\n    if (this.registry) {\n      // Register with old id to support id changes.\n      this.registry.onUpdate({ id, name, value, oldValue });\n    }\n    return this;\n  }\n\n  getContext() { return this.context; }\n  setContext(context) { this.context = context; return this; }\n  getBoundingBox() { return this.boundingBox; }\n\n  // Validators\n  checkContext() {\n    if (!this.context) {\n      throw new Vex.RERR('NoContext', 'No rendering context attached to instance');\n    }\n    return this.context;\n  }\n}\n\nElement.ID = 1000;\n\n\n\n// WEBPACK FOOTER //\n// ./src/element.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a registry for VexFlow elements. It allows users\n// to track, query, and manage some subset of generated elements, and\n// dynamically get and set attributes.\n//\n// There are two ways to regiser with a registry:\n//\n// 1) Explicitly call `element.register(registry)`, or,\n// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n//    elements will automatically register with it.\n//\n// Once an element is registered, selected attributes are tracked and indexed by\n// the registry. This allows fast look up of elements by attributes like id, type,\n// and class.\n\nimport { Vex } from './vex';\n\nexport const X = Vex.MakeException('RegistryError');\n\nfunction setIndexValue(index, name, value, id, elem) {\n  if (!index[name][value]) index[name][value] = {};\n  index[name][value][id] = elem;\n}\n\nexport class Registry {\n  static get INDEXES() { return ['type']; }\n\n  constructor() {\n    this.clear();\n  }\n\n  // If you call `enableDefaultRegistry`, any new elements will auto-register with\n  // the provided registry as soon as they're constructed.\n  static enableDefaultRegistry(registry) {\n    Registry.defaultRegistry = registry;\n  }\n\n  static getDefaultRegistry() {\n    return Registry.defaultRegistry;\n  }\n\n  static disableDefaultRegistry() {\n    Registry.defaultRegistry = null;\n  }\n\n  clear() {\n    // Indexes are represented as maps of maps (of maps). This allows\n    // for both multi-labeling (e.g., an element can have multiple classes)\n    // and efficient lookup.\n    this.index = {\n      id: {},\n      type: {},\n      class: {},\n    };\n    return this;\n  }\n\n  // Updates the indexes for element 'id'. If an element's attribute changes\n  // from A -> B, make sure to remove the element from A.\n  updateIndex({ id, name, value, oldValue }) {\n    const elem = this.getElementById(id);\n    if (oldValue !== null && this.index[name][oldValue]) {\n      delete this.index[name][oldValue][id];\n    }\n    if (value !== null) {\n      setIndexValue(this.index, name, value, elem.getAttribute('id'), elem);\n    }\n  }\n\n  // Register element `elem` with this registry. This adds the element to its index and watches\n  // it for attribute changes.\n  register(elem, id) {\n    id = id || elem.getAttribute('id');\n\n    if (!id) {\n      throw new X('Can\\'t add element without `id` attribute to registry', elem);\n    }\n\n    // Manually add id to index, then update other indexes.\n    elem.setAttribute('id', id);\n    setIndexValue(this.index, 'id', id, id, elem);\n    Registry.INDEXES.forEach(name => {\n      this.updateIndex({ id, name, value: elem.getAttribute(name), oldValue: null });\n    });\n    elem.onRegister(this);\n    return this;\n  }\n\n  getElementById(id) {\n    return this.index.id[id] ? this.index.id[id][id] : null;\n  }\n\n  getElementsByAttribute(attrName, value) {\n    const index = this.index[attrName];\n    if (index && index[value]) {\n      return Object.keys(index[value]).map(i => index[value][i]);\n    } else {\n      return [];\n    }\n  }\n\n  getElementsByType(type) { return this.getElementsByAttribute('type', type); }\n  getElementsByClass(className) { return this.getElementsByAttribute('class', className); }\n\n  // This is called by the element when an attribute value changes. If an indexed\n  // attribute changes, then update the local index.\n  onUpdate({ id, name, value, oldValue }) {\n    function includes(array, value) {\n      return array.filter(x => x === value).length > 0;\n    }\n\n    if (!includes(Registry.INDEXES.concat(['id', 'class']), name)) return this;\n    this.updateIndex({ id, name, value, oldValue });\n    return this;\n  }\n}\n\nRegistry.defaultRegistry = null;\n\n\n\n// WEBPACK FOOTER //\n// ./src/registry.js","// ## Description\n//\n// Object which computes metrics for a bounding box by continuously\n// taking canvas path commands\n\n// Warning: This file is merely a crutch to get bounding box information without\n// explicit metadata. This is likely to get deprecated following SMuFL support.\n//\n// taken from: https://github.com/gabelerner/canvg/blob/860e418aca67b9a41e858a223d74d375793ec364/ca\n// nvg.js#L449\n\nexport class BoundingBoxComputation {\n  constructor(x1, y1, x2, y2) { // pass in initial points if you want\n    this.x1 = Number.NaN;\n    this.y1 = Number.NaN;\n    this.x2 = Number.NaN;\n    this.y2 = Number.NaN;\n\n    this.addPoint(x1, y1);\n    this.addPoint(x2, y2);\n  }\n\n  width() {\n    return this.x2 - this.x1;\n  }\n\n  height() {\n    return this.y2 - this.y1;\n  }\n\n  addPoint(x, y) {\n    if (x != null) {\n      if (isNaN(this.x1) || isNaN(this.x2)) {\n        this.x1 = x;\n        this.x2 = x;\n      }\n      if (x < this.x1) this.x1 = x;\n      if (x > this.x2) this.x2 = x;\n    }\n\n    if (y != null) {\n      if (isNaN(this.y1) || isNaN(this.y2)) {\n        this.y1 = y;\n        this.y2 = y;\n      }\n      if (y < this.y1) this.y1 = y;\n      if (y > this.y2) this.y2 = y;\n    }\n  }\n\n  addX(x) {\n    this.addPoint(x, null);\n  }\n\n  addY(y) {\n    this.addPoint(null, y);\n  }\n\n  addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n    const cp1x = p0x + 2 / 3 * (p1x - p0x); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp1y = p0y + 2 / 3 * (p1y - p0y); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp2x = cp1x + 1 / 3 * (p2x - p0x); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    const cp2y = cp1y + 1 / 3 * (p2y - p0y); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    this.addBezierCurve(p0x, p0y, cp1x, cp1y, cp2x, cp2y, p2x, p2y);\n  }\n\n  addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n    // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    const p0 = [p0x, p0y];\n    const p1 = [p1x, p1y];\n    const p2 = [p2x, p2y];\n    const p3 = [p3x, p3y];\n    let i;\n\n    this.addPoint(p0[0], p0[1]);\n    this.addPoint(p3[0], p3[1]);\n\n    const f = (t, i) => Math.pow(1 - t, 3) * p0[i] +\n      3 * Math.pow(1 - t, 2) * t * p1[i] +\n      3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n      Math.pow(t, 3) * p3[i];\n\n    for (i = 0; i <= 1; i++) {\n      const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n      const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n      const c = 3 * p1[i] - 3 * p0[i];\n\n      if (a === 0) {\n        if (b === 0) continue;\n        const t = -c / b;\n        if (0 < t && t < 1) {\n          if (i === 0) this.addX(f(t, i));\n          if (i === 1) this.addY(f(t, i));\n        }\n        continue;\n      }\n\n      const b2ac = Math.pow(b, 2) - 4 * c * a;\n      if (b2ac < 0) continue;\n      const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        if (i === 0) this.addX(f(t1, i));\n        if (i === 1) this.addY(f(t1, i));\n      }\n      const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        if (i === 0) this.addX(f(t2, i));\n        if (i === 1) this.addY(f(t2, i));\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/boundingboxcomputation.js","// Vex Music Notation\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// Copyright Mohit Muthanna 2010\n\n// Bounding boxes for interactive notation\n\nexport class BoundingBox {\n  static copy(that) {\n    return new BoundingBox(that.x, that.y, that.w, that.h);\n  }\n\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }\n  getX() { return this.x; }\n  getY() { return this.y; }\n  getW() { return this.w; }\n  getH() { return this.h; }\n  setX(x) { this.x = x; return this; }\n  setY(y) { this.y = y; return this; }\n  setW(w) { this.w = w; return this; }\n  setH(h) { this.h = h; return this; }\n  move(x, y) { this.x += x; this.y += y; }\n  clone() { return BoundingBox.copy(this); }\n\n  // Merge my box with given box. Creates a bigger bounding box unless\n  // the given box is contained in this one.\n  mergeWith(boundingBox, ctx) {\n    const that = boundingBox;\n\n    const new_x = this.x < that.x ? this.x : that.x;\n    const new_y = this.y < that.y ? this.y : that.y;\n    const new_w = Math.max(this.x + this.w, that.x + that.w) - new_x;\n    const new_h = Math.max(this.y + this.h, that.y + that.h) - new_y;\n\n    this.x = new_x;\n    this.y = new_y;\n    this.w = new_w;\n    this.h = new_h;\n\n    if (ctx) this.draw(ctx);\n    return this;\n  }\n\n  draw(ctx, x, y) {\n    if (!x) x = 0;\n    if (!y) y = 0;\n    ctx.rect(this.x + x, this.y + y, this.w, this.h);\n    ctx.stroke();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/boundingbox.js","export const Font = {\n\"glyphs\":{\n\"v0\":{\"x_min\":0,\"x_max\":514.5,\"ha\":525,\"o\":\"m 236 648 b 246 648 238 648 242 648 b 288 646 261 648 283 648 b 472 513 364 634 428 587 b 514 347 502 464 514 413 b 462 163 514 272 499 217 b 257 44 409 83 333 44 b 50 163 181 44 103 83 b 0 347 14 217 0 272 b 40 513 0 413 12 464 b 236 648 87 591 155 638 m 277 614 b 253 616 273 616 261 616 b 242 616 247 616 243 616 b 170 499 193 609 181 589 b 159 348 163 446 159 398 b 166 222 159 308 161 266 b 201 91 174 138 183 106 b 257 76 215 81 235 76 b 311 91 277 76 299 81 b 347 222 330 106 338 138 b 353 348 352 266 353 308 b 344 499 353 398 351 446 b 277 614 333 587 322 606 m 257 -1 l 258 -1 l 255 -1 l 257 -1 m 257 673 l 258 673 l 255 673 l 257 673 \"},\n\"v1\":{\"x_min\":-1.359375,\"x_max\":344.359375,\"ha\":351,\"o\":\"m 126 637 l 129 638 l 198 638 l 266 638 l 269 635 b 274 631 272 634 273 632 l 277 627 l 277 395 b 279 156 277 230 277 161 b 329 88 281 123 295 106 b 344 69 341 81 344 79 b 337 55 344 62 343 59 l 333 54 l 197 54 l 61 54 l 58 55 b 50 69 53 59 50 62 b 65 88 50 79 53 81 b 80 97 72 91 74 93 b 117 156 103 113 112 129 b 117 345 117 161 117 222 l 117 528 l 100 503 l 38 406 b 14 383 24 384 23 383 b -1 398 5 383 -1 390 b 4 415 -1 403 1 409 b 16 437 5 416 10 426 l 72 539 l 100 596 b 121 632 119 631 119 631 b 126 637 122 634 125 635 m 171 -1 l 172 -1 l 170 -1 l 171 -1 m 171 673 l 172 673 l 170 673 l 171 673 \"},\n\"v2\":{\"x_min\":-1.359375,\"x_max\":458.6875,\"ha\":468,\"o\":\"m 197 648 b 216 648 201 648 208 648 b 258 646 232 648 253 648 b 419 546 333 637 393 599 b 432 489 428 528 432 509 b 356 342 432 440 405 384 b 235 278 322 313 288 295 b 69 170 166 256 107 217 b 69 169 69 170 69 169 b 69 169 69 169 69 169 b 74 173 69 169 72 170 b 209 222 112 204 163 222 b 310 195 247 222 274 215 b 371 179 332 184 352 179 b 396 181 379 179 387 179 b 428 202 409 184 423 194 b 442 212 431 209 436 212 b 458 197 450 212 458 206 b 441 148 458 190 449 165 b 299 44 409 84 353 44 b 288 45 295 44 292 44 b 250 61 274 45 268 49 b 122 99 212 86 164 99 b 73 91 104 99 88 97 b 28 63 53 84 34 72 b 14 54 25 56 20 54 b 1 62 9 54 4 56 l -1 65 l -1 79 b 0 99 -1 91 0 95 b 2 113 1 102 2 108 b 164 309 20 197 81 272 b 285 470 232 341 277 398 b 287 487 287 476 287 481 b 171 595 287 551 239 595 b 155 595 166 595 160 595 b 142 592 145 594 142 594 b 145 589 142 592 142 591 b 179 527 168 576 179 551 b 132 455 179 496 163 467 b 104 451 122 452 112 451 b 27 530 62 451 27 487 b 29 555 27 538 27 546 b 197 648 44 601 115 639 m 228 -1 l 230 -1 l 227 -1 l 228 -1 m 228 673 l 230 673 l 227 673 l 228 673 \"},\n\"v3\":{\"x_min\":-1.359375,\"x_max\":409.6875,\"ha\":418,\"o\":\"m 174 648 b 191 648 176 648 183 648 b 225 648 204 648 220 648 b 402 523 317 638 389 588 b 404 503 404 517 404 510 b 402 484 404 495 404 488 b 264 373 389 437 334 394 b 257 370 259 371 257 371 b 257 370 257 370 257 370 b 264 369 258 370 261 369 b 409 202 359 334 409 267 b 318 72 409 152 381 104 b 200 43 281 52 240 43 b 23 113 134 43 69 68 b 0 169 6 129 0 149 b 77 249 0 210 29 249 l 77 249 b 152 174 125 249 152 212 b 103 102 152 145 137 116 b 103 102 103 102 103 102 b 147 94 103 101 132 95 b 153 94 149 94 151 94 b 265 206 219 94 265 141 b 264 226 265 213 265 219 b 147 355 253 299 204 353 b 126 371 133 356 126 362 b 147 388 126 383 132 388 b 254 474 196 391 238 424 b 259 502 258 484 259 494 b 182 592 259 544 228 582 b 156 595 175 595 166 595 b 115 592 142 595 129 594 l 111 591 l 115 588 b 152 524 141 574 152 549 b 92 449 152 491 130 458 b 76 448 87 448 81 448 b -1 530 32 448 -1 488 b 20 581 -1 548 5 566 b 174 648 55 619 108 641 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 \"},\n\"v4\":{\"x_min\":0,\"x_max\":468.21875,\"ha\":478,\"o\":\"m 174 637 b 232 638 175 638 189 638 b 277 638 245 638 259 638 l 378 638 l 381 635 b 389 623 386 632 389 627 b 382 609 389 617 386 613 b 366 589 381 606 372 598 l 313 528 l 245 451 l 209 410 l 155 348 l 84 267 b 59 240 72 252 59 240 b 59 240 59 240 59 240 b 151 238 59 238 68 238 l 242 238 l 242 303 b 243 371 242 369 242 370 b 289 426 245 374 254 385 l 303 441 l 317 456 l 338 483 l 360 506 l 371 520 b 386 527 375 526 381 527 b 400 519 392 527 397 524 b 401 440 401 516 401 514 b 401 377 401 423 401 402 l 401 238 l 426 238 b 453 237 449 238 450 238 b 465 217 461 234 465 226 b 460 202 465 212 464 206 b 426 197 454 197 453 197 l 401 197 l 401 180 b 451 88 402 129 412 109 b 468 69 465 81 468 79 b 461 55 468 62 466 59 l 458 54 l 321 54 l 185 54 l 182 55 b 175 69 176 59 175 62 b 191 88 175 79 176 81 b 240 180 230 109 240 129 l 240 197 l 125 197 b 73 195 104 195 87 195 b 8 197 10 195 9 197 b 0 212 2 199 0 205 b 0 212 0 212 0 212 b 20 242 0 219 0 219 b 163 610 104 344 163 492 b 174 637 163 628 166 634 m 234 -1 l 235 -1 l 232 -1 l 234 -1 m 234 673 l 235 673 l 232 673 l 234 673 \"},\n\"v5\":{\"x_min\":0,\"x_max\":409.6875,\"ha\":418,\"o\":\"m 47 637 b 53 638 49 638 50 638 b 69 634 55 638 61 637 b 210 610 114 619 161 610 b 363 634 259 610 311 619 b 382 638 372 637 378 638 b 392 634 386 638 389 637 b 397 623 396 630 397 627 b 393 610 397 620 396 616 b 298 505 368 552 338 520 b 212 494 277 498 246 494 b 65 517 163 494 106 502 b 61 517 62 517 61 517 b 61 517 61 517 61 517 b 51 408 61 517 51 412 b 51 408 51 408 51 408 b 51 408 51 408 51 408 b 61 412 53 408 55 409 b 125 434 80 421 103 430 b 185 441 145 440 166 441 b 409 244 310 441 409 353 b 401 191 409 227 406 209 b 197 43 375 105 287 43 b 159 47 183 43 171 44 b 23 123 112 56 61 86 b 0 180 6 140 0 159 b 76 260 0 220 31 260 b 92 259 81 260 87 259 b 152 183 132 251 152 216 b 100 112 152 152 134 122 b 95 111 98 112 95 111 b 95 111 95 111 95 111 b 129 98 95 109 119 101 b 148 97 136 97 141 97 b 264 235 206 97 261 158 b 265 248 265 240 265 244 b 210 398 265 312 243 373 b 179 408 201 406 194 408 b 174 408 178 408 176 408 b 53 369 130 408 88 394 b 34 359 39 359 38 359 b 17 374 24 359 17 365 b 39 628 17 384 38 625 b 47 637 40 631 43 635 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 \"},\n\"v6\":{\"x_min\":0,\"x_max\":475.03125,\"ha\":485,\"o\":\"m 255 648 b 274 648 259 648 266 648 b 314 646 288 648 307 648 b 450 555 374 637 438 594 b 454 530 453 546 454 538 b 375 451 454 485 416 451 b 328 467 359 451 343 455 b 300 526 310 483 300 503 b 352 598 300 557 319 589 b 356 599 355 598 356 599 b 352 602 356 599 355 601 b 288 616 330 612 308 616 b 210 584 257 616 230 605 b 164 433 189 559 174 508 b 160 374 163 415 160 381 b 160 374 160 374 160 374 b 160 374 160 374 160 374 b 168 377 160 374 164 376 b 258 395 200 390 228 395 b 366 367 294 395 328 387 b 475 223 436 333 475 283 b 472 197 475 215 473 206 b 349 65 462 141 419 95 b 259 43 317 51 288 43 b 167 69 230 43 200 52 b 4 290 80 113 20 195 b 0 349 1 309 0 328 b 20 467 0 391 6 433 b 255 648 58 563 155 637 m 269 363 b 257 363 265 363 261 363 b 210 345 236 363 220 356 b 186 226 196 324 186 272 b 187 198 186 216 186 206 b 213 95 191 151 202 112 b 257 76 221 83 238 76 b 270 77 261 76 266 76 b 321 156 299 81 310 99 b 329 229 326 183 329 206 b 321 301 329 252 326 274 b 269 363 311 342 298 359 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 \"},\n\"v7\":{\"x_min\":0,\"x_max\":442.359375,\"ha\":451,\"o\":\"m 147 648 b 166 649 153 649 160 649 b 313 598 217 649 273 630 b 340 587 323 588 328 587 l 341 587 b 412 628 367 587 390 601 b 427 638 416 635 421 638 b 439 632 431 638 435 637 b 442 623 441 630 442 628 b 430 569 442 616 439 603 b 352 369 408 492 377 410 b 300 259 325 324 313 298 b 273 84 283 205 273 140 b 265 55 273 65 272 59 l 261 54 l 181 54 l 99 54 l 96 55 b 91 61 95 56 92 59 l 89 63 l 89 77 b 147 263 89 133 111 202 b 261 401 176 313 212 355 b 378 541 315 449 349 489 l 382 548 l 375 544 b 240 495 333 512 285 495 b 129 535 198 495 160 509 b 84 560 108 552 95 560 b 76 559 81 560 78 560 b 31 487 59 555 43 530 b 14 470 27 473 24 470 b 1 477 8 470 4 471 l 0 480 l 0 553 l 0 627 l 1 630 b 16 638 4 635 9 638 b 23 635 17 638 20 637 b 49 626 36 626 39 626 b 96 638 59 626 80 630 b 104 639 99 638 102 639 b 117 644 107 641 112 642 b 147 648 125 645 137 648 m 220 -1 l 221 -1 l 219 -1 l 220 -1 m 220 673 l 221 673 l 219 673 l 220 673 \"},\n\"v8\":{\"x_min\":0,\"x_max\":488.640625,\"ha\":499,\"o\":\"m 217 648 b 245 649 225 648 235 649 b 453 516 343 649 430 595 b 458 478 455 503 458 491 b 412 370 458 440 441 398 b 411 369 412 369 411 369 b 415 365 411 367 412 367 b 488 231 462 331 488 281 b 472 165 488 208 483 186 b 243 43 434 86 338 43 b 63 104 178 43 112 62 b 0 233 20 140 0 186 b 73 365 0 283 24 331 l 77 369 l 72 374 b 29 476 42 406 29 441 b 217 648 29 557 103 635 m 258 605 b 242 606 253 605 247 606 b 157 552 198 606 157 580 b 160 541 157 548 159 544 b 319 413 176 503 242 452 l 337 403 l 338 406 b 359 476 352 428 359 452 b 258 605 359 537 318 595 m 138 326 b 130 330 134 328 130 330 b 130 330 130 330 130 330 b 107 305 127 330 112 313 b 84 231 91 281 84 256 b 243 86 84 156 151 86 b 249 87 245 86 246 87 b 347 156 303 88 347 120 b 344 172 347 162 345 167 b 156 319 325 227 257 281 b 138 326 151 322 144 324 m 243 -1 l 245 -1 l 242 -1 l 243 -1 m 243 673 l 245 673 l 242 673 l 243 673 \"},\n\"v9\":{\"x_min\":0,\"x_max\":475.03125,\"ha\":485,\"o\":\"m 191 646 b 212 649 198 648 205 649 b 255 644 227 649 243 646 b 458 448 348 616 428 539 b 475 342 469 415 475 378 b 460 244 475 308 469 274 b 193 44 421 124 303 44 b 91 69 157 44 122 51 b 19 161 43 97 19 126 b 21 181 19 167 20 174 b 98 241 32 220 65 241 b 170 186 129 241 160 223 b 172 166 171 179 172 173 b 121 94 172 134 152 102 b 117 93 118 94 117 93 b 121 90 117 93 118 91 b 185 76 142 80 164 76 b 270 119 220 76 251 91 b 308 259 287 145 300 194 b 313 317 310 277 313 310 b 313 317 313 317 313 317 b 313 317 313 317 313 317 b 304 315 313 317 308 316 b 216 295 273 302 245 295 b 145 308 193 295 170 299 b 19 398 88 327 42 360 b 0 469 5 420 0 444 b 24 551 0 496 8 526 b 191 646 54 596 125 637 m 227 614 b 215 616 224 616 220 616 b 202 614 210 616 206 616 b 152 535 174 610 163 592 b 144 463 147 509 144 485 b 152 391 144 440 147 417 b 216 328 163 344 179 328 b 280 391 253 328 269 344 b 288 463 285 417 288 440 b 280 535 288 485 285 509 b 227 614 269 594 258 610 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 \"},\n\"va\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 \"},\n\"vb\":{\"x_min\":0,\"x_max\":428.75,\"ha\":438,\"o\":\"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 \"},\n\"vc\":{\"x_min\":0,\"x_max\":447.8125,\"ha\":457,\"o\":\"m 0 86 l 0 173 l 223 173 l 447 173 l 447 86 l 447 0 l 223 0 l 0 0 l 0 86 \"},\n\"vf\":{\"x_min\":0,\"x_max\":370.21875,\"ha\":378,\"o\":\"m 0 0 l 0 277 l 61 277 l 122 277 l 122 0 l 122 -278 l 61 -278 l 0 -278 l 0 0 m 246 -1 l 246 277 l 308 277 l 370 277 l 370 -1 l 370 -278 l 308 -278 l 246 -278 l 246 -1 \"},\n\"v10\":{\"x_min\":0,\"x_max\":559.421875,\"ha\":571,\"o\":\"m 5 127 b 14 127 6 127 9 127 b 51 126 25 127 43 127 b 175 98 93 122 138 112 l 186 94 b 279 51 210 86 255 65 b 285 47 280 51 283 48 b 319 27 291 44 311 31 l 326 22 b 359 0 332 19 352 4 l 367 -6 b 371 -9 368 -6 370 -8 l 379 -15 b 387 -22 383 -18 386 -20 l 398 -30 l 411 -40 l 417 -47 l 427 -55 l 434 -61 b 441 -66 436 -62 439 -65 l 446 -72 l 453 -77 l 462 -87 b 558 -188 490 -113 549 -176 b 559 -195 559 -191 559 -194 b 548 -205 559 -201 555 -205 b 541 -204 547 -205 544 -205 b 534 -198 539 -201 536 -199 l 525 -191 b 481 -162 518 -187 490 -167 b 472 -155 477 -159 472 -156 b 468 -152 470 -155 469 -154 b 461 -149 466 -152 464 -151 b 428 -130 454 -145 441 -137 b 371 -99 413 -122 372 -99 b 363 -95 371 -99 367 -98 b 353 -91 357 -94 353 -91 b 348 -90 353 -91 352 -91 b 332 -81 343 -87 341 -86 b 27 -12 230 -37 127 -13 b 0 -5 4 -11 2 -11 b 0 58 0 -2 0 27 b 0 122 0 88 0 120 b 5 127 1 124 4 126 \"},\n\"v11\":{\"x_min\":-155.171875,\"x_max\":153.8125,\"ha\":157,\"o\":\"m -137 353 b -130 353 -136 353 -133 353 b -112 349 -125 353 -119 352 b -100 342 -110 347 -104 344 b 0 317 -69 326 -35 317 b 111 349 38 317 76 328 b 129 353 117 352 123 353 b 153 327 142 353 153 344 b 144 302 153 320 153 317 b 27 6 93 226 50 113 b 21 -13 24 -11 24 -11 b 0 -26 17 -22 8 -26 b -24 -12 -9 -26 -19 -22 b -28 5 -24 -9 -27 -2 b -145 302 -53 117 -95 224 b -155 327 -155 317 -155 320 b -137 353 -155 340 -148 349 \"},\n\"v18\":{\"x_min\":0,\"x_max\":323.9375,\"ha\":331,\"o\":\"m 217 535 b 225 537 220 537 221 537 b 245 524 235 537 242 533 l 246 521 l 247 390 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 492 87 498 b 103 495 98 498 100 496 b 114 485 107 494 111 489 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 384 l 205 521 l 206 524 b 217 535 209 528 212 533 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 \"},\n\"v1b\":{\"x_min\":0,\"x_max\":559.421875,\"ha\":571,\"o\":\"m 544 204 b 548 204 545 204 547 204 b 559 194 555 204 559 199 b 559 190 559 192 559 191 b 530 156 559 188 556 184 b 462 86 510 134 481 104 b 453 76 458 81 454 77 l 446 70 l 441 65 b 434 59 439 63 436 61 l 427 54 b 409 37 426 51 416 44 b 392 23 398 29 394 26 b 387 19 389 22 387 20 b 379 13 386 19 383 16 l 371 8 l 367 5 l 359 -1 l 337 -16 b 285 -48 319 -29 298 -41 l 279 -52 b 186 -95 255 -66 210 -87 l 175 -99 b 23 -129 127 -117 68 -129 b 17 -129 20 -129 19 -129 b 1 -123 2 -129 2 -129 b 0 -49 0 -122 0 -83 b 0 4 0 -22 0 1 b 27 11 2 9 4 9 b 185 31 78 12 145 20 b 198 34 186 31 193 33 b 314 73 234 44 277 58 b 349 88 328 79 340 84 b 353 90 352 90 353 90 b 363 94 353 90 357 93 b 371 98 367 97 371 98 b 428 129 372 98 413 120 b 461 148 441 136 454 144 b 468 151 464 149 466 151 b 472 154 469 152 470 154 b 481 161 473 155 477 158 b 525 190 490 166 518 186 l 534 197 b 540 201 536 198 539 199 b 544 204 541 202 544 204 \"},\n\"v1d\":{\"x_min\":0,\"x_max\":619.3125,\"ha\":632,\"o\":\"m 274 184 b 307 186 285 186 296 186 b 616 22 465 186 597 116 b 619 -1 617 13 619 5 b 308 -187 619 -104 483 -187 b 0 -1 133 -187 0 -102 b 5 36 0 11 1 23 b 274 184 29 115 141 176 m 289 161 b 272 162 284 162 277 162 b 171 41 209 162 171 108 b 205 -73 171 5 182 -34 b 345 -163 243 -133 298 -163 b 436 -98 385 -163 420 -142 b 446 -43 443 -80 446 -62 b 289 161 446 47 377 147 \"},\n\"v1e\":{\"x_min\":-402.890625,\"x_max\":401.53125,\"ha\":410,\"o\":\"m -219 173 b -213 174 -217 174 -215 174 b -202 173 -209 174 -205 173 b -114 86 -200 172 -179 151 b -28 0 -66 37 -28 0 b 40 84 -28 0 2 37 b 117 174 111 173 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b -42 -86 27 0 -4 -38 b -118 -174 -112 -174 -111 -173 b -123 -176 -119 -176 -121 -176 b -133 -174 -126 -176 -130 -174 b -296 -12 -136 -173 -172 -137 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 172 -398 -43 -228 167 b -219 173 -223 172 -220 173 \"},\n\"v1f\":{\"x_min\":-340.28125,\"x_max\":338.921875,\"ha\":346,\"o\":\"m -32 520 b -29 521 -31 520 -31 521 b -23 519 -27 521 -24 520 b -20 513 -21 517 -20 516 b -21 506 -20 512 -20 509 b -31 474 -23 502 -27 488 l -53 402 l -66 352 l -68 349 l -57 349 b -32 351 -51 349 -40 351 b 123 370 19 352 74 359 b 137 371 127 370 133 371 b 170 356 152 371 164 366 b 171 355 170 355 170 355 b 216 366 174 355 183 358 b 280 378 268 377 266 377 b 287 378 283 378 284 378 b 332 349 307 378 322 369 b 338 319 336 341 338 330 b 332 301 338 310 336 302 b 242 280 329 299 246 280 b 242 280 242 280 242 280 b 235 288 236 280 235 283 b 235 292 235 290 235 291 b 236 302 236 297 236 299 b 220 337 236 316 230 330 l 216 340 l 210 335 b 159 276 189 322 172 301 b 118 149 152 265 156 274 b 81 34 84 36 85 36 b -8 13 78 33 -4 13 b -8 13 -8 13 -8 13 b -14 20 -12 15 -14 15 b -8 44 -14 24 -12 31 b -2 66 -5 55 -2 65 b -2 66 -2 66 -2 66 l -2 66 b -43 41 -2 66 -21 55 b -114 4 -98 8 -98 8 b -144 0 -123 0 -134 0 b -242 99 -197 0 -242 43 b -242 109 -242 102 -242 105 b -212 219 -240 122 -242 116 b -185 312 -197 270 -185 312 l -185 312 b -189 312 -185 312 -186 312 b -259 312 -200 312 -227 312 b -321 310 -291 312 -310 310 b -334 312 -330 310 -334 312 b -340 319 -338 313 -340 316 b -336 326 -340 322 -338 324 b -291 337 -334 326 -314 331 l -247 347 l -210 348 b -172 348 -190 348 -172 348 b -168 363 -172 348 -171 355 b -145 442 -151 424 -145 441 b -133 452 -144 444 -140 446 l -77 489 b -32 520 -53 506 -32 520 m 57 334 b 53 335 55 335 54 335 b 44 334 50 335 49 335 b -70 316 8 326 -28 320 b -78 309 -78 316 -78 316 b -108 202 -80 305 -88 274 b -141 81 -136 112 -141 93 b -140 74 -141 79 -141 77 b -117 49 -137 59 -127 49 b -107 52 -114 49 -110 51 b 16 127 -106 54 14 126 b 42 217 16 127 42 215 b 49 241 42 222 44 229 b 73 320 53 251 73 317 b 57 334 73 327 65 333 \"},\n\"v20\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m -559 351 b -551 352 -556 352 -553 352 b -530 338 -543 352 -533 348 b -529 169 -530 337 -529 291 l -529 1 l -507 27 l -441 112 b -382 174 -394 169 -390 174 b -378 174 -381 174 -379 174 b -281 86 -370 174 -375 179 b -196 0 -234 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 279 172 b 289 174 285 174 288 174 b 300 173 294 174 298 173 b 462 11 303 172 340 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 375 -176 371 -176 b 280 -87 367 -173 347 -152 b 194 0 234 -38 194 0 b 126 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 44 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -140 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -288 -176 b -300 -174 -294 -176 -298 -174 b -464 -11 -303 -173 -374 -102 l -476 0 l -506 -37 b -539 -76 -528 -65 -537 -74 b -551 -80 -543 -79 -547 -80 b -570 -68 -558 -80 -566 -76 l -571 -65 l -571 136 b -570 340 -571 331 -571 337 b -559 351 -568 344 -564 348 \"},\n\"v22\":{\"x_min\":0,\"x_max\":432.828125,\"ha\":442,\"o\":\"m 209 186 b 213 187 210 187 212 187 b 216 187 215 187 216 187 b 224 174 216 186 220 180 b 420 -1 269 105 338 43 b 432 -12 431 -8 432 -9 b 421 -23 432 -15 432 -16 b 228 -180 345 -70 264 -137 b 219 -188 221 -188 221 -188 l 219 -188 b 208 -177 215 -188 215 -188 b 10 1 163 -106 93 -44 b 0 11 0 6 0 8 b 10 22 0 13 0 15 b 202 179 87 69 167 136 b 209 186 206 183 209 186 \"},\n\"v23\":{\"x_min\":0,\"x_max\":133.390625,\"ha\":136,\"o\":\"m 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 \"},\n\"v25\":{\"x_min\":0,\"x_max\":318.5,\"ha\":325,\"o\":\"m 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 \"},\n\"v26\":{\"x_min\":-21.78125,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 179 164 199 187 192 l 210 176 l 210 396 l 210 617 l 212 621 b 231 632 216 628 223 632 b 250 620 239 632 247 628 b 251 383 251 616 251 616 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\n\"v27\":{\"x_min\":0,\"x_max\":432.828125,\"ha\":442,\"o\":\"m 208 184 b 213 187 209 186 212 187 b 224 176 217 187 221 183 b 245 147 225 172 235 159 b 419 -1 288 90 347 38 b 431 -8 424 -4 431 -8 b 432 -12 432 -9 432 -11 b 430 -18 432 -13 432 -16 b 364 -61 424 -20 383 -47 b 225 -183 307 -102 250 -152 b 223 -187 224 -184 223 -187 b 220 -188 221 -188 220 -188 b 208 -176 216 -188 210 -184 b 187 -148 205 -173 197 -159 b 12 0 144 -90 84 -38 b 0 11 4 5 0 8 b 16 24 0 13 4 18 b 183 158 83 69 141 115 b 208 184 194 169 198 173 m 183 105 b 176 113 181 109 176 113 b 172 109 176 113 175 112 b 92 45 149 90 117 62 l 88 41 l 102 31 b 247 -105 160 -6 210 -55 l 254 -115 l 257 -112 l 269 -102 b 340 -45 287 -87 319 -61 l 344 -43 l 330 -33 b 183 105 272 6 221 54 \"},\n\"v28\":{\"x_min\":-73.5,\"x_max\":72.140625,\"ha\":74,\"o\":\"m -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 \"},\n\"v29\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m 175 273 b 182 274 178 273 181 274 b 202 262 190 274 198 269 b 204 158 204 259 204 259 l 204 56 l 250 112 b 303 174 296 172 298 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 208 -6 213 0 210 -2 l 204 -12 l 204 -147 b 204 -210 204 -173 204 -194 b 198 -292 204 -297 204 -287 b 183 -299 194 -297 189 -299 b 164 -287 175 -299 167 -295 b 163 -174 163 -284 163 -284 l 161 -63 l 119 -117 b 65 -176 76 -170 73 -176 b 61 -176 63 -176 62 -176 b -35 -87 51 -174 57 -180 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -363 174 -374 170 -371 174 b -359 174 -362 174 -360 174 b -262 86 -351 174 -356 179 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 147 11 -13 172 35 123 l 157 -1 l 160 1 l 163 4 l 163 130 b 164 260 163 256 163 258 b 175 273 166 266 170 270 \"},\n\"v2a\":{\"x_min\":-21.78125,\"x_max\":366.140625,\"ha\":374,\"o\":\"m 276 1378 b 284 1379 279 1379 281 1379 b 306 1360 292 1379 298 1374 b 352 1247 326 1326 343 1286 b 366 1139 362 1213 366 1175 b 347 1009 366 1093 359 1049 l 344 1002 l 347 992 b 352 971 348 986 351 977 b 366 863 362 936 366 899 b 347 732 366 818 359 773 l 344 725 l 347 716 b 352 695 348 710 351 700 b 366 588 362 659 366 623 b 223 262 366 464 314 345 b 189 233 212 252 212 252 b 35 76 126 183 73 129 b -1 16 20 56 2 27 b -19 4 -4 9 -12 4 l -21 4 l -21 137 l -21 270 l -17 270 b 186 344 59 281 134 308 b 319 606 270 399 319 499 b 317 650 319 620 319 635 l 315 659 l 314 655 b 223 537 288 607 258 570 b 189 509 212 528 212 528 b 35 352 126 459 73 405 b -1 292 20 333 2 303 b -19 280 -4 285 -12 280 l -21 280 l -21 413 l -21 546 l -17 546 b 186 620 59 557 134 584 b 319 882 270 675 319 775 b 317 925 319 896 319 911 l 315 935 l 314 931 b 223 813 288 884 258 846 b 189 785 212 805 212 805 b 35 628 126 735 73 681 b -1 569 20 609 2 580 b -19 556 -4 562 -12 556 l -21 556 l -21 689 l -21 823 l -17 823 b 202 907 68 835 152 867 b 319 1157 280 968 319 1061 b 270 1338 319 1218 303 1281 b 262 1358 264 1349 262 1353 b 262 1364 262 1360 262 1363 b 276 1378 265 1371 269 1376 \"},\n\"v2c\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -413 173 b -408 174 -412 174 -409 174 b -397 173 -404 174 -400 173 b -308 86 -394 172 -374 151 b -223 0 -261 37 -223 0 b -153 84 -223 0 -191 37 b -77 174 -83 173 -84 172 b -72 174 -76 174 -74 174 b -62 173 -68 174 -63 173 b 25 86 -59 172 -39 151 b 112 0 73 37 111 0 b 181 84 112 0 144 37 b 257 174 251 173 251 172 b 262 174 258 174 261 174 b 273 173 266 174 270 173 b 436 9 276 172 347 101 l 447 -1 l 477 36 b 522 79 511 79 513 79 l 522 79 b 552 51 533 79 539 73 b 596 -112 582 6 596 -51 b 567 -262 596 -161 586 -213 b 539 -322 558 -287 544 -316 b 524 -327 534 -326 529 -327 b 504 -315 515 -327 507 -323 b 503 -308 503 -312 503 -309 b 511 -285 503 -302 504 -297 b 555 -113 540 -227 555 -169 b 544 -34 555 -86 551 -59 b 522 19 540 -16 530 8 l 521 22 l 481 -26 l 405 -122 b 353 -176 366 -172 362 -176 b 349 -176 352 -176 351 -176 b 253 -87 341 -176 347 -180 b 167 0 206 -38 167 0 b 99 -86 167 0 136 -38 b 21 -174 27 -174 28 -173 b 17 -176 20 -176 19 -176 b 6 -174 13 -176 9 -174 b -81 -87 4 -173 -14 -152 b -167 0 -129 -38 -167 0 b -236 -86 -167 0 -198 -38 b -313 -174 -307 -174 -306 -173 b -318 -176 -314 -176 -315 -176 b -328 -174 -321 -176 -325 -174 b -491 -12 -330 -173 -367 -137 l -503 0 l -530 -34 b -570 -77 -562 -73 -564 -76 b -577 -79 -571 -79 -574 -79 b -597 -58 -588 -79 -597 -69 b -596 -49 -597 -55 -597 -52 b -417 172 -593 -43 -423 167 b -413 173 -417 172 -415 173 \"},\n\"v2d\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 190 b 219 191 213 191 216 191 b 236 176 225 191 228 190 b 419 18 277 105 341 49 b 436 5 431 13 434 11 b 438 -1 438 4 438 1 b 424 -16 438 -8 432 -13 b 356 -49 409 -20 379 -36 b 234 -180 306 -83 258 -133 b 219 -192 230 -188 224 -192 b 200 -176 213 -192 206 -187 b 9 -15 157 -102 89 -45 b 0 0 2 -12 0 -6 b 16 18 0 9 2 12 b 200 176 93 48 159 104 b 212 190 205 186 208 188 m 239 113 b 236 117 238 116 238 117 b 230 108 235 117 234 115 b 92 -15 196 58 140 8 b 88 -18 91 -16 88 -18 b 92 -20 88 -18 91 -19 b 198 -116 130 -43 166 -74 b 200 -117 200 -117 200 -117 b 201 -117 200 -117 201 -117 b 264 -43 212 -98 242 -62 b 345 15 288 -19 321 4 b 348 18 347 16 348 16 b 344 20 348 18 347 19 b 239 113 307 41 266 79 \"},\n\"v2f\":{\"x_min\":-1.359375,\"x_max\":680.5625,\"ha\":694,\"o\":\"m 597 1042 b 604 1042 600 1042 602 1042 b 642 1002 627 1042 642 1022 b 619 966 642 988 635 974 b 439 927 574 942 503 927 l 426 927 l 426 921 b 430 838 428 893 430 866 b 345 480 430 696 398 560 b 179 391 307 423 249 391 b 156 392 171 391 164 392 b 138 394 149 394 142 394 b 103 434 115 396 103 416 b 129 471 103 451 111 466 b 141 474 133 473 137 474 b 172 459 153 474 164 469 b 181 455 175 456 176 455 b 187 456 182 455 185 455 b 253 520 212 460 234 483 b 315 836 294 605 315 714 b 311 928 315 867 314 898 b 302 945 310 943 311 942 b 245 953 283 950 262 953 b 130 891 193 953 149 931 b 84 860 119 870 102 860 b 36 905 61 860 39 877 b 36 910 36 907 36 909 b 80 970 36 931 50 949 b 249 1017 125 1000 187 1017 b 322 1009 273 1017 299 1014 l 341 1003 b 436 991 372 995 406 991 b 577 1031 495 991 545 1004 b 597 1042 583 1038 590 1041 m 416 360 b 424 360 419 360 421 360 b 481 309 454 360 479 338 b 503 145 484 280 495 199 b 585 -185 525 16 555 -106 b 630 -245 596 -213 613 -237 l 634 -247 l 638 -245 b 647 -244 641 -245 645 -244 b 680 -278 666 -244 680 -262 b 664 -308 680 -290 675 -301 b 638 -312 658 -310 650 -312 b 613 -309 631 -312 623 -310 b 477 -201 555 -303 502 -260 b 417 -2 460 -159 434 -72 b 416 5 417 1 416 5 b 416 5 416 5 416 5 b 411 -5 415 5 413 0 b 359 -97 397 -33 377 -70 b 353 -106 355 -102 353 -105 b 359 -112 353 -108 355 -109 b 409 -130 375 -123 390 -129 b 426 -134 420 -130 421 -131 b 431 -147 428 -137 431 -141 b 420 -162 431 -152 427 -159 b 382 -169 409 -166 396 -169 b 323 -155 363 -169 341 -165 l 317 -152 l 314 -155 b 62 -303 240 -240 148 -295 b 36 -305 55 -305 44 -305 b 23 -303 29 -305 24 -305 b -1 -273 6 -299 -1 -287 b 31 -240 -1 -256 10 -240 b 36 -240 32 -240 34 -240 b 42 -241 38 -241 39 -241 b 134 -204 63 -241 99 -226 b 367 288 265 -115 357 81 b 375 330 368 313 370 320 b 416 360 383 347 400 358 m 360 -359 b 379 -359 363 -359 371 -359 b 424 -360 396 -359 416 -359 b 646 -502 536 -373 624 -430 b 649 -527 649 -510 649 -519 b 530 -673 649 -578 604 -635 l 521 -677 l 529 -681 b 653 -811 592 -714 637 -762 b 660 -853 658 -827 660 -839 b 645 -911 660 -873 656 -892 b 426 -1021 608 -981 519 -1021 b 283 -989 377 -1021 328 -1011 b 235 -949 249 -972 239 -964 b 234 -936 234 -946 234 -941 b 234 -928 234 -934 234 -931 l 235 -925 l 234 -927 l 225 -934 b 87 -982 186 -966 138 -982 b 80 -982 85 -982 83 -982 b 55 -981 70 -981 58 -981 b 17 -943 32 -981 17 -964 b 54 -904 17 -921 35 -904 b 78 -914 62 -904 72 -909 l 83 -918 l 88 -918 b 190 -831 122 -918 166 -881 b 269 -506 242 -727 269 -612 b 268 -462 269 -492 269 -477 b 266 -449 266 -458 266 -452 b 265 -444 266 -445 266 -444 b 257 -446 264 -444 261 -445 b 132 -545 196 -470 152 -505 b 88 -573 122 -563 104 -573 b 39 -523 63 -573 39 -553 b 63 -476 39 -505 44 -494 b 360 -359 136 -408 235 -369 m 419 -424 b 393 -423 411 -423 406 -423 l 375 -423 l 377 -426 b 379 -439 377 -427 378 -434 b 383 -510 382 -463 383 -487 b 314 -811 383 -609 360 -710 b 266 -893 296 -850 285 -870 b 264 -898 265 -896 264 -898 l 264 -898 b 264 -898 264 -898 264 -898 b 268 -898 264 -898 266 -898 b 273 -898 270 -898 272 -898 b 300 -909 283 -898 291 -900 b 426 -957 340 -941 385 -957 b 476 -949 443 -957 460 -954 b 547 -853 522 -931 547 -893 b 485 -745 547 -816 526 -775 b 397 -707 460 -727 432 -714 b 366 -675 375 -703 366 -692 b 396 -642 366 -657 377 -645 b 530 -557 455 -637 511 -601 b 536 -527 534 -548 536 -537 b 419 -424 536 -480 490 -437 \"},\n\"v30\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 276 1900 b 284 1901 279 1900 281 1901 b 306 1883 291 1901 298 1896 b 367 1686 347 1825 367 1757 b 343 1558 367 1643 359 1600 l 338 1549 l 343 1537 b 367 1411 359 1497 367 1454 b 343 1282 367 1367 359 1324 l 338 1272 l 343 1261 b 367 1135 359 1221 367 1178 b 343 1007 367 1090 359 1047 l 338 996 l 343 985 b 367 859 359 945 367 902 b 343 731 367 814 359 771 l 338 720 l 343 709 b 367 582 359 667 367 626 b 289 362 367 503 340 426 b 239 312 276 345 259 330 b 29 77 152 237 76 152 b -1 18 14 54 2 30 b -19 4 -4 11 -12 4 l -21 4 l -21 133 l -20 260 l -13 262 b 98 299 17 269 62 284 b 111 305 103 302 110 305 b 167 334 123 310 156 327 b 319 595 264 391 319 491 b 313 659 319 616 318 638 b 310 667 311 664 311 667 b 307 663 310 667 308 666 b 240 588 289 637 269 614 b 16 331 141 505 62 413 b -1 294 8 316 1 302 b -19 280 -4 287 -12 280 l -21 280 l -21 408 l -20 537 l -13 538 b 98 576 17 545 62 560 b 111 581 103 578 110 581 b 167 610 123 587 156 603 b 319 871 264 667 319 767 b 313 935 319 892 318 913 b 310 942 311 941 311 942 b 307 939 310 942 308 941 b 240 864 289 913 269 889 b 16 607 141 781 62 689 b -1 570 8 592 1 578 b -19 556 -4 563 -12 556 l -21 556 l -21 684 l -20 813 l -13 814 b 98 852 17 821 62 836 b 111 857 103 855 110 857 b 167 886 123 863 156 880 b 319 1147 264 943 319 1043 b 313 1211 319 1168 318 1189 b 310 1218 311 1217 311 1218 b 307 1215 310 1218 308 1217 b 240 1140 289 1188 269 1165 b 16 884 141 1057 62 966 b -1 846 8 868 1 855 b -19 832 -4 839 -12 832 l -21 832 l -21 960 l -20 1089 l -13 1090 b 98 1128 17 1097 62 1111 b 111 1134 103 1131 110 1134 b 167 1163 123 1139 156 1156 b 319 1424 264 1220 319 1320 b 313 1486 319 1444 318 1465 b 310 1494 311 1493 311 1494 b 307 1492 310 1494 308 1493 b 240 1417 289 1464 269 1442 b 16 1160 141 1333 62 1242 b -1 1121 8 1145 1 1131 b -19 1109 -4 1115 -12 1109 l -21 1109 l -21 1236 l -20 1365 l -13 1367 b 98 1404 17 1374 62 1388 b 111 1410 103 1407 110 1410 b 250 1508 172 1437 215 1467 b 319 1701 296 1564 319 1633 b 270 1859 319 1757 303 1814 b 262 1882 265 1868 262 1875 b 276 1900 262 1890 266 1896 \"},\n\"v31\":{\"x_min\":0,\"x_max\":386.5625,\"ha\":394,\"o\":\"m 0 173 l 0 347 l 193 347 l 386 347 l 386 173 l 386 0 l 193 0 l 0 0 l 0 173 \"},\n\"v33\":{\"x_min\":-423.3125,\"x_max\":421.9375,\"ha\":431,\"o\":\"m -10 276 b -2 277 -8 277 -5 277 b 17 265 5 277 13 273 b 19 163 19 260 19 260 l 19 68 l 39 45 b 277 -95 122 -34 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -54 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 200 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 137 b 421 22 421 37 421 29 b 257 -198 421 -86 347 -188 b 242 -198 251 -198 247 -198 b 20 -105 181 -198 95 -163 l 19 -104 l 19 -183 b 19 -216 19 -195 19 -206 b 12 -273 19 -272 17 -267 b -2 -278 8 -277 2 -278 b -21 -266 -10 -278 -19 -274 b -23 -165 -23 -263 -23 -262 l -23 -69 l -44 -47 b -250 86 -117 23 -183 66 b -295 94 -270 93 -284 94 b -315 91 -302 94 -308 94 b -381 5 -356 81 -381 43 b -355 -56 -381 -16 -372 -40 b -299 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -168 -77 -196 -58 -179 -65 b -151 -122 -156 -90 -151 -105 b -179 -174 -151 -141 -160 -162 b -239 -195 -194 -184 -217 -192 b -257 -197 -245 -195 -250 -197 b -423 -5 -349 -197 -423 -113 b -423 0 -423 -4 -423 -1 b -277 194 -420 97 -362 173 b -247 197 -268 197 -258 197 b -24 104 -185 197 -100 162 l -23 102 l -23 181 b -21 265 -23 260 -23 260 b -10 276 -20 269 -14 274 \"},\n\"v34\":{\"x_min\":0,\"x_max\":622.03125,\"ha\":635,\"o\":\"m 398 417 b 406 419 401 419 404 419 b 427 398 417 419 427 409 b 427 391 427 395 427 392 b 34 -274 424 385 38 -272 b 20 -280 29 -278 25 -280 b 0 -259 9 -280 0 -270 b 0 -252 0 -256 0 -254 b 393 413 2 -247 389 410 b 398 417 394 415 397 416 m 592 417 b 600 419 594 419 597 419 b 622 398 611 419 622 409 b 620 391 622 395 620 392 b 227 -274 617 385 231 -272 b 213 -280 223 -278 219 -280 b 193 -259 202 -280 193 -270 b 194 -252 193 -256 193 -254 b 586 413 196 -247 582 410 b 592 417 588 415 590 416 \"},\n\"v36\":{\"x_min\":-1.359375,\"x_max\":1064.390625,\"ha\":1086,\"o\":\"m 296 692 b 314 694 302 694 307 694 b 386 685 337 694 366 689 b 548 498 480 660 548 580 b 548 481 548 492 548 487 b 455 395 541 426 499 395 b 370 462 420 395 383 417 b 362 496 364 477 362 488 b 377 514 362 509 367 514 b 393 501 386 514 390 510 b 432 474 397 484 413 474 b 470 487 445 474 458 478 b 491 530 484 496 491 510 b 490 544 491 534 491 539 b 333 660 479 606 411 657 l 323 662 l 315 646 b 269 524 285 591 269 556 b 321 431 269 492 287 466 b 349 395 338 413 343 408 b 363 342 359 378 363 362 b 359 312 363 333 362 322 b 285 158 348 266 318 206 b 281 152 283 155 281 152 b 281 152 281 152 281 152 b 287 154 283 152 284 152 b 318 155 298 154 308 155 b 461 98 371 155 419 136 l 464 97 l 483 112 b 503 129 494 120 503 127 b 504 130 503 129 504 129 b 503 138 504 131 503 134 b 500 180 500 152 500 166 b 553 326 500 238 518 288 b 604 366 560 331 592 358 b 649 381 617 376 632 381 b 696 362 665 381 681 374 b 724 302 714 347 724 324 b 695 238 724 278 714 255 b 660 210 691 234 662 212 b 579 148 658 209 582 151 b 579 148 579 148 579 148 b 596 106 579 144 589 119 b 622 77 604 88 609 83 b 657 69 632 72 645 69 b 748 112 688 69 721 84 b 755 123 754 117 755 120 b 755 127 755 124 755 126 b 751 165 752 137 751 151 b 758 219 751 183 754 202 b 894 387 774 290 820 347 b 896 390 896 388 896 388 b 891 398 896 391 895 392 b 622 560 827 477 730 535 b 600 580 605 564 600 569 b 617 596 600 591 607 596 b 628 595 622 596 624 596 b 1057 248 846 552 1020 412 b 1064 191 1061 229 1064 209 b 922 0 1064 94 1005 9 b 902 -1 916 -1 909 -1 b 774 76 847 -1 800 26 b 769 83 770 81 770 83 b 769 81 769 83 769 83 b 627 -1 733 29 677 -1 b 548 27 597 -1 570 8 b 515 88 537 37 525 61 l 513 95 l 510 93 l 453 45 b 390 0 396 0 396 0 b 390 0 390 0 390 0 b 374 15 381 0 377 4 b 268 105 359 69 314 105 b 250 104 262 105 257 105 l 243 102 l 234 90 b 155 1 201 49 159 2 b 147 -1 152 0 149 -1 b 130 15 138 -1 130 6 b 132 20 130 18 132 19 b 136 31 133 22 134 27 b 220 131 149 74 178 109 b 231 137 225 134 230 136 b 302 278 280 202 302 244 b 265 335 302 299 295 309 b 209 442 234 363 213 402 b 209 455 209 446 209 451 b 279 648 209 502 232 564 l 285 659 l 283 659 b 176 627 238 653 210 645 b 57 477 111 594 66 538 b 55 459 55 471 55 464 b 72 409 55 437 61 415 b 93 403 78 405 87 403 b 152 467 123 403 151 431 b 168 488 153 483 157 488 b 185 462 181 488 185 483 l 185 460 b 137 344 183 409 168 369 b 78 322 119 328 98 322 b 13 360 50 322 25 335 b -1 426 4 380 -1 402 b 89 610 -1 488 32 559 b 296 692 147 659 210 685 m 926 348 b 921 353 924 351 922 353 b 914 348 920 353 918 351 b 823 167 857 306 823 237 b 828 124 823 154 826 138 b 890 31 837 79 862 40 b 896 31 892 31 894 31 b 956 104 916 31 940 59 b 970 191 965 129 970 159 b 966 241 970 208 969 224 b 926 348 959 277 945 313 m 627 326 b 619 326 624 326 622 326 b 598 316 611 326 604 323 b 568 215 579 288 568 255 b 568 208 568 213 568 210 b 571 183 570 195 570 184 l 571 183 b 594 201 571 183 582 191 l 634 231 b 660 259 653 247 656 248 b 664 278 662 266 664 272 b 627 326 664 299 649 320 \"},\n\"v38\":{\"x_min\":-1.359375,\"x_max\":651.96875,\"ha\":665,\"o\":\"m 389 644 b 405 645 394 645 400 645 b 504 566 450 645 492 613 b 507 541 506 557 507 549 b 480 471 507 514 498 489 l 477 467 l 483 470 b 609 591 539 485 586 531 b 613 601 611 595 613 599 b 631 609 619 607 624 609 b 651 588 641 609 651 602 b 200 -946 651 584 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 537 313 478 300 508 b 389 644 300 585 334 635 \"},\n\"v39\":{\"x_min\":-171.5,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"v3b\":{\"x_min\":0,\"x_max\":484.5625,\"ha\":494,\"o\":\"m 228 245 b 239 247 234 247 239 247 b 243 247 240 247 242 247 b 303 238 257 247 287 242 b 484 -2 417 208 484 104 b 412 -177 484 -65 461 -127 b 243 -248 363 -226 303 -248 b 6 -63 138 -248 36 -180 b 0 -1 1 -41 0 -20 b 228 245 0 127 98 240 m 255 181 b 240 183 247 183 245 183 b 232 181 238 183 235 183 b 142 152 200 180 168 170 l 138 149 l 190 97 l 242 44 l 294 97 l 345 149 l 340 152 b 255 181 315 169 284 180 m 147 -54 l 197 -1 l 147 51 l 95 104 l 91 99 b 62 -1 72 70 62 34 b 66 -43 62 -15 63 -29 b 91 -101 72 -63 80 -84 l 95 -106 l 147 -54 m 393 99 b 389 104 390 102 389 104 b 337 51 389 104 366 80 l 285 -1 l 337 -54 l 389 -106 l 393 -101 b 421 -1 412 -72 421 -36 b 393 99 421 34 412 69 m 294 -98 b 242 -45 265 -69 242 -45 b 190 -98 242 -45 219 -69 l 138 -151 l 142 -154 b 242 -184 172 -174 206 -184 b 340 -154 276 -184 311 -174 l 345 -151 l 294 -98 \"},\n\"v3c\":{\"x_min\":0,\"x_max\":450.53125,\"ha\":460,\"o\":\"m 189 302 b 204 303 193 302 198 303 b 303 224 250 303 292 270 b 306 199 304 216 306 208 b 279 129 306 173 296 147 l 276 126 l 281 127 b 408 249 337 142 385 190 b 412 259 409 254 412 258 b 430 267 417 265 423 267 b 450 247 441 267 450 259 b 200 -605 450 242 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 194 111 136 99 165 b 189 302 99 244 133 292 \"},\n\"v3e\":{\"x_min\":0,\"x_max\":406.96875,\"ha\":415,\"o\":\"m 21 183 b 28 183 24 183 25 183 b 42 181 34 183 39 183 b 127 108 47 179 47 179 b 202 41 168 72 202 41 b 279 108 204 41 238 72 b 357 177 321 145 356 176 b 375 183 363 181 370 183 b 406 151 392 183 406 169 b 404 137 406 147 405 141 b 322 62 401 131 398 129 b 251 0 284 27 251 0 b 322 -63 251 -1 284 -29 b 404 -138 398 -130 401 -133 b 406 -152 405 -142 406 -148 b 375 -184 406 -170 392 -184 b 357 -179 370 -184 363 -183 b 279 -109 356 -177 321 -147 b 202 -43 238 -73 204 -43 b 127 -109 202 -43 168 -73 b 49 -179 85 -147 50 -177 b 31 -184 43 -183 36 -184 b 0 -152 13 -184 0 -170 b 2 -138 0 -148 0 -142 b 83 -63 5 -133 8 -130 b 155 0 122 -29 155 -1 b 83 62 155 0 122 27 b 8 129 43 97 10 127 b 0 151 2 136 0 144 b 21 183 0 165 8 177 \"},\n\"v3f\":{\"x_min\":-24.5,\"x_max\":317.140625,\"ha\":324,\"o\":\"m -24 -147 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 58 -123 6 -43 31 -86 b 196 -278 93 -173 134 -219 b 317 -570 274 -356 317 -460 b 294 -713 317 -617 308 -666 l 289 -724 l 294 -735 b 317 -873 308 -780 317 -827 b 235 -1132 317 -963 288 -1054 b 209 -1165 228 -1140 224 -1146 b 189 -1177 204 -1172 196 -1177 b 171 -1164 182 -1177 175 -1172 b 168 -1154 170 -1161 168 -1159 b 181 -1132 168 -1149 172 -1142 b 269 -891 238 -1064 269 -975 b 269 -881 269 -886 269 -884 b 262 -814 269 -857 265 -827 b 258 -800 261 -811 259 -806 b 142 -628 240 -731 198 -667 b -8 -589 112 -606 47 -589 b -20 -589 -13 -589 -19 -589 l -24 -589 l -24 -449 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 58 -424 6 -345 31 -388 b 194 -580 93 -476 136 -523 b 259 -660 221 -606 245 -635 b 261 -663 259 -662 261 -663 b 264 -656 262 -663 262 -660 b 269 -587 268 -632 269 -610 b 264 -521 269 -566 268 -544 b 262 -512 264 -517 262 -513 b 258 -498 261 -509 259 -503 b 142 -326 240 -428 198 -365 b -8 -287 112 -303 47 -288 b -20 -287 -13 -287 -19 -287 l -24 -287 l -24 -147 \"},\n\"v40\":{\"x_min\":-1.359375,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 \"},\n\"v41\":{\"x_min\":-1.359375,\"x_max\":556.6875,\"ha\":568,\"o\":\"m 294 322 b 318 323 299 322 308 323 b 360 320 334 323 352 322 b 526 217 430 310 490 273 b 543 166 537 202 543 184 b 447 70 543 117 503 70 b 445 70 447 70 446 70 b 359 159 394 72 359 113 b 368 201 359 173 362 187 b 442 245 382 229 412 245 b 455 244 446 245 451 245 b 460 244 458 244 460 244 b 460 244 460 244 460 244 b 454 248 460 244 458 245 b 325 291 417 276 372 291 b 285 287 313 291 299 290 b 144 -2 183 269 144 190 b 281 -290 144 -208 179 -280 b 304 -291 289 -291 298 -291 b 524 -105 412 -291 506 -212 b 541 -84 526 -88 530 -84 b 556 -101 551 -84 556 -90 b 549 -138 556 -111 553 -122 b 334 -322 521 -237 435 -310 b 302 -324 323 -323 313 -324 b 13 -101 172 -324 54 -234 b -1 -1 4 -68 -1 -34 b 294 322 -1 161 121 303 \"},\n\"v42\":{\"x_min\":-348.4375,\"x_max\":24.5,\"ha\":25,\"o\":\"m -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 \"},\n\"v43\":{\"x_min\":-442.359375,\"x_max\":441,\"ha\":450,\"o\":\"m -31 487 b -1 488 -21 488 -10 488 b 434 104 216 488 397 330 b 441 27 438 79 441 47 b 439 12 441 20 439 15 b 419 0 435 4 427 0 b 404 5 413 0 408 1 b 398 30 400 11 398 13 b 0 351 390 213 213 351 b -59 348 -20 351 -39 349 b -400 30 -251 324 -393 191 b -405 5 -400 13 -401 11 b -420 0 -409 1 -415 0 b -441 12 -428 0 -436 4 b -442 27 -441 15 -442 20 b -435 104 -442 47 -439 79 b -31 487 -401 316 -235 474 m -13 131 b -1 133 -9 133 -5 133 b 51 105 19 133 39 123 b 61 70 58 95 61 83 b 51 34 61 58 58 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -57 38 -62 54 b -13 131 -62 98 -44 124 \"},\n\"v44\":{\"x_min\":-21.78125,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"v45\":{\"x_min\":-402.890625,\"x_max\":401.53125,\"ha\":410,\"o\":\"m -10 273 b -4 274 -9 273 -6 274 b 16 262 4 274 12 269 b 17 158 17 259 17 259 l 17 56 l 62 112 b 117 174 110 172 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b 21 -6 27 0 24 -2 l 17 -12 l 17 -147 b 17 -210 17 -173 17 -194 b 10 -292 17 -297 16 -287 b -2 -299 6 -297 2 -299 b -21 -287 -10 -299 -19 -295 b -24 -174 -23 -284 -23 -284 l -24 -63 l -66 -117 b -121 -176 -110 -170 -114 -176 b -125 -176 -122 -176 -123 -176 b -296 -12 -134 -174 -125 -184 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 170 -398 -43 -231 165 b -212 174 -221 173 -216 174 b -202 173 -208 174 -205 174 b -39 11 -200 172 -151 122 l -28 -1 l -25 1 l -24 4 l -24 130 b -23 260 -24 256 -24 258 b -10 273 -20 266 -16 270 \"},\n\"v46\":{\"x_min\":0,\"x_max\":627.46875,\"ha\":640,\"o\":\"m 306 190 b 314 191 308 191 311 191 b 326 184 318 191 322 190 l 336 173 b 510 52 377 127 442 80 b 515 49 513 51 515 49 b 611 16 537 40 579 24 b 627 0 624 13 627 9 b 607 -18 627 -11 624 -13 b 330 -181 490 -49 389 -109 b 314 -192 323 -190 319 -192 b 306 -191 311 -192 308 -192 b 294 -177 302 -188 302 -188 b 257 -140 287 -170 265 -148 b 19 -18 193 -84 114 -44 b 0 0 2 -13 0 -11 b 16 16 0 9 2 13 b 110 49 47 24 89 40 b 117 52 111 49 114 51 b 145 65 126 56 130 58 b 281 163 200 93 245 124 b 300 186 288 170 291 174 b 306 190 300 187 303 188 m 317 137 b 313 142 315 141 314 142 b 308 137 313 142 311 141 b 161 4 276 84 220 33 b 155 0 159 1 155 0 b 163 -4 155 0 159 -2 b 308 -138 220 -34 276 -84 b 313 -142 311 -141 313 -142 b 317 -138 314 -142 315 -141 b 464 -4 351 -84 406 -34 b 470 0 468 -2 470 0 b 464 4 470 0 468 1 b 317 137 406 33 351 84 \"},\n\"v47\":{\"x_min\":-24.5,\"x_max\":315.78125,\"ha\":322,\"o\":\"m -24 -145 l -24 -5 l -20 -5 b 1 -26 -10 -5 -6 -9 b 175 -241 31 -86 96 -166 b 314 -548 259 -323 304 -420 b 315 -589 315 -555 315 -571 b 314 -630 315 -606 315 -623 b 298 -730 311 -664 306 -699 l 295 -742 l 296 -748 b 314 -850 304 -778 311 -813 b 315 -892 315 -857 315 -874 b 314 -932 315 -909 315 -925 b 298 -1032 311 -967 306 -1002 l 295 -1045 l 296 -1050 b 314 -1153 304 -1081 311 -1115 b 315 -1193 315 -1160 315 -1177 b 314 -1235 315 -1211 315 -1228 b 217 -1526 306 -1338 270 -1444 b 201 -1533 213 -1532 208 -1533 b 182 -1522 193 -1533 185 -1529 b 179 -1514 181 -1518 179 -1517 b 189 -1489 179 -1508 182 -1501 b 266 -1217 240 -1403 266 -1308 b 262 -1156 266 -1196 265 -1177 b 110 -907 247 -1043 190 -950 b 0 -889 87 -895 50 -889 l -1 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 1 -631 -10 -610 -6 -614 b 175 -846 31 -691 96 -771 b 259 -956 213 -884 236 -914 b 265 -966 262 -961 264 -966 b 265 -966 265 -966 265 -966 b 265 -953 265 -964 265 -959 b 266 -920 266 -943 266 -932 b 262 -853 266 -898 265 -873 b 110 -605 247 -741 190 -648 b 0 -587 87 -592 50 -587 l -1 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 1 -328 -10 -308 -6 -312 b 175 -544 31 -388 96 -469 b 259 -655 213 -581 236 -612 b 265 -663 262 -659 264 -663 b 265 -663 265 -663 265 -663 b 265 -650 265 -663 265 -657 b 266 -617 266 -641 266 -630 b 262 -551 266 -595 265 -570 b 110 -303 247 -438 190 -345 b 0 -284 87 -290 50 -284 l -1 -284 l -24 -284 l -24 -145 \"},\n\"v49\":{\"x_min\":0,\"x_max\":630.203125,\"ha\":643,\"o\":\"m 308 204 b 314 205 310 205 313 205 b 326 201 319 205 323 204 b 355 154 328 199 338 180 b 401 83 362 142 392 95 l 409 72 b 431 41 412 66 424 49 b 619 -174 498 -51 570 -134 b 630 -192 626 -180 630 -186 b 626 -202 630 -195 628 -199 b 616 -206 623 -205 620 -206 b 552 -188 608 -206 592 -202 b 310 -155 488 -169 392 -155 b 268 -156 295 -155 281 -155 b 77 -188 197 -161 126 -173 b 13 -206 35 -202 20 -206 b 9 -206 12 -206 10 -206 b 0 -191 2 -202 0 -197 b 8 -176 0 -186 2 -180 b 204 49 58 -136 138 -43 l 220 72 l 227 83 b 295 188 245 108 281 166 b 308 204 299 197 304 202 m 315 147 b 314 147 315 147 314 147 b 314 147 314 147 314 147 b 306 129 314 145 310 138 l 296 105 b 281 72 292 97 284 77 l 274 56 b 181 -123 247 -4 212 -72 l 174 -134 l 176 -133 b 314 -123 215 -127 272 -123 b 451 -133 356 -123 413 -127 l 454 -134 l 449 -123 b 353 56 417 -72 381 -4 l 347 72 b 332 105 344 77 336 97 l 322 129 b 315 147 318 138 315 145 \"},\n\"v4a\":{\"x_min\":70.78125,\"x_max\":378.390625,\"ha\":315,\"o\":\"m 246 373 b 254 373 249 373 251 373 b 372 324 303 373 360 351 b 378 302 377 317 378 309 b 338 251 378 278 362 255 b 328 249 334 249 332 249 b 283 294 303 249 283 270 b 288 315 283 301 284 308 b 289 319 289 317 289 319 b 289 319 289 319 289 319 b 283 320 289 320 287 320 b 270 322 279 322 274 322 b 206 288 242 322 215 308 b 206 283 206 287 206 285 b 257 223 206 267 230 238 b 284 206 272 213 277 210 b 351 90 328 173 351 130 b 340 47 351 74 348 59 b 205 -30 314 -2 264 -30 b 182 -29 198 -30 190 -30 b 84 15 147 -24 103 -5 b 70 48 74 24 70 36 b 108 99 70 70 85 94 b 121 102 112 101 117 102 b 167 56 147 102 167 80 b 159 31 167 48 164 40 l 156 26 l 157 26 b 190 20 167 22 178 20 b 220 26 201 20 212 22 b 258 65 243 34 258 51 b 257 70 258 66 258 69 b 204 126 249 94 234 109 b 114 258 148 158 114 209 b 125 302 114 273 118 288 b 246 373 147 342 193 370 \"},\n\"v4b\":{\"x_min\":0,\"x_max\":503.609375,\"ha\":514,\"o\":\"m 274 430 b 277 430 276 430 277 430 b 310 394 296 430 310 415 b 308 383 310 391 308 387 b 306 367 307 381 307 374 b 236 120 298 305 272 210 b 40 -273 189 -5 125 -134 b 20 -287 35 -283 27 -287 b 5 -281 14 -287 9 -285 b 0 -267 1 -277 0 -273 b 9 -242 0 -262 2 -255 b 246 395 137 -12 232 242 b 274 430 249 416 257 427 m 468 430 b 472 430 469 430 470 430 b 503 394 490 430 503 415 b 502 383 503 391 503 387 b 499 367 502 381 500 374 b 431 120 491 305 465 210 b 234 -273 382 -5 318 -134 b 213 -287 228 -283 220 -287 b 198 -281 208 -287 202 -285 b 193 -267 194 -277 193 -273 b 202 -242 193 -262 196 -255 b 439 395 330 -12 426 242 b 468 430 442 416 451 427 \"},\n\"v4d\":{\"x_min\":-311.6875,\"x_max\":310.328125,\"ha\":317,\"o\":\"m -9 388 b -2 390 -8 390 -5 390 b 5 388 1 390 4 390 b 19 378 10 387 16 383 b 23 333 23 371 23 371 b 24 298 23 299 24 298 b 81 276 34 298 65 285 b 213 91 145 240 190 177 b 224 24 217 76 224 36 b 257 24 224 24 235 24 b 299 19 292 24 292 24 b 310 -1 306 15 310 6 b 299 -23 310 -11 306 -19 b 257 -27 292 -27 292 -27 b 224 -29 235 -27 224 -29 b 213 -95 224 -40 217 -80 b 81 -280 190 -181 145 -244 b 24 -301 65 -290 34 -301 b 23 -335 24 -301 23 -303 l 23 -340 b 17 -381 23 -374 23 -374 b -1 -391 13 -388 5 -391 b -21 -381 -9 -391 -17 -388 b -27 -340 -27 -374 -27 -374 l -27 -335 b -28 -301 -27 -303 -27 -301 b -85 -280 -38 -301 -69 -290 b -217 -95 -149 -244 -194 -181 b -228 -29 -221 -80 -228 -40 b -259 -27 -228 -29 -238 -27 b -300 -23 -294 -27 -294 -27 b -311 -2 -307 -19 -311 -11 b -294 23 -311 8 -304 19 b -259 24 -291 23 -284 24 b -228 24 -239 24 -228 24 b -217 91 -228 36 -221 76 b -85 276 -194 177 -149 240 b -28 298 -69 285 -38 298 b -27 333 -27 298 -27 299 b -27 371 -27 362 -27 369 b -9 388 -24 378 -17 385 m -27 136 b -28 247 -27 197 -28 247 b -61 216 -31 247 -53 226 b -123 33 -95 172 -121 98 l -125 24 l -76 24 l -27 24 l -27 136 m 29 242 b 24 247 27 245 24 247 b 23 136 24 247 23 197 l 23 24 l 72 24 l 121 24 l 119 33 b 29 242 115 116 77 206 m -27 -140 l -27 -27 l -76 -27 l -125 -27 l -123 -36 b -61 -220 -121 -102 -95 -176 b -28 -251 -53 -230 -31 -251 b -27 -140 -28 -251 -27 -201 m 119 -36 l 121 -27 l 72 -27 l 23 -27 l 23 -140 b 24 -251 23 -201 24 -251 b 57 -220 27 -251 49 -230 b 119 -36 91 -176 117 -102 \"},\n\"v4e\":{\"x_min\":0,\"x_max\":239.5625,\"ha\":244,\"o\":\"m 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -106 l 239 -448 l 238 -451 b 219 -463 234 -459 225 -463 b 198 -451 210 -463 202 -459 l 197 -448 l 197 -324 b 197 -201 197 -248 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 \"},\n\"v51\":{\"x_min\":-1.359375,\"x_max\":455.96875,\"ha\":465,\"o\":\"m 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 \"},\n\"v52\":{\"x_min\":-10.890625,\"x_max\":298.078125,\"ha\":294,\"o\":\"m 138 473 b 142 474 140 473 141 474 b 164 459 148 474 153 470 b 191 402 183 442 191 423 b 181 353 191 388 187 371 b 178 349 179 352 178 349 b 179 348 178 348 179 348 b 185 349 181 348 182 348 b 255 376 210 355 234 363 b 272 381 264 381 266 381 b 298 355 287 381 298 370 b 288 330 298 348 298 345 b 171 34 238 254 194 141 b 166 13 168 16 168 16 b 144 1 161 5 152 1 b 121 15 134 1 125 5 b 115 33 119 18 117 24 b 0 330 91 145 49 252 b -10 355 -9 345 -10 348 b 13 381 -10 371 0 381 b 31 376 19 381 25 380 b 132 345 61 358 103 345 l 136 345 l 137 355 b 145 378 138 359 142 370 b 152 415 149 394 152 405 b 137 452 152 427 148 438 b 133 464 134 458 133 460 b 138 473 133 467 134 470 \"},\n\"v53\":{\"x_min\":0,\"x_max\":902.421875,\"ha\":921,\"o\":\"m 17 240 b 24 241 19 241 21 241 b 32 240 28 241 31 241 b 46 229 38 238 43 234 b 50 88 50 223 50 237 b 50 -1 50 63 50 34 b 50 -90 50 -36 50 -65 b 46 -231 50 -238 50 -224 b 25 -242 42 -238 34 -242 b 0 -224 14 -242 4 -235 b 0 2 0 -222 0 -108 b 0 223 0 112 0 220 b 17 240 2 230 9 237 m 110 240 b 118 241 111 241 114 241 b 126 240 121 241 123 241 b 142 223 133 237 140 230 b 144 123 144 220 144 205 b 144 29 144 45 144 29 b 144 29 144 29 144 29 b 393 183 166 106 264 167 b 450 186 412 184 431 186 b 756 29 600 186 732 120 b 756 29 756 29 756 29 b 758 123 758 29 758 45 b 760 227 758 226 758 223 b 784 241 766 237 774 241 b 804 229 792 241 800 237 b 809 88 808 223 809 237 l 809 -1 l 809 -90 b 804 -231 809 -238 808 -224 b 784 -242 800 -238 792 -242 b 762 -231 775 -242 766 -238 b 758 -124 756 -224 758 -231 b 756 -30 758 -47 758 -30 b 756 -30 756 -30 756 -30 b 509 -184 736 -108 637 -169 b 450 -187 488 -187 469 -187 b 144 -30 300 -187 168 -122 b 144 -30 144 -30 144 -30 b 144 -124 144 -30 144 -47 b 140 -231 144 -231 144 -224 b 118 -242 134 -238 126 -242 b 92 -224 107 -242 96 -235 b 92 2 92 -222 92 -108 b 92 223 92 112 92 220 b 110 240 95 230 102 237 m 432 161 b 413 162 426 162 420 162 b 313 41 351 162 313 109 b 347 -73 313 5 323 -34 b 487 -163 385 -133 439 -163 b 578 -97 526 -163 562 -142 b 588 -43 585 -80 588 -62 b 432 161 588 47 518 147 m 868 240 b 876 241 869 241 872 241 b 884 240 879 241 882 241 b 898 229 890 238 894 234 b 902 88 902 223 902 237 l 902 -1 l 902 -90 b 898 -231 902 -238 902 -224 b 876 -242 892 -238 884 -242 b 852 -224 865 -242 854 -235 b 850 2 850 -222 850 -108 b 852 223 850 112 850 220 b 868 240 853 230 860 237 \"},\n\"v54\":{\"x_min\":-24.5,\"x_max\":317.140625,\"ha\":324,\"o\":\"m -24 -161 l -24 -5 l -20 -5 b 0 -24 -9 -5 -2 -12 b 171 -315 21 -124 84 -233 b 317 -660 268 -406 317 -531 b 187 -1014 317 -782 274 -909 b 161 -1034 172 -1034 171 -1034 b 141 -1013 149 -1034 141 -1025 b 152 -991 141 -1004 142 -1002 b 266 -682 228 -899 266 -788 b 174 -430 266 -588 236 -498 b -23 -317 136 -388 66 -348 b -24 -161 -23 -316 -24 -285 \"},\n\"v55\":{\"x_min\":0,\"x_max\":551.25,\"ha\":563,\"o\":\"m 289 644 b 304 645 294 645 299 645 b 404 566 349 645 392 613 b 406 541 405 557 406 549 b 379 471 406 514 397 489 l 377 467 l 382 470 b 509 591 438 485 485 531 b 513 601 510 595 513 599 b 530 609 518 607 524 609 b 551 588 540 609 551 602 b 200 -605 551 584 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 195 112 136 99 165 b 118 256 99 217 106 238 b 204 303 138 287 171 303 b 292 249 238 303 273 285 b 306 199 302 234 306 217 b 279 129 306 173 296 148 l 276 126 l 281 127 b 408 248 336 142 385 190 b 473 470 409 254 473 469 b 473 470 473 470 473 470 b 465 464 473 470 469 467 b 341 421 428 435 383 421 b 236 458 303 421 266 433 b 200 537 212 478 200 508 b 289 644 200 585 234 635 \"},\n\"v58\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 259 1553 b 265 1553 261 1553 264 1553 b 288 1540 272 1553 277 1550 b 367 1351 340 1493 367 1424 b 336 1221 367 1308 357 1263 l 332 1211 l 333 1208 b 367 1077 356 1170 367 1124 b 336 945 367 1032 357 986 l 332 935 l 333 932 b 367 800 356 893 367 848 b 336 669 367 756 357 710 l 332 659 l 333 656 b 367 523 356 617 367 571 b 345 412 367 485 360 446 b 231 273 322 356 284 310 b -1 19 121 195 27 93 b -17 4 -4 11 -10 5 l -21 4 l -21 134 l -21 265 l -17 265 b 133 291 20 265 96 278 b 318 537 245 328 318 433 b 307 603 318 559 315 582 b 303 614 304 612 304 614 b 298 609 302 614 300 613 b 231 549 281 589 258 567 b -1 295 121 471 27 369 b -17 280 -4 287 -10 281 l -21 280 l -21 410 l -21 541 l -17 541 b 133 567 20 541 96 555 b 318 813 245 605 318 709 b 307 880 318 835 315 859 b 303 891 304 888 304 891 b 298 885 302 891 300 888 b 231 825 281 866 258 843 b -1 571 121 748 27 645 b -17 556 -4 563 -10 557 l -21 556 l -21 687 l -21 817 l -17 817 b 133 843 20 817 96 830 b 318 1089 245 881 318 985 b 307 1156 318 1111 315 1134 b 303 1167 304 1164 304 1167 b 298 1161 302 1167 300 1164 b 231 1102 281 1140 258 1120 b -1 848 121 1024 27 921 b -17 832 -4 839 -10 834 l -21 832 l -21 963 l -21 1093 l -17 1093 b 114 1113 12 1093 78 1103 b 313 1314 215 1142 289 1218 b 318 1364 317 1331 318 1347 b 255 1511 318 1422 295 1478 b 243 1532 247 1519 243 1525 b 259 1553 243 1540 250 1550 \"},\n\"v59\":{\"x_min\":0,\"x_max\":464.140625,\"ha\":474,\"o\":\"m 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 \"},\n\"v5a\":{\"x_min\":-171.5,\"x_max\":170.140625,\"ha\":174,\"o\":\"m -6 566 b 0 567 -5 567 -2 567 b 14 556 6 567 12 563 b 92 285 14 555 50 433 b 170 13 166 33 170 19 b 168 13 170 13 170 13 b 161 1 168 8 167 4 l 159 0 l 122 0 l 84 0 l 81 1 b 21 195 76 5 78 -5 b -32 381 -8 297 -32 381 b -87 197 -32 381 -57 298 b -141 8 -115 94 -140 9 b -155 0 -142 2 -149 0 b -171 15 -163 0 -171 5 b -14 556 -171 18 -24 528 b -6 566 -14 560 -10 564 \"},\n\"v5b\":{\"x_min\":-441,\"x_max\":439.640625,\"ha\":449,\"o\":\"m -428 -2 b -421 0 -427 -1 -424 0 b -406 -6 -416 0 -409 -2 b -400 -31 -401 -12 -400 -15 b -1 -352 -392 -215 -215 -352 b 58 -349 19 -352 38 -351 b 398 -31 250 -326 392 -192 b 404 -6 398 -15 400 -12 b 419 -1 408 -2 413 -1 b 439 -13 427 -1 435 -5 b 439 -29 439 -16 439 -22 b 434 -105 439 -48 438 -80 b 0 -489 397 -333 213 -489 b -68 -484 -23 -489 -44 -488 b -441 -36 -280 -452 -436 -263 b -441 -30 -441 -34 -441 -31 b -428 -2 -441 -11 -439 -5 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -57 -102 -62 -87 b -13 -9 -62 -44 -44 -16 \"},\n\"v5c\":{\"x_min\":0,\"x_max\":447.8125,\"ha\":457,\"o\":\"m 0 -87 l 0 0 l 223 0 l 447 0 l 447 -87 l 447 -174 l 223 -174 l 0 -174 l 0 -87 \"},\n\"v5d\":{\"x_min\":-1.359375,\"x_max\":592.078125,\"ha\":604,\"o\":\"m 280 692 b 295 694 283 692 289 694 b 310 692 300 694 307 692 b 357 630 340 684 357 657 b 336 580 357 612 351 594 b 311 538 321 566 311 549 b 352 492 311 512 330 492 b 366 495 357 492 362 492 b 397 553 390 503 397 517 b 415 603 397 576 402 591 b 460 623 427 617 443 623 b 509 599 479 623 498 614 b 522 559 518 587 522 573 b 494 506 522 538 513 519 b 451 495 481 498 473 496 b 415 488 432 495 426 494 b 394 449 404 483 394 464 b 394 448 394 448 394 448 l 394 440 l 397 433 b 428 409 404 420 413 413 b 438 408 431 408 435 408 b 479 431 450 408 462 415 b 528 455 495 448 510 455 b 548 452 534 455 541 453 b 592 391 577 442 592 416 b 549 331 592 365 577 340 b 528 327 541 328 534 327 b 479 351 510 327 495 335 b 438 374 464 367 450 374 b 417 369 431 374 424 373 b 394 333 402 360 394 348 b 400 312 394 326 396 319 b 451 287 408 294 420 288 b 513 258 484 285 499 278 b 522 223 519 247 522 234 b 461 159 522 190 496 159 b 449 161 457 159 453 159 b 397 229 416 167 397 191 b 366 288 397 265 390 278 b 352 290 362 290 357 290 b 315 262 336 290 321 280 b 311 245 313 256 311 251 b 334 204 311 233 318 220 b 355 170 348 190 351 184 b 357 152 356 166 357 159 b 355 136 357 147 356 140 b 295 88 345 104 321 88 b 232 152 264 88 232 112 b 255 204 232 174 238 186 b 279 244 273 222 279 231 l 279 245 b 238 290 279 270 259 290 b 224 288 234 290 228 290 b 193 229 200 278 193 265 b 141 161 193 191 174 167 b 129 159 137 159 133 159 b 68 223 93 159 68 190 b 77 258 68 234 70 247 b 138 287 91 278 106 285 b 185 302 166 287 175 291 b 196 333 193 312 196 323 b 174 369 196 347 187 360 b 152 374 166 373 159 374 b 111 351 140 374 126 367 b 62 327 95 335 80 327 b 51 328 58 327 54 327 b -1 391 16 334 -1 363 b 53 455 -1 420 17 449 b 62 455 57 455 59 455 b 111 431 80 455 95 448 b 152 408 127 415 140 408 b 161 409 155 408 159 408 b 193 433 176 413 186 420 l 196 440 l 196 448 b 196 451 196 449 196 449 b 190 471 196 459 194 463 b 137 495 182 489 167 495 l 134 495 l 134 495 b 68 560 95 495 68 521 b 129 623 68 596 95 623 b 144 621 134 623 138 623 b 193 553 175 614 193 589 b 224 495 193 517 200 503 b 238 492 228 492 234 492 b 279 538 259 492 279 512 b 254 580 279 549 269 566 b 232 630 239 594 232 612 b 280 692 232 657 250 684 m 307 456 b 295 458 303 458 299 458 b 230 391 258 458 230 426 b 236 360 230 381 231 371 b 295 324 249 337 272 324 b 353 360 318 324 341 337 b 360 391 357 370 360 381 b 307 456 360 421 340 451 \"},\n\"v60\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m -367 173 b -362 174 -366 174 -364 174 b -351 173 -357 174 -353 173 b -262 86 -348 172 -328 151 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 72 86 -13 172 6 151 b 157 0 119 37 157 0 b 227 84 159 0 189 37 b 303 174 298 173 296 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 144 -86 213 0 182 -38 b 68 -174 73 -174 74 -173 b 62 -176 66 -176 65 -176 b 53 -174 59 -176 55 -174 b -35 -87 50 -173 29 -152 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -367 173 -375 169 -372 172 \"},\n\"v62\":{\"x_min\":46.28125,\"x_max\":669.671875,\"ha\":563,\"o\":\"m 183 376 b 189 376 185 376 187 376 b 212 374 197 376 208 376 b 265 337 234 369 253 355 b 274 317 268 331 273 320 b 274 316 274 317 274 316 b 280 323 276 316 276 319 b 311 358 288 337 299 348 b 319 366 315 360 318 365 b 356 376 326 373 340 376 b 382 371 364 376 374 374 b 428 337 400 366 417 352 b 436 317 431 331 436 320 b 438 316 436 317 436 316 b 442 323 438 316 439 319 b 475 358 451 337 462 348 b 483 366 477 360 481 365 b 518 376 488 373 503 376 b 544 373 528 376 536 376 b 604 285 579 360 604 326 b 597 249 604 273 601 258 b 543 63 596 247 544 70 b 541 54 543 61 541 55 b 540 44 540 51 540 47 b 552 23 540 33 545 23 b 552 23 552 23 552 23 b 647 126 586 29 627 72 b 658 138 651 136 653 138 b 660 138 660 138 660 138 b 669 129 666 137 669 136 b 654 88 669 122 665 109 b 562 -12 631 43 602 9 l 549 -19 b 521 -27 540 -24 530 -27 b 447 30 490 -27 458 -4 b 443 58 445 38 443 48 b 450 93 443 72 446 84 b 504 278 453 97 504 272 b 507 288 506 283 506 287 b 509 298 507 292 509 295 b 491 326 509 310 502 320 b 487 327 490 327 488 327 b 479 324 484 327 483 326 b 441 270 462 316 443 288 b 435 249 441 265 436 254 b 398 127 434 248 419 195 b 362 4 379 61 362 5 b 328 -1 359 -1 362 -1 b 314 -1 323 -1 319 -1 b 302 -1 310 -1 306 -1 b 266 4 266 -1 269 -1 b 265 6 265 5 265 5 b 303 144 265 13 272 34 b 343 278 325 216 343 276 b 344 288 343 281 344 285 b 345 298 345 291 345 295 b 330 326 345 310 340 320 b 323 327 328 327 325 327 b 317 324 322 327 321 326 b 279 270 300 316 281 288 b 273 249 279 265 274 254 b 236 127 272 248 255 195 b 200 4 216 61 200 5 b 164 -1 197 -1 198 -1 b 151 -1 161 -1 156 -1 b 140 -1 147 -1 142 -1 b 103 4 104 -1 106 -1 b 103 6 103 5 103 5 b 141 144 103 13 108 34 b 181 278 161 216 179 276 b 182 288 181 281 181 285 b 183 298 182 291 183 295 b 168 324 183 310 178 320 b 160 327 166 326 163 327 b 141 320 156 327 151 324 b 69 230 112 305 85 272 b 57 215 65 217 62 215 b 55 215 57 215 55 215 b 46 224 49 215 46 217 b 59 260 46 231 50 242 b 151 363 81 306 112 341 b 161 369 155 365 160 367 b 183 376 166 371 174 374 \"},\n\"v68\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 155 11 -5 172 43 123 l 166 -1 l 168 1 l 170 4 l 170 130 b 171 260 170 256 170 258 b 191 274 175 269 183 274 b 205 267 196 274 201 272 b 212 158 212 262 210 273 l 212 56 l 257 112 b 311 173 304 172 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 216 -6 221 -1 219 -2 l 212 -12 l 212 -147 b 212 -210 212 -173 212 -194 b 205 -292 212 -297 210 -287 b 191 -299 201 -297 196 -299 b 172 -287 183 -299 175 -295 b 170 -174 171 -284 171 -284 l 170 -63 l 127 -117 b 73 -176 84 -170 80 -176 b 68 -176 72 -176 70 -176 b -27 -87 59 -174 65 -180 b -114 0 -74 -38 -112 0 b -182 -86 -114 0 -145 -38 b -258 -174 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 \"},\n\"v6c\":{\"x_min\":-1.359375,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 78 233 b 87 233 81 233 84 233 b 187 140 132 233 174 195 b 193 102 190 127 193 115 b 43 -113 193 22 136 -62 b 27 -119 36 -116 31 -119 b 19 -108 21 -119 19 -115 b 29 -97 19 -102 20 -101 b 102 13 73 -72 102 -27 b 92 51 102 26 98 40 l 91 54 l 84 54 b 8 104 53 54 21 74 b -1 142 1 116 -1 130 b 78 233 -1 187 31 227 \"},\n\"v6d\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m 544 335 b 553 337 548 337 551 337 b 575 313 563 337 570 330 b 589 226 583 285 589 256 b 517 8 589 152 563 76 b 464 -58 507 -4 503 -9 l 401 -136 b 362 -176 372 -172 370 -176 b 357 -176 360 -176 359 -176 b 261 -87 349 -174 355 -180 b 175 0 215 -38 175 0 b 106 -86 175 0 144 -38 b 29 -174 35 -174 36 -173 b 24 -176 28 -176 27 -176 b 14 -174 21 -176 17 -174 b -73 -87 12 -173 -8 -152 b -159 0 -121 -38 -159 0 b -228 -86 -160 0 -190 -38 b -304 -174 -299 -174 -298 -173 b -310 -176 -306 -176 -308 -176 b -319 -174 -314 -176 -318 -174 b -483 -12 -323 -173 -359 -137 l -495 0 l -524 -34 b -562 -77 -553 -73 -556 -76 b -568 -79 -564 -79 -566 -79 b -590 -58 -581 -79 -590 -69 b -588 -49 -590 -55 -589 -52 b -412 170 -585 -43 -417 165 b -398 174 -408 173 -402 174 b -389 173 -394 174 -392 174 b -300 86 -387 172 -366 151 b -215 -1 -254 37 -215 -1 b -145 84 -215 -1 -183 37 b -69 173 -74 173 -76 172 b -63 174 -68 174 -66 174 b -54 173 -61 174 -57 173 b 34 86 -51 172 -31 151 b 119 -1 81 37 119 -1 b 189 84 121 -1 151 37 b 265 173 259 173 258 172 b 270 174 266 174 269 174 b 280 173 274 174 279 173 b 370 84 283 172 303 151 b 455 -1 416 37 455 -1 l 455 -1 b 476 24 455 -1 469 15 b 547 226 522 87 547 159 b 534 302 547 252 543 278 b 532 317 533 308 532 313 b 544 335 532 326 536 333 \"},\n\"v6f\":{\"x_min\":-80.3125,\"x_max\":78.9375,\"ha\":81,\"o\":\"m 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 \"},\n\"v70\":{\"x_min\":0,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 190 b 217 191 215 191 216 191 b 231 184 223 191 228 188 b 249 154 240 167 246 159 b 419 18 292 91 348 45 b 436 -1 435 11 436 8 b 424 -16 436 -9 434 -13 b 308 -87 394 -26 340 -59 b 231 -186 276 -117 257 -142 b 219 -192 228 -191 225 -192 b 198 -174 209 -192 208 -191 b 47 -33 161 -113 110 -63 b 10 -16 34 -26 17 -19 b 0 -1 2 -13 0 -9 b 17 18 0 8 1 11 b 198 173 95 48 156 101 b 213 190 206 187 208 188 \"},\n\"v72\":{\"x_min\":-423.3125,\"x_max\":421.9375,\"ha\":431,\"o\":\"m -262 197 b -247 197 -257 197 -253 197 b -118 162 -210 197 -163 184 b 40 45 -61 134 -13 98 b 277 -95 119 -33 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -55 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 201 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 136 b 421 22 421 37 421 29 b 245 -199 421 -93 338 -199 b 238 -198 243 -199 240 -199 b -44 -47 148 -194 50 -141 b -250 86 -114 22 -183 66 b -295 94 -270 91 -283 94 b -315 91 -302 94 -307 94 b -381 4 -356 81 -381 43 b -355 -56 -381 -18 -372 -40 b -298 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -178 -69 -200 -58 -189 -62 b -151 -122 -160 -81 -151 -101 b -171 -167 -151 -138 -157 -155 b -239 -195 -185 -181 -213 -192 b -257 -197 -245 -197 -250 -197 b -423 -5 -352 -197 -423 -109 b -412 65 -423 16 -419 40 b -262 197 -389 137 -329 188 \"},\n\"v74\":{\"x_min\":-206.890625,\"x_max\":428.75,\"ha\":438,\"o\":\"m 389 -351 b 394 -351 390 -351 393 -351 b 428 -385 413 -351 428 -367 b 428 -394 428 -388 428 -391 b 394 -428 426 -406 421 -410 l 332 -473 l 269 -516 l 205 -560 l 141 -603 l 77 -648 l 13 -692 l -50 -737 l -114 -780 l -145 -802 b -171 -813 -157 -810 -163 -813 b -175 -813 -172 -813 -174 -813 b -206 -777 -194 -811 -206 -795 b -202 -760 -206 -771 -205 -766 b -87 -675 -197 -752 -206 -757 l -34 -639 l 83 -557 l 145 -514 l 209 -470 l 272 -427 b 389 -351 375 -356 381 -352 \"},\n\"v75\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -137 381 b -130 383 -134 383 -133 383 b -111 371 -122 383 -114 378 b -55 224 -110 370 -85 305 b 0 80 -25 145 -1 80 b 54 224 0 80 24 145 b 112 377 114 384 110 373 b 127 384 118 381 122 384 b 148 362 138 384 148 374 l 148 356 l 83 183 b 16 9 47 88 17 11 b -1 0 12 2 5 0 b -14 5 -5 0 -10 1 b -84 183 -19 9 -13 -6 l -149 356 l -149 362 b -137 381 -149 371 -145 378 \"},\n\"v78\":{\"x_min\":0,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 85 514 b 95 517 88 517 89 517 b 114 505 103 517 110 513 l 115 502 l 115 376 b 115 249 115 306 115 249 b 141 258 117 249 127 252 l 167 266 l 172 266 b 190 254 181 265 187 262 l 193 251 l 193 202 l 193 188 b 187 147 193 149 191 152 b 147 130 183 142 182 141 l 115 119 l 115 9 b 115 -99 115 -51 115 -99 b 141 -91 115 -99 127 -95 b 171 -81 166 -81 167 -81 l 171 -81 b 191 -94 181 -81 189 -87 b 193 -142 191 -97 193 -120 b 191 -195 193 -167 191 -194 b 125 -227 187 -205 187 -204 l 115 -230 l 115 -366 l 115 -503 l 114 -506 b 95 -519 110 -514 102 -519 b 74 -506 87 -519 78 -514 l 73 -503 l 73 -374 b 73 -245 73 -260 73 -245 b 73 -245 73 -245 73 -245 b 55 -252 72 -245 63 -249 l 32 -260 b 19 -263 27 -262 23 -263 b 4 -256 13 -263 8 -260 b 0 -215 0 -251 0 -254 b 0 -199 0 -210 0 -206 l 0 -152 l 1 -149 b 8 -140 2 -145 5 -141 b 42 -127 9 -140 24 -133 l 73 -116 l 73 -5 b 73 23 73 4 73 15 b 73 105 73 70 73 105 b 49 97 73 105 61 101 b 17 88 32 91 23 88 b 4 95 10 88 8 91 b 0 137 0 101 0 98 b 0 151 0 141 0 145 l 0 199 l 1 202 b 43 224 5 212 5 212 l 73 234 l 73 367 l 73 502 l 74 505 b 85 514 77 509 81 513 \"},\n\"v79\":{\"x_min\":-1.359375,\"x_max\":899.703125,\"ha\":918,\"o\":\"m 307 349 b 332 351 315 351 323 351 b 443 340 367 351 408 347 b 741 47 607 306 720 195 b 744 0 743 31 744 16 b 660 -303 744 -90 713 -206 b 28 -755 534 -531 304 -695 b 14 -756 23 -755 19 -756 b -1 -741 4 -756 -1 -750 b 21 -720 -1 -731 1 -728 b 567 -56 337 -601 548 -344 b 568 -11 568 -41 568 -24 b 442 285 568 129 525 233 b 325 319 406 308 367 319 b 93 177 232 319 137 266 b 84 154 91 170 84 155 b 84 154 84 154 84 154 b 88 156 84 154 85 155 b 159 177 110 170 134 177 b 257 134 194 177 231 162 b 294 41 281 108 294 73 b 171 -97 294 -24 246 -90 b 156 -98 166 -97 161 -98 b 6 74 73 -98 6 -22 b 6 80 6 76 6 79 b 307 349 10 223 141 340 m 839 215 b 845 216 841 216 842 216 b 862 213 852 216 860 215 b 899 163 887 206 899 184 b 872 117 899 145 890 127 b 847 111 865 112 856 111 b 808 130 833 111 818 117 b 796 162 800 140 796 151 b 839 215 796 187 812 212 m 839 -112 b 845 -112 841 -112 842 -112 b 862 -115 852 -112 860 -113 b 899 -165 887 -122 899 -144 b 872 -210 899 -183 890 -201 b 847 -217 865 -215 856 -217 b 808 -198 833 -217 818 -210 b 796 -165 800 -188 796 -177 b 839 -112 796 -140 812 -116 \"},\n\"v7a\":{\"x_min\":-1.359375,\"x_max\":386.5625,\"ha\":394,\"o\":\"m 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 \"},\n\"v7c\":{\"x_min\":0,\"x_max\":300.8125,\"ha\":307,\"o\":\"m 49 505 b 53 506 50 505 51 506 b 70 496 58 506 62 503 b 81 485 73 492 78 488 l 96 473 l 111 459 l 122 449 l 134 438 l 182 396 l 255 330 b 292 291 292 298 292 298 l 292 290 l 292 284 l 283 270 b 209 36 234 197 209 113 b 288 -170 209 -44 235 -119 b 299 -184 295 -179 299 -181 b 300 -191 300 -187 300 -188 b 285 -206 300 -199 294 -206 b 280 -206 283 -206 281 -206 b 247 -201 270 -202 259 -201 b 176 -222 223 -201 197 -208 b 114 -340 136 -249 114 -292 b 172 -471 114 -384 134 -433 b 185 -492 182 -481 185 -487 b 181 -502 185 -496 183 -499 b 171 -508 176 -505 174 -508 b 152 -498 166 -508 160 -503 b 0 -284 65 -428 12 -352 b 0 -260 0 -278 0 -270 b 1 -238 0 -252 0 -242 b 148 -140 16 -177 73 -140 b 209 -148 167 -140 189 -142 b 215 -149 212 -148 215 -149 b 215 -149 215 -149 215 -149 l 215 -149 b 201 -136 215 -148 209 -142 l 157 -97 l 96 -41 b 17 34 21 24 17 29 b 17 37 17 36 17 36 b 17 38 17 37 17 38 b 25 56 17 44 17 44 b 110 298 81 131 110 219 b 46 474 110 367 88 431 b 38 491 40 480 38 487 b 49 505 38 498 42 502 \"},\n\"v7d\":{\"x_min\":-1.359375,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 \"},\n\"v7f\":{\"x_min\":0,\"x_max\":367.5,\"ha\":375,\"o\":\"m 0 124 l 0 187 l 61 187 l 122 187 l 122 138 l 122 91 l 153 61 l 183 30 l 213 61 l 243 91 l 243 138 l 243 187 l 306 187 l 367 187 l 367 124 l 367 61 l 321 61 l 274 61 l 243 30 l 213 0 l 243 -31 l 274 -62 l 321 -62 l 367 -62 l 367 -124 l 367 -188 l 306 -188 l 243 -188 l 243 -140 l 243 -93 l 213 -62 l 183 -31 l 153 -62 l 122 -93 l 122 -140 l 122 -188 l 61 -188 l 0 -188 l 0 -124 l 0 -62 l 46 -62 l 92 -62 l 123 -31 l 153 0 l 123 30 l 92 61 l 46 61 l 0 61 l 0 124 \"},\n\"v80\":{\"x_min\":29.9375,\"x_max\":420.578125,\"ha\":371,\"o\":\"m 115 345 b 221 347 117 345 166 347 b 411 345 306 347 409 345 b 420 330 416 342 420 335 b 415 319 420 326 419 321 b 178 118 397 303 179 118 b 178 117 178 118 178 117 b 181 117 178 117 178 117 b 189 117 182 117 185 117 b 193 117 190 117 191 117 b 247 98 215 117 232 111 b 296 75 266 83 280 76 b 302 75 299 75 300 75 b 322 91 311 75 315 79 b 322 91 322 91 322 91 b 322 91 322 91 322 91 b 319 91 322 91 321 91 b 313 90 318 90 315 90 b 283 107 300 90 288 97 b 277 126 279 114 277 121 b 319 167 277 149 295 167 b 319 167 319 167 319 167 b 362 118 347 167 362 147 b 355 82 362 108 359 96 b 311 33 349 65 340 55 b 224 1 284 12 253 1 b 194 5 213 1 204 2 b 168 18 183 8 178 11 b 110 36 151 30 130 36 b 57 15 88 36 68 29 b 47 11 54 12 51 11 b 31 20 40 11 34 13 b 29 26 31 22 29 25 b 68 66 29 36 39 45 b 285 250 73 71 281 248 b 285 250 285 250 285 250 b 231 252 285 252 261 252 b 137 250 190 252 141 250 b 93 227 122 248 110 241 b 78 220 88 222 83 220 b 66 227 74 220 70 222 b 63 234 65 229 63 231 b 85 291 63 241 69 252 b 115 345 108 342 108 344 \"},\n\"v81\":{\"x_min\":0,\"x_max\":428.75,\"ha\":438,\"o\":\"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 m 366 131 b 352 134 362 133 357 134 b 219 81 321 134 269 115 b 47 -111 126 23 50 -62 b 47 -112 47 -111 47 -112 b 77 -136 47 -129 58 -136 b 264 -45 118 -136 194 -101 b 382 109 336 12 382 76 b 366 131 382 120 377 129 \"},\n\"v83\":{\"x_min\":-1.359375,\"x_max\":847.96875,\"ha\":865,\"o\":\"m 488 1499 b 495 1500 490 1500 492 1500 b 541 1465 507 1500 521 1490 b 679 1078 622 1372 679 1210 b 677 1050 679 1068 677 1060 b 477 642 668 893 604 764 l 443 609 l 431 596 l 431 592 l 438 562 l 449 508 l 460 458 b 481 355 475 390 481 355 b 481 355 481 355 481 355 b 490 356 481 355 485 355 b 528 358 495 356 511 358 b 558 356 540 358 552 356 b 839 95 699 338 808 237 b 847 22 845 72 847 47 b 631 -303 847 -113 766 -242 b 620 -309 623 -308 620 -309 l 620 -310 b 631 -359 620 -310 626 -333 l 646 -435 l 660 -496 b 672 -588 668 -535 672 -563 b 664 -653 672 -610 669 -630 b 383 -875 630 -792 509 -875 b 201 -810 321 -875 257 -855 b 129 -680 151 -768 129 -730 b 274 -530 129 -592 200 -530 b 351 -553 300 -530 326 -538 b 412 -669 393 -582 412 -626 b 287 -805 412 -735 366 -800 l 279 -805 l 285 -809 b 383 -830 318 -823 351 -830 b 586 -718 464 -830 540 -789 b 626 -584 612 -678 626 -631 b 619 -528 626 -566 623 -548 b 612 -495 619 -526 616 -510 b 577 -324 590 -387 577 -324 b 577 -324 577 -324 577 -324 b 568 -326 575 -324 571 -324 b 528 -334 558 -328 537 -333 b 465 -338 506 -337 485 -338 b 24 -11 269 -338 87 -206 b -1 145 8 41 -1 93 b 96 442 -1 249 32 351 b 322 714 166 541 236 626 l 352 745 l 345 782 l 332 843 l 315 921 b 303 984 310 950 304 978 b 295 1082 298 1017 295 1049 b 413 1426 295 1208 336 1329 b 488 1499 436 1456 477 1496 m 549 1301 b 541 1301 547 1301 544 1301 b 411 1207 500 1301 447 1263 b 355 1004 374 1152 355 1079 b 359 942 355 984 356 963 b 371 881 362 927 363 917 l 385 818 b 392 782 389 799 392 784 l 392 782 b 434 828 393 782 424 816 b 607 1165 534 941 594 1060 b 608 1193 608 1175 608 1183 b 597 1270 608 1224 604 1254 b 549 1301 589 1286 571 1299 m 398 528 b 393 555 396 542 393 553 b 392 555 393 555 393 555 b 317 470 390 555 347 505 b 190 298 266 408 212 334 b 127 70 148 227 127 148 b 155 -77 127 19 137 -30 b 468 -303 209 -216 333 -303 b 519 -299 484 -303 502 -302 b 568 -284 541 -295 568 -287 l 568 -284 b 563 -263 568 -284 566 -274 l 534 -120 l 511 -13 l 496 61 l 480 133 b 469 187 472 176 469 187 b 468 188 469 187 469 188 b 416 162 462 188 430 172 b 337 13 364 126 337 69 b 413 -124 337 -40 363 -93 b 428 -144 424 -131 428 -137 b 428 -149 428 -145 428 -148 b 409 -166 426 -161 419 -166 b 394 -162 405 -166 400 -165 b 240 77 302 -122 240 -27 l 240 77 b 430 342 240 197 315 301 l 436 344 l 426 394 l 398 528 m 548 194 b 526 195 540 195 532 195 b 519 195 524 195 521 195 l 514 195 l 518 177 l 539 79 l 552 15 l 566 -48 l 594 -187 l 605 -240 b 612 -266 609 -254 611 -266 b 612 -266 612 -266 612 -266 b 641 -248 613 -266 630 -256 b 744 -98 692 -212 730 -156 b 751 -40 749 -79 751 -59 b 548 194 751 76 665 181 \"},\n\"v84\":{\"x_min\":25.859375,\"x_max\":164.6875,\"ha\":168,\"o\":\"m 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 \"},\n\"v86\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m -386 173 b -381 174 -385 174 -383 174 b -370 173 -377 174 -372 173 b -281 86 -367 172 -347 151 b -196 0 -235 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 277 172 b 289 174 285 174 288 174 b 299 173 294 174 298 173 b 462 11 303 172 338 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 374 -176 371 -176 b 280 -87 367 -173 345 -152 b 194 0 234 -38 194 0 b 125 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 43 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -141 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -289 -176 b -300 -174 -295 -176 -299 -174 b -464 -12 -304 -173 -340 -137 l -476 0 l -504 -34 b -543 -77 -534 -73 -537 -76 b -549 -79 -545 -79 -547 -79 b -571 -58 -562 -79 -571 -69 b -568 -49 -571 -55 -570 -52 b -392 172 -566 -43 -396 167 b -386 173 -390 172 -387 173 \"},\n\"v8a\":{\"x_min\":-170.140625,\"x_max\":168.78125,\"ha\":172,\"o\":\"m -160 567 b -122 567 -159 567 -149 567 l -87 567 l -84 566 b -74 553 -78 563 -77 560 b -20 366 -73 551 -49 466 b 31 186 8 267 31 186 b 85 371 31 186 55 269 b 140 559 114 473 138 557 b 153 567 141 564 148 567 b 168 559 159 567 166 564 b 168 555 168 557 168 557 b 92 281 168 548 159 513 b 14 13 50 134 14 13 b 0 0 14 6 6 0 b -17 15 -8 0 -17 8 b -93 283 -17 15 -51 136 b -170 552 -166 533 -170 548 b -170 553 -170 552 -170 552 b -160 567 -170 560 -167 564 \"},\n\"v8b\":{\"x_min\":0,\"x_max\":319.859375,\"ha\":326,\"o\":\"m 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 \"},\n\"v8c\":{\"x_min\":-330.75,\"x_max\":329.390625,\"ha\":336,\"o\":\"m -133 483 b -117 484 -127 484 -122 484 b 31 373 -51 484 9 440 b 35 348 34 365 35 356 b -25 285 35 313 10 285 b -87 331 -55 285 -76 302 b -167 402 -100 376 -133 402 b -191 398 -175 402 -183 401 b -227 341 -215 388 -227 369 b -225 320 -227 334 -227 327 b -13 74 -209 230 -125 133 b 6 65 -4 70 5 66 l 9 63 l 10 65 b 117 231 12 68 40 112 l 189 341 l 242 424 b 268 460 262 456 264 458 b 283 464 273 463 277 464 b 308 438 296 464 308 453 l 308 437 b 287 396 308 430 308 428 l 95 98 l 59 43 l 58 41 l 65 37 b 253 -156 151 -8 217 -77 b 281 -285 272 -199 281 -244 b 148 -481 281 -381 231 -463 b 115 -485 137 -484 126 -485 b -32 -376 51 -485 -9 -442 b -36 -349 -35 -366 -36 -358 b 25 -287 -36 -315 -12 -287 b 85 -333 54 -287 74 -302 b 166 -403 99 -377 133 -403 b 190 -399 174 -403 182 -402 b 225 -342 215 -390 225 -370 b 224 -322 225 -335 225 -328 b 12 -76 208 -231 125 -134 b -8 -66 2 -72 -6 -68 l -10 -65 l -12 -66 b -118 -231 -13 -68 -42 -113 l -190 -342 l -243 -426 b -269 -462 -264 -458 -265 -458 b -284 -466 -274 -464 -279 -466 b -310 -440 -298 -466 -310 -455 l -310 -438 b -288 -398 -310 -430 -308 -430 l -96 -99 l -59 -44 l -59 -43 l -66 -38 b -281 284 -198 33 -281 158 l -281 284 b -133 483 -281 392 -220 474 m 254 177 b 266 179 258 177 262 179 b 319 149 287 179 307 167 b 329 115 326 140 329 127 b 319 79 329 102 326 90 b 268 51 307 61 287 51 b 221 72 250 51 234 58 b 205 115 210 84 205 99 b 254 177 205 142 223 170 m -281 -54 b -269 -52 -277 -52 -273 -52 b -223 -73 -253 -52 -235 -59 b -206 -116 -212 -84 -206 -101 b -216 -151 -206 -129 -209 -141 b -269 -179 -228 -170 -249 -179 b -314 -159 -285 -179 -302 -173 b -330 -116 -325 -147 -330 -131 b -281 -54 -330 -88 -313 -61 \"},\n\"v8d\":{\"x_min\":-1.359375,\"x_max\":255.890625,\"ha\":261,\"o\":\"m 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 \"},\n\"v8f\":{\"x_min\":-21.78125,\"x_max\":362.0625,\"ha\":369,\"o\":\"m 302 1031 b 308 1032 304 1032 307 1032 b 330 1016 318 1032 325 1027 b 362 867 351 970 362 920 b 340 738 362 824 353 780 l 336 727 l 340 717 b 362 591 355 677 362 634 b 257 323 362 496 325 401 b 204 272 243 306 227 290 b 20 56 129 206 66 133 b -1 18 12 44 0 22 b -19 4 -4 9 -12 4 l -21 4 l -21 140 l -21 276 l -12 277 b 167 333 61 288 127 309 b 319 598 262 388 319 491 b 311 664 319 620 317 642 l 310 673 l 304 664 b 204 548 279 620 250 587 b 20 333 129 483 66 409 b -1 292 12 320 0 298 b -19 280 -4 285 -12 280 l -21 280 l -21 416 l -21 552 l -12 553 b 167 609 61 564 127 585 b 319 874 264 666 319 770 b 294 992 319 914 311 954 b 288 1011 288 1004 288 1007 b 302 1031 288 1021 294 1028 \"},\n\"v90\":{\"x_min\":-171.5,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\n\"v92\":{\"x_min\":0,\"x_max\":598.890625,\"ha\":611,\"o\":\"m 62 181 b 77 183 66 183 72 183 b 91 181 83 183 88 183 b 202 131 100 180 106 177 l 299 87 l 394 131 b 517 183 499 181 502 183 b 519 183 517 183 518 183 b 598 104 567 183 598 144 b 577 49 598 84 592 65 b 518 15 567 38 563 37 b 484 0 499 6 484 0 b 518 -16 484 -1 499 -8 b 577 -51 563 -38 567 -40 b 598 -105 592 -66 598 -86 b 519 -184 598 -145 567 -184 b 517 -184 518 -184 517 -184 b 394 -133 502 -184 499 -183 l 299 -88 l 202 -133 b 81 -184 99 -183 95 -184 b 77 -184 80 -184 78 -184 b 0 -105 29 -184 0 -145 b 20 -51 0 -86 5 -66 b 80 -16 29 -40 34 -38 b 114 -1 98 -8 114 -1 b 80 15 114 0 98 6 b 20 49 34 37 29 38 b 0 104 6 65 0 84 b 62 181 0 140 23 174 m 88 134 b 74 136 85 134 80 136 b 68 134 72 136 69 136 b 46 104 54 130 46 117 b 55 81 46 95 49 88 b 149 34 59 76 53 80 b 224 -1 190 15 224 0 b 144 -38 224 -1 187 -18 b 54 -84 59 -79 58 -79 b 46 -105 49 -90 46 -98 b 76 -137 46 -122 58 -137 b 78 -137 77 -137 77 -137 b 194 -86 87 -137 76 -141 b 298 -36 250 -58 298 -36 b 298 -36 298 -36 298 -36 b 402 -84 299 -36 345 -58 b 518 -137 522 -141 510 -137 b 521 -137 519 -137 519 -137 b 551 -105 539 -137 551 -122 b 541 -83 551 -98 548 -90 b 447 -36 537 -77 544 -81 b 374 -1 406 -16 374 -1 b 447 34 374 0 406 15 b 541 81 544 80 537 76 b 551 104 548 88 551 97 b 521 136 551 120 539 136 b 518 136 519 136 519 136 b 517 136 518 136 517 136 l 517 136 b 402 83 511 136 511 136 b 298 34 345 56 299 34 b 298 34 298 34 298 34 b 194 84 298 34 250 56 b 88 134 137 111 89 133 \"},\n\"v93\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 205 b 219 205 213 205 216 205 b 239 183 228 205 231 204 b 421 -163 298 40 363 -83 b 438 -191 434 -180 438 -186 b 436 -197 438 -192 438 -195 b 424 -206 434 -204 431 -206 b 406 -201 420 -206 415 -205 b 216 -156 347 -172 281 -156 b 23 -205 148 -156 80 -173 b 14 -206 20 -206 17 -206 b 0 -191 6 -206 0 -201 b 6 -176 0 -187 1 -183 b 202 192 63 -104 142 45 b 212 205 205 199 208 202 m 264 48 l 249 81 l 243 94 l 242 91 b 89 -126 208 36 137 -66 b 81 -138 85 -133 81 -138 b 81 -138 81 -138 81 -138 b 81 -138 81 -138 81 -138 b 95 -133 81 -138 87 -136 b 280 -94 156 -108 221 -94 b 334 -98 299 -94 317 -95 b 343 -99 338 -99 343 -99 b 343 -99 343 -99 343 -99 b 338 -94 343 -99 341 -97 b 264 48 318 -58 287 1 \"},\n\"v94\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 \"},\n\"v95\":{\"x_min\":0,\"x_max\":406.96875,\"ha\":415,\"o\":\"m 55 181 b 70 183 61 183 66 183 b 111 170 85 183 99 179 b 160 130 115 167 137 149 l 202 95 l 245 130 b 319 181 299 176 302 179 b 334 183 325 183 330 183 b 406 109 375 183 406 148 b 401 81 406 99 405 91 b 348 24 394 65 390 59 b 318 -1 332 11 318 0 b 348 -26 318 -1 332 -12 b 401 -83 390 -61 394 -66 b 406 -111 405 -93 406 -101 b 334 -184 406 -149 375 -184 b 319 -183 330 -184 325 -184 b 245 -131 302 -180 299 -177 l 202 -97 l 160 -131 b 85 -183 107 -177 103 -180 b 70 -184 80 -184 76 -184 b 0 -111 31 -184 0 -149 b 4 -83 0 -101 1 -93 b 58 -26 10 -66 16 -61 b 88 -1 74 -12 88 -1 b 58 24 88 0 74 11 b 10 69 23 54 17 59 b 0 109 2 81 0 95 b 55 181 0 142 21 173 m 83 133 b 72 136 78 136 76 136 b 57 131 66 136 61 134 b 46 109 49 126 46 117 b 50 93 46 104 47 98 b 107 45 51 91 77 70 b 160 0 137 20 160 0 b 107 -47 160 -1 137 -22 b 50 -94 77 -72 51 -93 b 46 -111 47 -99 46 -105 b 59 -134 46 -120 50 -130 b 72 -137 62 -136 68 -137 b 83 -136 76 -137 80 -136 b 144 -84 84 -134 107 -116 b 202 -36 176 -58 202 -36 b 261 -84 202 -36 230 -58 b 323 -136 299 -116 321 -134 b 334 -137 326 -136 330 -137 b 345 -134 338 -137 343 -136 b 360 -111 355 -130 360 -120 b 355 -94 360 -105 359 -99 b 299 -47 353 -93 329 -72 b 245 0 269 -22 245 -1 b 299 45 245 0 269 20 b 355 93 329 70 353 91 b 360 109 359 98 360 104 b 345 133 360 119 355 129 b 334 136 343 134 338 136 b 323 134 330 136 326 134 b 261 83 321 133 299 115 b 202 34 230 56 202 34 b 144 83 202 34 176 56 b 83 133 106 115 84 133 \"},\n\"v97\":{\"x_min\":-228.671875,\"x_max\":227.3125,\"ha\":232,\"o\":\"m -217 487 l -213 488 l 0 488 l 212 488 l 216 487 b 225 476 220 484 224 480 l 227 473 l 227 244 l 227 15 l 225 12 b 206 0 223 4 215 0 b 197 1 204 0 200 0 b 187 12 193 4 189 6 l 186 15 l 186 138 l 186 262 l -1 262 l -187 262 l -187 138 l -187 15 l -189 12 b -208 0 -193 4 -200 0 b -227 12 -216 0 -223 4 l -228 15 l -228 244 l -228 473 l -227 476 b -217 487 -225 480 -221 484 \"},\n\"v9a\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 230 1031 b 238 1032 232 1032 235 1032 b 259 1014 245 1032 251 1027 b 367 662 330 906 367 782 b 364 602 367 641 367 621 b 232 317 352 488 304 384 b 57 120 155 245 103 187 b -1 18 31 84 6 40 b -19 4 -4 11 -12 4 l -21 4 l -21 159 l -21 315 l -16 315 b 96 335 10 315 62 324 b 315 695 227 380 315 527 b 313 738 315 709 314 724 b 224 991 304 825 273 916 b 216 1013 219 999 216 1007 b 230 1031 216 1021 220 1028 \"},\n\"v9b\":{\"x_min\":-24.5,\"x_max\":313.0625,\"ha\":319,\"o\":\"m -24 -133 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 142 -213 13 -61 74 -144 b 258 -376 196 -269 230 -315 b 313 -605 295 -449 313 -528 b 292 -742 313 -652 306 -699 b 288 -752 289 -748 288 -752 b 288 -752 288 -752 288 -752 b 292 -764 289 -753 291 -757 b 313 -907 306 -811 313 -860 b 292 -1045 313 -954 306 -1002 b 288 -1054 289 -1050 288 -1054 b 288 -1054 288 -1054 288 -1054 b 292 -1067 289 -1054 291 -1060 b 313 -1210 306 -1113 313 -1161 b 292 -1346 313 -1257 306 -1304 b 288 -1357 289 -1353 288 -1357 b 288 -1357 288 -1357 288 -1357 b 292 -1368 289 -1357 291 -1363 b 313 -1512 306 -1415 313 -1464 b 292 -1648 313 -1560 306 -1605 b 288 -1660 289 -1654 288 -1660 b 288 -1660 288 -1660 288 -1660 b 292 -1671 289 -1660 291 -1665 b 313 -1814 306 -1719 313 -1766 b 250 -2040 313 -1897 291 -1977 b 232 -2062 238 -2057 236 -2059 b 221 -2065 230 -2063 225 -2065 b 200 -2045 210 -2065 201 -2057 b 200 -2043 200 -2044 200 -2044 b 208 -2026 200 -2037 202 -2034 b 269 -1826 249 -1966 269 -1897 b 153 -1544 269 -1726 230 -1625 b -9 -1472 115 -1506 58 -1481 b -21 -1471 -14 -1471 -19 -1471 l -24 -1471 l -24 -1343 l -24 -1215 l -20 -1215 b -1 -1229 -12 -1215 -4 -1221 b 142 -1424 13 -1270 74 -1353 b 257 -1582 196 -1478 228 -1524 b 264 -1594 261 -1589 264 -1594 l 264 -1594 b 265 -1582 264 -1594 264 -1589 b 270 -1525 268 -1562 270 -1544 b 153 -1243 270 -1424 228 -1321 b -9 -1170 115 -1203 58 -1178 b -21 -1168 -14 -1170 -19 -1168 l -24 -1168 l -24 -1041 l -24 -913 l -20 -913 b -1 -927 -12 -913 -4 -918 b 142 -1121 13 -967 74 -1050 b 257 -1281 196 -1175 228 -1221 b 264 -1292 261 -1286 264 -1292 l 264 -1292 b 265 -1279 264 -1292 264 -1286 b 270 -1222 268 -1261 270 -1242 b 153 -941 270 -1121 228 -1018 b -9 -867 115 -900 58 -875 b -21 -866 -14 -867 -19 -866 l -24 -866 l -24 -738 l -24 -610 l -20 -610 b -1 -624 -12 -610 -4 -616 b 142 -818 13 -664 74 -749 b 257 -978 196 -873 228 -918 b 264 -989 261 -984 264 -989 l 264 -989 b 265 -977 264 -989 264 -984 b 270 -920 268 -959 270 -939 b 153 -638 270 -818 228 -716 b -9 -564 115 -598 58 -573 b -21 -563 -14 -564 -19 -563 l -24 -563 l -24 -435 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 142 -516 13 -363 74 -446 b 257 -675 196 -571 228 -616 b 264 -687 261 -681 264 -687 l 264 -687 b 265 -674 264 -687 264 -681 b 270 -617 268 -656 270 -637 b 153 -335 270 -516 228 -413 b -9 -262 115 -295 58 -270 b -21 -260 -14 -262 -19 -260 l -24 -260 l -24 -133 \"},\n\"v9c\":{\"x_min\":-166.0625,\"x_max\":-25.859375,\"ha\":0,\"o\":\"m -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 \"},\n\"v9e\":{\"x_min\":0,\"x_max\":607.0625,\"ha\":619,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 m 347 631 b 353 632 348 632 351 632 b 374 620 363 632 371 628 b 375 383 375 616 375 616 l 375 148 l 377 151 b 492 199 415 183 454 199 b 537 191 507 199 522 197 b 607 84 582 176 607 134 b 583 0 607 58 598 29 b 455 -142 562 -40 533 -72 l 378 -215 b 355 -229 364 -229 362 -229 b 334 -216 345 -229 337 -224 l 333 -212 l 333 201 l 333 616 l 334 620 b 347 631 337 624 341 630 m 465 131 b 451 133 461 133 455 133 b 445 133 449 133 446 133 b 379 87 419 129 396 113 l 375 80 l 375 -37 l 375 -156 l 378 -152 b 499 81 451 -72 499 20 l 499 83 b 465 131 499 113 490 126 \"},\n\"va3\":{\"x_min\":58.53125,\"x_max\":228.671875,\"ha\":294,\"o\":\"m 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 \"},\n\"va5\":{\"x_min\":0,\"x_max\":349.8125,\"ha\":357,\"o\":\"m 88 302 b 103 303 93 302 98 303 b 202 224 149 303 191 270 b 205 199 204 216 205 208 b 178 129 205 173 196 147 l 175 126 l 182 127 b 307 249 236 142 284 190 b 313 259 308 254 311 258 b 329 267 317 265 323 267 b 349 247 340 267 349 259 b 201 -263 349 242 204 -258 b 182 -273 197 -270 190 -273 b 163 -260 174 -273 166 -269 b 161 -256 161 -259 161 -258 b 217 -59 161 -248 170 -220 b 272 129 247 43 272 127 b 272 129 272 129 272 129 b 264 122 272 129 268 126 b 140 80 227 94 183 80 b 36 115 102 80 65 91 b 0 194 10 136 0 165 b 88 302 0 244 32 292 \"},\n\"va9\":{\"x_min\":-24.5,\"x_max\":314.421875,\"ha\":321,\"o\":\"m -24 -145 l -24 -5 l -20 -5 b 0 -23 -9 -5 -2 -12 b 27 -87 4 -38 14 -66 b 138 -220 53 -136 88 -177 b 235 -328 179 -255 208 -288 b 314 -592 287 -409 314 -501 b 292 -732 314 -639 307 -687 l 289 -742 l 294 -756 b 314 -896 307 -802 314 -849 b 292 -1035 314 -943 307 -991 l 289 -1045 l 294 -1057 b 314 -1197 307 -1104 314 -1152 b 292 -1338 314 -1246 307 -1292 l 289 -1347 l 294 -1360 b 314 -1500 307 -1407 314 -1454 b 273 -1689 314 -1565 300 -1628 b 250 -1712 265 -1710 261 -1712 b 228 -1691 236 -1712 228 -1704 l 228 -1685 l 234 -1675 b 270 -1507 258 -1621 270 -1564 b 98 -1193 270 -1381 209 -1261 b 40 -1174 76 -1179 58 -1174 b -10 -1189 24 -1174 8 -1178 b -20 -1192 -14 -1192 -16 -1192 l -24 -1192 l -24 -1052 l -24 -913 l -20 -913 b 0 -931 -9 -913 -2 -920 b 27 -995 4 -946 14 -974 b 138 -1128 53 -1043 88 -1085 b 257 -1275 190 -1172 228 -1220 b 262 -1283 259 -1279 262 -1283 l 262 -1283 b 269 -1249 264 -1282 268 -1260 b 270 -1206 270 -1233 270 -1220 b 98 -891 270 -1075 206 -957 b 40 -871 76 -877 58 -871 b -10 -886 24 -871 8 -875 b -20 -889 -14 -889 -16 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 0 -628 -9 -610 -2 -617 b 27 -692 4 -644 14 -671 b 138 -825 53 -741 88 -782 b 257 -973 190 -870 228 -917 b 262 -981 259 -977 262 -981 l 262 -981 b 269 -946 264 -979 268 -957 b 270 -903 270 -931 270 -917 b 98 -588 270 -774 206 -655 b 40 -569 76 -574 58 -569 b -10 -584 24 -569 8 -574 b -20 -587 -14 -587 -16 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 0 -326 -9 -308 -2 -315 b 27 -390 4 -341 14 -369 b 138 -523 53 -438 88 -480 b 257 -670 190 -567 228 -614 b 262 -678 259 -674 262 -678 b 262 -678 262 -678 262 -678 b 269 -644 264 -677 268 -656 b 270 -601 270 -628 270 -614 b 98 -285 270 -471 206 -352 b 40 -266 76 -273 58 -266 b -10 -281 24 -266 8 -272 b -20 -284 -14 -284 -16 -284 l -24 -284 l -24 -145 \"},\n\"vaa\":{\"x_min\":-1.359375,\"x_max\":752.703125,\"ha\":768,\"o\":\"m 490 985 b 504 986 495 986 500 986 b 604 907 551 986 593 954 b 607 884 607 900 607 892 b 581 813 607 857 597 831 l 578 810 l 583 811 b 710 932 638 827 687 873 b 714 943 711 936 713 942 b 730 952 720 949 725 952 b 752 931 741 952 752 943 b 200 -946 752 927 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 538 314 477 300 508 b 318 598 300 559 306 580 b 404 645 340 630 372 645 b 494 592 439 645 475 627 b 507 541 502 577 507 559 b 480 471 507 516 498 489 l 477 467 l 483 470 b 608 589 537 485 586 531 b 675 811 611 595 675 810 b 675 811 675 811 675 811 b 666 806 675 811 671 809 b 543 763 628 777 585 763 b 438 799 504 763 468 775 b 401 878 412 820 401 849 b 490 985 401 928 434 977 \"},\n\"vab\":{\"x_min\":0,\"x_max\":272.21875,\"ha\":278,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 \"},\n\"vad\":{\"x_min\":0,\"x_max\":873.828125,\"ha\":892,\"o\":\"m 0 0 l 0 703 l 81 703 l 164 703 l 164 0 l 164 -705 l 81 -705 l 0 -705 l 0 0 m 225 0 l 225 703 l 246 703 l 268 703 l 268 366 l 268 30 l 274 36 b 314 79 284 44 302 63 b 413 302 357 137 392 213 b 432 327 419 324 421 327 b 449 306 443 327 447 322 b 611 115 457 195 529 115 b 651 122 624 115 638 117 b 728 316 705 140 724 188 b 729 388 728 342 729 366 b 671 635 729 533 711 602 b 581 662 649 652 616 662 b 477 637 545 662 510 653 l 475 635 l 477 634 b 503 627 488 632 495 631 b 545 556 532 612 545 584 b 491 480 545 524 526 491 b 465 474 481 476 473 474 b 379 563 417 474 379 516 b 389 602 379 576 382 588 b 541 691 409 641 479 681 b 582 694 555 692 568 694 b 865 462 714 694 834 598 b 873 392 871 440 873 416 b 865 317 873 367 871 341 b 639 84 839 194 748 101 b 612 83 630 83 620 83 b 511 116 577 83 543 94 b 504 120 509 119 506 120 b 504 120 504 120 504 120 b 469 59 504 120 488 93 l 432 -1 l 469 -61 b 504 -122 488 -94 504 -122 b 504 -122 504 -122 504 -122 b 511 -117 506 -122 509 -120 b 612 -84 543 -95 577 -84 b 665 -91 630 -84 647 -87 b 869 -338 771 -122 850 -216 b 873 -392 872 -356 873 -374 b 798 -595 873 -469 847 -539 b 581 -695 741 -662 660 -695 b 406 -626 517 -695 454 -671 b 381 -563 389 -607 381 -585 b 465 -477 381 -519 413 -477 b 545 -559 514 -477 545 -519 b 503 -628 545 -587 532 -613 b 477 -635 495 -632 488 -634 l 475 -637 l 477 -638 b 581 -663 510 -655 545 -663 b 671 -637 616 -663 649 -653 b 729 -391 711 -603 729 -534 b 728 -317 729 -367 728 -344 b 623 -117 722 -173 698 -124 b 611 -116 619 -116 615 -116 b 449 -308 528 -116 457 -198 b 432 -328 447 -323 443 -328 b 413 -303 421 -328 419 -326 b 314 -80 392 -215 357 -138 b 274 -37 302 -65 284 -45 l 268 -31 l 268 -367 l 268 -705 l 246 -705 l 225 -705 l 225 0 \"},\n\"vb1\":{\"x_min\":78.9375,\"x_max\":485.921875,\"ha\":417,\"o\":\"m 362 378 b 378 380 367 380 372 380 b 472 348 415 380 453 367 b 485 315 481 338 485 327 b 462 273 485 298 477 281 b 439 267 454 269 446 267 b 398 290 424 267 409 274 b 344 319 385 309 364 319 b 281 269 315 319 289 301 b 279 262 280 266 279 262 b 276 256 279 260 277 258 b 274 249 276 254 274 251 b 238 127 273 248 257 192 b 201 4 217 61 201 5 b 166 -1 198 -1 200 -1 b 153 -1 163 -1 157 -1 b 141 -1 148 -1 144 -1 b 104 4 106 -1 107 -1 b 104 6 104 5 104 5 b 142 144 104 13 110 34 b 182 278 164 219 181 276 b 183 288 182 281 182 285 b 185 302 185 292 185 298 b 164 330 185 317 176 328 b 159 330 163 330 161 330 b 102 302 140 330 119 320 b 91 294 95 295 93 294 b 88 294 91 294 89 294 b 78 303 83 294 78 298 b 81 312 78 306 78 309 b 200 373 106 347 160 373 b 215 371 205 373 209 371 b 266 335 235 367 254 353 b 269 331 268 333 269 331 b 269 331 269 331 269 331 b 273 335 269 331 270 334 b 362 378 298 359 330 376 \"},\n\"vb3\":{\"x_min\":0,\"x_max\":227.3125,\"ha\":232,\"o\":\"m 91 213 b 100 215 93 215 96 215 b 227 58 167 215 224 144 b 227 52 227 56 227 54 b 61 -201 227 -43 164 -138 b 29 -216 44 -212 36 -216 b 23 -210 27 -216 24 -213 b 21 -205 21 -208 21 -206 b 34 -192 21 -201 25 -197 b 122 -55 89 -161 122 -106 b 104 6 122 -33 117 -12 l 103 9 l 96 9 b 4 79 57 9 17 38 b 0 112 1 90 0 101 b 91 213 0 163 36 209 \"},\n\"vb4\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 80 86 -5 172 13 151 b 166 -1 127 37 166 -1 b 235 84 166 -1 197 37 b 311 173 306 173 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 152 -86 221 -1 190 -38 b 76 -176 81 -174 83 -173 b 70 -176 74 -176 73 -176 b 61 -174 66 -176 62 -174 b -27 -87 58 -173 38 -152 b -114 -1 -74 -38 -112 -1 b -182 -86 -114 -1 -145 -38 b -258 -176 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 \"},\n\"vb6\":{\"x_min\":0,\"x_max\":556.6875,\"ha\":568,\"o\":\"m 289 545 b 298 546 292 545 295 546 b 318 533 306 546 315 541 b 319 428 319 530 319 528 l 319 327 l 334 327 b 526 223 412 326 485 285 b 543 172 537 206 543 190 b 447 76 543 122 503 76 b 445 76 446 76 446 76 b 359 165 394 77 359 119 b 368 205 359 179 362 192 b 441 251 382 233 412 251 b 455 249 446 251 451 251 b 460 248 458 249 460 248 b 460 248 460 248 460 248 b 454 254 460 249 458 251 b 334 295 419 280 378 294 l 319 295 l 319 4 l 319 -287 l 321 -285 b 328 -285 322 -285 325 -285 b 524 -99 424 -277 507 -198 b 541 -79 526 -84 530 -79 b 556 -97 551 -79 556 -84 b 548 -133 556 -105 553 -117 b 334 -317 521 -233 434 -306 b 322 -319 329 -317 323 -317 l 319 -319 l 319 -424 b 319 -471 319 -444 319 -459 b 313 -541 319 -544 318 -535 b 298 -548 308 -545 303 -548 b 279 -534 289 -548 281 -542 b 277 -424 277 -531 277 -530 l 277 -317 l 273 -317 b 13 -95 153 -305 51 -217 b 0 2 4 -62 0 -29 b 182 295 0 126 66 238 b 274 324 210 309 249 320 l 277 324 l 277 427 b 279 533 277 528 277 530 b 289 545 281 538 285 542 m 277 2 b 277 291 277 161 277 291 b 268 288 277 291 273 290 b 144 1 179 265 144 184 b 276 -284 144 -199 175 -267 l 277 -285 l 277 2 \"},\n\"vb7\":{\"x_min\":-176.9375,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"vb9\":{\"x_min\":-122.5,\"x_max\":121.140625,\"ha\":124,\"o\":\"m -16 145 b 0 147 -10 147 -5 147 b 121 -1 66 147 121 77 b 114 -49 121 -16 118 -33 b -1 -148 95 -112 47 -148 b -85 -106 -31 -148 -61 -134 b -122 -1 -110 -76 -122 -38 b -16 145 -122 68 -81 134 m 12 111 b 0 113 8 113 4 113 b -68 22 -29 113 -61 73 b -70 0 -69 15 -70 6 b -13 -113 -70 -49 -47 -98 b -1 -115 -9 -115 -5 -115 b 63 -40 24 -115 53 -83 b 68 -1 66 -27 68 -15 b 12 111 68 48 46 97 \"},\n\"vba\":{\"x_min\":-118.421875,\"x_max\":597.53125,\"ha\":381,\"o\":\"m 460 574 b 464 574 461 574 462 574 b 488 574 470 574 481 574 b 500 573 491 574 498 574 b 594 503 543 570 588 538 b 597 488 596 498 597 494 b 528 417 597 449 564 417 b 502 423 519 417 510 419 b 465 481 477 434 465 458 b 488 528 465 499 472 516 b 490 530 490 530 490 530 b 490 530 490 530 490 530 b 468 517 488 530 475 523 b 349 340 419 485 377 420 b 347 330 348 334 347 330 b 383 328 347 328 363 328 b 428 326 423 328 424 328 b 442 302 438 320 442 312 b 430 281 442 294 438 285 b 385 276 424 277 426 276 l 377 276 l 332 276 l 330 269 b 178 -117 303 126 250 -9 b 1 -249 129 -194 69 -237 b -20 -251 -6 -251 -13 -251 b -114 -187 -65 -251 -100 -227 b -118 -156 -117 -177 -118 -166 b -51 -84 -118 -116 -91 -84 b -31 -87 -46 -84 -39 -86 b 16 -152 0 -95 16 -124 b -12 -205 16 -173 8 -194 b -16 -208 -14 -206 -16 -208 b -14 -208 -16 -208 -14 -208 b -9 -206 -14 -208 -12 -208 b 74 -124 23 -197 54 -166 b 172 224 98 -79 125 22 b 185 276 178 252 183 274 b 185 276 185 276 185 276 b 141 276 185 276 181 276 b 91 280 96 276 96 276 b 77 302 83 285 77 294 b 91 326 77 312 83 320 b 148 328 95 328 96 328 l 198 330 l 202 341 b 460 574 249 473 351 566 \"},\n\"vbf\":{\"x_min\":-53.078125,\"x_max\":513.140625,\"ha\":485,\"o\":\"m 185 383 b 196 384 187 383 191 384 b 277 334 230 384 259 365 b 288 301 281 324 288 306 b 288 297 288 298 288 297 b 294 302 289 297 291 299 b 394 370 323 338 367 367 b 404 371 398 370 401 371 b 510 272 453 371 498 328 b 513 237 513 262 513 251 b 507 172 513 217 511 192 b 326 -34 487 59 412 -26 b 314 -36 322 -36 318 -36 b 274 -24 298 -36 283 -31 l 265 -16 b 224 44 246 -1 232 20 b 223 49 224 47 223 49 b 223 49 223 49 223 49 b 149 -197 221 48 149 -194 b 149 -198 149 -197 149 -198 b 170 -210 149 -202 155 -205 b 187 -215 174 -210 175 -212 b 204 -231 201 -219 204 -222 b 197 -245 204 -240 202 -242 l 194 -248 l 76 -248 l -42 -248 l -46 -245 b -53 -231 -51 -242 -53 -240 b -35 -215 -53 -222 -49 -217 b -13 -210 -21 -212 -20 -212 b -6 -208 -10 -209 -8 -208 b 0 -206 -6 -208 -2 -206 b 25 -188 13 -201 21 -195 b 163 280 28 -183 163 276 b 166 291 163 283 164 287 b 167 302 167 295 167 299 b 155 324 167 315 161 324 b 155 324 155 324 155 324 b 65 230 125 322 85 280 b 53 215 61 217 58 215 b 51 215 53 215 51 215 b 42 224 46 215 42 217 b 57 263 42 231 47 244 b 140 360 77 305 104 337 b 152 370 144 365 149 369 b 185 383 157 376 172 381 m 374 306 b 366 308 371 308 368 308 b 300 273 348 308 321 294 b 284 254 288 262 287 259 b 280 242 283 249 281 245 b 257 169 279 240 270 213 l 236 98 l 236 93 b 251 48 238 77 243 61 b 279 27 258 37 272 27 b 281 27 279 27 280 27 b 291 31 281 27 287 30 b 396 170 334 52 378 109 b 406 247 402 197 406 224 b 401 277 406 259 405 270 b 374 306 397 290 383 303 \"},\n\"vc3\":{\"x_min\":-10.890625,\"x_max\":299.4375,\"ha\":294,\"o\":\"m 136 460 b 142 462 137 462 140 462 b 166 449 152 462 161 456 b 171 428 168 446 168 445 b 288 131 194 322 238 209 b 298 115 295 120 296 117 b 299 106 298 112 299 109 b 273 81 299 91 287 81 b 255 86 268 81 261 83 b 155 116 225 104 183 116 l 152 116 l 149 108 b 141 83 148 102 144 91 b 134 48 137 69 134 58 b 149 9 134 34 140 24 b 153 -1 152 5 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 147 -11 b 122 2 138 -11 133 -6 b 95 61 104 20 95 38 b 107 108 95 74 99 90 b 108 113 107 111 108 112 b 107 113 108 113 108 113 b 102 113 106 113 104 113 b 31 86 76 108 53 98 b 14 80 24 81 20 80 b -10 106 0 80 -10 91 b 0 131 -10 115 -9 116 b 115 430 49 209 91 317 b 136 460 119 451 123 456 \"},\n\"vd0\":{\"x_min\":-10.890625,\"x_max\":299.4375,\"ha\":294,\"o\":\"m 44 174 b 51 174 47 174 49 174 b 68 173 55 174 61 174 l 287 112 l 551 40 b 615 20 617 22 609 23 b 626 0 622 16 626 8 b 615 -22 626 -9 622 -18 b 613 -23 613 -23 613 -23 b 613 -23 613 -23 613 -23 b 287 -113 613 -24 597 -29 l 68 -174 b 53 -176 61 -176 57 -176 b 39 -172 47 -176 43 -174 b 27 -151 31 -167 27 -159 b 39 -129 27 -141 31 -133 b 230 -74 43 -124 20 -131 l 370 -36 l 468 -9 b 498 0 484 -4 498 -1 b 468 8 498 0 484 2 l 370 34 l 230 73 b 40 126 28 129 43 124 b 27 149 31 131 27 140 b 44 174 27 161 34 170 m 205 110 l 205 300 b 205 330 245 330 245 300 l 245 300 l 245 -300 b 245 -330 205 -330 205 -300 l 205 -300 l 205 110 l 345 90 m 345 90 l 345 330 b 345 360 385 360 385 330 l 385 330 l 385 -270 b 385 -300 345 -300 345 -270 l 345 -270 l 345 90 \"},\n\"vd1\":{\"x_min\":-20,\"x_max\":320,\"ha\":257,\"o\":\"m -8 200 b -8 210 8 200 16 200 l 20 148 -199 l 23 -615 b 0 -629 9 -629 6 -629 l -21 -612 l -21 -201 l -21 216 l -20 200 m 16 200 l 310 0 l 240 0 l 16 140 l 16 -120 l 240 0 l 310 0 l 16 -200 \"}\n},\n\"cssFontWeight\":\"normal\",\"ascender\":1903,\"underlinePosition\":-125,\"cssFontStyle\":\"normal\",\"boundingBox\":{\"yMin\":-2065.375,\"xMin\":-695.53125,\"yMax\":1901.578125,\"xMax\":1159.671875},\n\"resolution\":1000,\"descender\":-2066,\"familyName\":\"VexFlow-18\",\"lineHeight\":4093,\"underlineThickness\":50\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fonts/vexflow_font.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Support for different rendering contexts: Canvas, Raphael\n\n/* global document: false */\n\nimport { CanvasContext } from './canvascontext';\nimport { RaphaelContext } from './raphaelcontext';\nimport { SVGContext } from './svgcontext';\nimport { Vex } from './vex';\n\nlet lastContext = null;\n\nexport class Renderer {\n  static get Backends() {\n    return {\n      CANVAS: 1,\n      RAPHAEL: 2,\n      SVG: 3,\n      VML: 4,\n    };\n  }\n\n  // End of line types\n  static get LineEndType() {\n    return {\n      NONE: 1, // No leg\n      UP: 2,   // Upward leg\n      DOWN: 3, // Downward leg\n    };\n  }\n\n  // Set this to true if you're using VexFlow inside a runtime\n  // that does not allow modifiying canvas objects. There is a small\n  // performance degradation due to the extra indirection.\n  static get USE_CANVAS_PROXY() {\n    return false;\n  }\n\n  static get lastContext() {\n    return lastContext;\n  }\n  static set lastContext(ctx) {\n    lastContext = ctx;\n  }\n\n  static buildContext(elementId, backend, width, height, background) {\n    const renderer = new Renderer(elementId, backend);\n    if (width && height) { renderer.resize(width, height); }\n\n    if (!background) background = '#FFF';\n    const ctx = renderer.getContext();\n    ctx.setBackgroundFillStyle(background);\n    Renderer.lastContext = ctx;\n    return ctx;\n  }\n\n  static getCanvasContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n  }\n\n  static getRaphaelContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.RAPHAEL, width, height, background);\n  }\n\n  static getSVGContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n  }\n\n  static bolsterCanvasContext(ctx) {\n    if (Renderer.USE_CANVAS_PROXY) {\n      return new CanvasContext(ctx);\n    }\n\n    const methodNames = [\n      'clear', 'setFont', 'setRawFont', 'setFillStyle', 'setBackgroundFillStyle',\n      'setStrokeStyle', 'setShadowColor', 'setShadowBlur', 'setLineWidth',\n      'setLineCap', 'setLineDash', 'openGroup', 'closeGroup', 'getGroup',\n    ];\n\n    ctx.vexFlowCanvasContext = ctx;\n\n    methodNames.forEach(methodName => {\n      ctx[methodName] = ctx[methodName] || CanvasContext.prototype[methodName];\n    });\n\n    return ctx;\n  }\n\n  // Draw a dashed line (horizontal, vertical or diagonal\n  // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n  // setting the second number to 0 draws a solid line.\n  static drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n    context.beginPath();\n\n    const dx = toX - fromX;\n    const dy = toY - fromY;\n    const angle = Math.atan2(dy, dx);\n    let x = fromX;\n    let y = fromY;\n    context.moveTo(fromX, fromY);\n    let idx = 0;\n    let draw = true;\n    while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n      const dashLength = dashPattern[idx++ % dashPattern.length];\n      const nx = x + (Math.cos(angle) * dashLength);\n      x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n      const ny = y + (Math.sin(angle) * dashLength);\n      y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n      if (draw) {\n        context.lineTo(x, y);\n      } else {\n        context.moveTo(x, y);\n      }\n      draw = !draw;\n    }\n\n    context.closePath();\n    context.stroke();\n  }\n\n  constructor(elementId, backend) {\n    this.elementId = elementId;\n    if (!this.elementId) {\n      throw new Vex.RERR('BadArgument', 'Invalid id for renderer.');\n    }\n\n    this.element = document.getElementById(elementId);\n    if (!this.element) this.element = elementId;\n\n    // Verify backend and create context\n    this.ctx = null;\n    this.paper = null;\n    this.backend = backend;\n    if (this.backend === Renderer.Backends.CANVAS) {\n      // Create context.\n      if (!this.element.getContext) {\n        throw new Vex.RERR('BadElement', `Can't get canvas context from element: ${elementId}`);\n      }\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n    } else if (this.backend === Renderer.Backends.RAPHAEL) {\n      this.ctx = new RaphaelContext(this.element);\n    } else if (this.backend === Renderer.Backends.SVG) {\n      this.ctx = new SVGContext(this.element);\n    } else {\n      throw new Vex.RERR('InvalidBackend', `No support for backend: ${this.backend}`);\n    }\n  }\n\n  resize(width, height) {\n    if (this.backend === Renderer.Backends.CANVAS) {\n      if (!this.element.getContext) {\n        throw new Vex.RERR(\n          'BadElement', `Can't get canvas context from element: ${this.elementId}`\n        );\n      }\n\n      const devicePixelRatio = window.devicePixelRatio || 1;\n\n      this.element.width = width * devicePixelRatio;\n      this.element.height = height * devicePixelRatio;\n      this.element.style.width = width + 'px';\n      this.element.style.height = height + 'px';\n\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n      this.ctx.scale(devicePixelRatio, devicePixelRatio);\n    } else {\n      this.ctx.resize(width, height);\n    }\n\n    return this;\n  }\n\n  getContext() { return this.ctx; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/renderer.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// A rendering context for the Raphael backend.\n//\n// Copyright Mohit Cheppudira 2010\n\n/** @constructor */\nexport class CanvasContext {\n  static get WIDTH() {\n    return 600;\n  }\n  static get HEIGHT() {\n    return 400;\n  }\n\n  constructor(context) {\n    // Use a name that is unlikely to clash with a canvas context\n    // property\n    this.vexFlowCanvasContext = context;\n    if (!context.canvas) {\n      this.canvas = {\n        width: CanvasContext.WIDTH,\n        height: CanvasContext.HEIGHT,\n      };\n    } else {\n      this.canvas = context.canvas;\n    }\n  }\n\n  clear() {\n    this.vexFlowCanvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  // Containers not implemented\n  openGroup() {}\n  closeGroup() {}\n  add() {}\n\n  setFont(family, size, weight) {\n    this.vexFlowCanvasContext.font = (weight || '') + ' ' + size + 'pt ' + family;\n    return this;\n  }\n\n  setRawFont(font) {\n    this.vexFlowCanvasContext.font = font;\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.vexFlowCanvasContext.fillStyle = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_fillStyle = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.vexFlowCanvasContext.strokeStyle = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.vexFlowCanvasContext.shadowColor = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.vexFlowCanvasContext.shadowBlur = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.vexFlowCanvasContext.lineWidth = width;\n    return this;\n  }\n\n  setLineCap(cap_type) {\n    this.vexFlowCanvasContext.lineCap = cap_type;\n    return this;\n  }\n\n  // setLineDash: is the one native method in a canvas context\n  // that begins with set, therefore we don't bolster the method\n  // if it already exists (see renderer.bolsterCanvasContext).\n  // If it doesn't exist, we bolster it and assume it's looking for\n  // a ctx.lineDash method, as previous versions of VexFlow\n  // expected.\n  setLineDash(dash) {\n    this.vexFlowCanvasContext.lineDash = dash;\n    return this;\n  }\n\n  scale(x, y) {\n    return this.vexFlowCanvasContext.scale(parseFloat(x), parseFloat(y));\n  }\n\n  resize(width, height) {\n    return this.vexFlowCanvasContext.resize(parseInt(width, 10), parseInt(height, 10));\n  }\n\n  rect(x, y, width, height) {\n    return this.vexFlowCanvasContext.rect(x, y, width, height);\n  }\n\n  fillRect(x, y, width, height) {\n    return this.vexFlowCanvasContext.fillRect(x, y, width, height);\n  }\n\n  clearRect(x, y, width, height) {\n    return this.vexFlowCanvasContext.clearRect(x, y, width, height);\n  }\n\n  beginPath() {\n    return this.vexFlowCanvasContext.beginPath();\n  }\n\n  moveTo(x, y) {\n    return this.vexFlowCanvasContext.moveTo(x, y);\n  }\n\n  lineTo(x, y) {\n    return this.vexFlowCanvasContext.lineTo(x, y);\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    return this.vexFlowCanvasContext.bezierCurveTo(x1, y1, x2, y2, x, y);\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    return this.vexFlowCanvasContext.quadraticCurveTo(x1, y1, x, y);\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    return this.vexFlowCanvasContext.arc(x, y, radius, startAngle, endAngle, antiClockwise);\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    return this.vexFlowCanvasContext.glow();\n  }\n\n  fill() {\n    return this.vexFlowCanvasContext.fill();\n  }\n\n  stroke() {\n    return this.vexFlowCanvasContext.stroke();\n  }\n\n  closePath() {\n    return this.vexFlowCanvasContext.closePath();\n  }\n\n  measureText(text) {\n    return this.vexFlowCanvasContext.measureText(text);\n  }\n\n  fillText(text, x, y) {\n    return this.vexFlowCanvasContext.fillText(text, x, y);\n  }\n\n  save() {\n    return this.vexFlowCanvasContext.save();\n  }\n\n  restore() {\n    return this.vexFlowCanvasContext.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/canvascontext.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A rendering context for the Raphael backend.\n//\n// ## Warning: Deprecated for SVGContext\n// Except in instances where SVG support for IE < 9.0 is\n// needed, SVGContext is recommended.\n\nexport class RaphaelContext {\n  constructor(element) {\n    this.element = element;\n    this.paper = Raphael(element); // eslint-disable-line\n    this.path = '';\n    this.pen = { x: 0, y: 0 };\n    this.lineWidth = 1.0;\n    this.state = {\n      scale: { x: 1, y: 1 },\n      font_family: 'Arial',\n      font_size: 8,\n      font_weight: 800,\n    };\n\n    this.attributes = {\n      'stroke-width': 0.3,\n      'fill': 'black',\n      'stroke': 'black',\n      'font': '10pt Arial',\n    };\n\n    this.background_attributes = {\n      'stroke-width': 0,\n      'fill': 'white',\n      'stroke': 'white',\n      'font': '10pt Arial',\n    };\n\n    this.shadow_attributes = {\n      width: 0,\n      color: 'black',\n    };\n\n    this.state_stack = [];\n  }\n\n  // Containers not implemented\n  openGroup() {}\n  closeGroup() {}\n  add() {}\n\n  setFont(family, size, weight) {\n    this.state.font_family = family;\n    this.state.font_size = size;\n    this.state.font_weight = weight;\n    this.attributes.font = (this.state.font_weight || '') + ' ' +\n      (this.state.font_size * this.state.scale.x) + 'pt ' +\n      this.state.font_family;\n    return this;\n  }\n\n  setRawFont(font) {\n    this.attributes.font = font;\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.attributes.fill = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_attributes.fill = style;\n    this.background_attributes.stroke = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.attributes.stroke = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.shadow_attributes.color = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.shadow_attributes.width = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.attributes['stroke-width'] = width;\n    this.lineWidth = width;\n  }\n\n  // Empty because there is no equivalent in SVG\n  setLineDash() { return this; }\n  setLineCap() { return this; }\n\n  scale(x, y) {\n    this.state.scale = { x, y };\n    // The scale() method is deprecated as of Raphael.JS 2.0, and\n    // can no longer be used as an option in an Element.attr() call.\n    // It is preserved here for users running earlier versions of\n    // Raphael.JS, though it has no effect on the SVG output in\n    // Raphael 2 and higher.\n    this.attributes.transform = 'S' + x + ',' + y + ',0,0';\n    this.attributes.scale = x + ',' + y + ',0,0';\n    this.attributes.font = this.state.font_size * this.state.scale.x + 'pt ' +\n      this.state.font_family;\n    this.background_attributes.transform = 'S' + x + ',' + y + ',0,0';\n    this.background_attributes.font = this.state.font_size *\n      this.state.scale.x + 'pt ' +\n      this.state.font_family;\n    return this;\n  }\n\n  clear() { this.paper.clear(); }\n\n  resize(width, height) {\n    this.element.style.width = width;\n    this.paper.setSize(width, height);\n    return this;\n  }\n\n  // Sets the SVG `viewBox` property, which results in auto scaling images when its container\n  // is resized.\n  //\n  // Usage: `ctx.setViewBox(\"0 0 600 400\")`\n  setViewBox(viewBox) {\n    this.paper.canvas.setAttribute('viewBox', viewBox);\n  }\n\n  rect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5).\n      attr(this.attributes).\n      attr('fill', 'none').\n      attr('stroke-width', this.lineWidth);\n    return this;\n  }\n\n  fillRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5).attr(this.attributes);\n    return this;\n  }\n\n  clearRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5).\n      attr(this.background_attributes);\n    return this;\n  }\n\n  beginPath() {\n    this.path = '';\n    this.pen.x = 0;\n    this.pen.y = 0;\n    return this;\n  }\n\n  moveTo(x, y) {\n    this.path += 'M' + x + ',' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  lineTo(x, y) {\n    this.path += 'L' + x + ',' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this.path += 'C' +\n      x1 + ',' +\n      y1 + ',' +\n      x2 + ',' +\n      y2 + ',' +\n      x + ',' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    this.path += 'Q' +\n      x1 + ',' +\n      y1 + ',' +\n      x + ',' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    function normalizeAngle(angle) {\n      while (angle < 0) {\n        angle += Math.PI * 2;\n      }\n\n      while (angle > Math.PI * 2) {\n        angle -= Math.PI * 2;\n      }\n      return angle;\n    }\n\n    startAngle = normalizeAngle(startAngle);\n    endAngle = normalizeAngle(endAngle);\n\n    if (startAngle > endAngle) {\n      const tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n      antiClockwise = !antiClockwise;\n    }\n\n    const delta = endAngle - startAngle;\n\n    if (delta > Math.PI) {\n      this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n      this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n    } else {\n      this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n    }\n    return this;\n  }\n\n  arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n    const x1 = x + radius * Math.cos(startAngle);\n    const y1 = y + radius * Math.sin(startAngle);\n\n    const x2 = x + radius * Math.cos(endAngle);\n    const y2 = y + radius * Math.sin(endAngle);\n\n    let largeArcFlag = 0;\n    let sweepFlag = 0;\n    if (antiClockwise) {\n      sweepFlag = 1;\n      if (endAngle - startAngle < Math.PI) {\n        largeArcFlag = 1;\n      }\n    } else if (endAngle - startAngle > Math.PI) {\n      largeArcFlag = 1;\n    }\n\n    this.path += 'M' + x1 + ',' + y1 + ',A' +\n      radius + ',' + radius + ',0,' + largeArcFlag + ',' + sweepFlag + ',' +\n      x2 + ',' + y2 + 'M' + this.pen.x + ',' + this.pen.y;\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    const out = this.paper.set();\n    if (this.shadow_attributes.width > 0) {\n      const sa = this.shadow_attributes;\n      const num_paths = sa.width / 2;\n      for (let i = 1; i <= num_paths; i++) {\n        out.push(this.paper.path(this.path).attr({\n          stroke: sa.color,\n          'stroke-linejoin': 'round',\n          'stroke-linecap': 'round',\n          'stroke-width': +(sa.width / num_paths * i).toFixed(3),\n          opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n          // See note in this.scale(): In Raphael the scale() method\n          // is deprecated and removed as of Raphael 2.0 and replaced\n          // by the transform() method.  It is preserved here for\n          // users with earlier versions of Raphael, but has no effect\n          // on the output SVG in Raphael 2.0+.\n          transform: this.attributes.transform,\n          scale: this.attributes.scale,\n        }));\n      }\n    }\n    return out;\n  }\n\n  fill() {\n    const elem = this.paper.path(this.path).\n      attr(this.attributes).\n      attr('stroke-width', 0);\n    this.glow(elem);\n    return this;\n  }\n\n  stroke() {\n    // The first line of code below is, unfortunately, a bit of a hack:\n    // Raphael's transform() scaling does not scale the stroke-width, so\n    // in order to scale a stroke, we have to manually scale the\n    // stroke-width.\n    //\n    // This works well so long as the X & Y states for this.scale() are\n    // relatively similar.  However, if they are very different, we\n    // would expect horizontal and vertical lines to have different\n    // stroke-widths.\n    //\n    // In the future, if we want to support very divergent values for\n    // horizontal and vertical scaling, we may want to consider\n    // implementing SVG scaling with properties of the SVG viewBox &\n    // viewPort and removing it entirely from the Element.attr() calls.\n    // This would more closely parallel the approach taken in\n    // canvascontext.js as well.\n\n    const strokeWidth = this.lineWidth * (this.state.scale.x + this.state.scale.y) / 2;\n    const elem = this.paper.path(this.path).\n      attr(this.attributes).\n      attr('fill', 'none').\n      attr('stroke-width', strokeWidth);\n    this.glow(elem);\n    return this;\n  }\n\n  closePath() {\n    this.path += 'Z';\n    return this;\n  }\n\n  measureText(text) {\n    const txt = this.paper.text(0, 0, text).\n      attr(this.attributes).\n      attr('fill', 'none').\n      attr('stroke', 'none');\n    const bounds = txt.getBBox();\n    txt.remove();\n\n    return {\n      width: bounds.width,\n      height: bounds.height,\n    };\n  }\n\n  fillText(text, x, y) {\n    this.paper\n      .text(\n        x + (this.measureText(text).width / 2),\n        y - (this.state.font_size / (2.25 * this.state.scale.y)),\n        text\n      )\n      .attr(this.attributes);\n\n    return this;\n  }\n\n  save() {\n    // TODO(mmuthanna): State needs to be deep-copied.\n    this.state_stack.push({\n      state: {\n        font_family: this.state.font_family,\n      },\n      attributes: {\n        font: this.attributes.font,\n        fill: this.attributes.fill,\n        stroke: this.attributes.stroke,\n        'stroke-width': this.attributes['stroke-width'],\n      },\n      shadow_attributes: {\n        width: this.shadow_attributes.width,\n        color: this.shadow_attributes.color,\n      },\n    });\n    return this;\n  }\n\n  restore() {\n    // TODO(0xfe): State needs to be deep-restored.\n    const state = this.state_stack.pop();\n    this.state.font_family = state.state.font_family;\n    this.attributes.font = state.attributes.font;\n    this.attributes.fill = state.attributes.fill;\n    this.attributes.stroke = state.attributes.stroke;\n    this.attributes['stroke-width'] = state.attributes['stroke-width'];\n    this.shadow_attributes.width = state.shadow_attributes.width;\n    this.shadow_attributes.color = state.shadow_attributes.color;\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/raphaelcontext.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Gregory Ristow (2015)\n\nimport { Vex } from './vex';\n\nexport class SVGContext {\n  constructor(element) {\n    // element is the parent DOM object\n    this.element = element;\n    // Create the SVG in the SVG namespace:\n    this.svgNS = 'http://www.w3.org/2000/svg';\n    const svg = this.create('svg');\n    // Add it to the canvas:\n    this.element.appendChild(svg);\n\n    // Point to it:\n    this.svg = svg;\n    this.groups = [this.svg]; // Create the group stack\n    this.parent = this.svg;\n\n    this.path = '';\n    this.pen = { x: 0, y: 0 };\n    this.lineWidth = 1.0;\n    this.state = {\n      scale: { x: 1, y: 1 },\n      'font-family': 'Arial',\n      'font-size': '8pt',\n      'font-weight': 'normal',\n    };\n\n    this.attributes = {\n      'stroke-width': 0.3,\n      'fill': 'black',\n      'stroke': 'black',\n      'stroke-dasharray': 'none',\n      'font-family': 'Arial',\n      'font-size': '10pt',\n      'font-weight': 'normal',\n      'font-style': 'normal',\n    };\n\n    this.background_attributes = {\n      'stroke-width': 0,\n      'fill': 'white',\n      'stroke': 'white',\n      'stroke-dasharray': 'none',\n      'font-family': 'Arial',\n      'font-size': '10pt',\n      'font-weight': 'normal',\n      'font-style': 'normal',\n    };\n\n    this.shadow_attributes = {\n      width: 0,\n      color: 'black',\n    };\n\n    this.state_stack = [];\n\n    // Test for Internet Explorer\n    this.iePolyfill();\n  }\n\n  create(svgElementType) {\n    return document.createElementNS(this.svgNS, svgElementType);\n  }\n\n  // Allow grouping elements in containers for interactivity.\n  openGroup(cls, id, attrs) {\n    const group = this.create('g');\n    this.groups.push(group);\n    this.parent.appendChild(group);\n    this.parent = group;\n    if (cls) group.setAttribute('class', Vex.Prefix(cls));\n    if (id) group.setAttribute('id', Vex.Prefix(id));\n\n    if (attrs && attrs.pointerBBox) {\n      group.setAttribute('pointer-events', 'bounding-box');\n    }\n    return group;\n  }\n\n  closeGroup() {\n    this.groups.pop();\n    this.parent = this.groups[this.groups.length - 1];\n  }\n\n  add(elem) {\n    this.parent.appendChild(elem);\n  }\n\n  // Tests if the browser is Internet Explorer; if it is,\n  // we do some tricks to improve text layout.  See the\n  // note at ieMeasureTextFix() for details.\n  iePolyfill() {\n    if (typeof(navigator) !== 'undefined') {\n      this.ie = (\n        /MSIE 9/i.test(navigator.userAgent) ||\n        /MSIE 10/i.test(navigator.userAgent) ||\n        /rv:11\\.0/i.test(navigator.userAgent) ||\n        /Trident/i.test(navigator.userAgent)\n      );\n    }\n  }\n\n  // ### Styling & State Methods:\n\n  setFont(family, size, weight) {\n    // Unlike canvas, in SVG italic is handled by font-style,\n    // not weight. So: we search the weight argument and\n    // apply bold and italic to weight and style respectively.\n    let bold = false;\n    let italic = false;\n    let style = 'normal';\n    // Weight might also be a number (200, 400, etc...) so we\n    // test its type to be sure we have access to String methods.\n    if (typeof weight === 'string') {\n        // look for \"italic\" in the weight:\n      if (weight.indexOf('italic') !== -1) {\n        weight = weight.replace(/italic/g, '');\n        italic = true;\n      }\n        // look for \"bold\" in weight\n      if (weight.indexOf('bold') !== -1) {\n        weight = weight.replace(/bold/g, '');\n        bold = true;\n      }\n        // remove any remaining spaces\n      weight = weight.replace(/ /g, '');\n    }\n    weight = bold ? 'bold' : weight;\n    weight = (typeof weight === 'undefined' || weight === '') ? 'normal' : weight;\n\n    style = italic ? 'italic' : style;\n\n    const fontAttributes = {\n      'font-family': family,\n      'font-size': size + 'pt',\n      'font-weight': weight,\n      'font-style': style,\n    };\n\n    // Store the font size so that if the browser is Internet\n    // Explorer we can fix its calculations of text width.\n    this.fontSize = Number(size);\n\n    Vex.Merge(this.attributes, fontAttributes);\n    Vex.Merge(this.state, fontAttributes);\n\n    return this;\n  }\n\n  setRawFont(font) {\n    font = font.trim();\n    // Assumes size first, splits on space -- which is presently\n    // how all existing modules are calling this.\n    const fontArray = font.split(' ');\n\n    this.attributes['font-family'] = fontArray[1];\n    this.state['font-family'] = fontArray[1];\n\n    this.attributes['font-size'] = fontArray[0];\n    this.state['font-size'] = fontArray[0];\n\n    // Saves fontSize for IE polyfill\n    this.fontSize = Number(fontArray[0].match(/\\d+/));\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.attributes.fill = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_attributes.fill = style;\n    this.background_attributes.stroke = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.attributes.stroke = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.shadow_attributes.color = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.shadow_attributes.width = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.attributes['stroke-width'] = width;\n    this.lineWidth = width;\n  }\n\n  // @param array {lineDash} as [dashInt, spaceInt, dashInt, spaceInt, etc...]\n  setLineDash(lineDash) {\n    if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n      lineDash = lineDash.join(', ');\n      this.attributes['stroke-dasharray'] = lineDash;\n      return this;\n    } else {\n      throw new Vex.RERR('ArgumentError', 'lineDash must be an array of integers.');\n    }\n  }\n\n  setLineCap(lineCap) {\n    this.attributes['stroke-linecap'] = lineCap;\n    return this;\n  }\n\n  // ### Sizing & Scaling Methods:\n\n  // TODO (GCR): See note at scale() -- seperate our internal\n  // conception of pixel-based width/height from the style.width\n  // and style.height properties eventually to allow users to\n  // apply responsive sizing attributes to the SVG.\n  resize(width, height) {\n    this.width = width;\n    this.height = height;\n    this.element.style.width = width;\n    const attributes = {\n      width,\n      height,\n    };\n    this.applyAttributes(this.svg, attributes);\n    return this;\n  }\n\n  scale(x, y) {\n    // uses viewBox to scale\n    // TODO (GCR): we may at some point want to distinguish the\n    // style.width / style.height properties that are applied to\n    // the SVG object from our internal conception of the SVG\n    // width/height.  This would allow us to create automatically\n    // scaling SVG's that filled their containers, for instance.\n    //\n    // As this isn't implemented in Canvas or Raphael contexts,\n    // I've left as is for now, but in using the viewBox to\n    // handle internal scaling, am trying to make it possible\n    // for us to eventually move in that direction.\n\n    this.state.scale = { x, y };\n    const visibleWidth = this.width / x;\n    const visibleHeight = this.height / y;\n    this.setViewBox(0, 0, visibleWidth, visibleHeight);\n\n    return this;\n  }\n\n  setViewBox(...args) {\n    // Override for \"x y w h\" style:\n    if (args.length === 1) {\n      const [viewBox] = args;\n      this.svg.setAttribute('viewBox', viewBox);\n    } else {\n      const [xMin, yMin, width, height] = args;\n      const viewBoxString = xMin + ' ' + yMin + ' ' + width + ' ' + height;\n      this.svg.setAttribute('viewBox', viewBoxString);\n    }\n  }\n\n  // ### Drawing helper methods:\n\n  applyAttributes(element, attributes) {\n    Object\n      .keys(attributes)\n      .forEach(propertyName =>\n        element.setAttributeNS(null, propertyName, attributes[propertyName]));\n\n    return element;\n  }\n\n  // ### Shape & Path Methods:\n\n  clear() {\n    // Clear the SVG by removing all inner children.\n\n    // (This approach is usually slightly more efficient\n    // than removing the old SVG & adding a new one to\n    // the container element, since it does not cause the\n    // container to resize twice.  Also, the resize\n    // triggered by removing the entire SVG can trigger\n    // a touchcancel event when the element resizes away\n    // from a touch point.)\n\n    while (this.svg.lastChild) {\n      this.svg.removeChild(this.svg.lastChild);\n    }\n\n    // Replace the viewbox attribute we just removed:\n    this.scale(this.state.scale.x, this.state.scale.y);\n  }\n\n  // ## Rectangles:\n\n  rect(x, y, width, height, attributes) {\n    // Avoid invalid negative height attribs by\n    // flipping the rectangle on its head:\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    // Create the rect & style it:\n    const rectangle = this.create('rect');\n    if (typeof attributes === 'undefined') {\n      attributes = {\n        fill: 'none',\n        'stroke-width': this.lineWidth,\n        stroke: 'black',\n      };\n    }\n\n    Vex.Merge(attributes, {\n      x,\n      y,\n      width,\n      height,\n    });\n\n    this.applyAttributes(rectangle, attributes);\n\n    this.add(rectangle);\n    return this;\n  }\n\n  fillRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    this.rect(x, y, width, height, this.attributes);\n    return this;\n  }\n\n  clearRect(x, y, width, height) {\n    // TODO(GCR): Improve implementation of this...\n    // Currently it draws a box of the background color, rather\n    // than creating alpha through lower z-levels.\n    //\n    // See the implementation of this in SVGKit:\n    // http://sourceforge.net/projects/svgkit/\n    // as a starting point.\n    //\n    // Adding a large number of transform paths (as we would\n    // have to do) could be a real performance hit.  Since\n    // tabNote seems to be the only module that makes use of this\n    // it may be worth creating a seperate tabStave that would\n    // draw lines around locations of tablature fingering.\n    //\n\n    this.rect(x, y, width, height, this.background_attributes);\n    return this;\n  }\n\n  // ## Paths:\n\n  beginPath() {\n    this.path = '';\n    this.pen.x = 0;\n    this.pen.y = 0;\n    return this;\n  }\n\n  moveTo(x, y) {\n    this.path += 'M' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  lineTo(x, y) {\n    this.path += 'L' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this.path += 'C' +\n      x1 + ' ' +\n      y1 + ',' +\n      x2 + ' ' +\n      y2 + ',' +\n      x + ' ' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    this.path += 'Q' +\n      x1 + ' ' +\n      y1 + ',' +\n      x + ' ' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    function normalizeAngle(angle) {\n      while (angle < 0) {\n        angle += Math.PI * 2;\n      }\n\n      while (angle > Math.PI * 2) {\n        angle -= Math.PI * 2;\n      }\n      return angle;\n    }\n\n    startAngle = normalizeAngle(startAngle);\n    endAngle = normalizeAngle(endAngle);\n\n    if (startAngle > endAngle) {\n      const tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n      antiClockwise = !antiClockwise;\n    }\n\n    const delta = endAngle - startAngle;\n\n    if (delta > Math.PI) {\n      this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n      this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n    } else {\n      this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n    }\n    return this;\n  }\n\n  arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n    const x1 = x + radius * Math.cos(startAngle);\n    const y1 = y + radius * Math.sin(startAngle);\n\n    const x2 = x + radius * Math.cos(endAngle);\n    const y2 = y + radius * Math.sin(endAngle);\n\n    let largeArcFlag = 0;\n    let sweepFlag = 0;\n    if (antiClockwise) {\n      sweepFlag = 1;\n      if (endAngle - startAngle < Math.PI) {\n        largeArcFlag = 1;\n      }\n    } else if (endAngle - startAngle > Math.PI) {\n      largeArcFlag = 1;\n    }\n\n    this.path += 'M' + x1 + ' ' + y1 + ' A' +\n      radius + ' ' + radius + ' 0 ' + largeArcFlag + ' ' + sweepFlag + ' ' +\n      x2 + ' ' + y2 + 'M' + this.pen.x + ' ' + this.pen.y;\n  }\n\n  closePath() {\n    this.path += 'Z';\n\n    return this;\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    // Calculate the width & paths of the glow:\n    if (this.shadow_attributes.width > 0) {\n      const sa = this.shadow_attributes;\n      const num_paths = sa.width / 2;\n      // Stroke at varying widths to create effect of gaussian blur:\n      for (let i = 1; i <= num_paths; i++) {\n        const attributes = {\n          stroke: sa.color,\n          'stroke-linejoin': 'round',\n          'stroke-linecap': 'round',\n          'stroke-width': +((sa.width * 0.4) / num_paths * i).toFixed(3),\n          opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n        };\n\n        const path = this.create('path');\n        attributes.d = this.path;\n        this.applyAttributes(path, attributes);\n        this.add(path);\n      }\n    }\n    return this;\n  }\n\n  fill(attributes) {\n    // If our current path is set to glow, make it glow\n    this.glow();\n\n    const path = this.create('path');\n    if (typeof attributes === 'undefined') {\n      attributes = {};\n      Vex.Merge(attributes, this.attributes);\n      attributes.stroke = 'none';\n    }\n\n    attributes.d = this.path;\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  stroke() {\n    // If our current path is set to glow, make it glow.\n    this.glow();\n\n    const path = this.create('path');\n    const attributes = {};\n    Vex.Merge(attributes, this.attributes);\n    attributes.fill = 'none';\n    attributes['stroke-width'] = this.lineWidth;\n    attributes.d = this.path;\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  // ## Text Methods:\n  measureText(text) {\n    const txt = this.create('text');\n    if (typeof(txt.getBBox) !== 'function') {\n      return { x: 0, y: 0, width: 0, height: 0 };\n    }\n\n    txt.textContent = text;\n    this.applyAttributes(txt, this.attributes);\n\n    // Temporarily add it to the document for measurement.\n    this.svg.appendChild(txt);\n\n    let bbox = txt.getBBox();\n    if (this.ie && text !== '' && this.attributes['font-style'] === 'italic') {\n      bbox = this.ieMeasureTextFix(bbox, text);\n    }\n\n    this.svg.removeChild(txt);\n    return bbox;\n  }\n\n  ieMeasureTextFix(bbox) {\n    // Internet Explorer over-pads text in italics,\n    // resulting in giant width estimates for measureText.\n    // To fix this, we use this formula, tested against\n    // ie 11:\n    // overestimate (in pixels) = FontSize(in pt) * 1.196 + 1.96\n    // And then subtract the overestimate from calculated width.\n\n    const fontSize = Number(this.fontSize);\n    const m = 1.196;\n    const b = 1.9598;\n    const widthCorrection = (m * fontSize) + b;\n    const width = bbox.width - widthCorrection;\n    const height = bbox.height - 1.5;\n\n    // Get non-protected copy:\n    const box = {\n      x: bbox.x,\n      y: bbox.y,\n      width,\n      height,\n    };\n\n    return box;\n  }\n\n  fillText(text, x, y) {\n    const attributes = {};\n    Vex.Merge(attributes, this.attributes);\n    attributes.stroke = 'none';\n    attributes.x = x;\n    attributes.y = y;\n\n    const txt = this.create('text');\n    txt.textContent = text;\n    this.applyAttributes(txt, attributes);\n    this.add(txt);\n  }\n\n  save() {\n    // TODO(mmuthanna): State needs to be deep-copied.\n    this.state_stack.push({\n      state: {\n        'font-family': this.state['font-family'],\n        'font-weight': this.state['font-weight'],\n        'font-style': this.state['font-style'],\n        'font-size': this.state['font-size'],\n      },\n      attributes: {\n        'font-family': this.attributes['font-family'],\n        'font-weight': this.attributes['font-weight'],\n        'font-style': this.attributes['font-style'],\n        'font-size': this.attributes['font-size'],\n        fill: this.attributes.fill,\n        stroke: this.attributes.stroke,\n        'stroke-width': this.attributes['stroke-width'],\n        'stroke-dasharray': this.attributes['stroke-dasharray'],\n      },\n      shadow_attributes: {\n        width: this.shadow_attributes.width,\n        color: this.shadow_attributes.color,\n      },\n    });\n    return this;\n  }\n\n  restore() {\n    // TODO(0xfe): State needs to be deep-restored.\n    const state = this.state_stack.pop();\n    this.state['font-family'] = state.state['font-family'];\n    this.state['font-weight'] = state.state['font-weight'];\n    this.state['font-style'] = state.state['font-style'];\n    this.state['font-size'] = state.state['font-size'];\n\n    this.attributes['font-family'] = state.attributes['font-family'];\n    this.attributes['font-weight'] = state.attributes['font-weight'];\n    this.attributes['font-style'] = state.attributes['font-style'];\n    this.attributes['font-size'] = state.attributes['font-size'];\n\n    this.attributes.fill = state.attributes.fill;\n    this.attributes.stroke = state.attributes.stroke;\n    this.attributes['stroke-width'] = state.attributes['stroke-width'];\n    this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n\n    this.shadow_attributes.width = state.shadow_attributes.width;\n    this.shadow_attributes.color = state.shadow_attributes.color;\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/svgcontext.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the formatting and layout algorithms that are used\n// to position notes in a voice. The algorithm can align multiple voices both\n// within a stave, and across multiple staves.\n//\n// To do this, the formatter breaks up voices into a grid of rational-valued\n// `ticks`, to which each note is assigned. Then, minimum widths are assigned\n// to each tick based on the widths of the notes and modifiers in that tick. This\n// establishes the smallest amount of space required for each tick.\n//\n// Finally, the formatter distributes the left over space proportionally to\n// all the ticks, setting the `x` values of the notes in each tick.\n//\n// See `tests/formatter_tests.js` for usage examples. The helper functions included\n// here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n\nimport { Vex } from './vex';\nimport { Beam } from './beam';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\nimport { Voice } from './voice';\nimport { StaveConnector } from './staveconnector';\nimport { StaveNote } from './stavenote';\nimport { Note } from './note';\nimport { ModifierContext } from './modifiercontext';\nimport { TickContext } from './tickcontext';\n\n// To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\nfunction L(...args) { if (Formatter.DEBUG) Vex.L('Vex.Flow.Formatter', args); }\n\n// Helper function to locate the next non-rest note(s).\nfunction lookAhead(notes, restLine, i, compare) {\n  // If no valid next note group, nextRestLine is same as current.\n  let nextRestLine = restLine;\n\n  // Get the rest line for next valid non-rest note group.\n  for (i += 1; i < notes.length; i += 1) {\n    const note = notes[i];\n    if (!note.isRest() && !note.shouldIgnoreTicks()) {\n      nextRestLine = note.getLineForRest();\n      break;\n    }\n  }\n\n  // Locate the mid point between two lines.\n  if (compare && restLine !== nextRestLine) {\n    const top = Math.max(restLine, nextRestLine);\n    const bot = Math.min(restLine, nextRestLine);\n    nextRestLine = Vex.MidLine(top, bot);\n  }\n  return nextRestLine;\n}\n\n// Take an array of `voices` and place aligned tickables in the same context. Returns\n// a mapping from `tick` to `ContextType`, a list of `tick`s, and the resolution\n// multiplier.\n//\n// Params:\n// * `voices`: Array of `Voice` instances.\n// * `ContextType`: A context class (e.g., `ModifierContext`, `TickContext`)\n// * `addToContext`: Function to add tickable to context.\nfunction createContexts(voices, ContextType, addToContext) {\n  if (!voices || !voices.length) {\n    throw new Vex.RERR('BadArgument', 'No voices to format');\n  }\n\n  // Find out highest common multiple of resolution multipliers.\n  // The purpose of this is to find out a common denominator\n  // for all fractional tick values in all tickables of all voices,\n  // so that the values can be expanded and the numerator used\n  // as an integer tick value.\n  const totalTicks = voices[0].getTotalTicks();\n  const resolutionMultiplier = voices.reduce((resolutionMultiplier, voice) => {\n    if (!voice.getTotalTicks().equals(totalTicks)) {\n      throw new Vex.RERR(\n        'TickMismatch', 'Voices should have same total note duration in ticks.'\n       );\n    }\n\n    if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n      throw new Vex.RERR(\n        'IncompleteVoice', 'Voice does not have enough notes.'\n      );\n    }\n\n    return Math.max(\n      resolutionMultiplier,\n      Fraction.LCM(resolutionMultiplier, voice.getResolutionMultiplier())\n    );\n  }, 1);\n\n  // Initialize tick maps.\n  const tickToContextMap = {};\n  const tickList = [];\n  const contexts = [];\n\n  // For each voice, extract notes and create a context for every\n  // new tick that hasn't been seen before.\n  voices.forEach(voice => {\n    // Use resolution multiplier as denominator to expand ticks\n    // to suitable integer values, so that no additional expansion\n    // of fractional tick values is needed.\n    const ticksUsed = new Fraction(0, resolutionMultiplier);\n\n    voice.getTickables().forEach(tickable => {\n      const integerTicks = ticksUsed.numerator;\n\n      // If we have no tick context for this tick, create one.\n      if (!tickToContextMap[integerTicks]) {\n        const newContext = new ContextType();\n        contexts.push(newContext);\n        tickToContextMap[integerTicks] = newContext;\n      }\n\n      // Add this tickable to the TickContext.\n      addToContext(tickable, tickToContextMap[integerTicks]);\n\n      // Maintain a sorted list of tick contexts.\n      tickList.push(integerTicks);\n      ticksUsed.add(tickable.getTicks());\n    });\n  });\n\n  return {\n    map: tickToContextMap,\n    array: contexts,\n    list: Vex.SortAndUnique(tickList, (a, b) => a - b, (a, b) => a === b),\n    resolutionMultiplier,\n  };\n}\n\nexport class Formatter {\n  // Helper function to layout \"notes\" one after the other without\n  // regard for proportions. Useful for tests and debugging.\n  static SimpleFormat(notes, x = 0, { paddingBetween = 10 } = {}) {\n    notes.reduce((x, note) => {\n      note.addToModifierContext(new ModifierContext());\n      const tick = new TickContext().addTickable(note).preFormat();\n      const extra = tick.getExtraPx();\n      tick.setX(x + extra.left);\n\n      return x + tick.getWidth() + extra.right + paddingBetween;\n    }, x);\n  }\n\n  // Helper function to plot formatter debug info.\n  static plotDebugging(ctx, formatter, xPos, y1, y2) {\n    const x = xPos + Note.STAVEPADDING;\n    const contextGaps = formatter.contextGaps;\n    function stroke(x1, x2, color) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(1);\n      ctx.fillRect(x1, y1, x2 - x1, y2 - y1);\n    }\n\n    ctx.save();\n    ctx.setFont('Arial', 8, '');\n\n    contextGaps.gaps.forEach(gap => {\n      stroke(x + gap.x1, x + gap.x2, '#aaa');\n      // Vex.drawDot(ctx, xPos + gap.x1, yPos, 'blue');\n      ctx.fillText(Math.round(gap.x2 - gap.x1), x + gap.x1, y2 + 12);\n    });\n\n    ctx.fillText(Math.round(contextGaps.total) + 'px', x - 20, y2 + 12);\n    ctx.setFillStyle('red');\n\n    ctx.fillText('Loss: ' +\n      formatter.lossHistory.map(loss => Math.round(loss)), x - 20, y2 + 22);\n    ctx.restore();\n  }\n\n  // Helper function to format and draw a single voice. Returns a bounding\n  // box for the notation.\n  //\n  // Parameters:\n  // * `ctx` - The rendering context\n  // * `stave` - The stave to which to draw (`Stave` or `TabStave`)\n  // * `notes` - Array of `Note` instances (`StaveNote`, `TextNote`, `TabNote`, etc.)\n  // * `params` - One of below:\n  //    * Setting `autobeam` only `(context, stave, notes, true)` or\n  //      `(ctx, stave, notes, {autobeam: true})`\n  //    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n  //    * Setting both a struct is needed `(context, stave, notes, {\n  //      autobeam: true, align_rests: true})`\n  //\n  // `autobeam` automatically generates beams for the notes.\n  // `align_rests` aligns rests with nearby notes.\n  static FormatAndDraw(ctx, stave, notes, params) {\n    const options = {\n      auto_beam: false,\n      align_rests: false,\n    };\n\n    if (typeof params === 'object') {\n      Vex.Merge(options, params);\n    } else if (typeof params === 'boolean') {\n      options.auto_beam = params;\n    }\n\n    // Start by creating a voice and adding all the notes to it.\n    const voice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(notes);\n\n    // Then create beams, if requested.\n    const beams = options.auto_beam ? Beam.applyAndGetBeams(voice) : [];\n\n    // Instantiate a `Formatter` and format the notes.\n    new Formatter()\n      .joinVoices([voice], { align_rests: options.align_rests })\n      .formatToStave([voice], stave, { align_rests: options.align_rests, stave });\n\n    // Render the voice and beams to the stave.\n    voice.setStave(stave).draw(ctx, stave);\n    beams.forEach(beam => beam.setContext(ctx).draw());\n\n    // Return the bounding box of the voice.\n    return voice.getBoundingBox();\n  }\n\n  // Helper function to format and draw aligned tab and stave notes in two\n  // separate staves.\n  //\n  // Parameters:\n  // * `ctx` - The rendering context\n  // * `tabstave` - A `TabStave` instance on which to render `TabNote`s.\n  // * `stave` - A `Stave` instance on which to render `Note`s.\n  // * `notes` - Array of `Note` instances for the stave (`StaveNote`, `BarNote`, etc.)\n  // * `tabnotes` - Array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n  // * `autobeam` - Automatically generate beams.\n  // * `params` - A configuration object:\n  //    * `autobeam` automatically generates beams for the notes.\n  //    * `align_rests` aligns rests with nearby notes.\n  static FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autobeam, params) {\n    const opts = {\n      auto_beam: autobeam,\n      align_rests: false,\n    };\n\n    if (typeof params === 'object') {\n      Vex.Merge(opts, params);\n    } else if (typeof params === 'boolean') {\n      opts.auto_beam = params;\n    }\n\n    // Create a `4/4` voice for `notes`.\n    const notevoice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(notes);\n\n    // Create a `4/4` voice for `tabnotes`.\n    const tabvoice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(tabnotes);\n\n      // Then create beams, if requested.\n    const beams = opts.auto_beam ? Beam.applyAndGetBeams(notevoice) : [];\n\n    // Instantiate a `Formatter` and align tab and stave notes.\n    new Formatter()\n      .joinVoices([notevoice], { align_rests: opts.align_rests })\n      .joinVoices([tabvoice])\n      .formatToStave([notevoice, tabvoice], stave, { align_rests: opts.align_rests });\n\n    // Render voices and beams to staves.\n    notevoice.draw(ctx, stave);\n    tabvoice.draw(ctx, tabstave);\n    beams.forEach(beam => beam.setContext(ctx).draw());\n\n    // Draw a connector between tab and note staves.\n    new StaveConnector(stave, tabstave).setContext(ctx).draw();\n  }\n\n  // Auto position rests based on previous/next note positions.\n  //\n  // Params:\n  // * `notes`: An array of notes.\n  // * `alignAllNotes`: If set to false, only aligns non-beamed notes.\n  // * `alignTuplets`: If set to false, ignores tuplets.\n  static AlignRestsToNotes(notes, alignAllNotes, alignTuplets) {\n    notes.forEach((note, index) => {\n      if (note instanceof StaveNote && note.isRest()) {\n        if (note.tuplet && !alignTuplets) return;\n\n        // If activated rests not on default can be rendered as specified.\n        const position = note.getGlyph().position.toUpperCase();\n        if (position !== 'R/4' && position !== 'B/4') return;\n\n        if (alignAllNotes || note.beam != null) {\n          // Align rests with previous/next notes.\n          const props = note.getKeyProps()[0];\n          if (index === 0) {\n            props.line = lookAhead(notes, props.line, index, false);\n            note.setKeyLine(0, props.line);\n          } else if (index > 0 && index < notes.length) {\n            // If previous note is a rest, use its line number.\n            let restLine;\n            if (notes[index - 1].isRest()) {\n              restLine = notes[index - 1].getKeyProps()[0].line;\n              props.line = restLine;\n            } else {\n              restLine = notes[index - 1].getLineForRest();\n              // Get the rest line for next valid non-rest note group.\n              props.line = lookAhead(notes, restLine, index, true);\n            }\n            note.setKeyLine(0, props.line);\n          }\n        }\n      }\n    });\n\n    return this;\n  }\n\n  constructor() {\n    // Minimum width required to render all the notes in the voices.\n    this.minTotalWidth = 0;\n\n    // This is set to `true` after `minTotalWidth` is calculated.\n    this.hasMinTotalWidth = false;\n\n    // Total number of ticks in the voice.\n    this.totalTicks = new Fraction(0, 1);\n\n    // Arrays of tick and modifier contexts.\n    this.tickContexts = null;\n    this.modiferContexts = null;\n\n    // Gaps between contexts, for free movement of notes post\n    // formatting.\n    this.contextGaps = {\n      total: 0,\n      gaps: [],\n    };\n\n    this.voices = [];\n  }\n\n  // Find all the rests in each of the `voices` and align them\n  // to neighboring notes. If `alignAllNotes` is `false`, then only\n  // align non-beamed notes.\n  alignRests(voices, alignAllNotes) {\n    if (!voices || !voices.length) {\n      throw new Vex.RERR('BadArgument', 'No voices to format rests');\n    }\n\n    voices.forEach(voice =>\n      Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n  }\n\n  // Calculate the minimum width required to align and format `voices`.\n  preCalculateMinTotalWidth(voices) {\n    // Cache results.\n    if (this.hasMinTotalWidth) return this.minTotalWidth;\n\n    // Create tick contexts if not already created.\n    if (!this.tickContexts) {\n      if (!voices) {\n        throw new Vex.RERR(\n          'BadArgument', \"'voices' required to run preCalculateMinTotalWidth\"\n        );\n      }\n\n      this.createTickContexts(voices);\n    }\n\n    const { list: contextList, map: contextMap } = this.tickContexts;\n\n    // Go through each tick context and calculate total width.\n    this.minTotalWidth = contextList\n      .map(tick => {\n        const context = contextMap[tick];\n        context.preFormat();\n        return context.getWidth();\n      })\n      .reduce((a, b) => a + b, 0);\n\n    this.hasMinTotalWidth = true;\n\n    return this.minTotalWidth;\n  }\n\n  // Get minimum width required to render all voices. Either `format` or\n  // `preCalculateMinTotalWidth` must be called before this method.\n  getMinTotalWidth() {\n    if (!this.hasMinTotalWidth) {\n      throw new Vex.RERR(\n        'NoMinTotalWidth',\n        \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\"\n      );\n    }\n\n    return this.minTotalWidth;\n  }\n\n  // Create `ModifierContext`s for each tick in `voices`.\n  createModifierContexts(voices) {\n    const contexts = createContexts(\n      voices,\n      ModifierContext,\n      (tickable, context) => tickable.addToModifierContext(context)\n    );\n\n    this.modiferContexts = contexts;\n    return contexts;\n  }\n\n  // Create `TickContext`s for each tick in `voices`. Also calculate the\n  // total number of ticks in voices.\n  createTickContexts(voices) {\n    const contexts = createContexts(\n      voices,\n      TickContext,\n      (tickable, context) => context.addTickable(tickable)\n    );\n\n    contexts.array.forEach(context => {\n      context.tContexts = contexts.array;\n    });\n\n    this.totalTicks = voices[0].getTicksUsed().clone();\n    this.tickContexts = contexts;\n    return contexts;\n  }\n\n  // This is the core formatter logic. Format voices and justify them\n  // to `justifyWidth` pixels. `renderingContext` is required to justify elements\n  // that can't retreive widths without a canvas. This method sets the `x` positions\n  // of all the tickables/notes in the formatter.\n  preFormat(justifyWidth = 0, renderingContext, voices, stave) {\n    // Initialize context maps.\n    const contexts = this.tickContexts;\n    const { list: contextList, map: contextMap, resolutionMultiplier } = contexts;\n\n    // If voices and a stave were provided, set the Stave for each voice\n    // and preFormat to apply Y values to the notes;\n    if (voices && stave) {\n      voices.forEach(voice => voice.setStave(stave).preFormat());\n    }\n\n    // Now distribute the ticks to each tick context, and assign them their\n    // own X positions.\n    let x = 0;\n    let shift = 0;\n    const centerX = justifyWidth / 2;\n    this.minTotalWidth = 0;\n\n    // Pass 1: Give each note maximum width requested by context.\n    contextList.forEach((tick) => {\n      const context = contextMap[tick];\n      if (renderingContext) context.setContext(renderingContext);\n\n      // Make sure that all tickables in this context have calculated their\n      // space requirements.\n      context.preFormat();\n\n      const width = context.getWidth();\n      this.minTotalWidth += width;\n\n      const metrics = context.getMetrics();\n      x = x + shift + metrics.extraLeftPx;\n      context.setX(x);\n\n      // Calculate shift for the next tick.\n      shift = width - metrics.extraLeftPx;\n    });\n\n    this.minTotalWidth = x + shift;\n    this.hasMinTotalWidth = true;\n\n    // No justification needed. End formatting.\n    if (justifyWidth <= 0) return;\n\n    // Pass 2: Take leftover width, and distribute it to proportionately to\n    // all notes.\n    const remainingX = justifyWidth - this.minTotalWidth;\n    const leftoverPxPerTick = remainingX / (this.totalTicks.value() * resolutionMultiplier);\n    let spaceAccum = 0;\n\n    contextList.forEach((tick, index) => {\n      const prevTick = contextList[index - 1] || 0;\n      const context = contextMap[tick];\n      const tickSpace = (tick - prevTick) * leftoverPxPerTick;\n\n      spaceAccum += tickSpace;\n      context.setX(context.getX() + spaceAccum);\n\n      // Move center aligned tickables to middle\n      context\n        .getCenterAlignedTickables()\n        .forEach(tickable => { // eslint-disable-line\n          tickable.center_x_shift = centerX - context.getX();\n        });\n    });\n\n    // Just one context. Done formatting.\n    if (contextList.length === 1) return;\n\n    this.justifyWidth = justifyWidth;\n    this.lossHistory = [];\n    this.evaluate();\n  }\n\n  // Calculate the total cost of this formatting decision.\n  evaluate() {\n    const justifyWidth = this.justifyWidth;\n    // Calculate available slack per tick context. This works out how much freedom\n    // to move a context has in either direction, without affecting other notes.\n    this.contextGaps = { total: 0, gaps: [] };\n    this.tickContexts.list.forEach((tick, index) => {\n      if (index === 0) return;\n      const prevTick = this.tickContexts.list[index - 1];\n      const prevContext = this.tickContexts.map[prevTick];\n      const context = this.tickContexts.map[tick];\n      const prevMetrics = prevContext.getMetrics();\n\n      const insideRightEdge = prevContext.getX() + prevMetrics.width;\n      const insideLeftEdge = context.getX();\n      const gap = insideLeftEdge - insideRightEdge;\n      this.contextGaps.total += gap;\n      this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n\n      // Tell the tick contexts how much they can reposition themselves.\n      context.getFormatterMetrics().freedom.left = gap;\n      prevContext.getFormatterMetrics().freedom.right = gap;\n    });\n\n    // Calculate mean distance in each voice for each duration type, then calculate\n    // how far each note is from the mean.\n    const durationStats = this.durationStats = {};\n\n    function updateStats(duration, space) {\n      const stats = durationStats[duration];\n      if (stats === undefined) {\n        durationStats[duration] = { mean: space, count: 1 };\n      } else {\n        stats.count += 1;\n        stats.mean = (stats.mean + space) / 2;\n      }\n    }\n\n    this.voices.forEach(voice => {\n      voice.getTickables().forEach((note, i, notes) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getMetrics();\n        const formatterMetrics = note.getFormatterMetrics();\n        const leftNoteEdge = note.getX() + metrics.noteWidth +\n            metrics.modRightPx + metrics.extraRightPx;\n        let space = 0;\n\n        if (i < (notes.length - 1)) {\n          const rightNote = notes[i + 1];\n          const rightMetrics = rightNote.getMetrics();\n          const rightNoteEdge = rightNote.getX() -\n            rightMetrics.modLeftPx - rightMetrics.extraLeftPx;\n\n          space = rightNoteEdge - leftNoteEdge;\n          formatterMetrics.space.used = rightNote.getX() - note.getX();\n          rightNote.getFormatterMetrics().freedom.left = space;\n        } else {\n          space = justifyWidth - leftNoteEdge;\n          formatterMetrics.space.used = justifyWidth - note.getX();\n        }\n\n        formatterMetrics.freedom.right = space;\n        updateStats(duration, formatterMetrics.space.used);\n      });\n    });\n\n    // Calculate how much each note deviates from the mean. Loss function is square\n    // root of the sum of squared deviations.\n    let totalDeviation = 0;\n    this.voices.forEach(voice => {\n      voice.getTickables().forEach((note) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getFormatterMetrics();\n        metrics.iterations += 1;\n        metrics.space.deviation = metrics.space.used - durationStats[duration].mean;\n        metrics.duration = duration;\n        metrics.space.mean = durationStats[duration].mean;\n\n        totalDeviation += Math.pow(durationStats[duration].mean, 2);\n      });\n    });\n\n    this.totalCost = Math.sqrt(totalDeviation);\n    this.lossHistory.push(this.totalCost);\n    return this;\n  }\n\n  // Run a single iteration of rejustification. At a high level, this method calculates\n  // the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n  // attempt to reduce the cost. You can call this method multiple times until it finds\n  // and oscillates around a global minimum.\n  tune() {\n    const sum = (means) => means.reduce((a, b) => a + b);\n\n    // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n    // on adjacent tickcontexts.\n    function move(current, prev, next, shift) {\n      current.setX(current.getX() + shift);\n      current.getFormatterMetrics().freedom.left += shift;\n      current.getFormatterMetrics().freedom.right -= shift;\n\n      if (prev) prev.getFormatterMetrics().freedom.right += shift;\n      if (next) next.getFormatterMetrics().freedom.left -= shift;\n    }\n\n    let shift = 0;\n    this.tickContexts.list.forEach((tick, index, list) => {\n      const context = this.tickContexts.map[tick];\n      const prevContext = (index > 0) ? this.tickContexts.map[list[index - 1]] : null;\n      const nextContext = (index < list.length - 1) ? this.tickContexts.map[list[index + 1]] : null;\n\n      move(context, prevContext, nextContext, shift);\n\n      const cost = -sum(\n        context.getTickables().map(t => t.getFormatterMetrics().space.deviation));\n\n      if (cost > 0) {\n        shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n      } else if (cost < 0) {\n        if (nextContext) {\n          shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n        } else {\n          shift = 0;\n        }\n      }\n\n      const minShift = Math.min(5, Math.abs(shift));\n      shift = shift > 0 ? minShift : -minShift;\n    });\n\n    return this.evaluate();\n  }\n\n  // This is the top-level call for all formatting logic completed\n  // after `x` *and* `y` values have been computed for the notes\n  // in the voices.\n  postFormat() {\n    const postFormatContexts = (contexts) =>\n      contexts.list.forEach(tick => contexts.map[tick].postFormat());\n\n    postFormatContexts(this.modiferContexts);\n    postFormatContexts(this.tickContexts);\n\n    return this;\n  }\n\n  // Take all `voices` and create `ModifierContext`s out of them. This tells\n  // the formatters that the voices belong on a single stave.\n  joinVoices(voices) {\n    this.createModifierContexts(voices);\n    this.hasMinTotalWidth = false;\n    return this;\n  }\n\n  // Align rests in voices, justify the contexts, and position the notes\n  // so voices are aligned and ready to render onto the stave. This method\n  // mutates the `x` positions of all tickables in `voices`.\n  //\n  // Voices are full justified to fit in `justifyWidth` pixels.\n  //\n  // Set `options.context` to the rendering context. Set `options.align_rests`\n  // to true to enable rest alignment.\n  format(voices, justifyWidth, options) {\n    const opts = {\n      align_rests: false,\n      context: null,\n      stave: null,\n    };\n\n    Vex.Merge(opts, options);\n    this.voices = voices;\n    this.alignRests(voices, opts.align_rests);\n    this.createTickContexts(voices);\n    this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n\n    // Only postFormat if a stave was supplied for y value formatting\n    if (opts.stave) this.postFormat();\n\n    return this;\n  }\n\n  // This method is just like `format` except that the `justifyWidth` is inferred\n  // from the `stave`.\n  formatToStave(voices, stave, options) {\n    const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - 10;\n    L('Formatting voices to width: ', justifyWidth);\n    const opts = { context: stave.getContext() };\n    Vex.Merge(opts, options);\n    return this.format(voices, justifyWidth, opts);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/formatter.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `Beams` that span over a set of `StemmableNotes`.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tuplet } from './tuplet';\nimport { Stem } from './stem';\n\nfunction calculateStemDirection(notes) {\n  let lineSum = 0;\n  notes.forEach(note => {\n    if (note.keyProps) {\n      note.keyProps.forEach(keyProp => {\n        lineSum += (keyProp.line - 3);\n      });\n    }\n  });\n\n  if (lineSum >= 0) {\n    return Stem.DOWN;\n  }\n  return Stem.UP;\n}\n\nconst getStemSlope = (firstNote, lastNote) => {\n  const firstStemTipY = firstNote.getStemExtents().topY;\n  const firstStemX = firstNote.getStemX();\n  const lastStemTipY = lastNote.getStemExtents().topY;\n  const lastStemX = lastNote.getStemX();\n  return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n};\n\nexport class Beam extends Element {\n  // Gets the default beam groups for a provided time signature.\n  // Attempts to guess if the time signature is not found in table.\n  // Currently this is fairly naive.\n  static getDefaultBeamGroups(time_sig) {\n    if (!time_sig || time_sig === 'c') {\n      time_sig = '4/4';\n    }\n\n    const defaults = {\n      '1/2': ['1/2'],\n      '2/2': ['1/2'],\n      '3/2': ['1/2'],\n      '4/2': ['1/2'],\n\n      '1/4': ['1/4'],\n      '2/4': ['1/4'],\n      '3/4': ['1/4'],\n      '4/4': ['1/4'],\n\n      '1/8': ['1/8'],\n      '2/8': ['2/8'],\n      '3/8': ['3/8'],\n      '4/8': ['2/8'],\n\n      '1/16': ['1/16'],\n      '2/16': ['2/16'],\n      '3/16': ['3/16'],\n      '4/16': ['2/16'],\n    };\n\n    const groups = defaults[time_sig];\n\n    if (groups === undefined) {\n      // If no beam groups found, naively determine\n      // the beam groupings from the time signature\n      const beatTotal = parseInt(time_sig.split('/')[0], 10);\n      const beatValue = parseInt(time_sig.split('/')[1], 10);\n\n      const tripleMeter = beatTotal % 3 === 0;\n\n      if (tripleMeter) {\n        return [new Fraction(3, beatValue)];\n      } else if (beatValue > 4) {\n        return [new Fraction(2, beatValue)];\n      } else if (beatValue <= 4) {\n        return [new Fraction(1, beatValue)];\n      }\n    } else {\n      return groups.map(group => new Fraction().parse(group));\n    }\n\n    return [new Fraction(1, 4)];\n  }\n\n  // A helper function to automatically build basic beams for a voice. For more\n  // complex auto-beaming use `Beam.generateBeams()`.\n  //\n  // Parameters:\n  // * `voice` - The voice to generate the beams for\n  // * `stem_direction` - A stem direction to apply to the entire voice\n  // * `groups` - An array of `Fraction` representing beat groupings for the beam\n  static applyAndGetBeams(voice, stem_direction, groups) {\n    return Beam.generateBeams(voice.getTickables(), {\n      groups,\n      stem_direction,\n    });\n  }\n\n  // A helper function to autimatically build beams for a voice with\n  // configuration options.\n  //\n  // Example configuration object:\n  //\n  // ```\n  // config = {\n  //   groups: [new Vex.Flow.Fraction(2, 8)],\n  //   stem_direction: -1,\n  //   beam_rests: true,\n  //   beam_middle_only: true,\n  //   show_stemlets: false\n  // };\n  // ```\n  //\n  // Parameters:\n  // * `notes` - An array of notes to create the beams for\n  // * `config` - The configuration object\n  //    * `groups` - Array of `Fractions` that represent the beat structure to beam the notes\n  //    * `stem_direction` - Set to apply the same direction to all notes\n  //    * `beam_rests` - Set to `true` to include rests in the beams\n  //    * `beam_middle_only` - Set to `true` to only beam rests in the middle of the beat\n  //    * `show_stemlets` - Set to `true` to draw stemlets for rests\n  //    * `maintain_stem_directions` - Set to `true` to not apply new stem directions\n  //\n  static generateBeams(notes, config) {\n    if (!config) config = {};\n\n    if (!config.groups || !config.groups.length) {\n      config.groups = [new Fraction(2, 8)];\n    }\n\n    // Convert beam groups to tick amounts\n    const tickGroups = config.groups.map(group => {\n      if (!group.multiply) {\n        throw new Vex.RuntimeError('InvalidBeamGroups',\n          'The beam groups must be an array of Vex.Flow.Fractions');\n      }\n      return group.clone().multiply(Flow.RESOLUTION, 1);\n    });\n\n    const unprocessedNotes = notes;\n    let currentTickGroup = 0;\n    let noteGroups       = [];\n    let currentGroup     = [];\n\n    function getTotalTicks(vf_notes) {\n      return vf_notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n    }\n\n    function nextTickGroup() {\n      if (tickGroups.length - 1 > currentTickGroup) {\n        currentTickGroup += 1;\n      } else {\n        currentTickGroup = 0;\n      }\n    }\n\n    function createGroups() {\n      let nextGroup = [];\n\n      unprocessedNotes.forEach(unprocessedNote => {\n        nextGroup    = [];\n        if (unprocessedNote.shouldIgnoreTicks()) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          return; // Ignore untickables (like bar notes)\n        }\n\n        currentGroup.push(unprocessedNote);\n        const ticksPerGroup = tickGroups[currentTickGroup].clone();\n        const totalTicks = getTotalTicks(currentGroup);\n\n        // Double the amount of ticks in a group, if it's an unbeamable tuplet\n        const unbeamable = Flow.durationToNumber(unprocessedNote.duration) < 8;\n        if (unbeamable && unprocessedNote.tuplet) {\n          ticksPerGroup.numerator *= 2;\n        }\n\n        // If the note that was just added overflows the group tick total\n        if (totalTicks.greaterThan(ticksPerGroup)) {\n          // If the overflow note can be beamed, start the next group\n          // with it. Unbeamable notes leave the group overflowed.\n          if (!unbeamable) {\n            nextGroup.push(currentGroup.pop());\n          }\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        } else if (totalTicks.equals(ticksPerGroup)) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        }\n      });\n\n      // Adds any remainder notes\n      if (currentGroup.length > 0) {\n        noteGroups.push(currentGroup);\n      }\n    }\n\n    function getBeamGroups() {\n      return noteGroups.filter(group => {\n        if (group.length > 1) {\n          let beamable = true;\n          group.forEach(note => {\n            if (note.getIntrinsicTicks() >= Flow.durationToTicks('4')) {\n              beamable = false;\n            }\n          });\n          return beamable;\n        }\n        return false;\n      });\n    }\n\n    // Splits up groups by Rest\n    function sanitizeGroups() {\n      const sanitizedGroups = [];\n      noteGroups.forEach(group => {\n        let tempGroup = [];\n        group.forEach((note, index, group) => {\n          const isFirstOrLast = index === 0 || index === group.length - 1;\n          const prevNote = group[index - 1];\n\n          const breaksOnEachRest = !config.beam_rests && note.isRest();\n          const breaksOnFirstOrLastRest = (config.beam_rests &&\n            config.beam_middle_only && note.isRest() && isFirstOrLast);\n\n          let breakOnStemChange = false;\n          if (config.maintain_stem_directions && prevNote &&\n              !note.isRest() && !prevNote.isRest()) {\n            const prevDirection = prevNote.getStemDirection();\n            const currentDirection = note.getStemDirection();\n            breakOnStemChange = currentDirection !== prevDirection;\n          }\n\n          const isUnbeamableDuration = parseInt(note.duration, 10) < 8;\n\n          // Determine if the group should be broken at this note\n          const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest ||\n                            breakOnStemChange || isUnbeamableDuration;\n\n          if (shouldBreak) {\n            // Add current group\n            if (tempGroup.length > 0) {\n              sanitizedGroups.push(tempGroup);\n            }\n\n            // Start a new group. Include the current note if the group\n            // was broken up by stem direction, as that note needs to start\n            // the next group of notes\n            tempGroup = breakOnStemChange ? [note] : [];\n          } else {\n            // Add note to group\n            tempGroup.push(note);\n          }\n        });\n\n        // If there is a remaining group, add it as well\n        if (tempGroup.length > 0) {\n          sanitizedGroups.push(tempGroup);\n        }\n      });\n\n      noteGroups = sanitizedGroups;\n    }\n\n    function formatStems() {\n      noteGroups.forEach(group => {\n        let stemDirection;\n        if (config.maintain_stem_directions) {\n          const note = findFirstNote(group);\n          stemDirection = note ? note.getStemDirection() : Stem.UP;\n        } else {\n          if (config.stem_direction) {\n            stemDirection = config.stem_direction;\n          } else {\n            stemDirection = calculateStemDirection(group);\n          }\n        }\n        applyStemDirection(group, stemDirection);\n      });\n    }\n\n    function findFirstNote(group) {\n      for (let i = 0; i < group.length; i++) {\n        const note = group[i];\n        if (!note.isRest()) {\n          return note;\n        }\n      }\n\n      return false;\n    }\n\n    function applyStemDirection(group, direction) {\n      group.forEach(note => {\n        note.setStemDirection(direction);\n      });\n    }\n\n    // Get all of the tuplets in all of the note groups\n    function getTuplets() {\n      const uniqueTuplets = [];\n\n      // Go through all of the note groups and inspect for tuplets\n      noteGroups.forEach(group => {\n        let tuplet = null;\n        group.forEach(note => {\n          if (note.tuplet && (tuplet !== note.tuplet)) {\n            tuplet = note.tuplet;\n            uniqueTuplets.push(tuplet);\n          }\n        });\n      });\n      return uniqueTuplets;\n    }\n\n\n    // Using closures to store the variables throughout the various functions\n    // IMO Keeps it this process lot cleaner - but not super consistent with\n    // the rest of the API's style - Silverwolf90 (Cyril)\n    createGroups();\n    sanitizeGroups();\n    formatStems();\n\n    // Get the notes to be beamed\n    const beamedNoteGroups = getBeamGroups();\n\n    // Get the tuplets in order to format them accurately\n    const allTuplets = getTuplets();\n\n    // Create a Vex.Flow.Beam from each group of notes to be beamed\n    const beams = [];\n    beamedNoteGroups.forEach(group => {\n      const beam = new Beam(group);\n\n      if (config.show_stemlets) {\n        beam.render_options.show_stemlets = true;\n      }\n      if (config.secondary_breaks) {\n        beam.render_options.secondary_break_ticks = Flow.durationToTicks(config.secondary_breaks);\n      }\n      if (config.flat_beams === true) {\n        beam.render_options.flat_beams = true;\n        beam.render_options.flat_beam_offset = config.flat_beam_offset;\n      }\n      beams.push(beam);\n    });\n\n    // Reformat tuplets\n    allTuplets.forEach(tuplet => {\n      // Set the tuplet location based on the stem direction\n      const direction = tuplet.notes[0].stem_direction === Stem.DOWN ?\n        Tuplet.LOCATION_BOTTOM : Tuplet.LOCATION_TOP;\n      tuplet.setTupletLocation(direction);\n\n      // If any of the notes in the tuplet are not beamed, draw a bracket.\n      let bracketed = false;\n      for (let i = 0; i < tuplet.notes.length; i++) {\n        const note = tuplet.notes[i];\n        if (note.beam === null) {\n          bracketed = true;\n          break;\n        }\n      }\n      tuplet.setBracketed(bracketed);\n    });\n\n    return beams;\n  }\n\n  constructor(notes, auto_stem) {\n    super();\n    this.setAttribute('type', 'Beam');\n\n    if (!notes || notes === []) {\n      throw new Vex.RuntimeError('BadArguments', 'No notes provided for beam.');\n    }\n\n    if (notes.length === 1) {\n      throw new Vex.RuntimeError('BadArguments', 'Too few notes for beam.');\n    }\n\n    // Validate beam line, direction and ticks.\n    this.ticks = notes[0].getIntrinsicTicks();\n\n    if (this.ticks >= Flow.durationToTicks('4')) {\n      throw new Vex.RuntimeError('BadArguments',\n          'Beams can only be applied to notes shorter than a quarter note.');\n    }\n\n    let i; // shared iterator\n    let note;\n\n    this.stem_direction = Stem.UP;\n\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (note.hasStem()) {\n        this.stem_direction = note.getStemDirection();\n        break;\n      }\n    }\n\n    let stem_direction = this.stem_direction;\n    // Figure out optimal stem direction based on given notes\n    if (auto_stem && notes[0].getCategory() === 'stavenotes')  {\n      stem_direction = calculateStemDirection(notes);\n    } else if (auto_stem && notes[0].getCategory() === 'tabnotes') {\n      // Auto Stem TabNotes\n      const stem_weight = notes.reduce((memo, note) => memo + note.stem_direction, 0);\n\n      stem_direction = stem_weight > -1 ? Stem.UP : Stem.DOWN;\n    }\n\n    // Apply stem directions and attach beam to notes\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (auto_stem) {\n        note.setStemDirection(stem_direction);\n        this.stem_direction = stem_direction;\n      }\n      note.setBeam(this);\n    }\n\n    this.postFormatted = false;\n    this.notes = notes;\n    this.beam_count = this.getBeamCount();\n    this.break_on_indices = [];\n    this.render_options = {\n      beam_width: 5,\n      max_slope: 0.25,\n      min_slope: -0.25,\n      slope_iterations: 20,\n      slope_cost: 100,\n      show_stemlets: false,\n      stemlet_extension: 7,\n      partial_beam_length: 10,\n      flat_beams: false,\n      min_flat_beam_offset: 15,\n    };\n  }\n\n  // Get the notes in this beam\n  getNotes() { return this.notes; }\n\n  // Get the max number of beams in the set of notes\n  getBeamCount() {\n    const beamCounts =  this.notes.map(note => note.getGlyph().beam_count);\n\n    const maxBeamCount =  beamCounts.reduce((max, beamCount) => beamCount > max ? beamCount : max);\n\n    return maxBeamCount;\n  }\n\n  // Set which note `indices` to break the secondary beam at\n  breakSecondaryAt(indices) {\n    this.break_on_indices = indices;\n    return this;\n  }\n\n  // Return the y coordinate for linear function\n  getSlopeY(x, first_x_px, first_y_px, slope) {\n    return first_y_px + ((x - first_x_px) * slope);\n  }\n\n  // Calculate the best possible slope for the provided notes\n  calculateSlope() {\n    const {\n      notes,\n      stem_direction: stemDirection,\n      render_options: { max_slope, min_slope, slope_iterations, slope_cost },\n    } = this;\n\n    const firstNote = notes[0];\n    const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n    const increment = (max_slope - min_slope) / slope_iterations;\n    let minCost = Number.MAX_VALUE;\n    let bestSlope = 0;\n    let yShift = 0;\n\n    // iterate through slope values to find best weighted fit\n    for (let slope = min_slope; slope <= max_slope; slope += increment) {\n      let totalStemExtension = 0;\n      let yShiftTemp = 0;\n\n      // iterate through notes, calculating y shift and stem extension\n      for (let i = 1; i < notes.length; ++i) {\n        const note = notes[i];\n        const adjustedStemTipY = this.getSlopeY(\n          note.getStemX(),\n          firstNote.getStemX(),\n          firstNote.getStemExtents().topY,\n          slope\n        ) + yShiftTemp;\n\n        const stemTipY = note.getStemExtents().topY;\n        // beam needs to be shifted up to accommodate note\n        if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n          const diff = Math.abs(stemTipY - adjustedStemTipY);\n          yShiftTemp += diff * -stemDirection;\n          totalStemExtension += diff * i;\n        } else { // beam overshoots note, account for the difference\n          totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n        }\n      }\n\n      // most engraving books suggest aiming for a slope about half the angle of the\n      // difference between the first and last notes' stem length;\n      const idealSlope = initialSlope / 2;\n      const distanceFromIdeal = Math.abs(idealSlope - slope);\n\n      // This tries to align most beams to something closer to the idealSlope, but\n      // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n      const cost = slope_cost * distanceFromIdeal + Math.abs(totalStemExtension);\n\n      // update state when a more ideal slope is found\n      if (cost < minCost) {\n        minCost = cost;\n        bestSlope = slope;\n        yShift = yShiftTemp;\n      }\n    }\n\n    this.slope = bestSlope;\n    this.y_shift = yShift;\n  }\n\n  // Calculate a slope and y-shift for flat beams\n  calculateFlatSlope() {\n    const {\n      notes, stem_direction,\n      render_options: { beam_width, min_flat_beam_offset, flat_beam_offset },\n    } = this;\n\n    // If a flat beam offset has not yet been supplied or calculated,\n    // generate one based on the notes in this particular note group\n    let total = 0;\n    let extremeY = 0;  // Store the highest or lowest note here\n    let extremeBeamCount = 0;  // The beam count of the extreme note\n    let currentExtreme = 0;\n    for (let i = 0; i < notes.length; i++) {\n      // Total up all of the offsets so we can average them out later\n      const note = notes[i];\n      const stemTipY = note.getStemExtents().topY;\n      total += stemTipY;\n\n      // Store the highest (stems-up) or lowest (stems-down) note so the\n      //  offset can be adjusted in case the average isn't enough\n      if (stem_direction === Stem.DOWN && currentExtreme < stemTipY) {\n        currentExtreme = stemTipY;\n        extremeY = Math.max(...note.getYs());\n        extremeBeamCount = note.getBeamCount();\n      } else if (\n        stem_direction === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)\n      ) {\n        currentExtreme = stemTipY;\n        extremeY = Math.min(...note.getYs());\n        extremeBeamCount = note.getBeamCount();\n      }\n    }\n\n    // Average the offsets to try and come up with a reasonable one that\n    //  works for all of the notes in the beam group.\n    let offset = total / notes.length;\n\n    // In case the average isn't long enough, add or subtract some more\n    //  based on the highest or lowest note (again, based on the stem\n    //  direction). This also takes into account the added height due to\n    //  the width of the beams.\n    const beamWidth = beam_width * 1.5;\n    const extremeTest = min_flat_beam_offset + (extremeBeamCount * beamWidth);\n    const newOffset = extremeY + (extremeTest * -stem_direction);\n    if (stem_direction === Stem.DOWN && offset < newOffset) {\n      offset = extremeY + extremeTest;\n    } else if (stem_direction === Stem.UP && offset > newOffset) {\n      offset = extremeY - extremeTest;\n    }\n\n    if (!flat_beam_offset) {\n      // Set the offset for the group based on the calculations above.\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.DOWN && offset > flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.UP && offset < flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    }\n\n    // for flat beams, the slope and y_shift are simply 0\n    this.slope = 0;\n    this.y_shift = 0;\n  }\n\n  // Create new stems for the notes in the beam, so that each stem\n  // extends into the beams.\n  applyStemExtensions() {\n    const {\n      notes, slope, y_shift, stem_direction, beam_count,\n      render_options: {\n        show_stemlets,\n        flat_beam_offset,\n        flat_beams,\n        stemlet_extension,\n        beam_width,\n      },\n    } = this;\n\n    const firstNote = notes[0];\n    let firstStemTipY = firstNote.getStemExtents().topY;\n\n    // If rendering flat beams, and an offset exists, set the y-coordinat`e to\n    //  the offset so the stems all end at the beam offset.\n    if (flat_beams && flat_beam_offset) {\n      firstStemTipY = flat_beam_offset;\n    }\n    const firstStemX = firstNote.getStemX();\n\n    for (let i = 0; i < notes.length; ++i) {\n      const note = notes[i];\n      const stemX = note.getStemX();\n      const { topY: stemTipY } = note.getStemExtents();\n      const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + y_shift;\n      const preBeamExtension = note.getStem().getExtension();\n      const beamExtension = stem_direction === Stem.UP\n        ? stemTipY - beamedStemTipY\n        : beamedStemTipY - stemTipY;\n\n      note.stem.setExtension(preBeamExtension + beamExtension);\n      note.stem.renderHeightAdjustment = -Stem.WIDTH / 2;\n\n      if (note.isRest() && show_stemlets) {\n        const beamWidth = beam_width;\n        const totalBeamWidth = ((beam_count - 1) * beamWidth * 1.5) + beamWidth;\n        note.stem\n          .setVisibility(true)\n          .setStemlet(true, totalBeamWidth + stemlet_extension);\n      }\n    }\n  }\n\n  // Get the x coordinates for the beam lines of specific `duration`\n  getBeamLines(duration) {\n    const beam_lines = [];\n    let beam_started = false;\n    let current_beam = null;\n    const partial_beam_length = this.render_options.partial_beam_length;\n    let previous_should_break = false;\n    let tick_tally = 0;\n    for (let i = 0; i < this.notes.length; ++i) {\n      const note = this.notes[i];\n\n      // See if we need to break secondary beams on this note.\n      const ticks = note.ticks.value();\n      tick_tally += ticks;\n      let should_break = false;\n\n      // 8th note beams are always drawn.\n      if (parseInt(duration, 10) >= 8) {\n        // First, check to see if any indices were set up through breakSecondaryAt()\n        should_break = this.break_on_indices.indexOf(i) !== -1;\n\n        // If the secondary breaks were auto-configured in the render options,\n        //  handle that as well.\n        if (this.render_options.secondary_break_ticks && tick_tally >=\n            this.render_options.secondary_break_ticks) {\n          tick_tally = 0;\n          should_break = true;\n        }\n      }\n      const note_gets_beam = note.getIntrinsicTicks() < Flow.durationToTicks(duration);\n\n      const stem_x = note.getStemX() - (Stem.WIDTH / 2);\n\n      // Check to see if the next note in the group will get a beam at this\n      //  level. This will help to inform the partial beam logic below.\n      const next_note = this.notes[i + 1];\n      const beam_next = next_note && next_note.getIntrinsicTicks() < Flow.durationToTicks(duration);\n      if (note_gets_beam) {\n        // This note gets a beam at the current level\n        if (beam_started) {\n          // We're currently in the middle of a beam. Just continue it on to\n          //  the stem X of the current note.\n          current_beam = beam_lines[beam_lines.length - 1];\n          current_beam.end = stem_x;\n\n          // If a secondary beam break is set up, end the beam right now.\n          if (should_break) {\n            beam_started = false;\n            if (next_note && !beam_next && current_beam.end === null) {\n              // This note gets a beam,.but the next one does not. This means\n              //  we need a partial pointing right.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          }\n        } else {\n          // No beam started yet. Start a new one.\n          current_beam = { start: stem_x, end: null };\n          beam_started = true;\n          if (!beam_next) {\n            // The next note doesn't get a beam. Draw a partial.\n            if ((previous_should_break || i === 0) && next_note) {\n              // This is the first note (but not the last one), or it is\n              //  following a secondary break. Draw a partial to the right.\n              current_beam.end = current_beam.start + partial_beam_length;\n            } else {\n              // By default, draw a partial to the left.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          } else if (should_break) {\n            // This note should have a secondary break after it. Even though\n            //  we just started a beam, it needs to end immediately.\n            current_beam.end = current_beam.start - partial_beam_length;\n            beam_started = false;\n          }\n          beam_lines.push(current_beam);\n        }\n      } else {\n        // The current note does not get a beam.\n        beam_started = false;\n      }\n\n      // Store the secondary break flag to inform the partial beam logic in\n      //  the next iteration of the loop.\n      previous_should_break = should_break;\n    }\n\n    // Add a partial beam pointing left if this is the last note in the group\n    const last_beam = beam_lines[beam_lines.length - 1];\n    if (last_beam && last_beam.end === null) {\n      last_beam.end = last_beam.start - partial_beam_length;\n    }\n    return beam_lines;\n  }\n\n  // Render the stems for each notes\n  drawStems() {\n    this.notes.forEach(note => {\n      if (note.getStem()) {\n        note.getStem().setContext(this.context).draw();\n      }\n    }, this);\n  }\n\n  // Render the beam lines\n  drawBeamLines() {\n    this.checkContext();\n\n    const valid_beam_durations = ['4', '8', '16', '32', '64'];\n\n    const firstNote = this.notes[0];\n\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    let beamY = firstStemTipY;\n\n    // For flat beams, set the first and last Y to the offset, rather than\n    //  using the note's stem extents.\n    if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n      beamY = this.render_options.flat_beam_offset;\n    }\n\n    const firstStemX = firstNote.getStemX();\n    const beamThickness = this.render_options.beam_width * this.stem_direction;\n\n    // Draw the beams.\n    for (let i = 0; i < valid_beam_durations.length; ++i) {\n      const duration = valid_beam_durations[i];\n      const beamLines = this.getBeamLines(duration);\n\n      for (let j = 0; j < beamLines.length; ++j) {\n        const beam_line = beamLines[j];\n        const startBeamX = beam_line.start;\n\n        const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n        const lastBeamX = beam_line.end;\n        const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n\n        this.context.beginPath();\n        this.context.moveTo(startBeamX, startBeamY);\n        this.context.lineTo(startBeamX, startBeamY + beamThickness);\n        this.context.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n        this.context.lineTo(lastBeamX + 1, lastBeamY);\n        this.context.closePath();\n        this.context.fill();\n      }\n\n      beamY += beamThickness * 1.5;\n    }\n  }\n\n  // Pre-format the beam\n  preFormat() { return this; }\n\n  // Post-format the beam. This can only be called after\n  // the notes in the beam have both `x` and `y` values. ie: they've\n  // been formatted and have staves\n  postFormat() {\n    if (this.postFormatted) return;\n\n    // Calculate a smart slope if we're not forcing the beams to be flat.\n    if (this.notes[0].getCategory() === 'tabnotes' || this.render_options.flat_beams) {\n      this.calculateFlatSlope();\n    } else {\n      this.calculateSlope();\n    }\n    this.applyStemExtensions();\n\n    this.postFormatted = true;\n  }\n\n  // Render the beam to the canvas context\n  draw() {\n    this.checkContext();\n    this.setRendered();\n    if (this.unbeamable) return;\n\n    if (!this.postFormatted) {\n      this.postFormat();\n    }\n    this.drawStems();\n    this.drawBeamLines();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/beam.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\n/**\n * ## Description\n *\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same voice. If they are of different rhythmic\n * values, then options.num_notes must be set.\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n *   notes, etc... any class that inherits stemmableNote at some\n *   point in its prototype chain.\n * @param options: object {\n *\n *   num_notes: fit this many notes into...\n *   notes_occupied: ...the space of this many notes\n *\n *       Together, these two properties make up the tuplet ratio\n *     in the form of num_notes : notes_occupied.\n *       num_notes defaults to the number of notes passed in, so\n *     it is important that if you omit this property, all of\n *     the notes passed should be of the same note value.\n *       notes_occupied defaults to 2 -- so you should almost\n *     certainly pass this parameter for anything other than\n *     a basic triplet.\n *\n *   location:\n *     default 1, which is above the notes: ┌─── 3 ───┐\n *      -1 is below the notes └─── 3 ───┘\n *\n *   bracketed: boolean, draw a bracket around the tuplet number\n *     when true: ┌─── 3 ───┐   when false: 3\n *     defaults to true if notes are not beamed, false otherwise\n *\n *   ratioed: boolean\n *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n *     defaults to true if the difference between num_notes and\n *     notes_occupied is greater than 1.\n *\n *   y_offset: int, default 0\n *     manually offset a tuplet, for instance to avoid collisions\n *     with articulations, etc...\n * }\n */\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\n\nexport class Tuplet extends Element {\n  static get LOCATION_TOP() {\n    return 1;\n  }\n  static get LOCATION_BOTTOM() {\n    return -1;\n  }\n  static get NESTING_OFFSET() {\n    return 15;\n  }\n\n  constructor(notes, options) {\n    super();\n    this.setAttribute('type', 'Tuplet');\n    if (!notes || !notes.length) {\n      throw new Vex.RuntimeError('BadArguments', 'No notes provided for tuplet.');\n    }\n\n    if (notes.length === 1) {\n      throw new Vex.RuntimeError('BadArguments', 'Too few notes for tuplet.');\n    }\n\n    this.options = Vex.Merge({}, options);\n    this.notes = notes;\n    this.num_notes = 'num_notes' in this.options ?\n      this.options.num_notes : notes.length;\n\n    // We accept beats_occupied, but warn that it's deprecated:\n    // the preferred property name is now notes_occupied.\n    if (this.options.beats_occupied) {\n      this.beatsOccupiedDeprecationWarning();\n    }\n    this.notes_occupied = this.options.notes_occupied ||\n      this.options.beats_occupied ||\n      2;\n    if ('bracketed' in this.options) {\n      this.bracketed = this.options.bracketed;\n    } else {\n      this.bracketed =\n        notes.some(note => note.beam === null);\n    }\n\n    this.ratioed = 'ratioed' in this.options ?\n      this.options.ratioed :\n      (Math.abs(this.notes_occupied - this.num_notes) > 1);\n    this.point = 28;\n    this.y_pos = 16;\n    this.x_pos = 100;\n    this.width = 200;\n    this.location = this.options.location || Tuplet.LOCATION_TOP;\n\n    Formatter.AlignRestsToNotes(notes, true, true);\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  attach() {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.setTuplet(this);\n    }\n  }\n\n  detach() {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.resetTuplet(this);\n    }\n  }\n\n  /**\n   * Set whether or not the bracket is drawn.\n   */\n  setBracketed(bracketed) {\n    this.bracketed = !!bracketed;\n    return this;\n  }\n\n  /**\n   * Set whether or not the ratio is shown.\n   */\n  setRatioed(ratioed) {\n    this.ratioed = !!ratioed;\n    return this;\n  }\n\n  /**\n   * Set the tuplet to be displayed either on the top or bottom of the stave\n   */\n  setTupletLocation(location) {\n    if (!location) {\n      location = Tuplet.LOCATION_TOP;\n    } else if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n      throw new Vex.RERR('BadArgument', 'Invalid tuplet location: ' + location);\n    }\n\n    this.location = location;\n    return this;\n  }\n\n  getNotes() {\n    return this.notes;\n  }\n\n  getNoteCount() {\n    return this.num_notes;\n  }\n\n  beatsOccupiedDeprecationWarning() {\n    const msg = [\n      'beats_occupied has been deprecated as an ',\n      'option for tuplets. Please use notes_occupied ',\n      'instead. Calls to getBeatsOccupied and ',\n      'setBeatsOccupied should now be routed to ',\n      'getNotesOccupied and setNotesOccupied instead',\n    ].join('');\n\n    if (console && console.warn) { // eslint-disable-line no-console\n      console.warn(msg); // eslint-disable-line no-console\n    } else if (console) {\n      console.log(msg); // eslint-disable-line no-console\n    }\n  }\n\n  getBeatsOccupied() {\n    this.beatsOccupiedDeprecationWarning();\n    return this.getNotesOccupied();\n  }\n\n  setBeatsOccupied(beats) {\n    this.beatsOccupiedDeprecationWarning();\n    return this.setNotesOccupied(beats);\n  }\n\n  getNotesOccupied() {\n    return this.notes_occupied;\n  }\n\n  setNotesOccupied(notes) {\n    this.detach();\n    this.notes_occupied = notes;\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  resolveGlyphs() {\n    this.num_glyphs = [];\n    let n = this.num_notes;\n    while (n >= 1) {\n      this.num_glyphs.push(new Glyph('v' + (n % 10), this.point));\n      n = parseInt(n / 10, 10);\n    }\n\n    this.denom_glyphs = [];\n    n = this.notes_occupied;\n    while (n >= 1) {\n      this.denom_glyphs.push(new Glyph('v' + (n % 10), this.point));\n      n = parseInt(n / 10, 10);\n    }\n  }\n\n  // determine how many tuplets are nested within this tuplet\n  // on the same side (above/below), to calculate a y\n  // offset for this tuplet:\n  getNestedTupletCount() {\n    const location = this.location;\n    const first_note = this.notes[0];\n    let maxTupletCount = countTuplets(first_note, location);\n    let minTupletCount = countTuplets(first_note, location);\n\n    // Count the tuplets that are on the same side (above/below)\n    // as this tuplet:\n    function countTuplets(note, location) {\n      return note.tupletStack.filter(tuplet => tuplet.location === location).length;\n    }\n\n    this.notes.forEach(note => {\n      const tupletCount = countTuplets(note, location);\n      maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n      minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n    });\n\n    return maxTupletCount - minTupletCount;\n  }\n\n  // determine the y position of the tuplet:\n  getYPosition() {\n    // offset the tuplet for any nested tuplets between\n    // it and the notes:\n    const nested_tuplet_y_offset =\n      this.getNestedTupletCount() *\n      Tuplet.NESTING_OFFSET *\n      -this.location;\n\n    // offset the tuplet for any manual y_offset:\n    const y_offset = this.options.y_offset || 0;\n\n    // now iterate through the notes and find our highest\n    // or lowest locations, to form a base y_pos\n    const first_note = this.notes[0];\n    let y_pos;\n    if (this.location === Tuplet.LOCATION_TOP) {\n      y_pos = first_note.getStave().getYForLine(0) - 15;\n      // y_pos = first_note.getStemExtents().topY - 10;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        const top_y = this.notes[i].getStemDirection() === Stem.UP\n          ? this.notes[i].getStemExtents().topY - 10\n          : this.notes[i].getStemExtents().baseY - 20;\n\n        if (top_y < y_pos) {\n          y_pos = top_y;\n        }\n      }\n    } else {\n      y_pos = first_note.getStave().getYForLine(4) + 20;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        const bottom_y = this.notes[i].getStemDirection() === Stem.UP\n          ? this.notes[i].getStemExtents().baseY + 20\n          : this.notes[i].getStemExtents().topY + 10;\n        if (bottom_y > y_pos) {\n          y_pos = bottom_y;\n        }\n      }\n    }\n\n    return y_pos + nested_tuplet_y_offset + y_offset;\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    // determine x value of left bound of tuplet\n    const first_note = this.notes[0];\n    const last_note = this.notes[this.notes.length - 1];\n\n    if (!this.bracketed) {\n      this.x_pos = first_note.getStemX();\n      this.width = last_note.getStemX() - this.x_pos;\n    } else {\n      this.x_pos = first_note.getTieLeftX() - 5;\n      this.width = last_note.getTieRightX() - this.x_pos + 5;\n    }\n\n    // determine y value for tuplet\n    this.y_pos = this.getYPosition();\n\n    const addGlyphWidth = (width, glyph) => width + glyph.getMetrics().width;\n\n    // calculate total width of tuplet notation\n    let width = this.num_glyphs.reduce(addGlyphWidth, 0);\n    if (this.ratioed) {\n      width = this.denom_glyphs.reduce(addGlyphWidth, width);\n      width += this.point * 0.32;\n    }\n\n    const notation_center_x = this.x_pos + (this.width / 2);\n    const notation_start_x = notation_center_x - (width / 2);\n\n    // draw bracket if the tuplet is not beamed\n    if (this.bracketed) {\n      const line_width = this.width / 2 - width / 2 - 5;\n\n      // only draw the bracket if it has positive length\n      if (line_width > 0) {\n        this.context.fillRect(this.x_pos, this.y_pos, line_width, 1);\n        this.context.fillRect(\n          this.x_pos + this.width / 2 + width / 2 + 5,\n          this.y_pos,\n          line_width,\n          1\n        );\n        this.context.fillRect(\n          this.x_pos,\n          this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM),\n          1,\n          this.location * 10\n        );\n        this.context.fillRect(\n          this.x_pos + this.width,\n          this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM),\n          1,\n          this.location * 10\n        );\n      }\n    }\n\n    // draw numerator glyphs\n    let x_offset = 0;\n    this.num_glyphs.forEach(glyph => {\n      glyph.render(this.context, notation_start_x + x_offset, this.y_pos + (this.point / 3) - 2);\n      x_offset += glyph.getMetrics().width;\n    });\n\n    // display colon and denominator if the ratio is to be shown\n    if (this.ratioed) {\n      const colon_x = notation_start_x + x_offset + this.point * 0.16;\n      const colon_radius = this.point * 0.06;\n      this.context.beginPath();\n      this.context.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, true);\n      this.context.closePath();\n      this.context.fill();\n      this.context.beginPath();\n      this.context.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, true);\n      this.context.closePath();\n      this.context.fill();\n      x_offset += this.point * 0.32;\n      this.denom_glyphs.forEach(glyph => {\n        glyph.render(this.context, notation_start_x + x_offset, this.y_pos + (this.point / 3) - 2);\n        x_offset += glyph.getMetrics().width;\n      });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tuplet.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\n\n// To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`.\nfunction L(...args) { if (Stem.DEBUG) Vex.L('Vex.Flow.Stem', args); }\n\nexport class Stem extends Element {\n  static get CATEGORY() { return 'stem'; }\n\n  // Stem directions\n  static get UP() {\n    return 1;\n  }\n  static get DOWN() {\n    return -1;\n  }\n\n  // Theme\n  static get WIDTH() {\n    return Flow.STEM_WIDTH;\n  }\n  static get HEIGHT() {\n    return Flow.STEM_HEIGHT;\n  }\n\n  constructor(options = {}) {\n    super();\n    this.setAttribute('type', 'Stem');\n\n    // Default notehead x bounds\n    this.x_begin = options.x_begin || 0;\n    this.x_end = options.x_end || 0;\n\n    // Y bounds for top/bottom most notehead\n    this.y_top = options.y_top || 0;\n    this.y_bottom = options.y_bottom || 0;\n\n    // Stem top extension\n    this.stem_extension = options.stem_extension || 0;\n\n    // Direction of the stem\n    this.stem_direction = options.stem_direction || 0;\n\n    // Flag to override all draw calls\n    this.hide = options.hide || false;\n\n    this.isStemlet = options.isStemlet || false;\n    this.stemletHeight = options.stemletHeight || 0;\n\n    // Use to adjust the rendered height without affecting\n    // the results of `.getExtents()`\n    this.renderHeightAdjustment = 0;\n  }\n\n  // Set the x bounds for the default notehead\n  setNoteHeadXBounds(x_begin, x_end) {\n    this.x_begin = x_begin;\n    this.x_end = x_end;\n    return this;\n  }\n\n  // Set the direction of the stem in relation to the noteheads\n  setDirection(direction) { this.stem_direction = direction; }\n\n  // Set the extension for the stem, generally for flags or beams\n  setExtension(ext) { this.stem_extension = ext; }\n  getExtension() { return this.stem_extension; }\n\n  // The the y bounds for the top and bottom noteheads\n  setYBounds(y_top, y_bottom) {\n    this.y_top = y_top;\n    this.y_bottom = y_bottom;\n  }\n\n  // The category of the object\n  getCategory() { return Stem.CATEGORY; }\n\n  // Gets the entire height for the stem\n  getHeight() {\n    return ((this.y_bottom - this.y_top) * this.stem_direction) +\n           ((Stem.HEIGHT + this.stem_extension) * this.stem_direction);\n  }\n  getBoundingBox() {\n    throw new Vex.RERR('NotImplemented', 'getBoundingBox() not implemented.');\n  }\n\n  // Get the y coordinates for the very base of the stem to the top of\n  // the extension\n  getExtents() {\n    const isStemUp = this.stem_direction === Stem.UP;\n    const ys = [this.y_top, this.y_bottom];\n    const stemHeight = Stem.HEIGHT + this.stem_extension;\n    const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n    const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n    const stemTipY = innerMostNoteheadY + (stemHeight * -this.stem_direction);\n\n    return { topY: stemTipY, baseY: outerMostNoteheadY };\n  }\n\n  // set the draw style of a stem:\n  setStyle(style) { this.style = style; return this; }\n  getStyle() { return this.style; }\n\n  setVisibility(isVisible) {\n    this.hide = !isVisible;\n    return this;\n  }\n\n  setStemlet(isStemlet, stemletHeight) {\n    this.isStemlet = isStemlet;\n    this.stemletHeight = stemletHeight;\n    return this;\n  }\n\n  // Apply current style to Canvas `context`\n  applyStyle(context) {\n    const style = this.getStyle();\n    if (style) {\n      if (style.shadowColor) context.setShadowColor(style.shadowColor);\n      if (style.shadowBlur) context.setShadowBlur(style.shadowBlur);\n      if (style.strokeStyle) context.setStrokeStyle(style.strokeStyle);\n    }\n    return this;\n  }\n\n  // Render the stem onto the canvas\n  draw() {\n    this.setRendered();\n    if (this.hide) return;\n    const ctx = this.checkContext();\n\n    let stem_x;\n    let stem_y;\n    const stem_direction = this.stem_direction;\n\n    if (stem_direction === Stem.DOWN) {\n      // Down stems are rendered to the left of the head.\n      stem_x = this.x_begin;\n      stem_y = this.y_top;\n    } else {\n      // Up stems are rendered to the right of the head.\n      stem_x = this.x_end;\n      stem_y = this.y_bottom;\n    }\n\n    const stemHeight = this.getHeight();\n\n    L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n\n    // The offset from the stem's base which is required fo satisfy the stemlet height\n    const stemletYOffset = this.isStemlet\n      ? stemHeight - this.stemletHeight * this.stem_direction\n      : 0;\n\n    // Draw the stem\n    ctx.save();\n    this.applyStyle(ctx);\n    ctx.beginPath();\n    ctx.setLineWidth(Stem.WIDTH);\n    ctx.moveTo(stem_x, stem_y - stemletYOffset);\n    ctx.lineTo(stem_x, stem_y - stemHeight - (this.renderHeightAdjustment * stem_direction));\n    ctx.stroke();\n    ctx.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stem.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the main Voice class. It's mainly a container\n// object to group `Tickables` for formatting.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\n\nexport class Voice extends Element {\n  // Modes allow the addition of ticks in three different ways:\n  //\n  // STRICT: This is the default. Ticks must fill the voice.\n  // SOFT:   Ticks can be added without restrictions.\n  // FULL:   Ticks do not need to fill the voice, but can't exceed the maximum\n  //         tick length.\n  static get Mode() {\n    return {\n      STRICT: 1,\n      SOFT: 2,\n      FULL: 3,\n    };\n  }\n\n  constructor(time) {\n    super();\n    this.setAttribute('type', 'Voice');\n\n    // Time signature shortcut: \"4/4\", \"3/8\", etc.\n    if (typeof(time) === 'string') {\n      const match = time.match(/(\\d+)\\/(\\d+)/);\n      if (match) {\n        time = {\n          num_beats: match[1],\n          beat_value: match[2],\n          resolution: Flow.RESOLUTION,\n        };\n      }\n    }\n\n    // Default time sig is 4/4\n    this.time = Vex.Merge({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }, time);\n\n    // Recalculate total ticks.\n    this.totalTicks = new Fraction(\n      this.time.num_beats * (this.time.resolution / this.time.beat_value), 1);\n\n    this.resolutionMultiplier = 1;\n\n    // Set defaults\n    this.tickables = [];\n    this.ticksUsed = new Fraction(0, 1);\n    this.smallestTickCount = this.totalTicks.clone();\n    this.largestTickWidth = 0;\n    this.stave = null;\n    // Do we care about strictly timed notes\n    this.mode = Voice.Mode.STRICT;\n\n    // This must belong to a VoiceGroup\n    this.voiceGroup = null;\n  }\n\n  // Get the total ticks in the voice\n  getTotalTicks() { return this.totalTicks; }\n\n  // Get the total ticks used in the voice by all the tickables\n  getTicksUsed() { return this.ticksUsed; }\n\n  // Get the largest width of all the tickables\n  getLargestTickWidth() { return this.largestTickWidth; }\n\n  // Get the tick count for the shortest tickable\n  getSmallestTickCount() { return this.smallestTickCount; }\n\n  // Get the tickables in the voice\n  getTickables() { return this.tickables; }\n\n  // Get/set the voice mode, use a value from `Voice.Mode`\n  getMode() { return this.mode; }\n  setMode(mode) { this.mode = mode; return this; }\n\n  // Get the resolution multiplier for the voice\n  getResolutionMultiplier() { return this.resolutionMultiplier; }\n\n  // Get the actual tick resolution for the voice\n  getActualResolution() { return this.resolutionMultiplier * this.time.resolution; }\n\n  // Set the voice's stave\n  setStave(stave) {\n    this.stave = stave;\n    this.boundingBox = null; // Reset bounding box so we can reformat\n    return this;\n  }\n\n  // Get the bounding box for the voice\n  getBoundingBox() {\n    let stave;\n    let boundingBox;\n    let bb;\n    let i;\n\n    if (!this.boundingBox) {\n      if (!this.stave) throw new Vex.RERR('NoStave', \"Can't get bounding box without stave.\");\n      stave = this.stave;\n      boundingBox = null;\n\n      for (i = 0; i < this.tickables.length; ++i) {\n        this.tickables[i].setStave(stave);\n\n        bb = this.tickables[i].getBoundingBox();\n        if (!bb) continue;\n\n        boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n      }\n\n      this.boundingBox = boundingBox;\n    }\n    return this.boundingBox;\n  }\n\n  // Every tickable must be associated with a voiceGroup. This allows formatters\n  // and preformatters to associate them with the right modifierContexts.\n  getVoiceGroup() {\n    if (!this.voiceGroup) {\n      throw new Vex.RERR('NoVoiceGroup', 'No voice group for voice.');\n    }\n\n    return this.voiceGroup;\n  }\n\n  // Set the voice group\n  setVoiceGroup(g) { this.voiceGroup = g; return this; }\n\n  // Set the voice mode to strict or soft\n  setStrict(strict) {\n    this.mode = strict ? Voice.Mode.STRICT : Voice.Mode.SOFT;\n    return this;\n  }\n\n  // Determine if the voice is complete according to the voice mode\n  isComplete() {\n    if (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) {\n      return this.ticksUsed.equals(this.totalTicks);\n    } else {\n      return true;\n    }\n  }\n\n  // Add a tickable to the voice\n  addTickable(tickable) {\n    if (!tickable.shouldIgnoreTicks()) {\n      const ticks = tickable.getTicks();\n\n      // Update the total ticks for this line.\n      this.ticksUsed.add(ticks);\n\n      if (\n        (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) &&\n        this.ticksUsed.greaterThan(this.totalTicks)\n      ) {\n        this.totalTicks.subtract(ticks);\n        throw new Vex.RERR('BadArgument', 'Too many ticks.');\n      }\n\n      // Track the smallest tickable for formatting.\n      if (ticks.lessThan(this.smallestTickCount)) {\n        this.smallestTickCount = ticks.clone();\n      }\n\n      this.resolutionMultiplier = this.ticksUsed.denominator;\n\n      // Expand total ticks using denominator from ticks used.\n      this.totalTicks.add(0, this.ticksUsed.denominator);\n    }\n\n    // Add the tickable to the line.\n    this.tickables.push(tickable);\n    tickable.setVoice(this);\n    return this;\n  }\n\n  // Add an array of tickables to the voice.\n  addTickables(tickables) {\n    for (let i = 0; i < tickables.length; ++i) {\n      this.addTickable(tickables[i]);\n    }\n\n    return this;\n  }\n\n  // Preformats the voice by applying the voice's stave to each note.\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    this.tickables.forEach((tickable) => {\n      if (!tickable.getStave()) {\n        tickable.setStave(this.stave);\n      }\n    });\n\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Render the voice onto the canvas `context` and an optional `stave`.\n  // If `stave` is omitted, it is expected that the notes have staves\n  // already set.\n  draw(context = this.context, stave = this.stave) {\n    this.setRendered();\n    let boundingBox = null;\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n\n      // Set the stave if provided\n      if (stave) tickable.setStave(stave);\n\n      if (!tickable.getStave()) {\n        throw new Vex.RuntimeError(\n          'MissingStave', 'The voice cannot draw tickables without staves.'\n        );\n      }\n\n      if (i === 0) boundingBox = tickable.getBoundingBox();\n\n      if (i > 0 && boundingBox) {\n        const tickable_bb = tickable.getBoundingBox();\n        if (tickable_bb) boundingBox.mergeWith(tickable_bb);\n      }\n\n      tickable.setContext(context);\n      tickable.draw();\n    }\n\n    this.boundingBox = boundingBox;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/voice.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Glyph } from './glyph';\n\nfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n  if (\n    type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n    type !== StaveConnector.type.BOLD_DOUBLE_RIGHT\n  ) {\n    throw new Vex.RERR(\n      'InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.'\n    );\n  }\n\n  let x_shift = 3;\n  let variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n  const thickLineOffset = 2; // For aesthetics\n\n  if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n    x_shift = -5; // Flips the side of the thin line\n    variableWidth = 3;\n  }\n\n  // Thin line\n  ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n  // Thick line\n  ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\n\nexport class StaveConnector extends Element {\n  // SINGLE_LEFT and SINGLE are the same value for compatibility\n  // with older versions of vexflow which didn't have right sided\n  // stave connectors\n  static get type() {\n    return {\n      SINGLE_RIGHT: 0,\n      SINGLE_LEFT: 1,\n      SINGLE: 1,\n      DOUBLE: 2,\n      BRACE: 3,\n      BRACKET: 4,\n      BOLD_DOUBLE_LEFT: 5,\n      BOLD_DOUBLE_RIGHT: 6,\n      THIN_DOUBLE: 7,\n      NONE: 8,\n    };\n  }\n\n  static get typeString() {\n    return {\n      singleRight: StaveConnector.type.SINGLE_RIGHT,\n      singleLeft: StaveConnector.type.SINGLE_LEFT,\n      single: StaveConnector.type.SINGLE,\n      double: StaveConnector.type.DOUBLE,\n      brace: StaveConnector.type.BRACE,\n      bracket: StaveConnector.type.BRACKET,\n      boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n      boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n      thinDouble: StaveConnector.type.THIN_DOUBLE,\n      none: StaveConnector.type.NONE,\n    };\n  }\n\n  constructor(top_stave, bottom_stave) {\n    super();\n    this.setAttribute('type', 'StaveConnector');\n\n    this.thickness = Flow.STAVE_LINE_THICKNESS;\n    this.width = 3;\n    this.top_stave = top_stave;\n    this.bottom_stave = bottom_stave;\n    this.type = StaveConnector.type.DOUBLE;\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    };\n    // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n    // 2. Offset BRACE type not to overlap with another StaveConnector\n    this.x_shift = 0;\n    this.texts = [];\n  }\n\n  setType(type) {\n    type = typeof(type) === 'string'\n      ? StaveConnector.typeString[type]\n      : type;\n\n    if (type >= StaveConnector.type.SINGLE_RIGHT && type <= StaveConnector.type.NONE) {\n      this.type = type;\n    }\n    return this;\n  }\n\n  setText(text, options) {\n    this.texts.push({\n      content: text,\n      options: Vex.Merge({ shift_x: 0, shift_y: 0 }, options),\n    });\n    return this;\n  }\n\n  setFont(font) {\n    Vex.Merge(this.font, font);\n  }\n\n  setXShift(x_shift) {\n    if (typeof x_shift !== 'number') {\n      throw Vex.RERR('InvalidType', 'x_shift must be a Number');\n    }\n\n    this.x_shift = x_shift;\n    return this;\n  }\n\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    let topY = this.top_stave.getYForLine(0);\n    let botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) +\n      this.thickness;\n    let width = this.width;\n    let topX = this.top_stave.getX();\n\n    const isRightSidedConnector = (\n      this.type === StaveConnector.type.SINGLE_RIGHT ||\n      this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n      this.type === StaveConnector.type.THIN_DOUBLE\n    );\n\n    if (isRightSidedConnector) {\n      topX = this.top_stave.getX() + this.top_stave.width;\n    }\n\n    let attachment_height = botY - topY;\n    switch (this.type) {\n      case StaveConnector.type.SINGLE:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_LEFT:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_RIGHT:\n        width = 1;\n        break;\n      case StaveConnector.type.DOUBLE:\n        topX -= (this.width + 2);\n        break;\n      case StaveConnector.type.BRACE: {\n        width = 12;\n        // May need additional code to draw brace\n        const x1 = this.top_stave.getX() - 2 + this.x_shift;\n        const y1 = topY;\n        const x3 = x1;\n        const y3 = botY;\n        const x2 = x1 - width;\n        const y2 = y1 + attachment_height / 2.0;\n        const cpx1 = x2 - (0.90 * width);\n        const cpy1 = y1 + (0.2 * attachment_height);\n        const cpx2 = x1 + (1.10 * width);\n        const cpy2 = y2 - (0.135 * attachment_height);\n        const cpx3 = cpx2;\n        const cpy3 = y2 + (0.135 * attachment_height);\n        const cpx4 = cpx1;\n        const cpy4 = y3 - (0.2 * attachment_height);\n        const cpx5 = x2 - width;\n        const cpy5 = cpy4;\n        const cpx6 = x1 + (0.40 * width);\n        const cpy6 = y2 + (0.135 * attachment_height);\n        const cpx7 = cpx6;\n        const cpy7 = y2 - (0.135 * attachment_height);\n        const cpx8 = cpx5;\n        const cpy8 = cpy1;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n        ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n        ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n        ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n        ctx.fill();\n        ctx.stroke();\n        break;\n      } case StaveConnector.type.BRACKET:\n        topY -= 4;\n        botY += 4;\n        attachment_height = botY - topY;\n        Glyph.renderGlyph(ctx, topX - 5, topY - 3, 40, 'v1b', true);\n        Glyph.renderGlyph(ctx, topX - 5, botY + 3, 40, 'v10', true);\n        topX -= (this.width + 2);\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_LEFT:\n        drawBoldDoubleLine(ctx, this.type, topX + this.x_shift, topY, botY);\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n        drawBoldDoubleLine(ctx, this.type, topX, topY, botY);\n        break;\n      case StaveConnector.type.THIN_DOUBLE:\n        width = 1;\n        break;\n      case StaveConnector.type.NONE:\n        break;\n      default:\n        throw new Vex.RERR(\n          'InvalidType', `The provided StaveConnector.type (${this.type}) is invalid`\n        );\n    }\n\n    if (\n      this.type !== StaveConnector.type.BRACE &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n      this.type !== StaveConnector.type.NONE\n    ) {\n      ctx.fillRect(topX, topY, width, attachment_height);\n    }\n\n    // If the connector is a thin double barline, draw the paralell line\n    if (this.type === StaveConnector.type.THIN_DOUBLE) {\n      ctx.fillRect(topX - 3, topY, width, attachment_height);\n    }\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    // Add stave connector text\n    for (let i = 0; i < this.texts.length; i++) {\n      const text = this.texts[i];\n      const text_width = ctx.measureText('' + text.content).width;\n      const x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n      const y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 +\n        text.options.shift_y;\n\n      ctx.fillText('' + text.content, x, y + 4);\n    }\n    ctx.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/staveconnector.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// *Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.*\n//\n// See `tests/stavenote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { BoundingBox } from './boundingbox';\nimport { Stem } from './stem';\nimport { NoteHead } from './notehead';\nimport { StemmableNote } from './stemmablenote';\nimport { Modifier } from './modifier';\nimport { Dot } from './dot';\n\n// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\nfunction L(...args) { if (StaveNote.DEBUG) Vex.L('Vex.Flow.StaveNote', args); }\n\nconst getStemAdjustment = (note) => Stem.WIDTH / (2 * -note.getStemDirection());\n\nconst isInnerNoteIndex = (note, index) =>\n  index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\n\n// Helper methods for rest positioning in ModifierContext.\nfunction shiftRestVertical(rest, note, dir) {\n  const delta = (note.isrest ? 0.0 : 1.0) * dir;\n\n  rest.line += delta;\n  rest.maxLine += delta;\n  rest.minLine += delta;\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) + (delta));\n}\n\n// Called from formatNotes :: center a rest between two notes\nfunction centerRest(rest, noteU, noteL) {\n  const delta = rest.line - Vex.MidLine(noteU.minLine, noteL.maxLine);\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n  rest.line -= delta;\n  rest.maxLine -= delta;\n  rest.minLine -= delta;\n}\n\nexport class StaveNote extends StemmableNote {\n  static get CATEGORY() { return 'stavenotes'; }\n  static get STEM_UP() { return Stem.UP; }\n  static get STEM_DOWN() { return Stem.DOWN; }\n  static get DEFAULT_LEDGER_LINE_OFFSET() { return 3; }\n\n  // ## Static Methods\n  //\n  // Format notes inside a ModifierContext.\n  static format(notes, state) {\n    if (!notes || notes.length < 2) return false;\n\n    // FIXME: VexFlow will soon require that a stave be set before formatting.\n    // Which, according to the below condition, means that following branch will\n    // always be taken and the rest of this function is dead code.\n    //\n    // Problematically, `Formatter#formatByY` was not designed to work for more\n    // than 2 voices (although, doesn't throw on this condition, just tries\n    // to power through).\n    //\n    // Based on the above:\n    //   * 2 voices can be formatted *with or without* a stave being set but\n    //     the output will be different\n    //   * 3 voices can only be formatted *without* a stave\n    if (notes[0].getStave()) {\n      return StaveNote.formatByY(notes, state);\n    }\n\n    const notesList = [];\n\n    for (let i = 0; i < notes.length; i++) {\n      const props = notes[i].getKeyProps();\n      const line = props[0].line;\n      let minL = props[props.length - 1].line;\n      const stemDirection = notes[i].getStemDirection();\n      const stemMax = notes[i].getStemLength() / 10;\n      const stemMin = notes[i].getStemMinumumLength() / 10;\n\n      let maxL;\n      if (notes[i].isRest()) {\n        maxL = line + notes[i].glyph.line_above;\n        minL = line - notes[i].glyph.line_below;\n      } else {\n        maxL = stemDirection === 1\n          ? props[props.length - 1].line + stemMax\n          : props[props.length - 1].line;\n\n        minL = stemDirection === 1\n          ? props[0].line\n          : props[0].line - stemMax;\n      }\n\n      notesList.push({\n        line: props[0].line, // note/rest base line\n        maxLine: maxL, // note/rest upper bounds line\n        minLine: minL, // note/rest lower bounds line\n        isrest: notes[i].isRest(),\n        stemDirection,\n        stemMax, // Maximum (default) note stem length;\n        stemMin, // minimum note stem length\n        voice_shift: notes[i].getVoiceShiftWidth(),\n        is_displaced: notes[i].isDisplaced(), // note manually displaced\n        note: notes[i],\n      });\n    }\n\n    const voices = notesList.length;\n\n    let noteU = notesList[0];\n    const noteM = voices > 2 ? notesList[1] : null;\n    let noteL = voices > 2 ? notesList[2] : notesList[1];\n\n    // for two voice backward compatibility, ensure upper voice is stems up\n    // for three voices, the voices must be in order (upper, middle, lower)\n    if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n      noteU = notesList[1];\n      noteL = notesList[0];\n    }\n\n    const voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n    let xShift = 0;\n    let stemDelta;\n\n    // Test for two voice note intersection\n    if (voices === 2) {\n      const lineSpacing = noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n      // if top voice is a middle voice, check stem intersection with lower voice\n      if (noteU.stemDirection === noteL.stemDirection &&\n          noteU.minLine <= noteL.maxLine) {\n        if (!noteU.isrest) {\n          stemDelta = Math.abs(noteU.line - (noteL.maxLine + 0.5));\n          stemDelta = Math.max(stemDelta, noteU.stemMin);\n          noteU.minLine = noteU.line - stemDelta;\n          noteU.note.setStemLength(stemDelta * 10);\n        }\n      }\n      if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n        if (noteU.isrest) {\n          // shift rest up\n          shiftRestVertical(noteU, noteL, 1);\n        } else if (noteL.isrest) {\n          // shift rest down\n          shiftRestVertical(noteL, noteU, -1);\n        } else {\n          xShift = voiceXShift;\n          if (noteU.stemDirection === noteL.stemDirection) {\n            // upper voice is middle voice, so shift it right\n            noteU.note.setXShift(xShift + 3);\n          } else {\n            // shift lower voice right\n            noteL.note.setXShift(xShift);\n          }\n        }\n      }\n\n      // format complete\n      return true;\n    }\n\n    // Check middle voice stem intersection with lower voice\n    if (noteM !== null && noteM.minLine < noteL.maxLine + 0.5) {\n      if (!noteM.isrest) {\n        stemDelta = Math.abs(noteM.line - (noteL.maxLine + 0.5));\n        stemDelta = Math.max(stemDelta, noteM.stemMin);\n        noteM.minLine = noteM.line - stemDelta;\n        noteM.note.setStemLength(stemDelta * 10);\n      }\n    }\n\n    // For three voices, test if rests can be repositioned\n    //\n    // Special case 1 :: middle voice rest between two notes\n    //\n    if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n      if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n        const restHeight = noteM.maxLine - noteM.minLine;\n        const space = noteU.minLine - noteL.maxLine;\n        if (restHeight < space) {\n           // center middle voice rest between the upper and lower voices\n          centerRest(noteM, noteU, noteL);\n        } else {\n          xShift = voiceXShift + 3;    // shift middle rest right\n          noteM.note.setXShift(xShift);\n        }\n         // format complete\n        return true;\n      }\n    }\n\n    // Special case 2 :: all voices are rests\n    if (noteU.isrest && noteM.isrest && noteL.isrest) {\n      // Shift upper voice rest up\n      shiftRestVertical(noteU, noteM, 1);\n      // Shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n      // format complete\n      return true;\n    }\n\n    // Test if any other rests can be repositioned\n    if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n      // Shift middle voice rest up\n      shiftRestVertical(noteM, noteL, 1);\n    }\n    if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n      // Shift middle voice rest down\n      shiftRestVertical(noteM, noteU, -1);\n    }\n    if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n      // shift upper voice rest up;\n      shiftRestVertical(noteU, noteM, 1);\n    }\n    if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n      // shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n    }\n\n    // If middle voice intersects upper or lower voice\n    if ((!noteU.isrest && !noteM.isrest && noteU.minLine <= noteM.maxLine + 0.5) ||\n        (!noteM.isrest && !noteL.isrest && noteM.minLine <= noteL.maxLine)) {\n      xShift = voiceXShift + 3;      // shift middle note right\n      noteM.note.setXShift(xShift);\n    }\n\n    return true;\n  }\n\n  static formatByY(notes, state) {\n    // NOTE: this function does not support more than two voices per stave\n    // use with care.\n    let hasStave = true;\n\n    for (let i = 0; i < notes.length; i++) {\n      hasStave = hasStave && notes[i].getStave() != null;\n    }\n\n    if (!hasStave) {\n      throw new Vex.RERR(\n        'Stave Missing',\n        'All notes must have a stave - Vex.Flow.ModifierContext.formatMultiVoice!'\n      );\n    }\n\n    let xShift = 0;\n\n    for (let i = 0; i < notes.length - 1; i++) {\n      let topNote = notes[i];\n      let bottomNote = notes[i + 1];\n\n      if (topNote.getStemDirection() === Stem.DOWN) {\n        topNote = notes[i + 1];\n        bottomNote = notes[i];\n      }\n\n      const topKeys = topNote.getKeyProps();\n      const bottomKeys = bottomNote.getKeyProps();\n\n      const HALF_NOTEHEAD_HEIGHT = 0.5;\n\n      // `keyProps` and `stave.getYForLine` have different notions of a `line`\n      // so we have to convert the keyProps value by subtracting 5.\n      // See https://github.com/0xfe/vexflow/wiki/Development-Gotchas\n      //\n      // We also extend the y for each note by a half notehead because the\n      // notehead's origin is centered\n      const topNotBottomY = topNote\n        .getStave()\n        .getYForLine(5 - topKeys[0].line + HALF_NOTEHEAD_HEIGHT);\n\n      const bottomNoteTopY = bottomNote\n        .getStave()\n        .getYForLine(5 - bottomKeys[bottomKeys.length - 1].line - HALF_NOTEHEAD_HEIGHT);\n\n      const areNotesColliding = bottomNoteTopY - topNotBottomY < 0;\n\n      if (areNotesColliding) {\n        xShift = topNote.getVoiceShiftWidth() + 2;\n        bottomNote.setXShift(xShift);\n      }\n    }\n\n    state.right_shift += xShift;\n  }\n\n  static postFormat(notes) {\n    if (!notes) return false;\n\n    notes.forEach(note => note.postFormat());\n\n    return true;\n  }\n\n  constructor(noteStruct) {\n    super(noteStruct);\n    this.setAttribute('type', 'StaveNote');\n\n    this.keys = noteStruct.keys;\n    this.clef = noteStruct.clef;\n    this.octave_shift = noteStruct.octave_shift;\n    this.beam = null;\n\n    // Pull note rendering properties\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `Invalid note initialization data (No glyph found): ${JSON.stringify(noteStruct)}`\n      );\n    }\n\n    // if true, displace note to right\n    this.displaced = false;\n    this.dot_shiftY = 0;\n    // per-pitch properties\n    this.keyProps = [];\n    // for displaced ledger lines\n    this.use_default_head_x = false;\n\n    // Drawing\n    this.note_heads = [];\n    this.modifiers = [];\n\n    Vex.Merge(this.render_options, {\n      // font size for note heads and rests\n      glyph_font_scale: noteStruct.glyph_font_scale || Flow.DEFAULT_NOTATION_FONT_SCALE,\n      // number of stroke px to the left and right of head\n      stroke_px: noteStruct.stroke_px || StaveNote.DEFAULT_LEDGER_LINE_OFFSET,\n    });\n\n    this.calculateKeyProps();\n    this.buildStem();\n\n    // Set the stem direction\n    if (noteStruct.auto_stem) {\n      this.autoStem();\n    } else {\n      this.setStemDirection(noteStruct.stem_direction);\n    }\n    this.reset();\n    this.buildFlag();\n  }\n\n  reset() {\n    super.reset();\n    this.buildNoteHeads();\n    if (this.stave) {\n      this.note_heads.forEach(head => head.setStave(this.stave));\n    }\n    this.calcExtraPx();\n  }\n\n  getCategory() { return StaveNote.CATEGORY; }\n\n  // Builds a `Stem` for the note\n  buildStem() {\n    const glyph = this.getGlyph();\n    const yExtend = glyph.code_head === 'v95' || glyph.code_head === 'v3e' ? -4 : 0;\n\n    this.setStem(new Stem({\n      yExtend,\n      hide: !!this.isRest(),\n    }));\n  }\n\n  // Builds a `NoteHead` for each key in the note\n  buildNoteHeads() {\n    this.note_heads = [];\n    const stemDirection = this.getStemDirection();\n    const keys = this.getKeys();\n\n    let lastLine = null;\n    let lineDiff = null;\n    let displaced = false;\n\n    // Draw notes from bottom to top.\n\n    // For down-stem notes, we draw from top to bottom.\n    let start;\n    let end;\n    let step;\n    if (stemDirection === Stem.UP) {\n      start = 0;\n      end = keys.length;\n      step = 1;\n    } else if (stemDirection === Stem.DOWN) {\n      start = keys.length - 1;\n      end = -1;\n      step = -1;\n    }\n\n    for (let i = start; i !== end; i += step) {\n      const noteProps = this.keyProps[i];\n      const line = noteProps.line;\n\n      // Keep track of last line with a note head, so that consecutive heads\n      // are correctly displaced.\n      if (lastLine === null) {\n        lastLine = line;\n      } else {\n        lineDiff = Math.abs(lastLine - line);\n        if (lineDiff === 0 || lineDiff === 0.5) {\n          displaced = !displaced;\n        } else {\n          displaced = false;\n          this.use_default_head_x = true;\n        }\n      }\n      lastLine = line;\n\n      const notehead = new NoteHead({\n        duration: this.duration,\n        note_type: this.noteType,\n        displaced,\n        stem_direction: stemDirection,\n        custom_glyph_code: noteProps.code,\n        glyph_font_scale: this.render_options.glyph_font_scale,\n        x_shift: noteProps.shift_right,\n        line: noteProps.line,\n      });\n\n      this.note_heads[i] = notehead;\n    }\n  }\n\n  // Automatically sets the stem direction based on the keys in the note\n  autoStem() {\n    // Figure out optimal stem direction based on given notes\n    this.minLine = this.keyProps[0].line;\n    this.maxLine = this.keyProps[this.keyProps.length - 1].line;\n\n    const MIDDLE_LINE = 3;\n    const decider = (this.minLine + this.maxLine) / 2;\n    const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n\n    this.setStemDirection(stemDirection);\n  }\n\n  // Calculates and stores the properties for each key in the note\n  calculateKeyProps() {\n    let lastLine = null;\n    for (let i = 0; i < this.keys.length; ++i) {\n      const key = this.keys[i];\n\n      // All rests use the same position on the line.\n      // if (this.glyph.rest) key = this.glyph.position;\n      if (this.glyph.rest) this.glyph.position = key;\n\n      const options = { octave_shift: this.octave_shift || 0 };\n      const props = Flow.keyProperties(key, this.clef, options);\n\n      if (!props) {\n        throw new Vex.RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n      }\n\n      // Override line placement for default rests\n      if (props.key === 'R') {\n        if (this.duration === '1' || this.duration === 'w') {\n          props.line = 4;\n        } else {\n          props.line = 3;\n        }\n      }\n\n      // Calculate displacement of this note\n      const line = props.line;\n      if (lastLine === null) {\n        lastLine = line;\n      } else {\n        if (Math.abs(lastLine - line) === 0.5) {\n          this.displaced = true;\n          props.displaced = true;\n\n          // Have to mark the previous note as\n          // displaced as well, for modifier placement\n          if (this.keyProps.length > 0) {\n            this.keyProps[i - 1].displaced = true;\n          }\n        }\n      }\n\n      lastLine = line;\n      this.keyProps.push(props);\n    }\n\n    // Sort the notes from lowest line to highest line\n    lastLine = -Infinity;\n    this.keyProps.forEach(key => {\n      if (key.line < lastLine) {\n        Vex.W(\n          'Unsorted keys in note will be sorted. ' +\n          'See https://github.com/0xfe/vexflow/issues/104 for details.'\n        );\n      }\n      lastLine = key.line;\n    });\n    this.keyProps.sort((a, b) => a.line - b.line);\n  }\n\n  // Get the `BoundingBox` for the entire note\n  getBoundingBox() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n\n    const { width: w, modLeftPx, extraLeftPx } = this.getMetrics();\n    const x = this.getAbsoluteX() - modLeftPx - extraLeftPx;\n\n    let minY = 0;\n    let maxY = 0;\n    const halfLineSpacing = this.getStave().getSpacingBetweenLines() / 2;\n    const lineSpacing = halfLineSpacing * 2;\n\n    if (this.isRest()) {\n      const y = this.ys[0];\n      const frac = Flow.durationToFraction(this.duration);\n      if (frac.equals(1) || frac.equals(2)) {\n        minY = y - halfLineSpacing;\n        maxY = y + halfLineSpacing;\n      } else {\n        minY = y - (this.glyph.line_above * lineSpacing);\n        maxY = y + (this.glyph.line_below * lineSpacing);\n      }\n    } else if (this.glyph.stem) {\n      const ys = this.getStemExtents();\n      ys.baseY += halfLineSpacing * this.stem_direction;\n      minY = Math.min(ys.topY, ys.baseY);\n      maxY = Math.max(ys.topY, ys.baseY);\n    } else {\n      minY = null;\n      maxY = null;\n\n      for (let i = 0; i < this.ys.length; ++i) {\n        const yy = this.ys[i];\n        if (i === 0) {\n          minY = yy;\n          maxY = yy;\n        } else {\n          minY = Math.min(yy, minY);\n          maxY = Math.max(yy, maxY);\n        }\n      }\n      minY -= halfLineSpacing;\n      maxY += halfLineSpacing;\n    }\n\n    return new BoundingBox(x, minY, w, maxY - minY);\n  }\n\n  // Gets the line number of the top or bottom note in the chord.\n  // If `isTopNote` is `true` then get the top note\n  getLineNumber(isTopNote) {\n    if (!this.keyProps.length) {\n      throw new Vex.RERR(\n        'NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\"\n      );\n    }\n\n    let resultLine = this.keyProps[0].line;\n\n    // No precondition assumed for sortedness of keyProps array\n    for (let i = 0; i < this.keyProps.length; i++) {\n      const thisLine = this.keyProps[i].line;\n      if (isTopNote) {\n        if (thisLine > resultLine) resultLine = thisLine;\n      } else {\n        if (thisLine < resultLine) resultLine = thisLine;\n      }\n    }\n\n    return resultLine;\n  }\n\n  // Determine if current note is a rest\n  isRest() { return this.glyph.rest; }\n\n  // Determine if the current note is a chord\n  isChord() { return !this.isRest() && this.keys.length > 1; }\n\n  // Determine if the `StaveNote` has a stem\n  hasStem() { return this.glyph.stem; }\n\n  hasFlag() {\n    return super.hasFlag() && !this.isRest();\n  }\n\n  getStemX() {\n    if (this.noteType === 'r') {\n      return this.getCenterGlyphX();\n    } else {\n      // We adjust the origin of the stem because we want the stem left-aligned\n      // with the notehead if stemmed-down, and right-aligned if stemmed-up\n      return super.getStemX() + getStemAdjustment(this);\n    }\n  }\n\n  // Get the `y` coordinate for text placed on the top/bottom of a\n  // note at a desired `text_line`\n  getYForTopText(textLine) {\n    const extents = this.getStemExtents();\n    return Math.min(\n      this.stave.getYForTopText(textLine),\n      extents.topY - (this.render_options.annotation_spacing * (textLine + 1))\n    );\n  }\n  getYForBottomText(textLine) {\n    const extents = this.getStemExtents();\n    return Math.max(\n      this.stave.getYForTopText(textLine),\n      extents.baseY + (this.render_options.annotation_spacing * (textLine))\n    );\n  }\n\n  // Sets the current note to the provided `stave`. This applies\n  // `y` values to the `NoteHeads`.\n  setStave(stave) {\n    super.setStave(stave);\n\n    const ys = this.note_heads.map(notehead => {\n      notehead.setStave(stave);\n      return notehead.getY();\n    });\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      const { y_top, y_bottom } = this.getNoteHeadBounds();\n      this.stem.setYBounds(y_top, y_bottom);\n    }\n\n    return this;\n  }\n\n  // Get the pitches in the note\n  getKeys() { return this.keys; }\n\n  // Get the properties for all the keys in the note\n  getKeyProps() {\n    return this.keyProps;\n  }\n\n  // Check if note is shifted to the right\n  isDisplaced() {\n    return this.displaced;\n  }\n\n  // Sets whether shift note to the right. `displaced` is a `boolean`\n  setNoteDisplaced(displaced) {\n    this.displaced = displaced;\n    return this;\n  }\n\n  // Get the starting `x` coordinate for a `StaveTie`\n  getTieRightX() {\n    let tieStartX = this.getAbsoluteX();\n    tieStartX += this.getGlyphWidth() + this.x_shift + this.extraRightPx;\n    if (this.modifierContext) tieStartX += this.modifierContext.getExtraRightPx();\n    return tieStartX;\n  }\n\n  // Get the ending `x` coordinate for a `StaveTie`\n  getTieLeftX() {\n    let tieEndX = this.getAbsoluteX();\n    tieEndX += this.x_shift - this.extraLeftPx;\n    return tieEndX;\n  }\n\n  // Get the stave line on which to place a rest\n  getLineForRest() {\n    let restLine = this.keyProps[0].line;\n    if (this.keyProps.length > 1) {\n      const lastLine  = this.keyProps[this.keyProps.length - 1].line;\n      const top = Math.max(restLine, lastLine);\n      const bot = Math.min(restLine, lastLine);\n      restLine = Vex.MidLine(top, bot);\n    }\n\n    return restLine;\n  }\n\n  // Get the default `x` and `y` coordinates for the provided `position`\n  // and key `index`\n  getModifierStartXY(position, index) {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n    let x = 0;\n    if (position === LEFT) {\n      // extra_left_px\n      // FIXME: What are these magic numbers?\n      x = -1 * 2;\n    } else if (position === RIGHT) {\n      // extra_right_px\n       // FIXME: What is this magical +2?\n      x = this.getGlyphWidth() + this.x_shift + 2;\n\n      if (this.stem_direction === Stem.UP && this.hasFlag() && isInnerNoteIndex(this, index)) {\n        x += this.flag.getMetrics().width;\n      }\n    } else if (position === BELOW || position === ABOVE) {\n      x = this.getGlyphWidth() / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Sets the style of the complete StaveNote, including all keys\n  // and the stem.\n  setStyle(style) {\n    this.note_heads.forEach(notehead => notehead.setStyle(style));\n    this.stem.setStyle(style);\n  }\n\n  // Sets the notehead at `index` to the provided coloring `style`.\n  //\n  // `style` is an `object` with the following properties: `shadowColor`,\n  // `shadowBlur`, `fillStyle`, `strokeStyle`\n  setKeyStyle(index, style) {\n    this.note_heads[index].setStyle(style);\n    return this;\n  }\n\n  setKeyLine(index, line) {\n    this.keyProps[index].line = line;\n    this.reset();\n    return this;\n  }\n\n  getKeyLine(index) {\n    return this.keyProps[index].line;\n  }\n\n  // Add self to modifier context. `mContext` is the `ModifierContext`\n  // to be added to.\n  addToModifierContext(mContext) {\n    this.setModifierContext(mContext);\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addModifier(this.modifiers[i]);\n    }\n    this.modifierContext.addModifier(this);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Generic function to add modifiers to a note\n  //\n  // Parameters:\n  // * `index`: The index of the key that we're modifying\n  // * `modifier`: The modifier to add\n  addModifier(index, modifier) {\n    modifier.setNote(this);\n    modifier.setIndex(index);\n    this.modifiers.push(modifier);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Helper function to add an accidental to a key\n  addAccidental(index, accidental) {\n    return this.addModifier(index, accidental);\n  }\n\n  // Helper function to add an articulation to a key\n  addArticulation(index, articulation) {\n    return this.addModifier(index, articulation);\n  }\n\n  // Helper function to add an annotation to a key\n  addAnnotation(index, annotation) {\n    return this.addModifier(index, annotation);\n  }\n\n  // Helper function to add a dot on a specific key\n  addDot(index) {\n    const dot = new Dot();\n    dot.setDotShiftY(this.glyph.dot_shiftY);\n    this.dots++;\n    return this.addModifier(index, dot);\n  }\n\n  // Convenience method to add dot to all keys in note\n  addDotToAll() {\n    for (let i = 0; i < this.keys.length; ++i) {\n      this.addDot(i);\n    }\n    return this;\n  }\n\n  // Get all accidentals in the `ModifierContext`\n  getAccidentals() {\n    return this.modifierContext.getModifiers('accidentals');\n  }\n\n  // Get all dots in the `ModifierContext`\n  getDots() {\n    return this.modifierContext.getModifiers('dots');\n  }\n\n  // Get the width of the note if it is displaced. Used for `Voice`\n  // formatting\n  getVoiceShiftWidth() {\n    // TODO: may need to accomodate for dot here.\n    return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n  }\n\n  // Calculates and sets the extra pixels to the left or right\n  // if the note is displaced.\n  calcExtraPx() {\n    this.setExtraLeftPx(\n      this.displaced && this.stem_direction === Stem.DOWN\n        ? this.getGlyphWidth()\n        : 0\n    );\n\n    // For upstems with flags, the extra space is unnecessary, since it's taken\n    // up by the flag.\n    this.setExtraRightPx(\n      !this.hasFlag() && this.displaced && this.stem_direction === Stem.UP\n        ? this.getGlyphWidth()\n        : 0\n    );\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return;\n    if (this.modifierContext) this.modifierContext.preFormat();\n\n    let width = this.getGlyphWidth() + this.extraLeftPx + this.extraRightPx;\n\n    // For upward flagged notes, the width of the flag needs to be added\n    if (this.glyph.flag && this.beam === null && this.stem_direction === Stem.UP) {\n      width += this.getGlyphWidth();\n    }\n\n    this.setWidth(width);\n    this.setPreFormatted(true);\n  }\n\n  // Gets the staff line and y value for the highest and lowest noteheads\n  getNoteHeadBounds() {\n    // Top and bottom Y values for stem.\n    let yTop = null;\n    let yBottom = null;\n\n    let highestLine = this.stave.getNumLines();\n    let lowestLine = 1;\n\n    this.note_heads.forEach(notehead => {\n      const line = notehead.getLine();\n      const y = notehead.getY();\n\n      if (yTop === null || y < yTop)  {\n        yTop = y;\n      }\n\n      if (yBottom === null || y > yBottom) {\n        yBottom = y;\n      }\n\n      highestLine = line > highestLine ? line : highestLine;\n      lowestLine = line < lowestLine ? line : lowestLine;\n    }, this);\n\n    return {\n      y_top: yTop,\n      y_bottom: yBottom,\n      highest_line: highestLine,\n      lowest_line: lowestLine,\n    };\n  }\n\n  // Get the starting `x` coordinate for the noteheads\n  getNoteHeadBeginX() {\n    return this.getAbsoluteX() + this.x_shift;\n  }\n\n  // Get the ending `x` coordinate for the noteheads\n  getNoteHeadEndX() {\n    const xBegin = this.getNoteHeadBeginX();\n    return xBegin + this.getGlyphWidth();\n  }\n\n  // Draw the ledger lines between the stave and the highest/lowest keys\n  drawLedgerLines() {\n    const {\n      note_heads, stave, use_default_head_x, x_shift, glyph,\n      render_options: { stroke_px },\n      context: ctx,\n    } = this;\n\n    if (this.isRest()) return;\n    if (!ctx) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const { highest_line, lowest_line } = this.getNoteHeadBounds();\n    let headX = note_heads[0].getAbsoluteX();\n\n    const drawLedgerLine = (y) => {\n      if (use_default_head_x === true)  {\n        headX = this.getAbsoluteX() + x_shift;\n      }\n      const x = headX - stroke_px;\n      const length = ((headX + glyph.getWidth()) - headX) + (stroke_px * 2);\n\n      ctx.fillRect(x, y, length, 1);\n    };\n\n    for (let line = 6; line <= highest_line; ++line) {\n      drawLedgerLine(stave.getYForNote(line));\n    }\n\n    for (let line = 0; line >= lowest_line; --line) {\n      drawLedgerLine(stave.getYForNote(line));\n    }\n  }\n\n  // Draw all key modifiers\n  drawModifiers() {\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const ctx = this.context;\n    ctx.openGroup('modifiers');\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const modifier = this.modifiers[i];\n      const notehead = this.note_heads[modifier.getIndex()];\n      const noteheadStyle = notehead.getStyle();\n      if (noteheadStyle) {\n        ctx.save();\n        notehead.applyStyle(ctx);\n      }\n      modifier.setContext(ctx);\n      modifier.draw();\n      if (noteheadStyle) {\n        ctx.restore();\n      }\n    }\n    ctx.closeGroup();\n  }\n\n  // Draw the flag for the note\n  drawFlag() {\n    const { stem, beam, context: ctx } = this;\n\n    if (!ctx) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const shouldRenderFlag = beam === null;\n    const glyph = this.getGlyph();\n\n    if (glyph.flag && shouldRenderFlag) {\n      const { y_top, y_bottom } = this.getNoteHeadBounds();\n      const noteStemHeight = stem.getHeight();\n      const flagX = this.getStemX();\n      // FIXME: What's with the magic +/- 2\n      const flagY = this.getStemDirection() === Stem.DOWN\n          // Down stems have flags on the left\n          ? y_top - noteStemHeight + 2\n          // Up stems have flags on the eft.\n          : y_bottom - noteStemHeight - 2;\n\n      // Draw the Flag\n      ctx.openGroup('flag', null, { pointerBBox: true });\n      this.flag.render(ctx, flagX, flagY);\n      ctx.closeGroup();\n    }\n  }\n\n  // Draw the NoteHeads\n  drawNoteHeads() {\n    this.note_heads.forEach(notehead => {\n      this.context.openGroup('notehead', null, { pointerBBox: true });\n      notehead.setContext(this.context).draw();\n      this.context.closeGroup();\n    });\n  }\n\n  // Render the stem onto the canvas\n  drawStem(stemStruct) {\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    if (stemStruct) {\n      this.setStem(new Stem(stemStruct));\n    }\n\n    this.context.openGroup('stem', null, { pointerBBox: true });\n    this.stem.setContext(this.context).draw();\n    this.context.closeGroup();\n  }\n\n  // Draws all the `StaveNote` parts. This is the main drawing method.\n  draw() {\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    const xBegin = this.getNoteHeadBeginX();\n    const shouldRenderStem = this.hasStem() && !this.beam;\n\n    // Format note head x positions\n    this.note_heads.forEach(notehead => notehead.setX(xBegin));\n\n    // Format stem x positions\n    const stemX = this.getStemX();\n    this.stem.setNoteHeadXBounds(stemX, stemX);\n\n    L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n\n    // Draw each part of the note\n    this.drawLedgerLines();\n\n    this.setAttribute('el', this.context.openGroup('stavenote', this.getAttribute('id')));\n    this.context.openGroup('note', null, { pointerBBox: true });\n    if (shouldRenderStem) this.drawStem();\n    this.drawNoteHeads();\n    this.drawFlag();\n    this.context.closeGroup();\n    this.drawModifiers();\n    this.context.closeGroup();\n    this.setRendered();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavenote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `NoteHeads`. `NoteHeads` are typically not manipulated\n// directly, but used internally in `StaveNote`.\n//\n// See `tests/notehead_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`.\nfunction L(...args) { if (NoteHead.DEBUG) Vex.L('Vex.Flow.NoteHead', args); }\n\n// Draw slashnote head manually. No glyph exists for this.\n//\n// Parameters:\n// * `ctx`: the Canvas context\n// * `duration`: the duration of the note. ex: \"4\"\n// * `x`: the x coordinate to draw at\n// * `y`: the y coordinate to draw at\n// * `stem_direction`: the direction of the stem\nfunction drawSlashNoteHead(ctx, duration, x, y, stem_direction, staveSpace) {\n  const width = Flow.SLASH_NOTEHEAD_WIDTH;\n  ctx.save();\n  ctx.setLineWidth(Flow.STEM_WIDTH);\n\n  let fill = false;\n\n  if (Flow.durationToNumber(duration) > 2) {\n    fill = true;\n  }\n\n  if (!fill) x -= (Flow.STEM_WIDTH / 2) * stem_direction;\n\n  ctx.beginPath();\n  ctx.moveTo(x, y + staveSpace);\n  ctx.lineTo(x, y + 1);\n  ctx.lineTo(x + width, y - staveSpace);\n  ctx.lineTo(x + width, y);\n  ctx.lineTo(x, y + staveSpace);\n  ctx.closePath();\n\n  if (fill) {\n    ctx.fill();\n  } else {\n    ctx.stroke();\n  }\n\n  if (Flow.durationToFraction(duration).equals(0.5)) {\n    const breve_lines = [-3, -1, width + 1, width + 3];\n    for (let i = 0; i < breve_lines.length; i++) {\n      ctx.beginPath();\n      ctx.moveTo(x + breve_lines[i], y - 10);\n      ctx.lineTo(x + breve_lines[i], y + 11);\n      ctx.stroke();\n    }\n  }\n\n  ctx.restore();\n}\n\nexport class NoteHead extends Note {\n  static get CATEGORY() { return 'notehead'; }\n\n  constructor(head_options) {\n    super(head_options);\n    this.setAttribute('type', 'NoteHead');\n\n    this.index = head_options.index;\n    this.x = head_options.x || 0;\n    this.y = head_options.y || 0;\n    this.note_type = head_options.note_type;\n    this.duration = head_options.duration;\n    this.displaced = head_options.displaced || false;\n    this.stem_direction = head_options.stem_direction || StaveNote.STEM_UP;\n    this.line = head_options.line;\n\n    // Get glyph code based on duration and note type. This could be\n    // regular notes, rests, or other custom codes.\n    this.glyph = Flow.durationToGlyph(this.duration, this.note_type);\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `No glyph found for duration '${this.duration}' and type '${this.note_type}'`);\n    }\n\n    this.glyph_code = this.glyph.code_head;\n    this.x_shift = head_options.x_shift;\n    if (head_options.custom_glyph_code) {\n      this.custom_glyph = true;\n      this.glyph_code = head_options.custom_glyph_code;\n    }\n\n    this.style = head_options.style;\n    this.slashed = head_options.slashed;\n\n    Vex.Merge(this.render_options, {\n      // font size for note heads\n      glyph_font_scale: head_options.glyph_font_scale || Flow.DEFAULT_NOTATION_FONT_SCALE,\n      // number of stroke px to the left and right of head\n      stroke_px: 3,\n    });\n\n    this.setWidth(this.glyph.getWidth(this.render_options.glyph_font_scale));\n  }\n\n  getCategory() { return NoteHead.CATEGORY; }\n\n  // Get the width of the notehead\n  getWidth() { return this.width; }\n\n  // Determine if the notehead is displaced\n  isDisplaced() { return this.displaced === true; }\n\n  // Get/set the notehead's style\n  //\n  // `style` is an `object` with the following properties: `shadowColor`,\n  // `shadowBlur`, `fillStyle`, `strokeStyle`\n  getStyle() { return this.style; }\n  setStyle(style) { this.style = style; return this; }\n\n  // Get the glyph data\n  getGlyph() { return this.glyph; }\n\n  // Set the X coordinate\n  setX(x) { this.x = x; return this; }\n\n  // get/set the Y coordinate\n  getY() { return this.y; }\n  setY(y) { this.y = y;  return this; }\n\n  // Get/set the stave line the notehead is placed on\n  getLine() { return this.line; }\n  setLine(line) { this.line = line; return this; }\n\n  // Get the canvas `x` coordinate position of the notehead.\n  getAbsoluteX() {\n    // If the note has not been preformatted, then get the static x value\n    // Otherwise, it's been formatted and we should use it's x value relative\n    // to its tick context\n    const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n\n    // For a more natural displaced notehead, we adjust the displacement amount\n    // by half the stem width in order to maintain a slight overlap with the stem\n    const displacementStemAdjustment = (Stem.WIDTH / 2);\n\n    return x + (this.displaced\n      ? (this.width - displacementStemAdjustment) * this.stem_direction\n      : 0\n    );\n  }\n\n  // Get the `BoundingBox` for the `NoteHead`\n  getBoundingBox() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n\n    const spacing = this.stave.getSpacingBetweenLines();\n    const half_spacing = spacing / 2;\n    const min_y = this.y - half_spacing;\n\n    return new Flow.BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n  }\n\n  // Apply current style to Canvas `context`\n  applyStyle(context) {\n    const style = this.getStyle();\n    if (style.shadowColor) context.setShadowColor(style.shadowColor);\n    if (style.shadowBlur) context.setShadowBlur(style.shadowBlur);\n    if (style.fillStyle) context.setFillStyle(style.fillStyle);\n    if (style.strokeStyle) context.setStrokeStyle(style.strokeStyle);\n    return this;\n  }\n\n  // Set notehead to a provided `stave`\n  setStave(stave) {\n    const line = this.getLine();\n\n    this.stave = stave;\n    this.setY(stave.getYForNote(line));\n    this.context = this.stave.context;\n    return this;\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    const width = this.getWidth() + this.extraLeftPx + this.extraRightPx;\n\n    this.setWidth(width);\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  // Draw the notehead\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const ctx = this.context;\n    const head_x = this.getAbsoluteX();\n    const y = this.y;\n\n    L(\"Drawing note head '\", this.note_type, this.duration, \"' at\", head_x, y);\n\n    // Begin and end positions for head.\n    const stem_direction = this.stem_direction;\n    const glyph_font_scale = this.render_options.glyph_font_scale;\n    const line = this.line;\n\n    // If note above/below the staff, draw the small staff\n    if (line <= 0 || line >= 6) {\n      let line_y = y;\n      const floor = Math.floor(line);\n      if (line < 0 && floor - line === -0.5) {\n        line_y -= 5;\n      } else if (line > 6 &&  floor - line === -0.5) {\n        line_y += 5;\n      }\n\n      if (this.note_type !== 'r') {\n        ctx.fillRect(\n          head_x - this.render_options.stroke_px,\n          line_y,\n          this.getWidth() + (this.render_options.stroke_px * 2),\n          1\n        );\n      }\n    }\n\n    if (this.note_type === 's') {\n      const staveSpace = this.stave.getSpacingBetweenLines();\n      drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n    } else {\n      if (this.style) {\n        ctx.save();\n        this.applyStyle(ctx);\n        Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code);\n        ctx.restore();\n      } else {\n        Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code);\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/notehead.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements an abstract interface for notes and chords that\n// are rendered on a stave. Notes have some common properties: All of them\n// have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n//\n// Some notes have stems, heads, dots, etc. Most notational elements that\n// surround a note are called *modifiers*, and every note has an associated\n// array of them. All notes also have a rendering context and belong to a stave.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Tickable } from './tickable';\n\nexport class Note extends Tickable {\n  static get CATEGORY() { return 'note'; }\n  static get STAVEPADDING() { return 12; }\n\n  // Debug helper. Displays various note metrics for the given\n  // note.\n  static plotMetrics(ctx, note, yPos) {\n    const metrics = note.getMetrics();\n    const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.extraLeftPx;\n    const xPre1 = note.getAbsoluteX() - metrics.extraLeftPx;\n    const xAbs = note.getAbsoluteX();\n    const xPost1 = note.getAbsoluteX() + metrics.noteWidth;\n    const xPost2 = note.getAbsoluteX() + metrics.noteWidth + metrics.extraRightPx;\n    const xEnd = note.getAbsoluteX()\n      + metrics.noteWidth\n      + metrics.extraRightPx\n      + metrics.modRightPx;\n    const xFreedomRight = xEnd + note.getFormatterMetrics().freedom.right;\n\n    const xWidth = xEnd - xStart;\n    ctx.save();\n    ctx.setFont('Arial', 8, '');\n    ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n\n    const y = (yPos + 7);\n    function stroke(x1, x2, color, yy = y) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(3);\n      ctx.moveTo(x1 + note.getXShift(), yy);\n      ctx.lineTo(x2 + note.getXShift(), yy);\n      ctx.stroke();\n    }\n\n    stroke(xStart, xPre1, 'red');\n    stroke(xPre1, xAbs, '#999');\n    stroke(xAbs, xPost1, 'green');\n    stroke(xPost1, xPost2, '#999');\n    stroke(xPost2, xEnd, 'red');\n    stroke(xEnd, xFreedomRight, '#DD0');\n    stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n    Vex.drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n\n    const formatterMetrics = note.getFormatterMetrics();\n    if (formatterMetrics.iterations > 0) {\n      const spaceDeviation = formatterMetrics.space.deviation;\n      const prefix = spaceDeviation >= 0 ? '+' : '';\n      ctx.setFillStyle('red');\n      ctx.fillText(prefix + Math.round(spaceDeviation),\n        xAbs + note.getXShift(), yPos - 10);\n    }\n    ctx.restore();\n  }\n\n  // Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n  // positioning and layout.\n  // To create a new note you need to provide a `note_struct`, which consists\n  // of the following fields:\n  //\n  // `type`: The note type (e.g., `r` for rest, `s` for slash notes, etc.)\n  // `dots`: The number of dots, which affects the duration.\n  // `duration`: The time length (e.g., `q` for quarter, `h` for half, `8` for eighth etc.)\n  //\n  // The range of values for these parameters are available in `src/tables.js`.\n  constructor(note_struct) {\n    super();\n    this.setAttribute('type', 'Note');\n\n    if (!note_struct) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Note must have valid initialization data to identify duration and type.'\n      );\n    }\n\n    // Parse `note_struct` and get note properties.\n    const initData = Flow.parseNoteData(note_struct);\n    if (!initData) {\n      throw new Vex.RuntimeError(\n        'BadArguments', `Invalid note initialization object: ${JSON.stringify(note_struct)}`\n      );\n    }\n\n    // Set note properties from parameters.\n    this.duration = initData.duration;\n    this.dots = initData.dots;\n    this.noteType = initData.type;\n\n    if (note_struct.duration_override) {\n      // Custom duration\n      this.setDuration(note_struct.duration_override);\n    } else {\n      // Default duration\n      this.setIntrinsicTicks(initData.ticks);\n    }\n\n    this.modifiers = [];\n\n    // Get the glyph code for this note from the font.\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (this.positions && (typeof(this.positions) !== 'object' || !this.positions.length)) {\n      throw new Vex.RuntimeError('BadArguments', 'Note keys must be array type.');\n    }\n\n    // Note to play for audio players.\n    this.playNote = null;\n\n    // Positioning contexts used by the Formatter.\n    this.tickContext = null;    // The current tick context.\n    this.modifierContext = null;\n    this.ignore_ticks = false;\n\n    // Positioning variables\n    this.width = 0;             // Width in pixels calculated after preFormat\n    this.extraLeftPx = 0;       // Extra room on left for offset note head\n    this.extraRightPx = 0;      // Extra room on right for offset note head\n    this.x_shift = 0;           // X shift from tick context X\n    this.left_modPx = 0;        // Max width of left modifiers\n    this.right_modPx = 0;       // Max width of right modifiers\n    this.voice = null;          // The voice that this note is in\n    this.preFormatted = false;  // Is this note preFormatted?\n    this.ys = [];               // list of y coordinates for each note\n                                // we need to hold on to these for ties and beams.\n\n    if (note_struct.align_center) {\n      this.setCenterAlignment(note_struct.align_center);\n    }\n\n    // The render surface.\n    this.stave = null;\n    this.render_options = {\n      annotation_spacing: 5,\n      stave_padding: Note.STAVEPADDING,\n    };\n  }\n\n  // Get and set the play note, which is arbitrary data that can be used by an\n  // audio player.\n  getPlayNote() { return this.playNote; }\n  setPlayNote(note) { this.playNote = note; return this; }\n\n  // Don't play notes by default, call them rests. This is also used by things like\n  // beams and dots for positioning.\n  isRest() { return false; }\n\n  // TODO(0xfe): Why is this method here?\n  addStroke(index, stroke) {\n    stroke.setNote(this);\n    stroke.setIndex(index);\n    this.modifiers.push(stroke);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Get and set the target stave.\n  getStave() { return this.stave; }\n  setStave(stave) {\n    this.stave = stave;\n    this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n    this.context = this.stave.context;\n    return this;\n  }\n\n  // `Note` is not really a modifier, but is used in\n  // a `ModifierContext`.\n  getCategory() { return Note.CATEGORY; }\n\n  // Set the rendering context for the note.\n  setContext(context) { this.context = context; return this; }\n\n  // Get and set spacing to the left and right of the notes.\n  getExtraLeftPx() { return this.extraLeftPx; }\n  getExtraRightPx() { return this.extraRightPx; }\n  setExtraLeftPx(x) { this.extraLeftPx = x; return this; }\n  setExtraRightPx(x) { this.extraRightPx = x; return this; }\n\n  // Returns true if this note has no duration (e.g., bar notes, spacers, etc.)\n  shouldIgnoreTicks() { return this.ignore_ticks; }\n\n  // Get the stave line number for the note.\n  getLineNumber() { return 0; }\n\n  // Get the stave line number for rest.\n  getLineForRest() { return 0; }\n\n  // Get the glyph associated with this note.\n  getGlyph() { return this.glyph; }\n\n  getGlyphWidth() {\n    return this.glyph.getWidth(this.render_options.glyph_font_scale);\n  }\n\n  // Set and get Y positions for this note. Each Y value is associated with\n  // an individual pitch/key within the note/chord.\n  setYs(ys) { this.ys = ys; return this; }\n  getYs() {\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-values calculated for this note.');\n    }\n\n    return this.ys;\n  }\n\n  // Get the Y position of the space above the stave onto which text can\n  // be rendered.\n  getYForTopText(text_line) {\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', 'No stave attached to this note.');\n    }\n\n    return this.stave.getYForTopText(text_line);\n  }\n\n  // Get a `BoundingBox` for this note.\n  getBoundingBox() { return null; }\n\n  // Returns the voice that this note belongs in.\n  getVoice() {\n    if (!this.voice) throw new Vex.RERR('NoVoice', 'Note has no voice.');\n    return this.voice;\n  }\n\n  // Attach this note to `voice`.\n  setVoice(voice) {\n    this.voice = voice;\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Get and set the `TickContext` for this note.\n  getTickContext() { return this.tickContext; }\n  setTickContext(tc) {\n    this.tickContext = tc;\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Accessors for the note type.\n  getDuration() { return this.duration; }\n  isDotted() { return (this.dots > 0); }\n  hasStem() { return false; }\n  getDots() { return this.dots; }\n  getNoteType() { return this.noteType; }\n  setBeam() { return this; } // ignore parameters\n\n  // Attach this note to a modifier context.\n  setModifierContext(mc) { this.modifierContext = mc; return this; }\n\n  // Attach a modifier to this note.\n  addModifier(modifier, index = 0) {\n    modifier.setNote(this);\n    modifier.setIndex(index);\n    this.modifiers.push(modifier);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Get the coordinates for where modifiers begin.\n  getModifierStartXY() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    return {\n      x: this.getAbsoluteX(),\n      y: this.ys[0],\n    };\n  }\n\n  // Get bounds and metrics for this note.\n  //\n  // Returns a struct with fields:\n  // `width`: The total width of the note (including modifiers.)\n  // `noteWidth`: The width of the note head only.\n  // `left_shift`: The horizontal displacement of the note.\n  // `modLeftPx`: Start `X` for left modifiers.\n  // `modRightPx`: Start `X` for right modifiers.\n  // `extraLeftPx`: Extra space on left of note.\n  // `extraRightPx`: Extra space on right of note.\n  getMetrics() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n    }\n\n    let modLeftPx = 0;\n    let modRightPx = 0;\n    if (this.modifierContext != null) {\n      modLeftPx = this.modifierContext.state.left_shift;\n      modRightPx = this.modifierContext.state.right_shift;\n    }\n\n    const width = this.getWidth();\n    return {\n      width,\n      noteWidth: width - modLeftPx - modRightPx - this.extraLeftPx - this.extraRightPx,\n      left_shift: this.x_shift, // TODO(0xfe): Make style consistent\n\n      // Modifiers, accidentals etc.\n      modLeftPx,\n      modRightPx,\n\n      // Displaced note head on left or right.\n      extraLeftPx: this.extraLeftPx,\n      extraRightPx: this.extraRightPx,\n    };\n  }\n\n  // Get and set width of note. Used by the formatter for positioning.\n  setWidth(width) { this.width = width; }\n  getWidth() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n    }\n\n    return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n  }\n\n  // Displace note by `x` pixels. Used by the formatter.\n  setXShift(x) { this.x_shift = x; return this; }\n  getXShift() { return this.x_shift; }\n\n  // Get `X` position of this tick context.\n  getX() {\n    if (!this.tickContext) {\n      throw new Vex.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n    }\n\n    return this.tickContext.getX() + this.x_shift;\n  }\n\n  // Get the absolute `X` position of this note's tick context. This\n  // excludes x_shift, so you'll need to factor it in if you're\n  // looking for the post-formatted x-position.\n  getAbsoluteX() {\n    if (!this.tickContext) {\n      throw new Vex.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n    }\n\n    // Position note to left edge of tick context.\n    let x = this.tickContext.getX();\n    if (this.stave) {\n      x += this.stave.getNoteStartX() + this.render_options.stave_padding;\n    }\n\n    if (this.isCenterAligned()) {\n      x += this.getCenterXShift();\n    }\n\n    return x;\n  }\n  setPreFormatted(value) {\n    this.preFormatted = value;\n\n    // Maintain the width of left and right modifiers in pixels.\n    if (this.preFormatted) {\n      const extra = this.tickContext.getExtraPx();\n      this.left_modPx = Math.max(this.left_modPx, extra.left);\n      this.right_modPx = Math.max(this.right_modPx, extra.right);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/note.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// The tickable interface. Tickables are things that sit on a score and\n// have a duration, i.e., they occupy space in the musical rendering dimension.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\n\nexport class Tickable extends Element {\n  constructor() {\n    super();\n    this.setAttribute('type', 'Tickable');\n\n    // These properties represent the duration of\n    // this tickable element.\n    this.ticks = new Fraction(0, 1);\n    this.intrinsicTicks = 0;\n    this.tickMultiplier = new Fraction(1, 1);\n\n    this.width = 0;\n    this.x_shift = 0; // Shift from tick context\n    this.voice = null;\n    this.tickContext = null;\n    this.modifierContext = null;\n    this.modifiers = [];\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.tuplet = null;\n    this.tupletStack = [];\n\n    this.align_center = false;\n    this.center_x_shift = 0; // Shift from tick context if center aligned\n\n    // This flag tells the formatter to ignore this tickable during\n    // formatting and justification. It is set by tickables such as BarNote.\n    this.ignore_ticks = false;\n\n    // This is a space for an external formatting class or function to maintain\n    // metrics.\n    this.formatterMetrics = {\n      // The freedom of a tickable is the distance it can move without colliding\n      // with neighboring elements. A formatter can set these values during its\n      // formatting pass, which a different formatter can then use to fine tune.\n      freedom: { left: 0, right: 0 },\n\n      // The simplified rational duration of this tick as a string. It can be\n      // used as an index to a map or hashtable.\n      duration: '',\n\n      // The number of formatting iterations undergone.\n      iterations: 0,\n\n      // The space in pixels allocated by this formatter, along with the mean space\n      // for tickables of this duration, and the deviation from the mean.\n      space: {\n        used: 0,\n        mean: 0,\n        deviation: 0,\n      },\n    };\n  }\n\n  reset() { return this; }\n  getTicks() { return this.ticks; }\n  shouldIgnoreTicks() { return this.ignore_ticks; }\n  getWidth() { return this.width; }\n\n  getFormatterMetrics() { return this.formatterMetrics; }\n\n  setXShift(x) { this.x_shift = x; }\n  getCenterXShift() {\n    if (this.isCenterAligned()) {\n      return this.center_x_shift;\n    }\n\n    return 0;\n  }\n  isCenterAligned() { return this.align_center; }\n  setCenterAlignment(align_center) {\n    this.align_center = align_center;\n    return this;\n  }\n\n  // Every tickable must be associated with a voice. This allows formatters\n  // and preFormatter to associate them with the right modifierContexts.\n  getVoice() {\n    if (!this.voice) throw new Vex.RERR('NoVoice', 'Tickable has no voice.');\n    return this.voice;\n  }\n  setVoice(voice) { this.voice = voice; }\n  getTuplet() { return this.tuplet; }\n\n  /*\n   * resetTuplet\n   * @param tuplet -- the specific tuplet to reset\n   *   if this is not provided, all tuplets are reset.\n   * @returns this\n   *\n   * Removes any prior tuplets from the tick calculation and\n   * resets the intrinsic tick value to\n   */\n  resetTuplet(tuplet) {\n    let noteCount;\n    let notesOccupied;\n    if (tuplet) {\n      const i = this.tupletStack.indexOf(tuplet);\n      if (i !== -1) {\n        this.tupletStack.splice(i, 1);\n        noteCount = tuplet.getNoteCount();\n        notesOccupied = tuplet.getNotesOccupied();\n\n        // Revert old multiplier by inverting numerator & denom.:\n        this.applyTickMultiplier(noteCount, notesOccupied);\n      }\n      return this;\n    }\n\n    while (this.tupletStack.length) {\n      tuplet = this.tupletStack.pop();\n      noteCount = tuplet.getNoteCount();\n      notesOccupied = tuplet.getNotesOccupied();\n\n      // Revert old multiplier by inverting numerator & denom.:\n      this.applyTickMultiplier(noteCount, notesOccupied);\n    }\n    return this;\n  }\n\n  setTuplet(tuplet) {\n    // Attach to new tuplet\n\n    if (tuplet) {\n      this.tupletStack.push(tuplet);\n\n      const noteCount = tuplet.getNoteCount();\n      const notesOccupied = tuplet.getNotesOccupied();\n\n      this.applyTickMultiplier(notesOccupied, noteCount);\n    }\n\n    this.tuplet = tuplet;\n\n    return this;\n  }\n\n  /** optional, if tickable has modifiers **/\n  addToModifierContext(mc) {\n    this.modifierContext = mc;\n    // Add modifiers to modifier context (if any)\n    this.preFormatted = false;\n  }\n\n  /** optional, if tickable has modifiers **/\n  addModifier(mod) {\n    this.modifiers.push(mod);\n    this.preFormatted = false;\n    return this;\n  }\n  getModifiers() {\n    return this.modifiers;\n  }\n  setTickContext(tc) {\n    this.tickContext = tc;\n    this.preFormatted = false;\n  }\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.width = 0;\n    if (this.modifierContext) {\n      this.modifierContext.preFormat();\n      this.width += this.modifierContext.getWidth();\n    }\n  }\n  postFormat() {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n  getIntrinsicTicks() {\n    return this.intrinsicTicks;\n  }\n  setIntrinsicTicks(intrinsicTicks) {\n    this.intrinsicTicks = intrinsicTicks;\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n  getTickMultiplier() {\n    return this.tickMultiplier;\n  }\n  applyTickMultiplier(numerator, denominator) {\n    this.tickMultiplier.multiply(numerator, denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n  setDuration(duration) {\n    const ticks = duration.numerator * (Flow.RESOLUTION / duration.denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(ticks);\n    this.intrinsicTicks = this.ticks.value();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tickable.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Stem } from './stem';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\n\nexport class StemmableNote extends Note {\n  constructor(note_struct) {\n    super(note_struct);\n    this.setAttribute('type', 'StemmableNote');\n\n    this.stem = null;\n    this.stemExtensionOverride = null;\n    this.beam = null;\n  }\n\n  // Get and set the note's `Stem`\n  getStem() { return this.stem; }\n  setStem(stem) { this.stem = stem; return this; }\n\n  // Builds and sets a new stem\n  buildStem() {\n    const stem = new Stem();\n    this.setStem(stem);\n    return this;\n  }\n\n  buildFlag() {\n    const { glyph, beam } = this;\n    const shouldRenderFlag = beam === null;\n\n    if (glyph && glyph.flag && shouldRenderFlag) {\n      const flagCode = this.getStemDirection() === Stem.DOWN\n        ? glyph.code_flag_downstem\n        : glyph.code_flag_upstem;\n\n      this.flag = new Glyph(flagCode, this.render_options.glyph_font_scale);\n    }\n  }\n\n  // Get the full length of stem\n  getStemLength() {\n    return Stem.HEIGHT + this.getStemExtension();\n  }\n\n  // Get the number of beams for this duration\n  getBeamCount() {\n    const glyph = this.getGlyph();\n\n    if (glyph) {\n      return glyph.beam_count;\n    } else {\n      return 0;\n    }\n  }\n\n  // Get the minimum length of stem\n  getStemMinumumLength() {\n    const frac = Flow.durationToFraction(this.duration);\n    let length = frac.value() <= 1 ? 0 : 20;\n    // if note is flagged, cannot shorten beam\n    switch (this.duration) {\n      case '8':\n        if (this.beam == null) length = 35;\n        break;\n      case '16':\n        length = this.beam == null ? 35 : 25;\n        break;\n      case '32':\n        length = this.beam == null ? 45 : 35;\n        break;\n      case '64':\n        length = this.beam == null ? 50 : 40;\n        break;\n      case '128':\n        length = this.beam == null ? 55 : 45;\n        break;\n      default:\n        break;\n    }\n    return length;\n  }\n\n  // Get/set the direction of the stem\n  getStemDirection() { return this.stem_direction; }\n  setStemDirection(direction) {\n    if (!direction) direction = Stem.UP;\n    if (direction !== Stem.UP && direction !== Stem.DOWN) {\n      throw new Vex.RERR('BadArgument', `Invalid stem direction: ${direction}`);\n    }\n\n    this.stem_direction = direction;\n    if (this.stem) {\n      this.stem.setDirection(direction);\n      this.stem.setExtension(this.getStemExtension());\n    }\n\n    this.reset();\n    if (this.flag) {\n      this.buildFlag();\n    }\n\n    this.beam = null;\n    if (this.preFormatted) {\n      this.preFormat();\n    }\n    return this;\n  }\n\n  // Get the `x` coordinate of the stem\n  getStemX() {\n    const x_begin = this.getAbsoluteX() + this.x_shift;\n    const x_end = this.getAbsoluteX() + this.x_shift + this.getGlyphWidth();\n    const stem_x = this.stem_direction === Stem.DOWN ? x_begin : x_end;\n    return stem_x;\n  }\n\n  // Get the `x` coordinate for the center of the glyph.\n  // Used for `TabNote` stems and stemlets over rests\n  getCenterGlyphX() {\n    return this.getAbsoluteX() + this.x_shift + (this.getGlyphWidth() / 2);\n  }\n\n  // Get the stem extension for the current duration\n  getStemExtension() {\n    const glyph = this.getGlyph();\n\n    if (this.stemExtensionOverride != null) {\n      return this.stemExtensionOverride;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.stem_up_extension\n        : glyph.stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Set the stem length to a specific. Will override the default length.\n  setStemLength(height) {\n    this.stemExtensionOverride = (height - Stem.HEIGHT);\n    return this;\n  }\n\n  // Get the top and bottom `y` values of the stem.\n  getStemExtents() {\n    return this.stem.getExtents();\n  }\n\n  // Sets the current note's beam\n  setBeam(beam) { this.beam = beam; return this; }\n\n  // Get the `y` value for the top/bottom modifiers at a specific `textLine`\n  getYForTopText(textLine) {\n    const extents = this.getStemExtents();\n    if (this.hasStem()) {\n      return Math.min(\n        this.stave.getYForTopText(textLine),\n        extents.topY - (this.render_options.annotation_spacing * (textLine + 1))\n      );\n    } else {\n      return this.stave.getYForTopText(textLine);\n    }\n  }\n\n  getYForBottomText(textLine) {\n    const extents = this.getStemExtents();\n    if (this.hasStem()) {\n      return Math.max(\n        this.stave.getYForTopText(textLine),\n        extents.baseY + (this.render_options.annotation_spacing * (textLine))\n      );\n    } else {\n      return this.stave.getYForBottomText(textLine);\n    }\n  }\n\n  hasFlag() {\n    return Flow.durationToGlyph(this.duration).flag && !this.beam;\n  }\n\n  // Post format the note\n  postFormat() {\n    if (this.beam) this.beam.postFormat();\n\n    this.postFormatted = true;\n\n    return this;\n  }\n\n  // Render the stem onto the canvas\n  drawStem(stem_struct) {\n    this.checkContext();\n    this.setRendered();\n\n    this.setStem(new Stem(stem_struct));\n    this.stem.setContext(this.context).draw();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stemmablenote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// `Modifier` is an abstract interface for notational elements that modify\n// a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n//\n// For a `Modifier` instance to be positioned correctly, it must be part of\n// a `ModifierContext`. All modifiers in the same context are rendered relative to\n// one another.\n//\n// Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n// in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n// `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\n// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n// function L(...args) { if (Modifier.DEBUG) Vex.L('Vex.Flow.Modifier', args); }\n\nexport class Modifier extends Element {\n  static get CATEGORY() { return 'none'; }\n\n  // Modifiers can be positioned almost anywhere, relative to a note.\n  static get Position() {\n    return {\n      LEFT: 1,\n      RIGHT: 2,\n      ABOVE: 3,\n      BELOW: 4,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      above: Modifier.Position.ABOVE,\n      below: Modifier.Position.BELOW,\n      left: Modifier.Position.LEFT,\n      right: Modifier.Position.RIGHT,\n    };\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'Modifier');\n\n    this.width = 0;\n\n    // Modifiers are attached to a note and an index. An index is a\n    // specific head in a chord.\n    this.note = null;\n    this.index = null;\n\n    // The `text_line` is reserved space above or below a stave.\n    this.text_line = 0;\n    this.position = Modifier.Position.LEFT;\n    this.modifier_context = null;\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.spacingFromNextModifier = 0;\n  }\n\n  // Every modifier has a category. The `ModifierContext` uses this to determine\n  // the type and order of the modifiers.\n  getCategory() { return Modifier.CATEGORY; }\n\n  // Get and set modifier widths.\n  getWidth() { return this.width; }\n  setWidth(width) { this.width = width; return this; }\n\n  // Get and set attached note (`StaveNote`, `TabNote`, etc.)\n  getNote() { return this.note; }\n  setNote(note) { this.note = note; return this; }\n\n  // Get and set note index, which is a specific note in a chord.\n  getIndex() { return this.index; }\n  setIndex(index) { this.index = index; return this; }\n\n  // Every modifier must be part of a `ModifierContext`.\n  getModifierContext() { return this.modifier_context; }\n  setModifierContext(c) { this.modifier_context = c; return this; }\n\n  // Get and set articulation position.\n  getPosition() { return this.position; }\n  setPosition(position) {\n    this.position = typeof(position) === 'string'\n      ? Modifier.PositionString[position]\n      : position;\n    return this;\n  }\n\n  // Set the `text_line` for the modifier.\n  setTextLine(line) { this.text_line = line; return this; }\n\n  // Shift modifier down `y` pixels. Negative values shift up.\n  setYShift(y) { this.y_shift = y; return this; }\n\n  setSpacingFromNextModifier(x) {\n    this.spacingFromNextModifier = x;\n  }\n\n  getSpacingFromNextModifier() { return this.spacingFromNextModifier; }\n\n  // Shift modifier `x` pixels in the direction of the modifier. Negative values\n  // shift reverse.\n  setXShift(x) {\n    this.x_shift = 0;\n    if (this.position === Modifier.Position.LEFT) {\n      this.x_shift -= x;\n    } else {\n      this.x_shift += x;\n    }\n  }\n  getXShift() { return this.x_shift; }\n\n  // Render the modifier onto the canvas.\n  draw() {\n    this.checkContext();\n    throw new Vex.RERR('MethodNotImplemented', 'draw() not implemented for this modifier.');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modifier.js","// VexFlow - Music Engraving for HTML5\r\n// Copyright Mohit Muthanna 2010\r\n//\r\n// This class implements dot modifiers for notes.\r\n\r\nimport { Vex } from './vex';\r\nimport { Modifier } from './modifier';\r\n\r\nexport class Dot extends Modifier {\r\n  static get CATEGORY() { return 'dots'; }\r\n\r\n  // Arrange dots inside a ModifierContext.\r\n  static format(dots, state) {\r\n    const right_shift = state.right_shift;\r\n    const dot_spacing = 1;\r\n\r\n    if (!dots || dots.length === 0) return false;\r\n\r\n    const dot_list = [];\r\n    for (let i = 0; i < dots.length; ++i) {\r\n      const dot = dots[i];\r\n      const note = dot.getNote();\r\n\r\n      let props;\r\n      let shift;\r\n      // Only StaveNote has .getKeyProps()\r\n      if (typeof note.getKeyProps === 'function') {\r\n        props = note.getKeyProps()[dot.getIndex()];\r\n        shift = (props.displaced ? note.getExtraRightPx() : 0);\r\n      } else { // Else it's a TabNote\r\n        props = { line: 0.5 }; // Shim key props for dot placement\r\n        shift = 0;\r\n      }\r\n\r\n      dot_list.push({ line: props.line, shift, note, dot });\r\n    }\r\n\r\n    // Sort dots by line number.\r\n    dot_list.sort((a, b) => b.line - a.line);\r\n\r\n    let dot_shift = right_shift;\r\n    let x_width = 0;\r\n    let last_line = null;\r\n    let last_note = null;\r\n    let prev_dotted_space = null;\r\n    let half_shiftY = 0;\r\n\r\n    for (let i = 0; i < dot_list.length; ++i) {\r\n      const { dot, note, shift, line } = dot_list[i];\r\n\r\n      // Reset the position of the dot every line.\r\n      if (line !== last_line || note !== last_note) {\r\n        dot_shift = shift;\r\n      }\r\n\r\n      if (!note.isRest() && line !== last_line) {\r\n        if (Math.abs(line % 1) === 0.5) {\r\n          // note is on a space, so no dot shift\r\n          half_shiftY = 0;\r\n        } else if (!note.isRest()) {\r\n          // note is on a line, so shift dot to space above the line\r\n          half_shiftY = 0.5;\r\n          if (last_note != null &&\r\n              !last_note.isRest() && last_line - line === 0.5) {\r\n            // previous note on a space, so shift dot to space below the line\r\n            half_shiftY = -0.5;\r\n          } else if (line + half_shiftY === prev_dotted_space) {\r\n            // previous space is dotted, so shift dot to space below the line\r\n            half_shiftY = -0.5;\r\n          }\r\n        }\r\n      }\r\n\r\n      // convert half_shiftY to a multiplier for dots.draw()\r\n      dot.dot_shiftY = -half_shiftY;\r\n      prev_dotted_space = line + half_shiftY;\r\n\r\n      dot.setXShift(dot_shift);\r\n      dot_shift += dot.getWidth() + dot_spacing; // spacing\r\n      x_width = (dot_shift > x_width) ? dot_shift : x_width;\r\n      last_line = line;\r\n      last_note = note;\r\n    }\r\n\r\n    // Update state.\r\n    state.right_shift += x_width;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @constructor\r\n   */\r\n  constructor() {\r\n    super();\r\n    this.setAttribute('type', 'Dot');\r\n\r\n    this.note = null;\r\n    this.index = null;\r\n    this.position = Modifier.Position.RIGHT;\r\n\r\n    this.radius = 2;\r\n    this.setWidth(5);\r\n    this.dot_shiftY = 0;\r\n  }\r\n\r\n  getCategory() { return Dot.CATEGORY; }\r\n\r\n  setNote(note) {\r\n    this.note = note;\r\n\r\n    if (this.note.getCategory() === 'gracenotes') {\r\n      this.radius *= 0.50;\r\n      this.setWidth(3);\r\n    }\r\n  }\r\n\r\n  setDotShiftY(y) { this.dot_shiftY = y; return this; }\r\n\r\n  draw() {\r\n    this.checkContext();\r\n    this.setRendered();\r\n\r\n    if (!this.note || this.index === null) {\r\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw dot without a note and index.\");\r\n    }\r\n\r\n    const lineSpace = this.note.stave.options.spacing_between_lines_px;\r\n\r\n    const start = this.note.getModifierStartXY(this.position, this.index);\r\n\r\n    // Set the starting y coordinate to the base of the stem for TabNotes\r\n    if (this.note.getCategory() === 'tabnotes') {\r\n      start.y = this.note.getStemExtents().baseY;\r\n    }\r\n\r\n    const x = (start.x + this.x_shift) + this.width - this.radius;\r\n    const y = start.y + this.y_shift + (this.dot_shiftY * lineSpace);\r\n    const ctx = this.context;\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\r\n    ctx.fill();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/dot.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements various types of modifiers to notes (e.g. bends,\n// fingering positions etc.)\n\nimport { Vex } from './vex';\nimport { StaveNote } from './stavenote';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { Accidental } from './accidental';\nimport { NoteSubGroup } from './notesubgroup';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { Stroke } from './strokes';\nimport { StringNumber } from './stringnumber';\nimport { Articulation } from './articulation';\nimport { Ornament } from './ornament';\nimport { Annotation } from './annotation';\nimport { Bend } from './bend';\nimport { Vibrato } from './vibrato';\n\n// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\nfunction L(...args) { if (ModifierContext.DEBUG) Vex.L('Vex.Flow.ModifierContext', args); }\n\nexport class ModifierContext {\n  constructor() {\n    // Current modifiers\n    this.modifiers = {};\n\n    // Formatting data.\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.width = 0;\n    this.spacing = 0;\n    this.state = {\n      left_shift: 0,\n      right_shift: 0,\n      text_line: 0,\n      top_text_line: 0,\n    };\n\n    // Add new modifiers to this array. The ordering is significant -- lower\n    // modifiers are formatted and rendered before higher ones.\n    this.PREFORMAT = [\n      StaveNote,\n      Dot,\n      FretHandFinger,\n      Accidental,\n      GraceNoteGroup,\n      NoteSubGroup,\n      Stroke,\n      StringNumber,\n      Articulation,\n      Ornament,\n      Annotation,\n      Bend,\n      Vibrato,\n    ];\n\n    // If post-formatting is required for an element, add it to this array.\n    this.POSTFORMAT = [StaveNote];\n  }\n\n  addModifier(modifier) {\n    const type = modifier.getCategory();\n    if (!this.modifiers[type]) this.modifiers[type] = [];\n    this.modifiers[type].push(modifier);\n    modifier.setModifierContext(this);\n    this.preFormatted = false;\n    return this;\n  }\n\n  getModifiers(type) { return this.modifiers[type]; }\n  getWidth() { return this.width; }\n  getExtraLeftPx() { return this.state.left_shift; }\n  getExtraRightPx() { return this.state.right_shift; }\n  getState() { return this.state; }\n\n  getMetrics() {\n    if (!this.formatted) {\n      throw new Vex.RERR('UnformattedModifier', 'Unformatted modifier has no metrics.');\n    }\n\n    return {\n      width: this.state.left_shift + this.state.right_shift + this.spacing,\n      spacing: this.spacing,\n      extra_left_px: this.state.left_shift,\n      extra_right_px: this.state.right_shift,\n    };\n  }\n\n  preFormat() {\n    if (this.preFormatted) return;\n    this.PREFORMAT.forEach((modifier) => {\n      L('Preformatting ModifierContext: ', modifier.CATEGORY);\n      modifier.format(this.getModifiers(modifier.CATEGORY), this.state, this);\n    });\n\n    // Update width of this modifier context\n    this.width = this.state.left_shift + this.state.right_shift;\n    this.preFormatted = true;\n  }\n\n  postFormat() {\n    if (this.postFormatted) return;\n    this.POSTFORMAT.forEach((modifier) => {\n      L('Postformatting ModifierContext: ', modifier.CATEGORY);\n      modifier.postFormat(this.getModifiers(modifier.CATEGORY), this);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modifiercontext.js","// VexFlow - Music Engraving for HTML5\r\n// Copyright Mohit Muthanna 2010\r\n// Author Larry Kuhns 2013\r\n// Class to draws string numbers into the notation.\r\n\r\nimport { Vex } from './vex';\r\nimport { Modifier } from './modifier';\r\n\r\n/**\r\n * @constructor\r\n */\r\nexport class FretHandFinger extends Modifier {\r\n  static get CATEGORY() { return 'frethandfinger'; }\r\n\r\n  // Arrange fingerings inside a ModifierContext.\r\n  static format(nums, state) {\r\n    const { left_shift, right_shift } = state;\r\n    const num_spacing = 1;\r\n\r\n    if (!nums || nums.length === 0) return false;\r\n\r\n    const nums_list = [];\r\n    let prev_note = null;\r\n    let shiftLeft = 0;\r\n    let shiftRight = 0;\r\n\r\n    for (let i = 0; i < nums.length; ++i) {\r\n      const num = nums[i];\r\n      const note = num.getNote();\r\n      const pos = num.getPosition();\r\n      const props = note.getKeyProps()[num.getIndex()];\r\n      if (note !== prev_note) {\r\n        for (let n = 0; n < note.keys.length; ++n) {\r\n          const props_tmp = note.getKeyProps()[n];\r\n          if (left_shift === 0) {\r\n            shiftLeft = props_tmp.displaced ? note.getExtraLeftPx() : shiftLeft;\r\n          }\r\n          if (right_shift === 0) {\r\n            shiftRight = props_tmp.displaced ? note.getExtraRightPx() : shiftRight;\r\n          }\r\n        }\r\n        prev_note = note;\r\n      }\r\n\r\n      nums_list.push({\r\n        note,\r\n        num,\r\n        pos,\r\n        line: props.line,\r\n        shiftL: shiftLeft,\r\n        shiftR: shiftRight,\r\n      });\r\n    }\r\n\r\n    // Sort fingernumbers by line number.\r\n    nums_list.sort((a, b) => b.line - a.line);\r\n\r\n    let numShiftL = 0;\r\n    let numShiftR = 0;\r\n    let xWidthL = 0;\r\n    let xWidthR = 0;\r\n    let lastLine = null;\r\n    let lastNote = null;\r\n\r\n    for (let i = 0; i < nums_list.length; ++i) {\r\n      let num_shift = 0;\r\n      const { note, pos, num, line, shiftL, shiftR } = nums_list[i];\r\n\r\n      // Reset the position of the string number every line.\r\n      if (line !== lastLine || note !== lastNote) {\r\n        numShiftL = left_shift + shiftL;\r\n        numShiftR = right_shift + shiftR;\r\n      }\r\n\r\n      const numWidth = num.getWidth() + num_spacing;\r\n      if (pos === Modifier.Position.LEFT) {\r\n        num.setXShift(left_shift + numShiftL);\r\n        num_shift = left_shift + numWidth; // spacing\r\n        xWidthL = num_shift > xWidthL ? num_shift : xWidthL;\r\n      } else if (pos === Modifier.Position.RIGHT) {\r\n        num.setXShift(numShiftR);\r\n        num_shift = shiftRight + numWidth; // spacing\r\n        xWidthR = num_shift > xWidthR ? num_shift : xWidthR;\r\n      }\r\n      lastLine = line;\r\n      lastNote = note;\r\n    }\r\n\r\n    state.left_shift += xWidthL;\r\n    state.right_shift += xWidthR;\r\n\r\n    return true;\r\n  }\r\n\r\n  constructor(number) {\r\n    super();\r\n    this.setAttribute('type', 'FretHandFinger');\r\n\r\n    this.note = null;\r\n    this.index = null;\r\n    this.finger = number;\r\n    this.width = 7;\r\n    this.position = Modifier.Position.LEFT;  // Default position above stem or note head\r\n    this.x_shift = 0;\r\n    this.y_shift = 0;\r\n    this.x_offset = 0;       // Horizontal offset from default\r\n    this.y_offset = 0;       // Vertical offset from default\r\n    this.font = {\r\n      family: 'sans-serif',\r\n      size: 9,\r\n      weight: 'bold',\r\n    };\r\n  }\r\n  getCategory() { return FretHandFinger.CATEGORY; }\r\n  setFretHandFinger(number) { this.finger = number; return this; }\r\n  setOffsetX(x) { this.x_offset = x; return this; }\r\n  setOffsetY(y) { this.y_offset = y; return this; }\r\n\r\n  draw() {\r\n    this.checkContext();\r\n\r\n    if (!this.note || this.index == null) {\r\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\r\n    }\r\n\r\n    this.setRendered();\r\n    const ctx = this.context;\r\n    const start = this.note.getModifierStartXY(this.position, this.index);\r\n    let dot_x = start.x + this.x_shift + this.x_offset;\r\n    let dot_y = start.y + this.y_shift + this.y_offset + 5;\r\n\r\n    switch (this.position) {\r\n      case Modifier.Position.ABOVE:\r\n        dot_x -= 4;\r\n        dot_y -= 12;\r\n        break;\r\n      case Modifier.Position.BELOW:\r\n        dot_x -= 2;\r\n        dot_y += 10;\r\n        break;\r\n      case Modifier.Position.LEFT:\r\n        dot_x -= this.width;\r\n        break;\r\n      case Modifier.Position.RIGHT:\r\n        dot_x += 1;\r\n        break;\r\n      default:\r\n        throw new Vex.RERR('InvalidPostion', `The position ${this.position} does not exist`);\r\n    }\r\n\r\n    ctx.save();\r\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\r\n    ctx.fillText('' + this.finger, dot_x, dot_y);\r\n    ctx.restore();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/frethandfinger.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// @author Greg Ristow (modifications)\n//\n// ## Description\n//\n// This file implements accidentals as modifiers that can be attached to\n// notes. Support is included for both western and microtonal accidentals.\n//\n// See `tests/accidental_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Fraction } from './fraction';\nimport { Flow } from './tables';\nimport { Music } from './music';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`.\nfunction L(...args) { if (Accidental.DEBUG) Vex.L('Vex.Flow.Accidental', args); }\n\nconst getGlyphWidth = glyph => glyph.getMetrics().width;\n\n// An `Accidental` inherits from `Modifier`, and is formatted within a\n// `ModifierContext`.\nexport class Accidental extends Modifier {\n  static get CATEGORY() { return 'accidentals'; }\n\n  // Arrange accidentals inside a ModifierContext.\n  static format(accidentals, state) {\n    const noteheadAccidentalPadding = 1;\n    const leftShift = state.left_shift + noteheadAccidentalPadding;\n    const accidentalSpacing = 3;\n\n    // If there are no accidentals, we needn't format their positions\n    if (!accidentals || accidentals.length === 0) return;\n\n    const accList = [];\n    let prevNote = null;\n    let shiftL = 0;\n\n    // First determine the accidentals' Y positions from the note.keys\n    let propsTemp;\n    for (let i = 0; i < accidentals.length; ++i) {\n      const acc = accidentals[i];\n      const note = acc.getNote();\n      const stave = note.getStave();\n      const props = note.getKeyProps()[acc.getIndex()];\n      if (note !== prevNote) {\n         // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          propsTemp = note.getKeyProps()[n];\n          shiftL = propsTemp.displaced ? note.getExtraLeftPx() : shiftL;\n        }\n        prevNote = note;\n      }\n      if (stave !== null) {\n        const lineSpace = stave.options.spacing_between_lines_px;\n        const y = stave.getYForLine(props.line);\n        const accLine = Math.round(y / lineSpace * 2) / 2;\n        accList.push({ y, line: accLine, shift: shiftL, acc, lineSpace });\n      } else {\n        accList.push({ line: props.line, shift: shiftL, acc });\n      }\n    }\n\n    // Sort accidentals by line number.\n    accList.sort((a, b) => b.line - a.line);\n\n    // FIXME: Confusing name. Each object in this array has a property called `line`.\n    // So if this is a list of lines, you end up with: `line.line` which is very awkward.\n    const lineList = [];\n\n    // amount by which all accidentals must be shifted right or left for\n    // stem flipping, notehead shifting concerns.\n    let accShift = 0;\n    let previousLine = null;\n\n    // Create an array of unique line numbers (lineList) from accList\n    for (let i = 0; i < accList.length; i++) {\n      const acc = accList[i];\n\n      // if this is the first line, or a new line, add a lineList\n      if (previousLine === null || previousLine !== acc.line) {\n        lineList.push({\n          line: acc.line,\n          flatLine: true,\n          dblSharpLine: true,\n          numAcc: 0,\n          width: 0,\n        });\n      }\n      // if this accidental is not a flat, the accidental needs 3.0 lines lower\n      // clearance instead of 2.5 lines for b or bb.\n      // FIXME: Naming could use work. acc.acc is very awkward\n      if (acc.acc.type !== 'b' && acc.acc.type !== 'bb') {\n        lineList[lineList.length - 1].flatLine = false;\n      }\n\n      // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n      if (acc.acc.type !== '##') {\n        lineList[lineList.length - 1].dblSharpLine = false;\n      }\n\n      // Track how many accidentals are on this line:\n      lineList[lineList.length - 1].numAcc++;\n\n      // Track the total x_offset needed for this line which will be needed\n      // for formatting lines w/ multiple accidentals:\n\n      // width = accidental width + universal spacing between accidentals\n      lineList[lineList.length - 1].width += acc.acc.getWidth() + accidentalSpacing;\n\n      // if this accShift is larger, use it to keep first column accidentals in the same line\n      accShift = acc.shift > accShift ? acc.shift : accShift;\n\n      previousLine = acc.line;\n    }\n\n    // ### Place Accidentals in Columns\n    //\n    // Default to a classic triangular layout (middle accidental farthest left),\n    // but follow exceptions as outlined in G. Read's _Music Notation_ and\n    // Elaine Gould's _Behind Bars_.\n    //\n    // Additionally, this implements different vertical collision rules for\n    // flats (only need 2.5 lines clearance below) and double sharps (only\n    // need 2.5 lines of clearance above or below).\n    //\n    // Classic layouts and exception patterns are found in the 'tables.js'\n    // in 'Vex.Flow.accidentalColumnsTable'\n    //\n    // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n    // using as few columns as possible for the verticle structure.\n    //\n    // TODO (?): Allow column to be specified for an accidental at run-time?\n\n    let totalColumns = 0;\n\n    // establish the boundaries for a group of notes with clashing accidentals:\n    for (let i = 0; i < lineList.length; i++) {\n      let noFurtherConflicts = false;\n      const groupStart = i;\n      let groupEnd = i;\n\n      while (groupEnd + 1 < lineList.length && !noFurtherConflicts) {\n        // if this note conflicts with the next:\n        if (this.checkCollision(lineList[groupEnd], lineList[groupEnd + 1])) {\n        // include the next note in the group:\n          groupEnd++;\n        } else {\n          noFurtherConflicts = true;\n        }\n      }\n\n      // Gets an a line from the `lineList`, relative to the current group\n      const getGroupLine = (index) => lineList[groupStart + index];\n      const getGroupLines = (indexes) => indexes.map(getGroupLine);\n      const lineDifference = (indexA, indexB) => {\n        const [a, b] = getGroupLines([indexA, indexB]).map(item => item.line);\n        return a - b;\n      };\n\n      const notColliding = (...indexPairs) =>\n        indexPairs\n          .map(getGroupLines)\n          .every(lines => !this.checkCollision(...lines));\n\n      // Set columns for the lines in this group:\n      const groupLength = groupEnd - groupStart + 1;\n\n      // Set the accidental column for each line of the group\n      let endCase = this.checkCollision(lineList[groupStart], lineList[groupEnd]) ? 'a' : 'b';\n\n      switch (groupLength) {\n        case 3:\n          if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n            endCase = 'second_on_bottom';\n          }\n          break;\n        case 4:\n          if (notColliding([0, 2], [1, 3])) {\n            endCase = 'spaced_out_tetrachord';\n          }\n          break;\n        case 5:\n          if (endCase === 'b' && notColliding([1, 3])) {\n            endCase = 'spaced_out_pentachord';\n            if (notColliding([0, 2], [2, 4])) {\n              endCase = 'very_spaced_out_pentachord';\n            }\n          }\n          break;\n        case 6:\n          if (notColliding([0, 3], [1, 4], [2, 5])) {\n            endCase = 'spaced_out_hexachord';\n          }\n          if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n            endCase = 'very_spaced_out_hexachord';\n          }\n          break;\n        default:\n          break;\n      }\n\n      let groupMember;\n      let column;\n      // If the group contains more than seven members, use ascending parallel lines\n      // of accidentals, using as few columns as possible while avoiding collisions.\n      if (groupLength >= 7) {\n        // First, determine how many columns to use:\n        let patternLength = 2;\n        let collisionDetected = true;\n        while (collisionDetected === true) {\n          collisionDetected = false;\n          for (let line = 0; line + patternLength < lineList.length; line++) {\n            if (this.checkCollision(lineList[line], lineList[line + patternLength])) {\n              collisionDetected = true;\n              patternLength++;\n              break;\n            }\n          }\n        }\n        // Then, assign a column to each line of accidentals\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = ((groupMember - i) % patternLength) + 1;\n          lineList[groupMember].column = column;\n          totalColumns = (totalColumns > column) ? totalColumns : column;\n        }\n\n      // Otherwise, if the group contains fewer than seven members, use the layouts from\n      // the accidentalsColumnsTable housed in tables.js.\n      } else {\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = Flow.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n          lineList[groupMember].column = column;\n          totalColumns = (totalColumns > column) ? totalColumns : column;\n        }\n      }\n\n      // Increment i to the last note that was set, so that if a lower set of notes\n      // does not conflict at all with this group, it can have its own classic shape.\n      i = groupEnd;\n    }\n\n    // ### Convert Columns to x_offsets\n    //\n    // This keeps columns aligned, even if they have different accidentals within them\n    // which sometimes results in a larger x_offset than is an accidental might need\n    // to preserve the symmetry of the accidental shape.\n    //\n    // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n    // music with complex chord clusters.\n    //\n    // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n    // parallel columns.\n\n    // track each column's max width, which will be used as initial shift of later columns:\n    const columnWidths = [];\n    const columnXOffsets = [];\n    for (let i = 0; i <= totalColumns; i++) {\n      columnWidths[i] = 0;\n      columnXOffsets[i] = 0;\n    }\n\n    columnWidths[0] = accShift + leftShift;\n    columnXOffsets[0] = accShift + leftShift;\n\n    // Fill columnWidths with widest needed x-space;\n    // this is what keeps the columns parallel.\n    lineList.forEach(line => {\n      if (line.width > columnWidths[line.column]) columnWidths[line.column] = line.width;\n    });\n\n    for (let i = 1; i < columnWidths.length; i++) {\n      // this column's offset = this column's width + previous column's offset\n      columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n    }\n\n    const totalShift = columnXOffsets[columnXOffsets.length - 1];\n    // Set the xShift for each accidental according to column offsets:\n    let accCount = 0;\n    lineList.forEach(line => {\n      let lineWidth = 0;\n      const lastAccOnLine = accCount + line.numAcc;\n      // handle all of the accidentals on a given line:\n      for (accCount; accCount < lastAccOnLine; accCount++) {\n        const xShift = (columnXOffsets[line.column - 1] + lineWidth);\n        accList[accCount].acc.setXShift(xShift);\n        // keep track of the width of accidentals we've added so far, so that when\n        // we loop, we add space for them.\n        lineWidth += accList[accCount].acc.getWidth() + accidentalSpacing;\n        L('Line, accCount, shift: ', line.line, accCount, xShift);\n      }\n    });\n\n    // update the overall layout with the full width of the accidental shapes:\n    state.left_shift += totalShift;\n  }\n\n  // Helper function to determine whether two lines of accidentals collide vertically\n  static checkCollision(line1, line2) {\n    let clearance = line2.line - line1.line;\n    let clearanceRequired = 3;\n    // But less clearance is required for certain accidentals: b, bb and ##.\n    if (clearance > 0) { // then line 2 is on top\n      clearanceRequired = (line2.flatLine || line2.dblSharpLine) ? 2.5 : 3.0;\n      if (line1.dblSharpLine) clearance -= 0.5;\n    } else { // line 1 is on top\n      clearanceRequired = (line1.flatLine || line1.dblSharpLine) ? 2.5 : 3.0;\n      if (line2.dblSharpLine) clearance -= 0.5;\n    }\n    const collision = Math.abs(clearance) < clearanceRequired;\n    L('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n    return collision;\n  }\n\n  // Use this method to automatically apply accidentals to a set of `voices`.\n  // The accidentals will be remembered between all the voices provided.\n  // Optionally, you can also provide an initial `keySignature`.\n  static applyAccidentals(voices, keySignature) {\n    const tickPositions = [];\n    const tickNoteMap = {};\n\n    // Sort the tickables in each voice by their tick position in the voice\n    voices.forEach(voice => {\n      const tickPosition = new Fraction(0, 1);\n      const notes = voice.getTickables();\n      notes.forEach(note => {\n        if (note.shouldIgnoreTicks()) return;\n\n        const notesAtPosition = tickNoteMap[tickPosition.value()];\n\n        if (!notesAtPosition) {\n          tickPositions.push(tickPosition.value());\n          tickNoteMap[tickPosition.value()] = [note];\n        } else {\n          notesAtPosition.push(note);\n        }\n\n        tickPosition.add(note.getTicks());\n      });\n    });\n\n    const music = new Music();\n\n    // Default key signature is C major\n    if (!keySignature) keySignature = 'C';\n\n    // Get the scale map, which represents the current state of each pitch\n    const scaleMap = music.createScaleMap(keySignature);\n\n    tickPositions.forEach(tick => {\n      const notes = tickNoteMap[tick];\n\n      // Array to store all pitches that modified accidental states\n      // at this tick position\n      const modifiedPitches = [];\n\n      const processNote = (note) => {\n        if (note.isRest() || note.shouldIgnoreTicks()) return;\n\n        // Go through each key and determine if an accidental should be\n        // applied\n        note.keys.forEach((keyString, keyIndex) => {\n          const key = music.getNoteParts(keyString.split('/')[0]);\n\n          // Force a natural for every key without an accidental\n          const accidentalString = key.accidental || 'n';\n          const pitch = key.root + accidentalString;\n\n          // Determine if the current pitch has the same accidental\n          // as the scale state\n          const sameAccidental = scaleMap[key.root] === pitch;\n\n          // Determine if an identical pitch in the chord already\n          // modified the accidental state\n          const previouslyModified = modifiedPitches.indexOf(pitch) > -1;\n\n            // Add the accidental to the StaveNote\n          if (!sameAccidental || (sameAccidental && previouslyModified)) {\n            // Modify the scale map so that the root pitch has an\n            // updated state\n            scaleMap[key.root] = pitch;\n\n            // Create the accidental\n            const accidental = new Accidental(accidentalString);\n\n            // Attach the accidental to the StaveNote\n            note.addAccidental(keyIndex, accidental);\n\n            // Add the pitch to list of pitches that modified accidentals\n            modifiedPitches.push(pitch);\n          }\n        });\n\n        // process grace notes\n        note.getModifiers().forEach(modifier => {\n          if (modifier.getCategory() === 'gracenotegroups') {\n            modifier.getGraceNotes().forEach(processNote);\n          }\n        });\n      };\n\n      notes.forEach(processNote);\n    });\n  }\n\n  // Create accidental. `type` can be a value from the\n  // `Vex.Flow.accidentalCodes.accidentals` table in `tables.js`. For\n  // example: `#`, `##`, `b`, `n`, etc.\n  constructor(type = null) {\n    super();\n    this.setAttribute('type', 'Accidental');\n\n    L('New accidental: ', type);\n\n    this.note = null;\n    // The `index` points to a specific note in a chord.\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.LEFT;\n\n    this.render_options = {\n      // Font size for glyphs\n      font_scale: 38,\n\n      // Length of stroke across heads above or below the stave.\n      stroke_px: 3,\n\n      // Padding between accidental and parentheses on each side\n      parenLeftPadding: 2,\n      parenRightPadding: 2,\n    };\n\n    this.accidental = Flow.accidentalCodes(this.type);\n    if (!this.accidental) {\n      throw new Vex.RERR('ArgumentError', `Unknown accidental type: ${type}`);\n    }\n\n    // Cautionary accidentals have parentheses around them\n    this.cautionary = false;\n    this.parenLeft = null;\n    this.parenRight = null;\n\n    this.reset();\n  }\n\n  reset() {\n    const fontScale = this.render_options.font_scale;\n    this.glyph = new Glyph(this.accidental.code, fontScale);\n    this.glyph.setOriginX(1.0);\n\n    if (this.cautionary) {\n      this.parenLeft = new Glyph(Flow.accidentalCodes('{').code, fontScale);\n      this.parenRight = new Glyph(Flow.accidentalCodes('}').code, fontScale);\n      this.parenLeft.setOriginX(1.0);\n      this.parenRight.setOriginX(1.0);\n    }\n  }\n\n  getCategory() { return Accidental.CATEGORY; }\n\n  getWidth() {\n    const parenWidth = this.cautionary\n      ? (\n        getGlyphWidth(this.parenLeft) +\n        getGlyphWidth(this.parenRight) +\n        this.render_options.parenLeftPadding +\n        this.render_options.parenRightPadding\n      )\n      : 0;\n\n    return getGlyphWidth(this.glyph) + parenWidth;\n  }\n\n  // Attach this accidental to `note`, which must be a `StaveNote`.\n  setNote(note) {\n    if (!note) {\n      throw new Vex.RERR('ArgumentError', `Bad note value: ${note}`);\n    }\n\n    this.note = note;\n\n    // Accidentals attached to grace notes are rendered smaller.\n    if (this.note.getCategory() === 'gracenotes') {\n      this.render_options.font_scale = 25;\n      this.reset();\n    }\n  }\n\n  // If called, draws parenthesis around accidental.\n  setAsCautionary() {\n    this.cautionary = true;\n    this.render_options.font_scale = 28;\n    this.reset();\n    return this;\n  }\n\n  // Render accidental onto canvas.\n  draw() {\n    const {\n      context,\n      type, position, note, index, cautionary,\n      x_shift, y_shift,\n      glyph, parenLeft, parenRight,\n      render_options: { parenLeftPadding, parenRightPadding },\n    } = this;\n\n    this.checkContext();\n\n    if (!(note && (index != null))) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw accidental without a note and index.\");\n    }\n\n    // Figure out the start `x` and `y` coordinates for note and index.\n    const start = note.getModifierStartXY(position, index);\n    let accX = start.x + x_shift;\n    const accY = start.y + y_shift;\n    L('Rendering: ', type, accX, accY);\n\n    if (!cautionary) {\n      glyph.render(context, accX, accY);\n    } else {\n      // Render the accidental in parentheses.\n      parenRight.render(context, accX, accY);\n      accX -= getGlyphWidth(parenRight);\n      accX -= parenRightPadding;\n      accX -= this.accidental.parenRightPaddingAdjustment;\n      glyph.render(context, accX, accY);\n      accX -= getGlyphWidth(glyph);\n      accX -= parenLeftPadding;\n      parenLeft.render(context, accX, accY);\n    }\n\n    this.setRendered();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/accidental.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements some standard music theory routines.\n\nimport { Vex } from './vex';\n\nexport class Music {\n  static get NUM_TONES() {\n    return 12;\n  }\n\n  static get roots() {\n    return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n  }\n\n  static get root_values() {\n    return [0, 2, 4, 5, 7, 9, 11];\n  }\n\n  static get root_indices() {\n    return {\n      'c': 0,\n      'd': 1,\n      'e': 2,\n      'f': 3,\n      'g': 4,\n      'a': 5,\n      'b': 6,\n    };\n  }\n\n  static get canonical_notes() {\n    return [\n      'c', 'c#', 'd', 'd#',\n      'e', 'f', 'f#', 'g',\n      'g#', 'a', 'a#', 'b',\n    ];\n  }\n\n  static get diatonic_intervals() {\n    return [\n      'unison', 'm2', 'M2', 'm3', 'M3',\n      'p4', 'dim5', 'p5', 'm6', 'M6',\n      'b7', 'M7', 'octave',\n    ];\n  }\n\n  static get diatonic_accidentals() {\n    return {\n      'unison': { note: 0, accidental: 0 },\n      'm2': { note: 1, accidental: -1 },\n      'M2': { note: 1, accidental: 0 },\n      'm3': { note: 2, accidental: -1 },\n      'M3': { note: 2, accidental: 0 },\n      'p4': { note: 3, accidental: 0 },\n      'dim5': { note: 4, accidental: -1 },\n      'p5': { note: 4, accidental: 0 },\n      'm6': { note: 5, accidental: -1 },\n      'M6': { note: 5, accidental: 0 },\n      'b7': { note: 6, accidental: -1 },\n      'M7': { note: 6, accidental: 0 },\n      'octave': { note: 7, accidental: 0 },\n    };\n  }\n\n  static get intervals() {\n    return {\n      'u': 0, 'unison': 0,\n      'm2': 1, 'b2': 1, 'min2': 1, 'S': 1, 'H': 1,\n      '2': 2, 'M2': 2, 'maj2': 2, 'T': 2, 'W': 2,\n      'm3': 3, 'b3': 3, 'min3': 3,\n      'M3': 4, '3': 4, 'maj3': 4,\n      '4': 5, 'p4': 5,\n      '#4': 6, 'b5': 6, 'aug4': 6, 'dim5': 6,\n      '5': 7, 'p5': 7,\n      '#5': 8, 'b6': 8, 'aug5': 8,\n      '6': 9, 'M6': 9, 'maj6': 9,\n      'b7': 10, 'm7': 10, 'min7': 10, 'dom7': 10,\n      'M7': 11, 'maj7': 11,\n      '8': 12, 'octave': 12,\n    };\n  }\n\n  static get scales() {\n    return {\n      major: [2, 2, 1, 2, 2, 2, 1],\n      dorian: [2, 1, 2, 2, 2, 1, 2],\n      mixolydian: [2, 2, 1, 2, 2, 1, 2],\n      minor: [2, 1, 2, 2, 1, 2, 2],\n    };\n  }\n\n  static get scaleTypes() {\n    return {\n      'M': Music.scales.major,\n      'm': Music.scales.minor,\n    };\n  }\n\n  static get accidentals() {\n    return ['bb', 'b', 'n', '#', '##'];\n  }\n\n  static get noteValues() {\n    return {\n      'c': { root_index: 0, int_val: 0 },\n      'cn': { root_index: 0, int_val: 0 },\n      'c#': { root_index: 0, int_val: 1 },\n      'c##': { root_index: 0, int_val: 2 },\n      'cb': { root_index: 0, int_val: 11 },\n      'cbb': { root_index: 0, int_val: 10 },\n      'd': { root_index: 1, int_val: 2 },\n      'dn': { root_index: 1, int_val: 2 },\n      'd#': { root_index: 1, int_val: 3 },\n      'd##': { root_index: 1, int_val: 4 },\n      'db': { root_index: 1, int_val: 1 },\n      'dbb': { root_index: 1, int_val: 0 },\n      'e': { root_index: 2, int_val: 4 },\n      'en': { root_index: 2, int_val: 4 },\n      'e#': { root_index: 2, int_val: 5 },\n      'e##': { root_index: 2, int_val: 6 },\n      'eb': { root_index: 2, int_val: 3 },\n      'ebb': { root_index: 2, int_val: 2 },\n      'f': { root_index: 3, int_val: 5 },\n      'fn': { root_index: 3, int_val: 5 },\n      'f#': { root_index: 3, int_val: 6 },\n      'f##': { root_index: 3, int_val: 7 },\n      'fb': { root_index: 3, int_val: 4 },\n      'fbb': { root_index: 3, int_val: 3 },\n      'g': { root_index: 4, int_val: 7 },\n      'gn': { root_index: 4, int_val: 7 },\n      'g#': { root_index: 4, int_val: 8 },\n      'g##': { root_index: 4, int_val: 9 },\n      'gb': { root_index: 4, int_val: 6 },\n      'gbb': { root_index: 4, int_val: 5 },\n      'a': { root_index: 5, int_val: 9 },\n      'an': { root_index: 5, int_val: 9 },\n      'a#': { root_index: 5, int_val: 10 },\n      'a##': { root_index: 5, int_val: 11 },\n      'ab': { root_index: 5, int_val: 8 },\n      'abb': { root_index: 5, int_val: 7 },\n      'b': { root_index: 6, int_val: 11 },\n      'bn': { root_index: 6, int_val: 11 },\n      'b#': { root_index: 6, int_val: 0 },\n      'b##': { root_index: 6, int_val: 1 },\n      'bb': { root_index: 6, int_val: 10 },\n      'bbb': { root_index: 6, int_val: 9 },\n    };\n  }\n\n  isValidNoteValue(note) {\n    if (note == null || note < 0 || note >= Music.NUM_TONES) {\n      return false;\n    }\n    return true;\n  }\n\n  isValidIntervalValue(interval) {\n    return this.isValidNoteValue(interval);\n  }\n\n  getNoteParts(noteString) {\n    if (!noteString || noteString.length < 1) {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    if (noteString.length > 3) {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    const note = noteString.toLowerCase();\n\n    const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n    const match = regex.exec(note);\n\n    if (match != null) {\n      const root = match[1];\n      const accidental = match[2];\n\n      return {\n        root,\n        accidental,\n      };\n    } else {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n  }\n\n  getKeyParts(keyString) {\n    if (!keyString || keyString.length < 1) {\n      throw new Vex.RERR('BadArguments', 'Invalid key: ' + keyString);\n    }\n\n    const key = keyString.toLowerCase();\n\n    // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n    const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n    const match = regex.exec(key);\n\n    if (match != null) {\n      const root = match[1];\n      const accidental = match[2];\n      let type = match[3];\n\n      // Unspecified type implies major\n      if (!type) type = 'M';\n\n      return {\n        root,\n        accidental,\n        type,\n      };\n    } else {\n      throw new Vex.RERR('BadArguments', `Invalid key: ${keyString}`);\n    }\n  }\n\n  getNoteValue(noteString) {\n    const value = Music.noteValues[noteString];\n    if (value == null) {\n      throw new Vex.RERR('BadArguments', `Invalid note name: ${noteString}`);\n    }\n\n    return value.int_val;\n  }\n\n  getIntervalValue(intervalString) {\n    const value = Music.intervals[intervalString];\n    if (value == null) {\n      throw new Vex.RERR('BadArguments', 'Invalid interval name: ${intervalString}');\n    }\n\n    return value;\n  }\n\n  getCanonicalNoteName(noteValue) {\n    if (!this.isValidNoteValue(noteValue)) {\n      throw new Vex.RERR('BadArguments', `Invalid note value: ${noteValue}`);\n    }\n\n    return Music.canonical_notes[noteValue];\n  }\n\n  getCanonicalIntervalName(intervalValue) {\n    if (!this.isValidIntervalValue(intervalValue)) {\n      throw new Vex.RERR('BadArguments', `Invalid interval value: ${intervalValue}`);\n    }\n\n    return Music.diatonic_intervals[intervalValue];\n  }\n\n  /* Given a note, interval, and interval direction, product the\n   * relative note.\n   */\n  getRelativeNoteValue(noteValue, intervalValue, direction) {\n    if (direction == null) direction = 1;\n\n    if (direction !== 1 && direction !== -1) {\n      throw new Vex.RERR('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    let sum = (noteValue + (direction * intervalValue)) % Music.NUM_TONES;\n    if (sum < 0) sum += Music.NUM_TONES;\n\n    return sum;\n  }\n\n  getRelativeNoteName(root, noteValue) {\n    const parts = this.getNoteParts(root);\n    const rootValue = this.getNoteValue(parts.root);\n    let interval = noteValue - rootValue;\n\n    if (Math.abs(interval) > Music.NUM_TONES - 3) {\n      let multiplier = 1;\n      if (interval > 0) multiplier = -1;\n\n      // Possibly wrap around. (Add +1 for modulo operator)\n      const reverse_interval = (((noteValue + 1) + (rootValue + 1)) %\n        Music.NUM_TONES) * multiplier;\n\n      if (Math.abs(reverse_interval) > 2) {\n        throw new Vex.RERR('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n      } else {\n        interval = reverse_interval;\n      }\n    }\n\n    if (Math.abs(interval) > 2) {\n      throw new Vex.RERR('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n    }\n\n    let relativeNoteName = parts.root;\n    if (interval > 0) {\n      for (let i = 1; i <= interval; ++i) {\n        relativeNoteName += '#';\n      }\n    } else if (interval < 0) {\n      for (let i = -1; i >= interval; --i) {\n        relativeNoteName += 'b';\n      }\n    }\n\n    return relativeNoteName;\n  }\n\n  /* Return scale tones, given intervals. Each successive interval is\n   * relative to the previous one, e.g., Major Scale:\n   *\n   *   TTSTTTS = [2,2,1,2,2,2,1]\n   *\n   * When used with key = 0, returns C scale (which is isomorphic to\n   * interval list).\n   */\n  getScaleTones(key, intervals) {\n    const tones = [key];\n\n    let nextNote = key;\n    for (let i = 0; i < intervals.length; i += 1) {\n      nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n      if (nextNote !== key) tones.push(nextNote);\n    }\n\n    return tones;\n  }\n\n  /* Returns the interval of a note, given a diatonic scale.\n   *\n   * E.g., Given the scale C, and the note E, returns M3\n   */\n  getIntervalBetween(note1, note2, direction) {\n    if (direction == null) direction = 1;\n\n    if (direction !== 1 && direction !== -1) {\n      throw new Vex.RERR('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n      throw new Vex.RERR('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n    }\n\n    let difference = direction === 1\n      ? note2 - note1\n      : note1 - note2;\n\n    if (difference < 0) difference += Music.NUM_TONES;\n\n    return difference;\n  }\n\n  // Create a scale map that represents the pitch state for a\n  // `keySignature`. For example, passing a `G` to `keySignature` would\n  // return a scale map with every note naturalized except for `F` which\n  // has an `F#` state.\n  createScaleMap(keySignature) {\n    const keySigParts = this.getKeyParts(keySignature);\n    const scaleName = Music.scaleTypes[keySigParts.type];\n\n    let keySigString = keySigParts.root;\n    if (keySigParts.accidental) keySigString += keySigParts.accidental;\n\n    if (!scaleName) throw new Vex.RERR('BadArguments', 'Unsupported key type: ' + keySignature);\n\n    const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n    const noteLocation = Music.root_indices[keySigParts.root];\n\n    const scaleMap = {};\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n      let noteName = this.getRelativeNoteName(rootName, scale[i]);\n\n      if (noteName.length === 1) {\n        noteName += 'n';\n      }\n\n      scaleMap[rootName] = noteName;\n    }\n\n    return scaleMap;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/music.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2016\n//\n// ## Description\n//\n// This file implements `NoteSubGroup` which is used to format and\n// render notes as a `Modifier`\n// ex) ClefNote, TimeSigNote and BarNote.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Formatter } from './formatter';\nimport { Voice } from './voice';\n\nexport class NoteSubGroup extends Modifier {\n  static get CATEGORY() { return 'notesubgroup'; }\n\n  // Arrange groups inside a `ModifierContext`\n  static format(groups, state) {\n    if (!groups || groups.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < groups.length; ++i) {\n      const group = groups[i];\n      group.preFormat();\n      width += group.getWidth();\n    }\n\n    state.left_shift += width;\n    return true;\n  }\n\n  constructor(subNotes) {\n    super();\n    this.setAttribute('type', 'NoteSubGroup');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.LEFT;\n    this.subNotes = subNotes;\n    this.subNotes.forEach(subNote => { subNote.ignore_ticks = false; });\n    this.width = 0;\n    this.preFormatted = false;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }).setStrict(false);\n\n    this.voice.addTickables(this.subNotes);\n\n    return this;\n  }\n\n  getCategory() { return NoteSubGroup.CATEGORY; }\n\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  setNote(note) {\n    this.note = note;\n  }\n  setWidth(width) {\n    this.width = width;\n  }\n  getWidth() {\n    return this.width;\n  }\n\n  draw() {\n    this.checkContext();\n\n    const note = this.getNote();\n\n    if (!(note && (this.index !== null))) {\n      throw new Vex.RuntimeError('NoAttachedNote',\n        \"Can't draw notes without a parent note and parent note index.\");\n    }\n\n    this.setRendered();\n    const alignSubNotesWithNote = (subNotes, note) => {\n      // Shift over the tick contexts of each note\n      const tickContext = note.getTickContext();\n      const extraPx = tickContext.getExtraPx();\n      const x = tickContext.getX() - extraPx.left - extraPx.extraLeft +\n        this.getSpacingFromNextModifier();\n\n      subNotes.forEach(subNote => {\n        const tick_context = subNote.getTickContext();\n        const x_offset = tick_context.getX();\n        subNote.setStave(note.stave);\n        tick_context.setX(x + x_offset);\n      });\n    };\n\n    alignSubNotesWithNote(this.subNotes, note, this.width);\n\n    // Draw notes\n    this.subNotes.forEach(subNote => subNote.setContext(this.context).draw());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/notesubgroup.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Formatter } from './formatter';\nimport { Voice } from './voice';\nimport { Beam } from './beam';\nimport { StaveTie } from './stavetie';\nimport { TabTie } from './tabtie';\nimport { StaveNote } from './stavenote';\n\n// To enable logging for this class. Set `Vex.Flow.GraceNoteGroup.DEBUG` to `true`.\nfunction L(...args) { if (GraceNoteGroup.DEBUG) Vex.L('Vex.Flow.GraceNoteGroup', args); }\n\nexport class GraceNoteGroup extends Modifier {\n  static get CATEGORY() { return 'gracenotegroups'; }\n\n  // Arrange groups inside a `ModifierContext`\n  static format(gracenote_groups, state) {\n    const group_spacing_stave = 4;\n    const group_spacing_tab = 0;\n\n    if (!gracenote_groups || gracenote_groups.length === 0) return false;\n\n    const group_list = [];\n    let prev_note = null;\n    let shiftL = 0;\n\n    for (let i = 0; i < gracenote_groups.length; ++i) {\n      const gracenote_group = gracenote_groups[i];\n      const note = gracenote_group.getNote();\n      const is_stavenote = (note.getCategory() === StaveNote.CATEGORY);\n      const spacing = (is_stavenote ?  group_spacing_stave : group_spacing_tab);\n\n      if (is_stavenote && note !== prev_note) {\n         // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          const props_tmp = note.getKeyProps()[n];\n          shiftL = (props_tmp.displaced ? note.getExtraLeftPx() : shiftL);\n        }\n        prev_note = note;\n      }\n\n      group_list.push({ shift: shiftL, gracenote_group, spacing });\n    }\n\n    // If first note left shift in case it is displaced\n    let group_shift = group_list[0].shift;\n    let formatWidth;\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      gracenote_group.preFormat();\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      group_shift = Math.max(formatWidth, group_shift);\n    }\n\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      gracenote_group.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift));\n    }\n\n    state.left_shift += group_shift;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // `GraceNoteGroup` inherits from `Modifier` and is placed inside a\n  // `ModifierContext`.\n  constructor(grace_notes, show_slur) {\n    super();\n    this.setAttribute('type', 'GraceNoteGroup');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.LEFT;\n    this.grace_notes = grace_notes;\n    this.width = 0;\n\n    this.preFormatted = false;\n\n    this.show_slur = show_slur;\n    this.slur = null;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }).setStrict(false);\n\n    this.render_options = {\n      slur_y_shift: 0,\n    };\n\n    this.voice.addTickables(this.grace_notes);\n\n    return this;\n  }\n\n  getCategory() { return GraceNoteGroup.CATEGORY; }\n\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  beamNotes() {\n    if (this.grace_notes.length > 1) {\n      const beam = new Beam(this.grace_notes);\n\n      beam.render_options.beam_width = 3;\n      beam.render_options.partial_beam_length = 4;\n\n      this.beam = beam;\n    }\n\n    return this;\n  }\n\n  setNote(note) {\n    this.note = note;\n  }\n  setWidth(width) {\n    this.width = width;\n  }\n  getWidth() {\n    return this.width;\n  }\n  getGraceNotes() {\n    return this.grace_notes;\n  }\n  draw() {\n    this.checkContext();\n\n    const note = this.getNote();\n\n    L('Drawing grace note group for:', note);\n\n    if (!(note && (this.index !== null))) {\n      throw new Vex.RuntimeError('NoAttachedNote',\n        \"Can't draw grace note without a parent note and parent note index.\");\n    }\n\n    this.setRendered();\n    const that = this;\n    function alignGraceNotesWithNote(grace_notes, note) {\n      // Shift over the tick contexts of each note\n      // So that th aligned with the note\n      const tickContext = note.getTickContext();\n      const extraPx = tickContext.getExtraPx();\n      const x = tickContext.getX()\n        - extraPx.left\n        - extraPx.extraLeft\n        + that.getSpacingFromNextModifier();\n\n      grace_notes.forEach(graceNote => {\n        const tick_context = graceNote.getTickContext();\n        const x_offset = tick_context.getX();\n        graceNote.setStave(note.stave);\n        tick_context.setX(x + x_offset);\n      });\n    }\n\n    alignGraceNotesWithNote(this.grace_notes, note, this.width);\n\n    // Draw notes\n    this.grace_notes.forEach(graceNote => {\n      graceNote.setContext(this.context).draw();\n    });\n\n    // Draw beam\n    if (this.beam) {\n      this.beam.setContext(this.context).draw();\n    }\n\n    if (this.show_slur) {\n      // Create and draw slur\n      const is_stavenote = (this.getNote().getCategory() === StaveNote.CATEGORY);\n      const TieClass = (is_stavenote ? StaveTie : TabTie);\n\n      this.slur = new TieClass({\n        last_note: this.grace_notes[0],\n        first_note: note,\n        first_indices: [0],\n        last_indices: [0],\n      });\n\n      this.slur.render_options.cp2 = 12;\n      this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n      this.slur.setContext(this.context).draw();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/gracenotegroup.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\nexport class StaveTie extends Element {\n  constructor(notes, text) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveTie');\n    this.notes = notes;\n    this.context = null;\n    this.text = text;\n    this.direction = null;\n\n    this.render_options = {\n      cp1: 8,      // Curve control point 1\n      cp2: 12,      // Curve control point 2\n      text_shift_x: 0,\n      first_x_shift: 0,\n      last_x_shift: 0,\n      y_shift: 7,\n      tie_spacing: 0,\n      font: { family: 'Arial', size: 10, style: '' },\n    };\n\n    this.font = this.render_options.font;\n    this.setNotes(notes);\n  }\n\n  setFont(font) { this.font = font; return this; }\n  setDirection(direction) { this.direction = direction; return this; }\n\n  /**\n   * Set the notes to attach this tie to.\n   *\n   * @param {!Object} notes The notes to tie up.\n   */\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Tie needs to have either first_note or last_note set.'\n      );\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new Vex.RuntimeError('BadArguments', 'Tied notes must have similar index sizes');\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial() {\n    return (!this.first_note || !this.last_note);\n  }\n\n  renderTie(params) {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.context;\n    let cp1 = this.render_options.cp1;\n    let cp2 = this.render_options.cp2;\n\n    if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n      cp1 = 2; cp2 = 8;\n    }\n\n    const first_x_shift = this.render_options.first_x_shift;\n    const last_x_shift = this.render_options.last_x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    for (let i = 0; i < this.first_indices.length; ++i) {\n      const cp_x = ((params.last_x_px + last_x_shift) +\n          (params.first_x_px + first_x_shift)) / 2;\n      const first_y_px = params.first_ys[this.first_indices[i]] + y_shift;\n      const last_y_px = params.last_ys[this.last_indices[i]] + y_shift;\n\n      if (isNaN(first_y_px) || isNaN(last_y_px)) {\n        throw new Vex.RERR('BadArguments', 'Bad indices for tie rendering.');\n      }\n\n      const top_cp_y = ((first_y_px + last_y_px) / 2) + (cp1 * params.direction);\n      const bottom_cp_y = ((first_y_px + last_y_px) / 2) + (cp2 * params.direction);\n\n      ctx.beginPath();\n      ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n      ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n      ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n      ctx.closePath();\n      ctx.fill();\n    }\n  }\n\n  renderText(first_x_px, last_x_px) {\n    if (!this.text) return;\n    let center_x = (first_x_px + last_x_px) / 2;\n    center_x -= this.context.measureText(this.text).width / 2;\n\n    this.context.save();\n    this.context.setFont(this.font.family, this.font.size, this.font.style);\n    this.context.fillText(\n      this.text,\n      center_x + this.render_options.text_shift_x,\n      (this.first_note || this.last_note).getStave().getYForTopText() - 1\n    );\n    this.context.restore();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n\n    let first_x_px;\n    let last_x_px;\n    let first_ys;\n    let last_ys;\n    let stem_direction;\n    if (first_note) {\n      first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n      stem_direction = first_note.getStemDirection();\n      first_ys = first_note.getYs();\n    } else {\n      first_x_px = last_note.getStave().getTieStartX();\n      first_ys = last_note.getYs();\n      this.first_indices = this.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n      stem_direction = last_note.getStemDirection();\n      last_ys = last_note.getYs();\n    } else {\n      last_x_px = first_note.getStave().getTieEndX();\n      last_ys = first_note.getYs();\n      this.last_indices = this.first_indices;\n    }\n\n    if (this.direction) {\n      stem_direction = this.direction;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: stem_direction,\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavetie.js","// / [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { StaveTie } from './stavetie';\n\nexport class TabTie extends StaveTie {\n  static createHammeron(notes) {\n    return new TabTie(notes, 'H');\n  }\n\n  static createPulloff(notes) {\n    return new TabTie(notes, 'P');\n  }\n\n  constructor(notes, text) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super(notes, text);\n    this.setAttribute('type', 'TabTie');\n\n    this.render_options.cp1 = 9;\n    this.render_options.cp2 = 11;\n    this.render_options.y_shift = 3;\n\n    this.setNotes(notes);\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n    let first_x_px;\n    let last_x_px;\n    let first_ys;\n    let last_ys;\n\n    if (first_note) {\n      first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n      first_ys = first_note.getYs();\n    } else {\n      first_x_px = last_note.getStave().getTieStartX();\n      first_ys = last_note.getYs();\n      this.first_indices = this.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n      last_ys = last_note.getYs();\n    } else {\n      last_x_px = first_note.getStave().getTieEndX();\n      last_ys = first_note.getYs();\n      this.last_indices = this.first_indices;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: -1, // Tab tie's are always face up.\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tabtie.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\r\n// Author: Larry Kuhns\r\n//\r\n// ## Description\r\n// This file implements the `Stroke` class which renders chord strokes\r\n// that can be arpeggiated, brushed, rasquedo, etc.\r\n\r\nimport { Vex } from './vex';\r\nimport { Modifier } from './modifier';\r\nimport { StaveNote } from './stavenote';\r\nimport { Glyph } from './glyph';\r\n\r\nexport class Stroke extends Modifier {\r\n  static get CATEGORY() { return 'strokes'; }\r\n  static get Type() {\r\n    return {\r\n      BRUSH_DOWN: 1,\r\n      BRUSH_UP: 2,\r\n      ROLL_DOWN: 3,        // Arpegiated chord\r\n      ROLL_UP: 4,          // Arpegiated chord\r\n      RASQUEDO_DOWN: 5,\r\n      RASQUEDO_UP: 6,\r\n    };\r\n  }\r\n\r\n  // Arrange strokes inside `ModifierContext`\r\n  static format(strokes, state) {\r\n    const left_shift = state.left_shift;\r\n    const stroke_spacing = 0;\r\n\r\n    if (!strokes || strokes.length === 0) return this;\r\n\r\n    const strokeList = strokes.map((stroke) => {\r\n      const note = stroke.getNote();\r\n      if (note instanceof StaveNote) {\r\n        const { line, displaced } = note.getKeyProps()[stroke.getIndex()];\r\n        const shift = displaced ? note.getExtraLeftPx() : 0;\r\n        return { line, shift, stroke };\r\n      } else {\r\n        const { str: string } = note.getPositions()[stroke.getIndex()];\r\n        return { line: string, shift: 0, stroke };\r\n      }\r\n    });\r\n\r\n    const strokeShift = left_shift;\r\n\r\n    // There can only be one stroke .. if more than one, they overlay each other\r\n    const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\r\n      stroke.setXShift(strokeShift + shift);\r\n      return Math.max(stroke.getWidth() + stroke_spacing, xShift);\r\n    }, 0);\r\n\r\n    state.left_shift += xShift;\r\n    return true;\r\n  }\r\n\r\n  constructor(type, options) {\r\n    super();\r\n    this.setAttribute('type', 'Stroke');\r\n\r\n    this.note = null;\r\n    this.options = Vex.Merge({}, options);\r\n\r\n    // multi voice - span stroke across all voices if true\r\n    this.all_voices = 'all_voices' in this.options ? this.options.all_voices : true;\r\n\r\n    // multi voice - end note of stroke, set in draw()\r\n    this.note_end = null;\r\n    this.index = null;\r\n    this.type = type;\r\n    this.position = Modifier.Position.LEFT;\r\n\r\n    this.render_options = {\r\n      font_scale: 38,\r\n      stroke_px: 3,\r\n      stroke_spacing: 10,\r\n    };\r\n\r\n    this.font = {\r\n      family: 'serif',\r\n      size: 10,\r\n      weight: 'bold italic',\r\n    };\r\n\r\n    this.setXShift(0);\r\n    this.setWidth(10);\r\n  }\r\n\r\n  getCategory() { return Stroke.CATEGORY; }\r\n  getPosition() { return this.position; }\r\n  addEndNote(note) { this.note_end = note; return this; }\r\n\r\n  draw() {\r\n    this.checkContext();\r\n    this.setRendered();\r\n\r\n    if (!(this.note && (this.index != null))) {\r\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw stroke without a note and index.\");\r\n    }\r\n\r\n    const start = this.note.getModifierStartXY(this.position, this.index);\r\n    let ys = this.note.getYs();\r\n    let topY = start.y;\r\n    let botY = start.y;\r\n    const x = start.x - 5;\r\n    const line_space = this.note.stave.options.spacing_between_lines_px;\r\n\r\n    const notes = this.getModifierContext().getModifiers(this.note.getCategory());\r\n    for (let i = 0; i < notes.length; i++) {\r\n      ys = notes[i].getYs();\r\n      for (let n = 0; n < ys.length; n++) {\r\n        if (this.note === notes[i] || this.all_voices) {\r\n          topY = Vex.Min(topY, ys[n]);\r\n          botY = Vex.Max(botY, ys[n]);\r\n        }\r\n      }\r\n    }\r\n\r\n    let arrow;\r\n    let arrow_shift_x;\r\n    let arrow_y;\r\n    let text_shift_x;\r\n    let text_y;\r\n    switch (this.type) {\r\n      case Stroke.Type.BRUSH_DOWN:\r\n        arrow = 'vc3';\r\n        arrow_shift_x = -3;\r\n        arrow_y = topY - (line_space / 2) + 10;\r\n        botY += (line_space / 2);\r\n        break;\r\n      case Stroke.Type.BRUSH_UP:\r\n        arrow = 'v11';\r\n        arrow_shift_x = 0.5;\r\n        arrow_y = botY + (line_space / 2);\r\n        topY -= (line_space / 2);\r\n        break;\r\n      case Stroke.Type.ROLL_DOWN:\r\n      case Stroke.Type.RASQUEDO_DOWN:\r\n        arrow = 'vc3';\r\n        arrow_shift_x = -3;\r\n        text_shift_x = this.x_shift + arrow_shift_x - 2;\r\n        if (this.note instanceof StaveNote) {\r\n          topY += 1.5 * line_space;\r\n          if ((botY - topY) % 2 !== 0) {\r\n            botY += 0.5 * line_space;\r\n          } else {\r\n            botY += line_space;\r\n          }\r\n          arrow_y = topY - line_space;\r\n          text_y = botY + line_space + 2;\r\n        } else {\r\n          topY += 1.5 * line_space;\r\n          botY += line_space;\r\n          arrow_y = topY - 0.75 * line_space;\r\n          text_y = botY + 0.25 * line_space;\r\n        }\r\n        break;\r\n      case Stroke.Type.ROLL_UP:\r\n      case Stroke.Type.RASQUEDO_UP:\r\n        arrow = 'v52';\r\n        arrow_shift_x = -4;\r\n        text_shift_x = this.x_shift + arrow_shift_x - 1;\r\n        if (this.note instanceof StaveNote) {\r\n          arrow_y = line_space / 2;\r\n          topY += 0.5 * line_space;\r\n          if ((botY - topY) % 2 === 0) {\r\n            botY += line_space / 2;\r\n          }\r\n          arrow_y = botY + 0.5 * line_space;\r\n          text_y = topY - 1.25 * line_space;\r\n        } else {\r\n          topY += 0.25 * line_space;\r\n          botY += 0.5 * line_space;\r\n          arrow_y = botY + 0.25 * line_space;\r\n          text_y = topY - line_space;\r\n        }\r\n        break;\r\n      default:\r\n        throw new Vex.RERR('InvalidType', `The stroke type ${this.type} does not exist`);\r\n    }\r\n\r\n    // Draw the stroke\r\n    if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\r\n      this.context.fillRect(x + this.x_shift, topY, 1, botY - topY);\r\n    } else {\r\n      if (this.note instanceof StaveNote) {\r\n        for (let i = topY; i <= botY; i += line_space) {\r\n          Glyph.renderGlyph(\r\n            this.context,\r\n            x + this.x_shift - 4,\r\n            i,\r\n            this.render_options.font_scale,\r\n            'va3'\r\n          );\r\n        }\r\n      } else {\r\n        let i;\r\n        for (i = topY; i <= botY; i += 10) {\r\n          Glyph.renderGlyph(\r\n            this.context,\r\n            x + this.x_shift - 4,\r\n            i,\r\n            this.render_options.font_scale,\r\n            'va3'\r\n          );\r\n        }\r\n        if (this.type === Stroke.Type.RASQUEDO_DOWN) {\r\n          text_y = i + 0.25 * line_space;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Draw the arrow head\r\n    Glyph.renderGlyph(\r\n      this.context,\r\n      x + this.x_shift + arrow_shift_x,\r\n      arrow_y,\r\n      this.render_options.font_scale,\r\n      arrow\r\n    );\r\n\r\n    // Draw the rasquedo \"R\"\r\n    if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\r\n      this.context.save();\r\n      this.context.setFont(this.font.family, this.font.size, this.font.weight);\r\n      this.context.fillText('R', x + text_shift_x, text_y);\r\n      this.context.restore();\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/strokes.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\r\n// Author: Larry Kuhns\r\n//\r\n// ## Description\r\n// This file implements the `StringNumber` class which renders string\r\n// number annotations beside notes.\r\n\r\nimport { Vex } from './vex';\r\nimport { Modifier } from './modifier';\r\nimport { Renderer } from './renderer';\r\nimport { StaveNote } from './stavenote';\r\n\r\nexport class StringNumber extends Modifier {\r\n  static get CATEGORY() { return 'stringnumber'; }\r\n\r\n  // ## Static Methods\r\n  // Arrange string numbers inside a `ModifierContext`\r\n  static format(nums, state) {\r\n    const left_shift = state.left_shift;\r\n    const right_shift = state.right_shift;\r\n    const num_spacing = 1;\r\n\r\n    if (!nums || nums.length === 0) return this;\r\n\r\n    const nums_list = [];\r\n    let prev_note = null;\r\n    let shift_left = 0;\r\n    let shift_right = 0;\r\n\r\n    let i;\r\n    let num;\r\n    let note;\r\n    let pos;\r\n    let props_tmp;\r\n    for (i = 0; i < nums.length; ++i) {\r\n      num = nums[i];\r\n      note = num.getNote();\r\n\r\n      for (i = 0; i < nums.length; ++i) {\r\n        num = nums[i];\r\n        note = num.getNote();\r\n        pos = num.getPosition();\r\n        const props = note.getKeyProps()[num.getIndex()];\r\n\r\n        if (note !== prev_note) {\r\n          for (let n = 0; n < note.keys.length; ++n) {\r\n            props_tmp = note.getKeyProps()[n];\r\n            if (left_shift === 0) {\r\n              shift_left = props_tmp.displaced ? note.getExtraLeftPx() : shift_left;\r\n            }\r\n            if (right_shift === 0) {\r\n              shift_right = props_tmp.displaced ? note.getExtraRightPx() : shift_right;\r\n            }\r\n          }\r\n          prev_note = note;\r\n        }\r\n\r\n        nums_list.push({\r\n          pos,\r\n          note,\r\n          num,\r\n          line: props.line,\r\n          shiftL: shift_left,\r\n          shiftR: shift_right,\r\n        });\r\n      }\r\n    }\r\n\r\n    // Sort string numbers by line number.\r\n    nums_list.sort((a, b) => b.line - a.line);\r\n\r\n    // TODO: This variable never gets assigned to anything. Is that a bug or can this be removed?\r\n    let num_shiftL = 0; // eslint-disable-line\r\n    let num_shiftR = 0;\r\n    let x_widthL = 0;\r\n    let x_widthR = 0;\r\n    let last_line = null;\r\n    let last_note = null;\r\n    for (i = 0; i < nums_list.length; ++i) {\r\n      let num_shift = 0;\r\n      note = nums_list[i].note;\r\n      pos = nums_list[i].pos;\r\n      num = nums_list[i].num;\r\n      const line = nums_list[i].line;\r\n      const shiftL = nums_list[i].shiftL;\r\n      const shiftR = nums_list[i].shiftR;\r\n\r\n      // Reset the position of the string number every line.\r\n      if (line !== last_line || note !== last_note) {\r\n        num_shiftL = left_shift + shiftL;\r\n        num_shiftR = right_shift + shiftR;\r\n      }\r\n\r\n      const num_width = num.getWidth() + num_spacing;\r\n      if (pos === Modifier.Position.LEFT) {\r\n        num.setXShift(left_shift);\r\n        num_shift = shift_left + num_width; // spacing\r\n        x_widthL = (num_shift > x_widthL) ? num_shift : x_widthL;\r\n      } else if (pos === Modifier.Position.RIGHT) {\r\n        num.setXShift(num_shiftR);\r\n        num_shift += num_width; // spacing\r\n        x_widthR = (num_shift > x_widthR) ? num_shift : x_widthR;\r\n      }\r\n      last_line = line;\r\n      last_note = note;\r\n    }\r\n\r\n    state.left_shift += x_widthL;\r\n    state.right_shift += x_widthR;\r\n    return true;\r\n  }\r\n\r\n  constructor(number) {\r\n    super();\r\n    this.setAttribute('type', 'StringNumber');\r\n\r\n    this.note = null;\r\n    this.last_note = null;\r\n    this.index = null;\r\n    this.string_number = number;\r\n    this.setWidth(20); // ???\r\n    this.position = Modifier.Position.ABOVE; // Default position above stem or note head\r\n    this.x_shift = 0;\r\n    this.y_shift = 0;\r\n    this.x_offset = 0; // Horizontal offset from default\r\n    this.y_offset = 0; // Vertical offset from default\r\n    this.dashed = true; // true - draw dashed extension  false - no extension\r\n    this.leg = Renderer.LineEndType.NONE;   // draw upward/downward leg at the of extension line\r\n    this.radius = 8;\r\n    this.font = {\r\n      family: 'sans-serif',\r\n      size: 10,\r\n      weight: 'bold',\r\n    };\r\n  }\r\n  getCategory() { return StringNumber.CATEGORY; }\r\n  getNote() { return this.note; }\r\n  setNote(note) { this.note = note; return this; }\r\n  getIndex() { return this.index; }\r\n  setIndex(index) { this.index = index; return this; }\r\n\r\n  setLineEndType(leg) {\r\n    if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\r\n      this.leg = leg;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  setStringNumber(number) { this.string_number = number; return this; }\r\n  setOffsetX(x) { this.x_offset = x; return this; }\r\n  setOffsetY(y) { this.y_offset = y; return this; }\r\n  setLastNote(note) { this.last_note = note; return this; }\r\n  setDashed(dashed) { this.dashed = dashed; return this; }\r\n\r\n  draw() {\r\n    const ctx = this.checkContext();\r\n    if (!(this.note && (this.index != null))) {\r\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\r\n    }\r\n    this.setRendered();\r\n\r\n    const line_space = this.note.stave.options.spacing_between_lines_px;\r\n\r\n    const start = this.note.getModifierStartXY(this.position, this.index);\r\n    let dot_x = (start.x + this.x_shift + this.x_offset);\r\n    let dot_y = start.y + this.y_shift + this.y_offset;\r\n\r\n    switch (this.position) {\r\n      case Modifier.Position.ABOVE:\r\n      case Modifier.Position.BELOW: {\r\n        const stem_ext = this.note.getStemExtents();\r\n        let top = stem_ext.topY;\r\n        let bottom = stem_ext.baseY + 2;\r\n\r\n        if (this.note.stem_direction === StaveNote.STEM_DOWN) {\r\n          top = stem_ext.baseY;\r\n          bottom = stem_ext.topY - 2;\r\n        }\r\n\r\n        if (this.position === Modifier.Position.ABOVE) {\r\n          dot_y = this.note.hasStem()\r\n            ? top - (line_space * 1.75)\r\n            : start.y - (line_space * 1.75);\r\n        } else {\r\n          dot_y = this.note.hasStem()\r\n            ? bottom + (line_space * 1.5)\r\n            : start.y + (line_space * 1.75);\r\n        }\r\n\r\n        dot_y += this.y_shift + this.y_offset;\r\n\r\n        break;\r\n      } case Modifier.Position.LEFT:\r\n        dot_x -= (this.radius / 2) + 5;\r\n        break;\r\n      case Modifier.Position.RIGHT:\r\n        dot_x += (this.radius / 2) + 6;\r\n        break;\r\n      default:\r\n        throw new Vex.RERR(\r\n          'InvalidPosition', `The position ${this.position} is invalid`\r\n        );\r\n    }\r\n\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\r\n    ctx.lineWidth = 1.5;\r\n    ctx.stroke();\r\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\r\n    const x = dot_x - ctx.measureText(this.string_number).width / 2;\r\n    ctx.fillText('' + this.string_number, x, dot_y + 4.5);\r\n\r\n    if (this.last_note != null) {\r\n      const end = this.last_note.getStemX() - this.note.getX() + 5;\r\n      ctx.strokeStyle = '#000000';\r\n      ctx.lineCap = 'round';\r\n      ctx.lineWidth = 0.6;\r\n      if (this.dashed) {\r\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\r\n      } else {\r\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\r\n      }\r\n\r\n      let len;\r\n      let pattern;\r\n      switch (this.leg) {\r\n        case Renderer.LineEndType.UP:\r\n          len = -10;\r\n          pattern = this.dashed ? [3, 3] : [3, 0];\r\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\r\n          break;\r\n        case Renderer.LineEndType.DOWN:\r\n          len = 10;\r\n          pattern = this.dashed ? [3, 3] : [3, 0];\r\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    ctx.restore();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/stringnumber.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns.\n//\n// ## Description\n//\n// This file implements articulations and accents as modifiers that can be\n// attached to notes. The complete list of articulations is available in\n// `tables.js` under `Vex.Flow.articulationCodes`.\n//\n// See `tests/articulation_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\n\n// To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`.\nfunction L(...args) { if (Articulation.DEBUG) Vex.L('Vex.Flow.Articulation', args); }\n\nconst { ABOVE, BELOW } = Modifier.Position;\n\nconst roundToNearestHalf = (mathFn, value) => mathFn(value / 0.5) * 0.5;\n\n// This includes both staff and ledger lines\nconst isWithinLines = (line, position) => position === ABOVE ? line <= 5 : line >= 1;\n\nconst getRoundingFunction = (line, position) => {\n  if (isWithinLines(line, position)) {\n    if (position === ABOVE) {\n      return Math.ceil;\n    } else {\n      return Math.floor;\n    }\n  } else {\n    return Math.round;\n  }\n};\n\nconst snapLineToStaff = (canSitBetweenLines, line, position, offsetDirection) => {\n  // Initially, snap to nearest staff line or space\n  const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n  const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n  const onStaffLine = snappedLine % 1 === 0;\n\n  if (canSnapToStaffSpace && onStaffLine) {\n    const HALF_STAFF_SPACE = 0.5;\n    return snappedLine + (HALF_STAFF_SPACE * -offsetDirection);\n  } else {\n    return snappedLine;\n  }\n};\n\nconst getTopY = (note, textLine) => {\n  const stave = note.getStave();\n  const stemDirection = note.getStemDirection();\n  const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n\n  if (note.getCategory() === 'stavenotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return stemBaseY;\n      }\n    } else {\n      return Math.min(...note.getYs());\n    }\n  } else if (note.getCategory() === 'tabnotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return stave.getYForTopText(textLine);\n      }\n    } else {\n      return stave.getYForTopText(textLine);\n    }\n  } else {\n    throw new Vex.RERR(\n      'UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes'\n    );\n  }\n};\n\nconst getBottomY = (note, textLine) => {\n  const stave = note.getStave();\n  const stemDirection = note.getStemDirection();\n  const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n\n  if (note.getCategory() === 'stavenotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemBaseY;\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return Math.max(...note.getYs());\n    }\n  } else if (note.getCategory() === 'tabnotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stave.getYForBottomText(textLine);\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return stave.getYForBottomText(textLine);\n    }\n  } else {\n    throw new Vex.RERR(\n      'UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes'\n    );\n  }\n};\n\n// Gets the initial offset of the articulation from the y value of the starting position.\n// This is required because the top/bottom text positions already have spacing applied to\n// provide a \"visually pleasent\" default position. However the y values provided from\n// the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n// normalizes this asymmetry.\nconst getInitialOffset = (note, position) => {\n  const isOnStemTip = (\n    (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n    (position === BELOW && note.getStemDirection() === Stem.DOWN)\n  );\n\n  if (note.getCategory() === 'stavenotes') {\n    if (note.hasStem() && isOnStemTip) {\n      return 0.5;\n    } else {\n      // this amount is larger than the stem-tip offset because we start from\n      // the center of the notehead\n      return 1;\n    }\n  } else {\n    if (note.hasStem() && isOnStemTip) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n};\n\nexport class Articulation extends Modifier {\n  static get CATEGORY() { return 'articulations'; }\n  static get INITIAL_OFFSET() { return -0.5; }\n\n  // FIXME:\n  // Most of the complex formatting logic (ie: snapping to space) is\n  // actually done in .render(). But that logic belongs in this method.\n  //\n  // Unfortunately, this isn't possible because, by this point, stem lengths\n  // have not yet been finalized. Finalized stem lengths are required to determine the\n  // initial position of any stem-side articulation.\n  //\n  // This indicates that all objects should have their stave set before being\n  // formatted. It can't be an optional if you want accurate vertical positioning.\n  // Consistently positioned articulations that play nice with other modifiers\n  // won't be possible until we stop relying on render-time formatting.\n  //\n  // Ideally, when this function has completed, the vertical articulation positions\n  // should be ready to render without further adjustment. But the current state\n  // is far from this ideal.\n  static format(articulations, state) {\n    if (!articulations || articulations.length === 0) return false;\n\n    const isAbove = artic => artic.getPosition() === ABOVE;\n    const isBelow = artic => artic.getPosition() === BELOW;\n    const margin = 0.5;\n    const getIncrement = (articulation, line, position) =>\n      roundToNearestHalf(\n        getRoundingFunction(line, position),\n        (articulation.glyph.getMetrics().height / 10) + margin\n      );\n\n    articulations\n      .filter(isAbove)\n      .forEach(articulation => {\n        articulation.setTextLine(state.top_text_line);\n        state.top_text_line += getIncrement(articulation, state.top_text_line, ABOVE);\n      });\n\n    articulations\n      .filter(isBelow)\n      .forEach(articulation => {\n        articulation.setTextLine(state.text_line);\n        state.text_line += getIncrement(articulation, state.text_line, BELOW);\n      });\n\n    const width = articulations\n      .map(articulation => articulation.getWidth())\n      .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  static easyScoreHook({ articulations }, note, builder) {\n    if (!articulations) return;\n\n    const articNameToCode = {\n      staccato: 'a.',\n      tenuto: 'a-',\n    };\n\n    articulations\n      .split(',')\n      .map(articString => articString.trim().split('.'))\n      .map(([name, position]) => {\n        const artic = { type: articNameToCode[name] };\n        if (position) artic.position = Modifier.PositionString[position];\n        return builder.getFactory().Articulation(artic);\n      })\n      .map(artic => note.addModifier(0, artic));\n  }\n\n  // Create a new articulation of type `type`, which is an entry in\n  // `Vex.Flow.articulationCodes` in `tables.js`.\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Articulation');\n\n    this.note = null;\n    this.index = null;\n    this.type = type;\n    this.position = BELOW;\n    this.render_options = {\n      font_scale: 38,\n    };\n\n    this.articulation = Flow.articulationCodes(this.type);\n    if (!this.articulation) {\n      throw new Vex.RERR('ArgumentError', `Articulation not found: ${this.type}`);\n    }\n\n    this.glyph = new Glyph(this.articulation.code, this.render_options.font_scale);\n\n    this.setWidth(this.glyph.getMetrics().width);\n  }\n\n  getCategory() { return Articulation.CATEGORY; }\n\n  // Render articulation in position next to note.\n  draw() {\n    const {\n      note, index, position, glyph,\n      articulation: { between_lines: canSitBetweenLines },\n      text_line: textLine,\n      context: ctx,\n    } = this;\n\n    this.checkContext();\n\n    if (!note || index == null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Articulation without a note and index.\");\n    }\n\n    this.setRendered();\n\n    const stave = note.getStave();\n    const staffSpace = stave.getSpacingBetweenLines();\n    const isTab = note.getCategory() === 'tabnotes';\n\n    // Articulations are centered over/under the note head.\n    const { x } = note.getModifierStartXY(position, index);\n    const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n\n    const initialOffset = getInitialOffset(note, position);\n\n    let y = {\n      [ABOVE]: () => {\n        glyph.setOrigin(0.5, 1);\n        const y = getTopY(note, textLine) - ((textLine + initialOffset) * staffSpace);\n        return shouldSitOutsideStaff\n          ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y)\n          : y;\n      },\n      [BELOW]: () => {\n        glyph.setOrigin(0.5, 0);\n        const y = getBottomY(note, textLine) + ((textLine + initialOffset) * staffSpace);\n        return shouldSitOutsideStaff\n          ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y)\n          : y;\n      },\n    }[position]();\n\n    if (!isTab) {\n      const offsetDirection = position === ABOVE ? -1 : +1;\n      const noteLine = isTab ? note.positions[index].str : note.getKeyProps()[index].line;\n      const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n      const articLine = distanceFromNote + noteLine;\n      const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n\n      if (isWithinLines(snappedLine, position)) glyph.setOrigin(0.5, 0.5);\n\n      y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection;\n    }\n\n    L(`Rendering articulation at (x: ${x}, y: ${y})`);\n\n    glyph.render(ctx, x, y);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/articulation.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements ornaments as modifiers that can be\n// attached to notes. The complete list of ornaments is available in\n// `tables.js` under `Vex.Flow.ornamentCodes`.\n//\n// See `tests/ornament_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { TickContext } from './tickcontext';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`.\nfunction L(...args) { if (Ornament.DEBUG) Vex.L('Vex.Flow.Ornament', args); }\n\nexport class Ornament extends Modifier {\n  static get CATEGORY() { return 'ornaments'; }\n\n  // ## Static Methods\n  // Arrange ornaments inside `ModifierContext`\n  static format(ornaments, state) {\n    if (!ornaments || ornaments.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < ornaments.length; ++i) {\n      const ornament = ornaments[i];\n      const increment = 2;\n\n      width = Math.max(ornament.getWidth(), width);\n\n      if (ornament.getPosition() === Modifier.Position.ABOVE) {\n        ornament.setTextLine(state.top_text_line);\n        state.top_text_line += increment;\n      } else {\n        ornament.setTextLine(state.text_line);\n        state.text_line += increment;\n      }\n    }\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  // Create a new ornament of type `type`, which is an entry in\n  // `Vex.Flow.ornamentCodes` in `tables.js`.\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Ornament');\n\n    this.note = null;\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.ABOVE;\n    this.delayed = false;\n\n    this.accidentalUpper = null;\n    this.accidentalLower = null;\n\n    this.render_options = {\n      font_scale: 38,\n      accidentalLowerPadding: 3,\n      accidentalUpperPadding: 3,\n    };\n\n    this.ornament = Flow.ornamentCodes(this.type);\n    if (!this.ornament) {\n      throw new Vex.RERR('ArgumentError', `Ornament not found: '${this.type}'`);\n    }\n\n    this.glyph = new Glyph(this.ornament.code, this.render_options.font_scale);\n    this.glyph.setOrigin(0.5, 1.0); // FIXME: SMuFL won't require a vertical origin shift\n  }\n\n  getCategory() { return Ornament.CATEGORY; }\n\n  // Set whether the ornament is to be delayed\n  setDelayed(delayed) { this.delayed = delayed; return this; }\n\n  // Set the upper accidental for the ornament\n  setUpperAccidental(accid) {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalUpper = new Glyph(Flow.accidentalCodes(accid).code, scale);\n    this.accidentalUpper.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  // Set the lower accidental for the ornament\n  setLowerAccidental(accid) {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalLower = new Glyph(Flow.accidentalCodes(accid).code, scale);\n    this.accidentalLower.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  // Render ornament in position next to note.\n  draw() {\n    this.checkContext();\n\n    if (!this.note || this.index == null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Ornament without a note and index.\");\n    }\n\n    this.setRendered();\n\n    const ctx = this.context;\n    const stemDir = this.note.getStemDirection();\n    const stave = this.note.getStave();\n\n    // Get stem extents\n    const stemExtents = this.note.getStem().getExtents();\n    let y = stemDir === StaveNote.STEM_DOWN ? stemExtents.baseY : stemExtents.topY;\n\n    // TabNotes don't have stems attached to them. Tab stems are rendered\n    // outside the stave.\n    if (this.note.getCategory() === 'tabnotes') {\n      if (this.note.hasStem()) {\n        if (stemDir === StaveNote.STEM_DOWN) {\n          y = stave.getYForTopText(this.text_line);\n        }\n      } else { // Without a stem\n        y = stave.getYForTopText(this.text_line);\n      }\n    }\n\n    const isPlacedOnNoteheadSide = stemDir === StaveNote.STEM_DOWN;\n    const spacing = stave.getSpacingBetweenLines();\n    let lineSpacing = 1;\n\n    // Beamed stems are longer than quarter note stems, adjust accordingly\n    if (!isPlacedOnNoteheadSide && this.note.beam) {\n      lineSpacing += 0.5;\n    }\n\n    const totalSpacing = spacing * (this.text_line + lineSpacing);\n    const glyphYBetweenLines = y - totalSpacing;\n\n    // Get initial coordinates for the modifier position\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let glyphX = start.x;\n    let glyphY = Math.min(stave.getYForTopText(this.text_line), glyphYBetweenLines);\n    glyphY += this.y_shift;\n\n    // Ajdust x position if ornament is delayed\n    if (this.delayed) {\n      glyphX += this.glyph.getMetrics().width;\n      const nextContext = TickContext.getNextContext(this.note.getTickContext());\n      if (nextContext) {\n        glyphX += (nextContext.getX() - glyphX) * 0.5;\n      } else {\n        glyphX += (stave.x + stave.width - glyphX) * 0.5;\n      }\n    }\n\n    L('Rendering ornament: ', this.ornament, glyphX, glyphY);\n\n    if (this.accidentalLower) {\n      this.accidentalLower.render(ctx, glyphX, glyphY);\n      glyphY -= this.accidentalLower.getMetrics().height;\n      glyphY -= this.render_options.accidentalLowerPadding;\n    }\n\n    this.glyph.render(ctx, glyphX, glyphY);\n    glyphY -= this.glyph.getMetrics().height;\n\n    if (this.accidentalUpper) {\n      glyphY -= this.render_options.accidentalUpperPadding;\n      this.accidentalUpper.render(ctx, glyphX, glyphY);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ornament.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\n\nimport { Vex } from './vex';\nimport { Tickable } from './tickable';\nimport { Fraction } from './fraction';\n\nexport class TickContext extends Tickable {\n  static getNextContext(tContext) {\n    const contexts = tContext.tContexts;\n    const index = contexts.indexOf(tContext);\n\n    return contexts[index + 1];\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'TickContext');\n    this.currentTick = new Fraction(0, 1);\n    this.maxTicks = new Fraction(0, 1);\n    this.minTicks = null;\n    this.padding = 3;     // padding on each side (width += padding * 2)\n    this.x = 0;\n    this.tickables = [];   // Notes, tabs, chords, lyrics.\n    this.notePx = 0;       // width of widest note in this context\n    this.extraLeftPx = 0;  // Extra left pixels for modifers & displace notes\n    this.extraRightPx = 0; // Extra right pixels for modifers & displace notes\n    this.tContexts = [];   // Parent array of tick contexts\n  }\n\n  getX() { return this.x; }\n  setX(x) { this.x = x; return this; }\n  getWidth() { return this.width + (this.padding * 2); }\n  setPadding(padding) { this.padding = padding; return this; }\n  getMaxTicks() { return this.maxTicks; }\n  getMinTicks() { return this.minTicks; }\n  getTickables() { return this.tickables; }\n\n  getCenterAlignedTickables() {\n    return this.tickables.filter(tickable => tickable.isCenterAligned());\n  }\n\n  // Get widths context, note and left/right modifiers for formatting\n  getMetrics() {\n    const { width, notePx, extraLeftPx, extraRightPx } = this;\n    return { width, notePx, extraLeftPx, extraRightPx };\n  }\n\n  getCurrentTick() { return this.currentTick; }\n  setCurrentTick(tick) {\n    this.currentTick = tick;\n    this.preFormatted = false;\n  }\n\n  // ### DEPRECATED ###\n  // Get left & right pixels used for modifiers. THIS METHOD IS DEPRECATED. Use\n  // the getMetrics() method instead!\n  getExtraPx() {\n    let left_shift = 0;\n    let right_shift = 0;\n    let extraLeftPx = 0;\n    let extraRightPx = 0;\n    for (let i = 0; i < this.tickables.length; i++) {\n      extraLeftPx = Math.max(this.tickables[i].extraLeftPx || 0, extraLeftPx);\n      extraRightPx = Math.max(this.tickables[i].extraRightPx || 0, extraRightPx);\n      const mContext = this.tickables[i].modifierContext;\n      if (mContext && mContext != null) {\n        left_shift = Math.max(left_shift, mContext.state.left_shift);\n        right_shift = Math.max(right_shift, mContext.state.right_shift);\n      }\n    }\n    return {\n      left: left_shift,\n      right: right_shift,\n      extraLeft: extraLeftPx,\n      extraRight: extraRightPx,\n    };\n  }\n\n  addTickable(tickable) {\n    if (!tickable) {\n      throw new Vex.RERR('BadArgument', 'Invalid tickable added.');\n    }\n\n    if (!tickable.shouldIgnoreTicks()) {\n      this.ignore_ticks = false;\n\n      const ticks = tickable.getTicks();\n\n      if (ticks.greaterThan(this.maxTicks)) {\n        this.maxTicks = ticks.clone();\n      }\n\n      if (this.minTicks == null) {\n        this.minTicks = ticks.clone();\n      } else if (ticks.lessThan(this.minTicks)) {\n        this.minTicks = ticks.clone();\n      }\n    }\n\n    tickable.setTickContext(this);\n    this.tickables.push(tickable);\n    this.preFormatted = false;\n    return this;\n  }\n\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n      tickable.preFormat();\n      const metrics = tickable.getMetrics();\n\n      // Maintain max extra pixels from all tickables in the context\n      this.extraLeftPx = Math.max(this.extraLeftPx, metrics.extraLeftPx + metrics.modLeftPx);\n      this.extraRightPx = Math.max(this.extraRightPx, metrics.extraRightPx + metrics.modRightPx);\n\n      // Maintain the widest note for all tickables in the context\n      this.notePx = Math.max(this.notePx, metrics.noteWidth);\n\n      // Recalculate the tick context total width\n      this.width = this.notePx + this.extraLeftPx + this.extraRightPx;\n    }\n\n    return this;\n  }\n\n  postFormat() {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tickcontext.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements text annotations as modifiers that can be attached to\n// notes.\n//\n// See `tests/annotation_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\n\n// To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`.\nfunction L(...args) { if (Annotation.DEBUG) Vex.L('Vex.Flow.Annotation', args); }\n\nexport class Annotation extends Modifier {\n  static get CATEGORY() { return 'annotations'; }\n\n  // Text annotations can be positioned and justified relative to the note.\n  static get Justify() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n      CENTER_STEM: 4,\n    };\n  }\n\n  static get JustifyString() {\n    return {\n      left: Annotation.Justify.LEFT,\n      right: Annotation.Justify.RIGHT,\n      center: Annotation.Justify.CENTER,\n      centerStem: Annotation.Justify.CENTER_STEM,\n    };\n  }\n\n  static get VerticalJustify() {\n    return {\n      TOP: 1,\n      CENTER: 2,\n      BOTTOM: 3,\n      CENTER_STEM: 4,\n    };\n  }\n\n  static get VerticalJustifyString() {\n    return {\n      above: Annotation.VerticalJustify.TOP,\n      top: Annotation.VerticalJustify.TOP,\n      below: Annotation.VerticalJustify.BOTTOM,\n      bottom: Annotation.VerticalJustify.BOTTOM,\n      center: Annotation.VerticalJustify.CENTER,\n      centerStem: Annotation.VerticalJustify.CENTER_STEM,\n    };\n  }\n\n  // Arrange annotations within a `ModifierContext`\n  static format(annotations, state) {\n    if (!annotations || annotations.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < annotations.length; ++i) {\n      const annotation = annotations[i];\n      width = Math.max(annotation.getWidth(), width);\n      if (annotation.getPosition() === Modifier.Position.ABOVE) {\n        annotation.setTextLine(state.top_text_line);\n        state.top_text_line++;\n      } else {\n        annotation.setTextLine(state.text_line);\n        state.text_line++;\n      }\n    }\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // Annotations inherit from `Modifier` and is positioned correctly when\n  // in a `ModifierContext`.\n  // Create a new `Annotation` with the string `text`.\n  constructor(text) {\n    super();\n    this.setAttribute('type', 'Annotation');\n\n    this.note = null;\n    this.index = null;\n    this.text = text;\n    this.justification = Annotation.Justify.CENTER;\n    this.vert_justification = Annotation.VerticalJustify.TOP;\n    this.font = {\n      family: 'Arial',\n      size: 10,\n      weight: '',\n    };\n\n    // The default width is calculated from the text.\n    this.setWidth(Flow.textWidth(text));\n  }\n\n  getCategory() { return Annotation.CATEGORY; }\n\n  // Set font family, size, and weight. E.g., `Arial`, `10pt`, `Bold`.\n  setFont(family, size, weight) {\n    this.font = { family, size, weight };\n    return this;\n  }\n\n  // Set vertical position of text (above or below stave). `just` must be\n  // a value in `Annotation.VerticalJustify`.\n  setVerticalJustification(just) {\n    this.vert_justification = typeof(just) === 'string'\n      ? Annotation.VerticalJustifyString[just]\n      : just;\n    return this;\n  }\n\n  // Get and set horizontal justification. `justification` is a value in\n  // `Annotation.Justify`.\n  getJustification() { return this.justification; }\n  setJustification(just) {\n    this.justification = typeof(just) === 'string'\n      ? Annotation.JustifyString[just]\n      : just;\n    return this;\n  }\n\n  // Render text beside the note.\n  draw() {\n    this.checkContext();\n\n    if (!this.note) {\n      throw new Vex.RERR(\n        'NoNoteForAnnotation', \"Can't draw text annotation without an attached note.\"\n      );\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(Modifier.Position.ABOVE,\n        this.index);\n\n    // We're changing context parameters. Save current state.\n    this.context.save();\n    this.context.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = this.context.measureText(this.text).width;\n\n    // Estimate text height to be the same as the width of an 'm'.\n    //\n    // This is a hack to work around the inability to measure text height\n    // in HTML5 Canvas (and SVG).\n    const text_height = this.context.measureText('m').width;\n    let x;\n    let y;\n\n    if (this.justification === Annotation.Justify.LEFT) {\n      x = start.x;\n    } else if (this.justification === Annotation.Justify.RIGHT) {\n      x = start.x - text_width;\n    } else if (this.justification === Annotation.Justify.CENTER) {\n      x = start.x - text_width / 2;\n    } else /* CENTER_STEM */ {\n      x = this.note.getStemX() - text_width / 2;\n    }\n\n    let stem_ext;\n    let spacing;\n    const has_stem = this.note.hasStem();\n    const stave = this.note.getStave();\n\n    // The position of the text varies based on whether or not the note\n    // has a stem.\n    if (has_stem) {\n      stem_ext = this.note.getStem().getExtents();\n      spacing = stave.getSpacingBetweenLines();\n    }\n\n    if (this.vert_justification === Annotation.VerticalJustify.BOTTOM) {\n      // HACK: We need to compensate for the text's height since its origin\n      // is bottom-right.\n      y = stave.getYForBottomText(this.text_line + Flow.TEXT_HEIGHT_OFFSET_HACK);\n      if (has_stem) {\n        const stem_base = (this.note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY);\n        y = Math.max(y, stem_base + (spacing * (this.text_line + 2)));\n      }\n    } else if (this.vert_justification === Annotation.VerticalJustify.CENTER) {\n      const yt = this.note.getYForTopText(this.text_line) - 1;\n      const yb = stave.getYForBottomText(this.text_line);\n      y = yt + (yb - yt) / 2 + text_height / 2;\n    } else if (this.vert_justification === Annotation.VerticalJustify.TOP) {\n      y = Math.min(stave.getYForTopText(this.text_line), this.note.getYs()[0] - 10);\n      if (has_stem) {\n        y = Math.min(y, (stem_ext.topY - 5) - (spacing * this.text_line));\n      }\n    } else /* CENTER_STEM */{\n      const extents = this.note.getStemExtents();\n      y = extents.topY + (extents.baseY - extents.topY) / 2 +\n        text_height / 2;\n    }\n\n    L('Rendering annotation: ', this.text, x, y);\n    this.context.fillText(this.text, x, y);\n    this.context.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/annotation.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements tablature bends.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\n/**\n   @param text Text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n   @param release If true, render a release. (DEPRECATED)\n   @param phrase If set, ignore \"text\" and \"release\", and use the more\n                 sophisticated phrase specified.\n\n   Example of a phrase:\n\n     [{\n       type: UP,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: DOWN,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: UP,\n       text: \"half\"\n       width: 8;\n     },\n     {\n       type: UP,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: DOWN,\n       text: \"1 1/2\"\n       width: 8;\n     }]\n */\nexport class Bend extends Modifier {\n  static get CATEGORY() { return 'bends'; }\n\n  static get UP() {\n    return 0;\n  }\n  static get DOWN() {\n    return 1;\n  }\n\n  // ## Static Methods\n  // Arrange bends in `ModifierContext`\n  static format(bends, state) {\n    if (!bends || bends.length === 0) return false;\n\n    let last_width = 0;\n    // Bends are always on top.\n    const text_line = state.top_text_line;\n\n    // Format Bends\n    for (let i = 0; i < bends.length; ++i) {\n      const bend = bends[i];\n      bend.setXShift(last_width);\n      last_width = bend.getWidth();\n      bend.setTextLine(text_line);\n    }\n\n    state.right_shift += last_width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  // ## Prototype Methods\n  constructor(text, release, phrase) {\n    super();\n    this.setAttribute('type', 'Bend');\n\n    this.text = text;\n    this.x_shift = 0;\n    this.release = release || false;\n    this.font = '10pt Arial';\n    this.render_options = {\n      line_width: 1.5,\n      line_style: '#777777',\n      bend_width: 8,\n      release_width: 8,\n    };\n\n    if (phrase) {\n      this.phrase = phrase;\n    } else {\n      // Backward compatibility\n      this.phrase = [{ type: Bend.UP, text: this.text }];\n      if (this.release) this.phrase.push({ type: Bend.DOWN, text: '' });\n    }\n\n    this.updateWidth();\n  }\n\n  getCategory() { return Bend.CATEGORY; }\n\n  setXShift(value) {\n    this.x_shift = value;\n    this.updateWidth();\n  }\n  setFont(font) { this.font = font; return this; }\n  getText() { return this.text; }\n  updateWidth() {\n    const that = this;\n\n    function measure_text(text) {\n      let text_width;\n      if (that.context) {\n        text_width = that.context.measureText(text).width;\n      } else {\n        text_width = Flow.textWidth(text);\n      }\n\n      return text_width;\n    }\n\n    let total_width = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if ('width' in bend) {\n        total_width += bend.width;\n      } else {\n        const additional_width = (bend.type === Bend.UP) ?\n          this.render_options.bend_width : this.render_options.release_width;\n\n        bend.width = Vex.Max(additional_width, measure_text(bend.text)) + 3;\n        bend.draw_width = bend.width / 2;\n        total_width += bend.width;\n      }\n    }\n\n    this.setWidth(total_width + this.x_shift);\n    return this;\n  }\n  draw() {\n    this.checkContext();\n    if (!(this.note && (this.index != null))) {\n      throw new Vex.RERR('NoNoteForBend', \"Can't draw bend without a note or index.\");\n    }\n\n    this.setRendered();\n\n    const start = this.note.getModifierStartXY(Modifier.Position.RIGHT,\n        this.index);\n    start.x += 3;\n    start.y += 0.5;\n    const x_shift = this.x_shift;\n\n    const ctx = this.context;\n    const bend_height = this.note.getStave().getYForTopText(this.text_line) + 3;\n    const annotation_y = this.note.getStave().getYForTopText(this.text_line) - 1;\n    const that = this;\n\n    function renderBend(x, y, width, height) {\n      const cp_x = x + width;\n      const cp_y = y;\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(that.render_options.line_width);\n      ctx.setStrokeStyle(that.render_options.line_style);\n      ctx.setFillStyle(that.render_options.line_style);\n      ctx.moveTo(x, y);\n      ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    function renderRelease(x, y, width, height) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(that.render_options.line_width);\n      ctx.setStrokeStyle(that.render_options.line_style);\n      ctx.setFillStyle(that.render_options.line_style);\n      ctx.moveTo(x, height);\n      ctx.quadraticCurveTo(\n          x + width, height,\n          x + width, y);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    function renderArrowHead(x, y, direction) {\n      const width = 4;\n      const dir = direction || 1;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x - width, y + width * dir);\n      ctx.lineTo(x + width, y + width * dir);\n      ctx.closePath();\n      ctx.fill();\n    }\n\n    function renderText(x, text) {\n      ctx.save();\n      ctx.setRawFont(that.font);\n      const render_x = x - (ctx.measureText(text).width / 2);\n      ctx.fillText(text, render_x, annotation_y);\n      ctx.restore();\n    }\n\n    let last_bend = null;\n    let last_drawn_width = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if (i === 0) bend.draw_width += x_shift;\n\n      last_drawn_width = bend.draw_width +\n        (last_bend ? last_bend.draw_width : 0) -\n        (i === 1 ? x_shift : 0);\n      if (bend.type === Bend.UP) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderArrowHead(start.x, bend_height);\n        }\n\n        renderBend(start.x, start.y, last_drawn_width, bend_height);\n      }\n\n      if (bend.type === Bend.DOWN) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (last_bend && last_bend.type === Bend.DOWN) {\n          renderArrowHead(start.x, start.y, -1);\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (last_bend === null) {\n          last_drawn_width = bend.draw_width;\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n      }\n\n      renderText(start.x + last_drawn_width, bend.text);\n      last_bend = bend;\n      last_bend.x = start.x;\n\n      start.x += last_drawn_width;\n    }\n\n    // Final arrowhead and text\n    if (last_bend.type === Bend.UP) {\n      renderArrowHead(last_bend.x + last_drawn_width, bend_height);\n    } else if (last_bend.type === Bend.DOWN) {\n      renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/bend.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements vibratos.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Bend } from './bend';\n\nexport class Vibrato extends Modifier {\n  static get CATEGORY() { return 'vibratos'; }\n\n  // ## Static Methods\n  // Arrange vibratos inside a `ModifierContext`.\n  static format(vibratos, state, context) {\n    if (!vibratos || vibratos.length === 0) return false;\n\n    // Vibratos are always on top.\n    let text_line = state.top_text_line;\n    let width = 0;\n    let shift = state.right_shift - 7;\n\n    // If there's a bend, drop the text line\n    const bends = context.getModifiers(Bend.CATEGORY);\n    if (bends && bends.length > 0) {\n      text_line--;\n    }\n\n    // Format Vibratos\n    for (let i = 0; i < vibratos.length; ++i) {\n      const vibrato = vibratos[i];\n      vibrato.setXShift(shift);\n      vibrato.setTextLine(text_line);\n      width += vibrato.getWidth();\n      shift += width;\n    }\n\n    state.right_shift += width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  // ## Prototype Methods\n  constructor() {\n    super();\n    this.setAttribute('type', 'Vibrato');\n\n    this.position = Modifier.Position.RIGHT;\n    this.render_options = {\n      harsh: false,\n      vibrato_width: 20,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n\n    this.setVibratoWidth(this.render_options.vibrato_width);\n  }\n  getCategory() { return Vibrato.CATEGORY; }\n  setHarsh(harsh) { this.render_options.harsh = harsh; return this; }\n  setVibratoWidth(width) {\n    this.render_options.vibrato_width = width;\n    this.setWidth(width);\n    return this;\n  }\n\n  draw() {\n    const ctx = this.checkContext();\n\n    if (!this.note) {\n      throw new Vex.RERR('NoNoteForVibrato', \"Can't draw vibrato without an attached note.\");\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n\n    const vx = start.x + this.x_shift;\n    const vy = this.note.getYForTopText(this.text_line) + 2;\n\n    Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n  }\n\n  // Static rendering method that can be called from\n  // other classes (e.g. VibratoBracket)\n  static renderVibrato(ctx, x, y, opts) {\n    const { harsh, vibrato_width, wave_width, wave_girth, wave_height } = opts;\n    const num_waves = vibrato_width / wave_width;\n\n    ctx.beginPath();\n\n    let i;\n    if (harsh) {\n      ctx.moveTo(x, y + wave_girth + 1);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x + wave_width, y - (wave_height / 2));\n        x += wave_width;\n        ctx.lineTo(x + wave_width, y + (wave_height / 2));\n        x += wave_width;\n      }\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x - wave_width, (y - (wave_height / 2)) + wave_girth + 1);\n        x -= wave_width;\n        ctx.lineTo(x - wave_width, (y + (wave_height / 2)) + wave_girth + 1);\n        x -= wave_width;\n      }\n      ctx.fill();\n    } else {\n      ctx.moveTo(x, y + wave_girth);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(x + (wave_width / 2), y - (wave_height / 2), x + wave_width, y);\n        x += wave_width;\n        ctx.quadraticCurveTo(x + (wave_width / 2), y + (wave_height / 2), x + wave_width, y);\n        x += wave_width;\n      }\n\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(\n          x - (wave_width / 2),\n          (y + (wave_height / 2)) + wave_girth,\n          x - wave_width, y + wave_girth);\n        x -= wave_width;\n        ctx.quadraticCurveTo(\n          x - (wave_width / 2),\n          (y - (wave_height / 2)) + wave_girth,\n          x - wave_width, y + wave_girth);\n        x -= wave_width;\n      }\n      ctx.fill();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/vibrato.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Barline } from './stavebarline';\nimport { StaveModifier } from './stavemodifier';\nimport { Repetition } from './staverepetition';\nimport { StaveSection } from './stavesection';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { BoundingBox } from './boundingbox';\nimport { Clef } from './clef';\nimport { KeySignature } from './keysignature';\nimport { TimeSignature } from './timesignature';\nimport { Volta } from './stavevolta';\n\nexport class Stave extends Element {\n  constructor(x, y, width, options) {\n    super();\n    this.setAttribute('type', 'Stave');\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.formatted = false;\n    this.start_x = x + 5;\n    this.end_x = x + width;\n    this.modifiers = [];  // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n    this.measure = 0;\n    this.clef = 'treble';\n    this.font = {\n      family: 'sans-serif',\n      size: 8,\n      weight: '',\n    };\n    this.options = {\n      vertical_bar_width: 10,       // Width around vertical bar end-marker\n      glyph_spacing_px: 10,\n      num_lines: 5,\n      fill_style: '#999999',\n      left_bar: true,               // draw vertical bar on left\n      right_bar: true,               // draw vertical bar on right\n      spacing_between_lines_px: 10, // in pixels\n      space_above_staff_ln: 4,      // in staff lines\n      space_below_staff_ln: 4,      // in staff lines\n      top_text_position: 1,          // in staff lines\n    };\n    this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n    Vex.Merge(this.options, options);\n\n    this.resetLines();\n\n    const BARTYPE = Barline.type;\n    // beg bar\n    this.addModifier(new Barline(this.options.left_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n    // end bar\n    this.addEndModifier(new Barline(this.options.right_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n  }\n\n  space(spacing) { return this.options.spacing_between_lines_px * spacing; }\n\n  resetLines() {\n    this.options.line_config = [];\n    for (let i = 0; i < this.options.num_lines; i++) {\n      this.options.line_config.push({ visible: true });\n    }\n    this.height = (this.options.num_lines + this.options.space_above_staff_ln) *\n       this.options.spacing_between_lines_px;\n    this.options.bottom_text_position = this.options.num_lines;\n  }\n\n  getOptions() { return this.options; }\n\n  setNoteStartX(x) {\n    if (!this.formatted) this.format();\n\n    this.start_x = x;\n    return this;\n  }\n  getNoteStartX() {\n    if (!this.formatted) this.format();\n\n    return this.start_x;\n  }\n\n  getNoteEndX() {\n    if (!this.formatted) this.format();\n\n    return this.end_x;\n  }\n  getTieStartX() { return this.start_x; }\n  getTieEndX() { return this.x + this.width; }\n  getX() { return this.x; }\n  getNumLines() { return this.options.num_lines; }\n  setNumLines(lines) {\n    this.options.num_lines = parseInt(lines, 10);\n    this.resetLines();\n    return this;\n  }\n  setY(y) { this.y = y; return this; }\n\n  getTopLineTopY() {\n    return this.getYForLine(0) - (Flow.STAVE_LINE_THICKNESS / 2);\n  }\n  getBottomLineBottomY() {\n    return this.getYForLine(this.getNumLines() - 1) + (Flow.STAVE_LINE_THICKNESS / 2);\n  }\n\n  setX(x) {\n    const shift = x - this.x;\n    this.formatted = false;\n    this.x = x;\n    this.start_x += shift;\n    this.end_x += shift;\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const mod = this.modifiers[i];\n      if (mod.x !== undefined) {\n        mod.x += shift;\n      }\n    }\n    return this;\n  }\n\n  setWidth(width) {\n    this.formatted = false;\n    this.width = width;\n    this.end_x = this.x + width;\n\n    // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n    // this.modifiers[1].setX(this.end_x);\n    return this;\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  setMeasure(measure) { this.measure = measure; return this; }\n\n  /**\n   * Gets the pixels to shift from the beginning of the stave\n   * following the modifier at the provided index\n   * @param  {Number} index The index from which to determine the shift\n   * @return {Number}       The amount of pixels shifted\n   */\n  getModifierXShift(index = 0) {\n    if (typeof index !== 'number') {\n      throw new Vex.RERR('InvalidIndex', 'Must be of number type');\n    }\n\n    if (!this.formatted) this.format();\n\n    if (this.getModifiers(StaveModifier.Position.BEGIN).length === 1) {\n      return 0;\n    }\n\n    let start_x = this.start_x - this.x;\n    const begBarline = this.modifiers[0];\n    if (begBarline.getType() === Barline.type.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n      start_x -= begBarline.getWidth();\n    }\n\n    return start_x;\n  }\n\n  // Coda & Segno Symbol functions\n  setRepetitionTypeLeft(type, y) {\n    this.modifiers.push(new Repetition(type, this.x, y));\n    return this;\n  }\n\n  setRepetitionTypeRight(type, y) {\n    this.modifiers.push(new Repetition(type, this.x, y));\n    return this;\n  }\n\n  // Volta functions\n  setVoltaType(type, number_t, y) {\n    this.modifiers.push(new Volta(type, number_t, this.x, y));\n    return this;\n  }\n\n  // Section functions\n  setSection(section, y) {\n    this.modifiers.push(new StaveSection(section, this.x, y));\n    return this;\n  }\n\n  // Tempo functions\n  setTempo(tempo, y) {\n    this.modifiers.push(new StaveTempo(tempo, this.x, y));\n    return this;\n  }\n\n  // Text functions\n  setText(text, position, options) {\n    this.modifiers.push(new StaveText(text, position, options));\n    return this;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  getSpacingBetweenLines() {\n    return this.options.spacing_between_lines_px;\n  }\n\n  getBoundingBox() {\n    return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n  }\n\n  getBottomY() {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const score_bottom = this.getYForLine(options.num_lines) +\n       (options.space_below_staff_ln * spacing);\n\n    return score_bottom;\n  }\n\n  getBottomLineY() {\n    return this.getYForLine(this.options.num_lines);\n  }\n\n  // This returns the y for the *center* of a staff line\n  getYForLine(line) {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n\n    const y = this.y + (line * spacing) + (headroom * spacing);\n\n    return y;\n  }\n\n  getLineForY(y) {\n    // Does the reverse of getYForLine - somewhat dumb and just calls\n    // getYForLine until the right value is reaches\n\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    return ((y - this.y) / spacing) - headroom;\n  }\n\n  getYForTopText(line) {\n    const l = line || 0;\n    return this.getYForLine(-l - this.options.top_text_position);\n  }\n\n  getYForBottomText(line) {\n    const l = line || 0;\n    return this.getYForLine(this.options.bottom_text_position + l);\n  }\n\n  getYForNote(line) {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    const y = this.y + (headroom * spacing) + (5 * spacing) - (line * spacing);\n\n    return y;\n  }\n\n  getYForGlyphs() {\n    return this.getYForLine(3);\n  }\n\n  addModifier(modifier, position) {\n    if (position !== undefined) {\n      modifier.setPosition(position);\n    }\n\n    modifier.setStave(this);\n    this.formatted = false;\n    this.modifiers.push(modifier);\n    return this;\n  }\n\n  addEndModifier(modifier) {\n    this.addModifier(modifier, StaveModifier.Position.END);\n    return this;\n  }\n\n  // Bar Line functions\n  setBegBarType(type) {\n    // Only valid bar types at beginning of stave is none, single or begin repeat\n    const { SINGLE, REPEAT_BEGIN, NONE } = Barline.type;\n    if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n      this.modifiers[0].setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setEndBarType(type) {\n    // Repeat end not valid at end of stave\n    if (type !== Barline.type.REPEAT_BEGIN) {\n      this.modifiers[1].setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setClef(clefSpec, size, annotation, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    this.clef = clefSpec;\n    const clefs = this.getModifiers(position, Clef.CATEGORY);\n    if (clefs.length === 0) {\n      this.addClef(clefSpec, size, annotation, position);\n    } else {\n      clefs[0].setType(clefSpec, size, annotation);\n    }\n\n    return this;\n  }\n\n  setEndClef(clefSpec, size, annotation) {\n    this.setClef(clefSpec, size, annotation, StaveModifier.Position.END);\n    return this;\n  }\n\n  setKeySignature(keySpec, cancelKeySpec, alterKeySpec, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    const keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n    if (keySignatures.length === 0) {\n      this.addKeySignature(keySpec, cancelKeySpec, alterKeySpec, position);\n    } else {\n      keySignatures[0].setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n    }\n\n    return this;\n  }\n\n  setEndKeySignature(keySpec, cancelKeySpec, alterKeySpec) {\n    this.setKeySignature(keySpec, cancelKeySpec, alterKeySpec, StaveModifier.Position.END);\n    return this;\n  }\n\n  setTimeSignature(timeSpec, customPadding, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n    if (timeSignatures.length === 0) {\n      this.addTimeSignature(timeSpec, customPadding, position);\n    } else {\n      timeSignatures[0].setTimeSig(timeSpec);\n    }\n\n    return this;\n  }\n\n  setEndTimeSignature(timeSpec, customPadding) {\n    this.setTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n    return this;\n  }\n\n  addKeySignature(keySpec, cancelKeySpec, alterKeySpec, position) {\n    this.addModifier(new KeySignature(keySpec, cancelKeySpec, alterKeySpec), position);\n    return this;\n  }\n\n  addClef(clef, size, annotation, position) {\n    if (position === undefined || position === StaveModifier.Position.BEGIN) {\n      this.clef = clef;\n    }\n\n    this.addModifier(new Clef(clef, size, annotation), position);\n    return this;\n  }\n\n  addEndClef(clef, size, annotation) {\n    this.addClef(clef, size, annotation, StaveModifier.Position.END);\n    return this;\n  }\n\n  addTimeSignature(timeSpec, customPadding, position) {\n    this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n    return this;\n  }\n\n  addEndTimeSignature(timeSpec, customPadding) {\n    this.addTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n    return this;\n  }\n\n  // Deprecated\n  addTrebleGlyph() {\n    this.addClef('treble');\n    return this;\n  }\n\n  getModifiers(position, category) {\n    if (position === undefined) return this.modifiers;\n\n    return this.modifiers.filter(modifier =>\n      position === modifier.getPosition() &&\n      (category === undefined || category === modifier.getCategory())\n    );\n  }\n\n  sortByCategory(items, order) {\n    for (let i = items.length - 1; i >= 0; i--) {\n      for (let j = 0; j < i; j++) {\n        if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n          const temp = items[j];\n          items[j] = items[j + 1];\n          items[j + 1] = temp;\n        }\n      }\n    }\n  }\n\n  format() {\n    const begBarline = this.modifiers[0];\n    const endBarline = this.modifiers[1];\n\n    const begModifiers = this.getModifiers(StaveModifier.Position.BEGIN);\n    const endModifiers = this.getModifiers(StaveModifier.Position.END);\n\n    this.sortByCategory(begModifiers, {\n      barlines: 0, clefs: 1, keysignatures: 2, timesignatures: 3,\n    });\n\n    this.sortByCategory(endModifiers, {\n      timesignatures: 0, keysignatures: 1, barlines: 2, clefs: 3,\n    });\n\n    if (begModifiers.length > 1 &&\n        begBarline.getType() === Barline.type.REPEAT_BEGIN) {\n      begModifiers.push(begModifiers.splice(0, 1)[0]);\n      begModifiers.splice(0, 0, new Barline(Barline.type.SINGLE));\n    }\n\n    if (endModifiers.indexOf(endBarline) > 0) {\n      endModifiers.splice(0, 0, new Barline(Barline.type.NONE));\n    }\n\n    let width;\n    let padding;\n    let modifier;\n    let offset = 0;\n    let x = this.x;\n    for (let i = 0; i < begModifiers.length; i++) {\n      modifier = begModifiers[i];\n      padding = modifier.getPadding(i + offset);\n      width = modifier.getWidth();\n\n      x += padding;\n      modifier.setX(x);\n      x += width;\n\n      if (padding + width === 0) offset--;\n    }\n\n    this.start_x = x;\n    x = this.x + this.width;\n\n    for (let i = 0; i < endModifiers.length; i++) {\n      modifier = endModifiers[i];\n      x -= modifier.getPadding(i);\n      if (i !== 0) {\n        x -= modifier.getWidth();\n      }\n\n      modifier.setX(x);\n\n      if (i === 0) {\n        x -= modifier.getWidth();\n      }\n    }\n\n    this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n    this.formatted = true;\n  }\n\n  /**\n   * All drawing functions below need the context to be set.\n   */\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    if (!this.formatted) this.format();\n\n    const num_lines = this.options.num_lines;\n    const width = this.width;\n    const x = this.x;\n    let y;\n\n    // Render lines\n    for (let line = 0; line < num_lines; line++) {\n      y = this.getYForLine(line);\n\n      this.context.save();\n      this.context.setFillStyle(this.options.fill_style);\n      this.context.setStrokeStyle(this.options.fill_style);\n      this.context.setLineWidth(Flow.STAVE_LINE_THICKNESS);\n      if (this.options.line_config[line].visible) {\n        this.context.beginPath();\n        this.context.moveTo(x, y);\n        this.context.lineTo(x + width, y);\n        this.context.stroke();\n      }\n      this.context.restore();\n    }\n\n    // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n    for (let i = 0; i < this.modifiers.length; i++) {\n      // Only draw modifier if it has a draw function\n      if (typeof this.modifiers[i].draw === 'function') {\n        this.modifiers[i].draw(this, this.getModifierXShift(i));\n      }\n    }\n\n    // Render measure numbers\n    if (this.measure > 0) {\n      this.context.save();\n      this.context.setFont(this.font.family, this.font.size, this.font.weight);\n      const text_width = this.context.measureText('' + this.measure).width;\n      y = this.getYForTopText(0) + 3;\n      this.context.fillText('' + this.measure, this.x - text_width / 2, y);\n      this.context.restore();\n    }\n\n    return this;\n  }\n\n  // Draw Simple barlines for backward compatability\n  // Do not delete - draws the beginning bar of the stave\n  drawVertical(x, isDouble) {\n    this.drawVerticalFixed(this.x + x, isDouble);\n  }\n\n  drawVerticalFixed(x, isDouble) {\n    this.checkContext();\n\n    const top_line = this.getYForLine(0);\n    const bottom_line = this.getYForLine(this.options.num_lines - 1);\n    if (isDouble) {\n      this.context.fillRect(x - 3, top_line, 1, bottom_line - top_line + 1);\n    }\n    this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n  }\n\n  drawVerticalBar(x) {\n    this.drawVerticalBarFixed(this.x + x, false);\n  }\n\n  drawVerticalBarFixed(x) {\n    this.checkContext();\n\n    const top_line = this.getYForLine(0);\n    const bottom_line = this.getYForLine(this.options.num_lines - 1);\n    this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n  }\n\n  /**\n   * Get the current configuration for the Stave.\n   * @return {Array} An array of configuration objects.\n   */\n  getConfigForLines() {\n    return this.options.line_config;\n  }\n\n  /**\n   * Configure properties of the lines in the Stave\n   * @param line_number The index of the line to configure.\n   * @param line_config An configuration object for the specified line.\n   * @throws Vex.RERR \"StaveConfigError\" When the specified line number is out of\n   *   range of the number of lines specified in the constructor.\n   */\n  setConfigForLine(line_number, line_config) {\n    if (line_number >= this.options.num_lines || line_number < 0) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        'The line number must be within the range of the number of lines in the Stave.'\n      );\n    }\n\n    if (line_config.visible === undefined) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        \"The line configuration object is missing the 'visible' property.\"\n      );\n    }\n\n    if (typeof(line_config.visible) !== 'boolean') {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        \"The line configuration objects 'visible' property must be true or false.\"\n      );\n    }\n\n    this.options.line_config[line_number] = line_config;\n\n    return this;\n  }\n\n  /**\n   * Set the staff line configuration array for all of the lines at once.\n   * @param lines_configuration An array of line configuration objects.  These objects\n   *   are of the same format as the single one passed in to setLineConfiguration().\n   *   The caller can set null for any line config entry if it is desired that the default be used\n   * @throws Vex.RERR \"StaveConfigError\" When the lines_configuration array does not have\n   *   exactly the same number of elements as the num_lines configuration object set in\n   *   the constructor.\n   */\n  setConfigForLines(lines_configuration) {\n    if (lines_configuration.length !== this.options.num_lines) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        'The length of the lines configuration array must match the number of lines in the Stave'\n      );\n    }\n\n    // Make sure the defaults are present in case an incomplete set of\n    //  configuration options were supplied.\n    for (const line_config in lines_configuration) {\n      // Allow 'null' to be used if the caller just wants the default for a particular node.\n      if (!lines_configuration[line_config]) {\n        lines_configuration[line_config] = this.options.line_config[line_config];\n      }\n      Vex.Merge(this.options.line_config[line_config], lines_configuration[line_config]);\n    }\n\n    this.options.line_config = lines_configuration;\n\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stave.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author Larry Kuhns 2011\n\nimport { Flow } from './tables';\nimport { StaveModifier } from './stavemodifier';\n\nexport class Barline extends StaveModifier {\n  static get CATEGORY() { return 'barlines'; }\n  static get type() {\n    return {\n      SINGLE: 1,\n      DOUBLE: 2,\n      END: 3,\n      REPEAT_BEGIN: 4,\n      REPEAT_END: 5,\n      REPEAT_BOTH: 6,\n      NONE: 7,\n    };\n  }\n\n  static get typeString() {\n    return {\n      single: Barline.type.SINGLE,\n      double: Barline.type.DOUBLE,\n      end: Barline.type.END,\n      repeatBegin: Barline.type.REPEAT_BEGIN,\n      repeatEnd: Barline.type.REPEAT_END,\n      repeatBoth: Barline.type.REPEAT_BOTH,\n      none: Barline.type.NONE,\n    };\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Barline');\n    this.thickness = Flow.STAVE_LINE_THICKNESS;\n\n    const TYPE = Barline.type;\n    this.widths = {};\n    this.widths[TYPE.SINGLE] = 5;\n    this.widths[TYPE.DOUBLE] = 5;\n    this.widths[TYPE.END] = 5;\n    this.widths[TYPE.REPEAT_BEGIN] = 5;\n    this.widths[TYPE.REPEAT_END] = 5;\n    this.widths[TYPE.REPEAT_BOTH] = 5;\n    this.widths[TYPE.NONE] = 5;\n\n    this.paddings = {};\n    this.paddings[TYPE.SINGLE] = 0;\n    this.paddings[TYPE.DOUBLE] = 0;\n    this.paddings[TYPE.END] = 0;\n    this.paddings[TYPE.REPEAT_BEGIN] = 15;\n    this.paddings[TYPE.REPEAT_END] = 15;\n    this.paddings[TYPE.REPEAT_BOTH] = 15;\n    this.paddings[TYPE.NONE] = 0;\n\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setType(type);\n  }\n  getCategory() { return Barline.CATEGORY; }\n  getType() { return this.type; }\n  setType(type) {\n    this.type = typeof(type) === 'string'\n      ? Barline.typeString[type]\n      : type;\n\n    this.setWidth(this.widths[this.type]);\n    this.setPadding(this.paddings[this.type]);\n    return this;\n  }\n\n  // Draw barlines\n  draw(stave) {\n    stave.checkContext();\n    this.setRendered();\n\n    switch (this.type) {\n      case Barline.type.SINGLE:\n        this.drawVerticalBar(stave, this.x, false);\n        break;\n      case Barline.type.DOUBLE:\n        this.drawVerticalBar(stave, this.x, true);\n        break;\n      case Barline.type.END:\n        this.drawVerticalEndBar(stave, this.x);\n        break;\n      case Barline.type.REPEAT_BEGIN:\n        // If the barline is shifted over (in front of clef/time/key)\n        // Draw vertical bar at the beginning.\n        this.drawRepeatBar(stave, this.x, true);\n        if (stave.getX() !== this.x) {\n          this.drawVerticalBar(stave, stave.getX());\n        }\n\n        break;\n      case Barline.type.REPEAT_END:\n        this.drawRepeatBar(stave, this.x, false);\n        break;\n      case Barline.type.REPEAT_BOTH:\n        this.drawRepeatBar(stave, this.x, false);\n        this.drawRepeatBar(stave, this.x, true);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n  }\n\n  drawVerticalBar(stave, x, double_bar) {\n    stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    if (double_bar) {\n      stave.context.fillRect(x - 3, topY, 1, botY - topY);\n    }\n    stave.context.fillRect(x, topY, 1, botY - topY);\n  }\n\n  drawVerticalEndBar(stave, x) {\n    stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    stave.context.fillRect(x - 5, topY, 1, botY - topY);\n    stave.context.fillRect(x - 2, topY, 3, botY - topY);\n  }\n\n  drawRepeatBar(stave, x, begin) {\n    stave.checkContext();\n\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    let x_shift = 3;\n\n    if (!begin) {\n      x_shift = -5;\n    }\n\n    stave.context.fillRect(x + x_shift, topY, 1, botY - topY);\n    stave.context.fillRect(x - 2, topY, 3, botY - topY);\n\n    const dot_radius = 2;\n\n    // Shift dots left or right\n    if (begin) {\n      x_shift += 4;\n    } else {\n      x_shift -= 4;\n    }\n\n    const dot_x = (x + x_shift) + (dot_radius / 2);\n\n    // calculate the y offset based on number of stave lines\n    let y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n    y_offset = (y_offset / 2) - (stave.getSpacingBetweenLines() / 2);\n    let dot_y = topY + y_offset + (dot_radius / 2);\n\n    // draw the top repeat dot\n    stave.context.beginPath();\n    stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    stave.context.fill();\n\n    // draw the bottom repeat dot\n    dot_y += stave.getSpacingBetweenLines();\n    stave.context.beginPath();\n    stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    stave.context.fill();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavebarline.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A base class for stave modifiers (e.g. clefs, key signatures)\n\nimport { Element } from './element';\n\nexport class StaveModifier extends Element {\n  static get Position() {\n    return {\n      LEFT: 1,\n      RIGHT: 2,\n      ABOVE: 3,\n      BELOW: 4,\n      BEGIN: 5,\n      END: 6,\n    };\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'StaveModifier');\n\n    this.padding = 10;\n    this.position = StaveModifier.Position.ABOVE;\n  }\n\n  getPosition() { return this.position; }\n  setPosition(position) { this.position = position; return this; }\n  getStave() { return this.stave; }\n  setStave(stave) { this.stave = stave; return this; }\n  getWidth() { return this.width; }\n  setWidth(width) { this.width = width; return this; }\n  getX() { return this.x; }\n  setX(x) { this.x = x; return this; }\n  getCategory() { return ''; }\n  makeSpacer(padding) {\n    // TODO(0xfe): Return an instance of type `Spacer` based on `GhostNote`\n    // instead of this hack.\n\n    return {\n      getContext() { return true; },\n      setStave() {},\n      renderToStave() {},\n      getMetrics() {\n        return { width: padding };\n      },\n    };\n  }\n  placeGlyphOnLine(glyph, stave, line) {\n    glyph.setYShift(stave.getYForLine(line) - stave.getYForGlyphs());\n  }\n  getPadding(index) {\n    return (index !== undefined && index < 2 ? 0 : this.padding);\n  }\n  setPadding(padding) { this.padding = padding; return this; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavemodifier.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class Repetition extends StaveModifier {\n  static get CATEGORY() { return 'repetitions'; }\n  static get type() {\n    return {\n      NONE: 1,         // no coda or segno\n      CODA_LEFT: 2,    // coda at beginning of stave\n      CODA_RIGHT: 3,   // coda at end of stave\n      SEGNO_LEFT: 4,   // segno at beginning of stave\n      SEGNO_RIGHT: 5,  // segno at end of stave\n      DC: 6,           // D.C. at end of stave\n      DC_AL_CODA: 7,   // D.C. al coda at end of stave\n      DC_AL_FINE: 8,   // D.C. al Fine end of stave\n      DS: 9,           // D.S. at end of stave\n      DS_AL_CODA: 10,  // D.S. al coda at end of stave\n      DS_AL_FINE: 11,  // D.S. al Fine at end of stave\n      FINE: 12,        // Fine at end of stave\n    };\n  }\n\n  constructor(type, x, y_shift) {\n    super();\n    this.setAttribute('type', 'Repetition');\n\n    this.symbol_type = type;\n    this.x = x;\n    this.x_shift = 0;\n    this.y_shift = y_shift;\n    this.font = {\n      family: 'times',\n      size: 12,\n      weight: 'bold italic',\n    };\n  }\n\n  getCategory() { return Repetition.CATEGORY; }\n  setShiftX(x) { this.x_shift = x; return this; }\n  setShiftY(y) { this.y_shift = y; return this; }\n\n  draw(stave, x) {\n    this.setRendered();\n\n    switch (this.symbol_type) {\n      case Repetition.type.CODA_RIGHT:\n        this.drawCodaFixed(stave, x + stave.width);\n        break;\n      case Repetition.type.CODA_LEFT:\n        this.drawSymbolText(stave, x, 'Coda', true);\n        break;\n      case Repetition.type.SEGNO_LEFT:\n        this.drawSignoFixed(stave, x);\n        break;\n      case Repetition.type.SEGNO_RIGHT:\n        this.drawSignoFixed(stave, x + stave.width);\n        break;\n      case Repetition.type.DC:\n        this.drawSymbolText(stave, x, 'D.C.', false);\n        break;\n      case Repetition.type.DC_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.C. al', true);\n        break;\n      case Repetition.type.DC_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n        break;\n      case Repetition.type.DS:\n        this.drawSymbolText(stave, x, 'D.S.', false);\n        break;\n      case Repetition.type.DS_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.S. al', true);\n        break;\n      case Repetition.type.DS_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n        break;\n      case Repetition.type.FINE:\n        this.drawSymbolText(stave, x, 'Fine', false);\n        break;\n      default:\n        break;\n    }\n\n    return this;\n  }\n\n  drawCodaFixed(stave, x) {\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 40, 'v4d', true);\n    return this;\n  }\n\n  drawSignoFixed(stave, x) {\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 30, 'v8c', true);\n    return this;\n  }\n\n  drawSymbolText(stave, x, text, draw_coda) {\n    const ctx = stave.checkContext();\n\n    ctx.save();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      // Default to right symbol\n    let text_x = 0 + this.x_shift;\n    let symbol_x = x + this.x_shift;\n    if (this.symbol_type === Repetition.type.CODA_LEFT) {\n        // Offset Coda text to right of stave beginning\n      text_x = this.x + stave.options.vertical_bar_width;\n      symbol_x = text_x + ctx.measureText(text).width + 12;\n    } else {\n        // Offset Signo text to left stave end\n      symbol_x = this.x + x + stave.width - 5 + this.x_shift;\n      text_x = symbol_x - + ctx.measureText(text).width - 12;\n    }\n\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    if (draw_coda) {\n      Glyph.renderGlyph(ctx, symbol_x, y, 40, 'v4d', true);\n    }\n\n    ctx.fillText(text, text_x, y + 5);\n    ctx.restore();\n\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/staverepetition.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\n\nexport class StaveSection extends StaveModifier {\n  static get CATEGORY() { return 'stavesection'; }\n\n  constructor(section, x, shift_y) {\n    super();\n    this.setAttribute('type', 'StaveSection');\n\n    this.setWidth(16);\n    this.section = section;\n    this.x = x;\n    this.shift_x = 0;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'sans-serif',\n      size: 12,\n      weight: 'bold',\n    };\n  }\n\n  getCategory() { return StaveSection.CATEGORY; }\n  setStaveSection(section) { this.section = section; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n  draw(stave, shift_x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.section).width;\n    let width = text_width + 6;  // add left & right padding\n    if (width < 18) width = 18;\n    const height = 20;\n      //  Seems to be a good default y\n    const y = stave.getYForTopText(3) + this.shift_y;\n    let x = this.x + shift_x;\n    ctx.beginPath();\n    ctx.lineWidth = 2;\n    ctx.rect(x, y, width, height);\n    ctx.stroke();\n    x += (width - text_width) / 2;\n    ctx.fillText('' + this.section, x, y + 16);\n    ctx.restore();\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavesection.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Radosaw Eichler 2012\n\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class StaveTempo extends StaveModifier {\n  static get CATEGORY() { return 'stavetempo'; }\n\n  constructor(tempo, x, shift_y) {\n    super();\n    this.setAttribute('type', 'StaveTempo');\n\n    this.tempo = tempo;\n    this.position = Modifier.Position.ABOVE;\n    this.x = x;\n    this.shift_x = 10;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'times',\n      size: 14,\n      weight: 'bold',\n    };\n    this.render_options = {\n      glyph_font_scale: 30,  // font size for note\n    };\n  }\n  getCategory() { return StaveTempo.CATEGORY; }\n  setTempo(tempo) { this.tempo = tempo; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n\n  draw(stave, shift_x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    const options = this.render_options;\n    // FIXME: What does the '38' mean? Why 38? Is that supposed to\n    // be the default font size for standard notation?\n    const scale = options.glyph_font_scale / 38;\n    const name = this.tempo.name;\n    const duration = this.tempo.duration;\n    const dots = this.tempo.dots;\n    const bpm = this.tempo.bpm;\n    const font = this.font;\n    let x = this.x + this.shift_x + shift_x;\n    const y = stave.getYForTopText(1) + this.shift_y;\n\n    ctx.save();\n\n    if (name) {\n      ctx.setFont(font.family, font.size, font.weight);\n      ctx.fillText(name, x, y);\n      x += ctx.measureText(name).width;\n    }\n\n    if (duration && bpm) {\n      ctx.setFont(font.family, font.size, 'normal');\n\n      if (name) {\n        x += ctx.measureText(' ').width;\n        ctx.fillText('(', x, y);\n        x += ctx.measureText('(').width;\n      }\n\n      const code = Flow.durationToGlyph(duration);\n\n      x += 3 * scale;\n      Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, code.code_head);\n      x += code.getWidth() * scale;\n\n      // Draw stem and flags\n      if (code.stem) {\n        let stem_height = 30;\n\n        if (code.beam_count) stem_height += 3 * (code.beam_count - 1);\n\n        stem_height *= scale;\n\n        const y_top = y - stem_height;\n        ctx.fillRect(x - scale, y_top, scale, stem_height);\n\n        if (code.flag) {\n          Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale, code.code_flag_upstem);\n\n          if (!dots) x += 6 * scale;\n        }\n      }\n\n      // Draw dot\n      for (let i = 0; i < dots; i++) {\n        x += 6 * scale;\n        ctx.beginPath();\n        ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n        ctx.fill();\n      }\n\n      ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n    }\n\n    ctx.restore();\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavetempo.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { Vex } from './vex';\nimport { StaveModifier } from './stavemodifier';\nimport { TextNote } from './textnote';\n\nexport class StaveText extends StaveModifier {\n  static get CATEGORY() { return 'stavetext'; }\n\n  constructor(text, position, options) {\n    super();\n    this.setAttribute('type', 'StaveText');\n\n    this.setWidth(16);\n    this.text = text;\n    this.position = position;\n    this.options = {\n      shift_x: 0,\n      shift_y: 0,\n      justification: TextNote.Justification.CENTER,\n    };\n    Vex.Merge(this.options, options);\n\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    };\n  }\n\n  getCategory() { return StaveText.CATEGORY; }\n  setStaveText(text) { this.text = text; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n\n  setFont(font) {\n    Vex.Merge(this.font, font);\n  }\n\n  setText(text) {\n    this.text = text;\n  }\n\n  draw(stave) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.text).width;\n\n    let x;\n    let y;\n    const Position = StaveModifier.Position;\n    const Justification = TextNote.Justification;\n    switch (this.position) {\n      case Position.LEFT:\n      case Position.RIGHT:\n        y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n        if (this.position === Position.LEFT) {\n          x = stave.getX() - text_width - 24 + this.options.shift_x;\n        } else {\n          x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n        }\n        break;\n      case Position.ABOVE:\n      case Position.BELOW:\n        x = stave.getX() + this.options.shift_x;\n        if (this.options.justification === Justification.CENTER) {\n          x += stave.getWidth() / 2 - text_width / 2;\n        } else if (this.options.justification === Justification.RIGHT) {\n          x += stave.getWidth() - text_width;\n        }\n\n        if (this.position === Position.ABOVE) {\n          y = stave.getYForTopText(2) + this.options.shift_y;\n        } else {\n          y = stave.getYForBottomText(2) + this.options.shift_y;\n        }\n        break;\n      default:\n        throw new Vex.RERR('InvalidPosition', 'Value Must be in Modifier.Position.');\n    }\n\n    ctx.fillText('' + this.text, x, y + 4);\n    ctx.restore();\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavetext.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `TextNote` is a notation element that is positioned in time. Generally\n// meant for objects that sit above/below the staff and inline with each other.\n// Examples of this would be such as dynamics, lyrics, chord changes, etc.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Note } from './note';\nimport { Glyph } from './glyph';\n\nexport class TextNote extends Note {\n  static get Justification() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n    };\n  }\n\n  // Glyph data\n  static get GLYPHS() {\n    return {\n      'segno': {\n        code: 'v8c',\n        point: 40,\n        x_shift: 0,\n        y_shift: -10,\n        // width: 10 // optional\n      },\n      'tr': {\n        code: 'v1f',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'mordent_upper': {\n        code: 'v1e',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'mordent_lower': {\n        code: 'v45',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'f': {\n        code: 'vba',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'p': {\n        code: 'vbf',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'm': {\n        code: 'v62',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      's': {\n        code: 'v4a',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'z': {\n        code: 'v80',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'coda': {\n        code: 'v4d',\n        point: 40,\n        x_shift: 0,\n        y_shift: -8,\n        // width: 10 // optional\n      },\n      'pedal_open': {\n        code: 'v36',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'pedal_close': {\n        code: 'v5d',\n        point: 40,\n        x_shift: 0,\n        y_shift: 3,\n      },\n      'caesura_straight': {\n        code: 'v34',\n        point: 40,\n        x_shift: 0,\n        y_shift: 2,\n      },\n      'caesura_curved': {\n        code: 'v4b',\n        point: 40,\n        x_shift: 0,\n        y_shift: 2,\n      },\n      'breath': {\n        code: 'v6c',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'tick': {\n        code: 'v6f',\n        point: 50,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'turn': {\n        code: 'v72',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'turn_inverted': {\n        code: 'v33',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n\n      // DEPRECATED - please use \"mordent_upper\" or \"mordent_lower\"\n      'mordent': {\n        code: 'v1e',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n    };\n  }\n\n  constructor(text_struct) {\n    super(text_struct);\n    this.setAttribute('type', 'TextNote');\n\n    // Note properties\n    this.text = text_struct.text;\n    this.superscript = text_struct.superscript;\n    this.subscript = text_struct.subscript;\n    this.glyph_type = text_struct.glyph;\n    this.glyph = null;\n    this.font = {\n      family: 'Arial',\n      size: 12,\n      weight: '',\n    };\n\n    // Set font\n    if (text_struct.font) this.font = text_struct.font;\n\n    // Determine and set initial note width. Note that the text width is\n    // an approximation and isn't very accurate. The only way to accurately\n    // measure the length of text is with `canvasmeasureText()`\n    if (this.glyph_type) {\n      const struct = TextNote.GLYPHS[this.glyph_type];\n      if (!struct) throw new Vex.RERR('Invalid glyph type: ' + this.glyph_type);\n\n      this.glyph = new Glyph(struct.code, struct.point, { cache: false });\n\n      if (struct.width) {\n        this.setWidth(struct.width);\n      } else {\n        this.setWidth(this.glyph.getMetrics().width);\n      }\n\n      this.glyph_struct = struct;\n    } else {\n      this.setWidth(Flow.textWidth(this.text));\n    }\n    this.line = text_struct.line || 0;\n    this.smooth = text_struct.smooth || false;\n    this.ignore_ticks = text_struct.ignore_ticks || false;\n    this.justification = TextNote.Justification.LEFT;\n  }\n\n  // Set the horizontal justification of the TextNote\n  setJustification(just) {\n    this.justification = just;\n    return this;\n  }\n\n  // Set the Stave line on which the note should be placed\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    this.checkContext();\n\n    if (this.preFormatted) return;\n\n    if (this.smooth) {\n      this.setWidth(0);\n    } else {\n      if (this.glyph) {\n        // Width already set.\n      } else {\n        this.setWidth(this.context.measureText(this.text).width);\n      }\n    }\n\n    if (this.justification === TextNote.Justification.CENTER) {\n      this.extraLeftPx = this.width / 2;\n    } else if (this.justification === TextNote.Justification.RIGHT) {\n      this.extraLeftPx = this.width;\n    }\n\n    this.setPreFormatted(true);\n  }\n\n  // Renders the TextNote\n  draw() {\n    this.checkContext();\n\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n\n    this.setRendered();\n    const ctx = this.context;\n    let x = this.getAbsoluteX();\n    if (this.justification === TextNote.Justification.CENTER) {\n      x -= this.getWidth() / 2;\n    } else if (this.justification === TextNote.Justification.RIGHT) {\n      x -= this.getWidth();\n    }\n\n    let y;\n    if (this.glyph) {\n      y = this.stave.getYForLine(this.line + -3);\n      this.glyph.render(\n        this.context,\n        x + this.glyph_struct.x_shift,\n        y + this.glyph_struct.y_shift\n      );\n    } else {\n      y = this.stave.getYForLine(this.line + -3);\n      ctx.save();\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.text, x, y);\n\n      // Width of the letter M gives us the approximate height of the text\n      const height = ctx.measureText('M').width;\n      // Get accurate width of text\n      const width = ctx.measureText(this.text).width;\n\n      // Write superscript\n      if (this.superscript) {\n        ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n        ctx.fillText(this.superscript, x + width + 2, y - (height / 2.2));\n      }\n\n      // Write subscript\n      if (this.subscript) {\n        ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n        ctx.fillText(this.subscript, x + width + 2, y + (height / 2.2) - 1);\n      }\n\n      ctx.restore();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/textnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n// Co-author: Benjamin W. Bohl\n//\n// ## Description\n//\n// This file implements various types of clefs that can be rendered on a stave.\n//\n// See `tests/clef_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`.\nfunction L(...args) { if (Clef.DEBUG) Vex.L('Vex.Flow.Clef', args); }\n\nexport class Clef extends StaveModifier {\n  static get CATEGORY() { return 'clefs'; }\n\n  // Every clef name is associated with a glyph code from the font file\n  // and a default stave line number.\n  static get types() {\n    return {\n      'treble': {\n        code: 'v83',\n        line: 3,\n      },\n      'bass': {\n        code: 'v79',\n        line: 1,\n      },\n      'alto': {\n        code: 'vad',\n        line: 2,\n      },\n      'tenor': {\n        code: 'vad',\n        line: 1,\n      },\n      'percussion': {\n        code: 'v59',\n        line: 2,\n      },\n      'soprano': {\n        code: 'vad',\n        line: 4,\n      },\n      'mezzo-soprano': {\n        code: 'vad',\n        line: 3,\n      },\n      'baritone-c': {\n        code: 'vad',\n        line: 0,\n      },\n      'baritone-f': {\n        code: 'v79',\n        line: 2,\n      },\n      'subbass': {\n        code: 'v79',\n        line: 0,\n      },\n      'french': {\n        code: 'v83',\n        line: 4,\n      },\n      'tab': {\n        code: 'v2f',\n      },\n    };\n  }\n\n  // Sizes affect the point-size of the clef.\n  static get sizes() {\n    return {\n      'default': 40,\n      'small': 32,\n    };\n  }\n\n  // Annotations attach to clefs -- such as \"8\" for octave up or down.\n  static get annotations() {\n    return {\n      '8va': {\n        code: 'v8',\n        sizes: {\n          'default': {\n            point: 20,\n            attachments: {\n              'treble': {\n                line: -1.2,\n                x_shift: 11,\n              },\n            },\n          },\n          'small': {\n            point: 18,\n            attachments: {\n              'treble': {\n                line: -0.4,\n                x_shift: 8,\n              },\n            },\n          },\n        },\n      },\n      '8vb': {\n        code: 'v8',\n        sizes: {\n          'default': {\n            point: 20,\n            attachments: {\n              'treble': {\n                line: 6.3,\n                x_shift: 10,\n              },\n              'bass': {\n                line: 4,\n                x_shift: 1,\n              },\n            },\n          },\n          'small': {\n            point: 18,\n            attachments: {\n              'treble': {\n                line: 5.8,\n                x_shift: 6,\n              },\n              'bass': {\n                line: 3.5,\n                x_shift: 0.5,\n              },\n            },\n          },\n        },\n      },\n    };\n  }\n\n  // Create a new clef. The parameter `clef` must be a key from\n  // `Clef.types`.\n  constructor(type, size, annotation) {\n    super();\n    this.setAttribute('type', 'Clef');\n\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setType(type, size, annotation);\n    this.setWidth(this.glyph.getMetrics().width);\n    L('Creating clef:', type);\n  }\n\n  getCategory() { return Clef.CATEGORY; }\n\n  setType(type, size, annotation) {\n    this.type = type;\n    this.clef = Clef.types[type];\n    if (size === undefined) {\n      this.size = 'default';\n    } else {\n      this.size = size;\n    }\n    this.clef.point = Clef.sizes[this.size];\n    this.glyph = new Glyph(this.clef.code, this.clef.point);\n\n    // If an annotation, such as 8va, is specified, add it to the Clef object.\n    if (annotation !== undefined) {\n      const anno_dict = Clef.annotations[annotation];\n      this.annotation = {\n        code: anno_dict.code,\n        point: anno_dict.sizes[this.size].point,\n        line: anno_dict.sizes[this.size].attachments[this.type].line,\n        x_shift: anno_dict.sizes[this.size].attachments[this.type].x_shift,\n      };\n\n      this.attachment = new Glyph(this.annotation.code, this.annotation.point);\n      this.attachment.metrics.x_max = 0;\n      this.attachment.setXShift(this.annotation.x_shift);\n    } else {\n      this.annotation = undefined;\n    }\n\n    return this;\n  }\n\n  getWidth() {\n    if (this.type === 'tab' && !this.stave) {\n      throw new Vex.RERR('ClefError', \"Can't get width without stave.\");\n    }\n\n    return this.width;\n  }\n\n  setStave(stave) {\n    this.stave = stave;\n\n    if (this.type !== 'tab') return this;\n\n    let glyphScale;\n    let glyphOffset;\n    const numLines = this.stave.getOptions().num_lines;\n    switch (numLines) {\n      case 8:\n        glyphScale = 55;\n        glyphOffset = 14;\n        break;\n      case 7:\n        glyphScale = 47;\n        glyphOffset = 8;\n        break;\n      case 6:\n        glyphScale = 40;\n        glyphOffset = 1;\n        break;\n      case 5:\n        glyphScale = 30;\n        glyphOffset = -6;\n        break;\n      case 4:\n        glyphScale = 23;\n        glyphOffset = -12;\n        break;\n      default:\n        throw new Vex.RERR('ClefError', `Invalid number of lines: ${numLines}`);\n    }\n\n    this.glyph.setPoint(glyphScale);\n    this.glyph.setYShift(glyphOffset);\n\n    return this;\n  }\n\n  draw() {\n    if (!this.x) throw new Vex.RERR('ClefError', \"Can't draw clef without x.\");\n    if (!this.stave) throw new Vex.RERR('ClefError', \"Can't draw clef without stave.\");\n    this.setRendered();\n\n    this.glyph.setStave(this.stave);\n    this.glyph.setContext(this.stave.context);\n    if (this.clef.line !== undefined) {\n      this.placeGlyphOnLine(this.glyph, this.stave, this.clef.line);\n    }\n\n    this.glyph.renderToStave(this.x);\n\n    if (this.annotation !== undefined) {\n      this.placeGlyphOnLine(this.attachment, this.stave, this.annotation.line);\n      this.attachment.setStave(this.stave);\n      this.attachment.setContext(this.stave.context);\n      this.attachment.renderToStave(this.x);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/clef.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class KeySignature extends StaveModifier {\n  static get CATEGORY() { return 'keysignatures'; }\n\n  // Space between natural and following accidental depending\n  // on vertical position\n  static get accidentalSpacing() {\n    return {\n      '#': {\n        above: 6,\n        below: 4,\n      },\n      'b': {\n        above: 4,\n        below: 7,\n      },\n      'n': {\n        above: 4,\n        below: 1,\n      },\n      '##': {\n        above: 6,\n        below: 4,\n      },\n      'bb': {\n        above: 4,\n        below: 7,\n      },\n      'db': {\n        above: 4,\n        below: 7,\n      },\n      'd': {\n        above: 4,\n        below: 7,\n      },\n      'bbs': {\n        above: 4,\n        below: 7,\n      },\n      '++': {\n        above: 6,\n        below: 4,\n      },\n      '+': {\n        above: 6,\n        below: 4,\n      },\n      '+-': {\n        above: 6,\n        below: 4,\n      },\n      '++-': {\n        above: 6,\n        below: 4,\n      },\n      'bs': {\n        above: 4,\n        below: 10,\n      },\n      'bss': {\n        above: 4,\n        below: 10,\n      },\n    };\n  }\n\n  // Create a new Key Signature based on a `key_spec`\n  constructor(keySpec, cancelKeySpec, alterKeySpec) {\n    super();\n    this.setAttribute('type', 'KeySignature');\n\n    this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.glyphFontScale = 38; // TODO(0xFE): Should this match StaveNote?\n    this.glyphs = [];\n    this.xPositions = []; // relative to this.x\n    this.paddingForced = false;\n  }\n\n  getCategory() { return KeySignature.CATEGORY; }\n\n  // Add an accidental glyph to the `KeySignature` instance which represents\n  // the provided `acc`. If `nextAcc` is also provided, the appropriate\n  // spacing will be included in the glyph's position\n  convertToGlyph(acc, nextAcc) {\n    const accGlyphData = Flow.accidentalCodes(acc.type);\n    const glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n\n    // Determine spacing between current accidental and the next accidental\n    let extraWidth = 1;\n    if (acc.type === 'n' && nextAcc) {\n      const spacing = KeySignature.accidentalSpacing[nextAcc.type];\n      if (spacing) {\n        const isAbove = nextAcc.line >= acc.line;\n        extraWidth = isAbove ? spacing.above : spacing.below;\n      }\n    }\n\n    // Place the glyph on the stave\n    this.placeGlyphOnLine(glyph, this.stave, acc.line);\n    this.glyphs.push(glyph);\n\n    const xPosition = this.xPositions[this.xPositions.length - 1];\n    const glyphWidth = glyph.getMetrics().width + extraWidth;\n    // Store the next accidental's x position\n    this.xPositions.push(xPosition + glyphWidth);\n    // Expand size of key signature\n    this.width += glyphWidth;\n  }\n\n  // Cancel out a key signature provided in the `spec` parameter. This will\n  // place appropriate natural accidentals before the key signature.\n  cancelKey(spec) {\n    this.formatted = false;\n    this.cancelKeySpec = spec;\n\n    return this;\n  }\n\n  convertToCancelAccList(spec) {\n    // Get the accidental list for the cancelled key signature\n    const cancel_accList = Flow.keySignature(spec);\n\n    // If the cancelled key has a different accidental type, ie: # vs b\n    const different_types = this.accList.length > 0\n      && cancel_accList.length > 0\n      && cancel_accList[0].type !== this.accList[0].type;\n\n    // Determine how many naturals needed to add\n    const naturals = different_types\n      ? cancel_accList.length\n      : cancel_accList.length - this.accList.length;\n\n    // Return if no naturals needed\n    if (naturals < 1) return;\n\n    // Get the line position for each natural\n    const cancelled = [];\n    for (let i = 0; i < naturals; i++) {\n      let index = i;\n      if (!different_types) {\n        index = cancel_accList.length - naturals + i;\n      }\n\n      const acc = cancel_accList[index];\n      cancelled.push({ type: 'n', line: acc.line });\n    }\n\n    // Combine naturals with main accidental list for the key signature\n    this.accList = cancelled.concat(this.accList);\n  }\n\n  // Deprecated\n  addToStave(stave) {\n    this.paddingForced = true;\n    stave.addModifier(this);\n\n    return this;\n  }\n\n  // Apply the accidental staff line placement based on the `clef` and\n  // the  accidental `type` for the key signature ('# or 'b').\n  convertAccLines(clef, type) {\n    let offset = 0.0; // if clef === \"treble\"\n    let customLines; // when clef doesn't follow treble key sig shape\n\n    switch (clef) {\n      // Treble & Subbass both have offsets of 0, so are not included.\n      case 'soprano':\n        if (type === '#') customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n        else offset = -1;\n        break;\n      case 'mezzo-soprano':\n        if (type === 'b') customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n        else offset = 1.5;\n        break;\n      case 'alto':\n        offset = 0.5;\n        break;\n      case 'tenor':\n        if (type === '#') customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n        else offset = -0.5;\n        break;\n      case 'baritone-f':\n      case 'baritone-c':\n        if (type === 'b') customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n        else offset = 2;\n        break;\n      case 'bass':\n      case 'french':\n        offset = 1;\n        break;\n      default:\n        break;\n    }\n\n    // If there's a special case, assign those lines/spaces:\n    let i;\n    if (typeof customLines !== 'undefined') {\n      for (i = 0; i < this.accList.length; ++i) {\n        this.accList[i].line = customLines[i];\n      }\n    } else if (offset !== 0) {\n      for (i = 0; i < this.accList.length; ++i) {\n        this.accList[i].line += offset;\n      }\n    }\n  }\n\n  getPadding(index) {\n    if (!this.formatted) this.format();\n\n    return (\n      this.glyphs.length === 0 || (!this.paddingForced && index < 2) ?\n        0 : this.padding\n    );\n  }\n\n  getWidth() {\n    if (!this.formatted) this.format();\n\n    return this.width;\n  }\n\n  setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n    this.formatted = false;\n    this.keySpec = keySpec;\n    this.cancelKeySpec = cancelKeySpec;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  // Alter the accidentals of a key spec one by one.\n  // Each alteration is a new accidental that replaces the\n  // original accidental (or the canceled one).\n  alterKey(alterKeySpec) {\n    this.formatted = false;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  convertToAlterAccList(alterKeySpec) {\n    const max = Math.min(alterKeySpec.length, this.accList.length);\n    for (let i = 0; i < max; ++i) {\n      if (alterKeySpec[i]) {\n        this.accList[i].type = alterKeySpec[i];\n      }\n    }\n  }\n\n  format() {\n    if (!this.stave) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n    }\n\n    this.width = 0;\n    this.glyphs = [];\n    this.xPositions = [0]; // initialize with initial x position\n    this.accList = Flow.keySignature(this.keySpec);\n    if (this.cancelKeySpec) {\n      this.convertToCancelAccList(this.cancelKeySpec);\n    }\n    const firstAccidentalType = this.accList.length > 0 ? this.accList[0].type : null;\n    if (this.alterKeySpec) {\n      this.convertToAlterAccList(this.alterKeySpec);\n    }\n\n    if (this.accList.length > 0) {\n      this.convertAccLines(this.stave.clef, firstAccidentalType);\n      for (let i = 0; i < this.accList.length; ++i) {\n        this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n      }\n    }\n\n    this.formatted = true;\n  }\n\n  draw() {\n    if (!this.x) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n    }\n\n    if (!this.formatted) this.format();\n    this.setRendered();\n\n    for (let i = 0; i < this.glyphs.length; i++) {\n      const glyph = this.glyphs[i];\n      const x = this.x + this.xPositions[i];\n      glyph.setStave(this.stave);\n      glyph.setContext(this.stave.context);\n      glyph.renderToStave(x);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/keysignature.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\n\nimport { Vex } from './vex';\nimport { Glyph } from './glyph';\nimport { StaveModifier } from './stavemodifier';\n\nconst assertIsValidFraction = (timeSpec) => {\n  const numbers = timeSpec.split('/').filter(number => number !== '');\n\n  if (numbers.length !== 2) {\n    throw new Vex.RERR(\n      'BadTimeSignature',\n      `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`\n    );\n  }\n\n  numbers.forEach(number => {\n    if (isNaN(Number(number))) {\n      throw new Vex.RERR(\n        'BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain two valid numbers.`\n      );\n    }\n  });\n};\n\nexport class TimeSignature extends StaveModifier {\n  static get CATEGORY() { return 'timesignatures'; }\n\n  static get glyphs() {\n    return {\n      'C': {\n        code: 'v41',\n        point: 40,\n        line: 2,\n      },\n      'C|': {\n        code: 'vb6',\n        point: 40,\n        line: 2,\n      },\n    };\n  }\n\n  constructor(timeSpec = null, customPadding = 15) {\n    super();\n    this.setAttribute('type', 'TimeSignature');\n\n    if (timeSpec === null) return;\n\n    const padding = customPadding;\n\n    this.point = 40;\n    this.topLine = 2;\n    this.bottomLine = 4;\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setTimeSig(timeSpec);\n    this.setWidth(this.timeSig.glyph.getMetrics().width);\n    this.setPadding(padding);\n  }\n\n  getCategory() { return TimeSignature.CATEGORY; }\n\n  parseTimeSpec(timeSpec) {\n    if (timeSpec === 'C' || timeSpec === 'C|') {\n      const { line, code, point } = TimeSignature.glyphs[timeSpec];\n      return {\n        line,\n        num: false,\n        glyph: new Glyph(code, point),\n      };\n    }\n\n    assertIsValidFraction(timeSpec);\n\n    const [topDigits, botDigits] = timeSpec\n      .split('/')\n      .map(number => number.split(''));\n\n    return {\n      num: true,\n      glyph: this.makeTimeSignatureGlyph(topDigits, botDigits),\n    };\n  }\n\n  makeTimeSignatureGlyph(topDigits, botDigits) {\n    const glyph = new Glyph('v0', this.point);\n    glyph.topGlyphs = [];\n    glyph.botGlyphs = [];\n\n    let topWidth = 0;\n    for (let i = 0; i < topDigits.length; ++i) {\n      const num = topDigits[i];\n      const topGlyph = new Glyph('v' + num, this.point);\n\n      glyph.topGlyphs.push(topGlyph);\n      topWidth += topGlyph.getMetrics().width;\n    }\n\n    let botWidth = 0;\n    for (let i = 0; i < botDigits.length; ++i) {\n      const num = botDigits[i];\n      const botGlyph = new Glyph('v' + num, this.point);\n\n      glyph.botGlyphs.push(botGlyph);\n      botWidth += botGlyph.getMetrics().width;\n    }\n\n    const width = topWidth > botWidth ? topWidth : botWidth;\n    const xMin = glyph.getMetrics().x_min;\n\n    glyph.getMetrics = () => ({\n      x_min: xMin,\n      x_max: xMin + width,\n      width,\n    });\n\n    const topStartX = (width - topWidth) / 2.0;\n    const botStartX = (width - botWidth) / 2.0;\n\n    const that = this;\n    glyph.renderToStave = function renderToStave(x) {\n      let start_x = x + topStartX;\n      for (let i = 0; i < this.topGlyphs.length; ++i) {\n        const glyph = this.topGlyphs[i];\n        Glyph.renderOutline(\n          this.context,\n          glyph.metrics.outline,\n          glyph.scale,\n          start_x + glyph.x_shift,\n          this.stave.getYForLine(that.topLine) + 1\n        );\n        start_x += glyph.getMetrics().width;\n      }\n\n      start_x = x + botStartX;\n      for (let i = 0; i < this.botGlyphs.length; ++i) {\n        const glyph = this.botGlyphs[i];\n        that.placeGlyphOnLine(glyph, this.stave, glyph.line);\n        Glyph.renderOutline(\n          this.context,\n          glyph.metrics.outline,\n          glyph.scale,\n          start_x + glyph.x_shift,\n          this.stave.getYForLine(that.bottomLine) + 1\n        );\n        start_x += glyph.getMetrics().width;\n      }\n    };\n\n    return glyph;\n  }\n\n  getTimeSig() {\n    return this.timeSig;\n  }\n\n  setTimeSig(timeSpec) {\n    this.timeSig = this.parseTimeSpec(timeSpec);\n    return this;\n  }\n\n  draw() {\n    if (!this.x) {\n      throw new Vex.RERR('TimeSignatureError', \"Can't draw time signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new Vex.RERR('TimeSignatureError', \"Can't draw time signature without stave.\");\n    }\n\n    this.setRendered();\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setContext(this.stave.context);\n    this.placeGlyphOnLine(this.timeSig.glyph, this.stave, this.timeSig.line);\n    this.timeSig.glyph.renderToStave(this.x);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/timesignature.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\n\nexport class Volta extends StaveModifier {\n  static get CATEGORY() { return 'voltas'; }\n  static get type() {\n    return {\n      NONE: 1,\n      BEGIN: 2,\n      MID: 3,\n      END: 4,\n      BEGIN_END: 5,\n    };\n  }\n\n  constructor(type, number, x, y_shift) {\n    super();\n    this.setAttribute('type', 'Volta');\n    this.volta = type;\n    this.x = x;\n    this.y_shift = y_shift;\n    this.number = number;\n    this.font = {\n      family: 'sans-serif',\n      size: 9,\n      weight: 'bold',\n    };\n  }\n\n  getCategory() { return Volta.CATEGORY; }\n  setShiftY(y) { this.y_shift = y; return this; }\n\n  draw(stave, x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    let width = stave.width;\n    const top_y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    const vert_height = 1.5 * stave.options.spacing_between_lines_px;\n    switch (this.volta) {\n      case Volta.type.BEGIN:\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        break;\n      case Volta.type.END:\n        width -= 5;\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      case Volta.type.BEGIN_END:\n        width -= 3;\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      default:\n        break;\n    }\n      // If the beginning of a volta, draw measure number\n    if (this.volta === Volta.type.BEGIN || this.volta === Volta.type.BEGIN_END) {\n      ctx.save();\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n      ctx.restore();\n    }\n\n    ctx.fillRect(this.x + x, top_y, width, 1);\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavevolta.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Stave } from './stave';\n\nexport class TabStave extends Stave {\n  constructor(x, y, width, options) {\n    const tab_options = {\n      spacing_between_lines_px: 13,\n      num_lines: 6,\n      top_text_position: 1,\n    };\n\n    Vex.Merge(tab_options, options);\n    super(x, y, width, tab_options);\n    this.setAttribute('type', 'TabStave');\n  }\n\n  getYForGlyphs() {\n    return this.getYForLine(2.5);\n  }\n\n  // Deprecated\n  addTabGlyph() {\n    this.addClef('tab');\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tabstave.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.js` for usage examples\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Dot } from './dot';\nimport { Glyph } from './glyph';\n\n// Gets the unused strings grouped together if consecutive.\n//\n// Parameters:\n// * num_lines - The number of lines\n// * strings_used - An array of numbers representing which strings have fret positions\nfunction getUnusedStringGroups(num_lines, strings_used) {\n  const stem_through = [];\n  let group = [];\n  for (let string = 1; string <= num_lines; string++) {\n    const is_used = strings_used.indexOf(string) > -1;\n\n    if (!is_used) {\n      group.push(string);\n    } else {\n      stem_through.push(group);\n      group = [];\n    }\n  }\n  if (group.length > 0) stem_through.push(group);\n\n  return stem_through;\n}\n\n// Gets groups of points that outline the partial stem lines\n// between fret positions\n//\n// Parameters:\n// * stem_Y - The `y` coordinate the stem is located on\n// * unused_strings - An array of groups of unused strings\n// * stave - The stave to use for reference\n// * stem_direction - The direction of the stem\nfunction getPartialStemLines(stem_y, unused_strings, stave, stem_direction) {\n  const up_stem = stem_direction !== 1;\n  const down_stem = stem_direction !== -1;\n\n  const line_spacing = stave.getSpacingBetweenLines();\n  const total_lines = stave.getNumLines();\n\n  const stem_lines = [];\n\n  unused_strings.forEach(strings => {\n    const containsLastString = strings.indexOf(total_lines) > -1;\n    const containsFirstString =  strings.indexOf(1) > -1;\n\n    if ((up_stem && containsFirstString) ||\n       (down_stem && containsLastString)) {\n      return;\n    }\n\n    // If there's only one string in the group, push a duplicate value.\n    // We do this because we need 2 strings to convert into upper/lower y\n    // values.\n    if (strings.length === 1) {\n      strings.push(strings[0]);\n    }\n\n    const line_ys = [];\n    // Iterate through each group string and store it's y position\n    strings.forEach((string, index, strings) => {\n      const isTopBound = string === 1;\n      const isBottomBound = string === total_lines;\n\n      // Get the y value for the appropriate staff line,\n      // we adjust for a 0 index array, since string numbers are index 1\n      let y = stave.getYForLine(string - 1);\n\n      // Unless the string is the first or last, add padding to each side\n      // of the line\n      if (index === 0 && !isTopBound) {\n        y -= line_spacing / 2 - 1;\n      } else if (index === strings.length - 1 && !isBottomBound) {\n        y += line_spacing / 2 - 1;\n      }\n\n      // Store the y value\n      line_ys.push(y);\n\n      // Store a subsequent y value connecting this group to the main\n      // stem above/below the stave if it's the top/bottom string\n      if (stem_direction === 1 && isTopBound) {\n        line_ys.push(stem_y - 2);\n      } else if (stem_direction === -1 && isBottomBound) {\n        line_ys.push(stem_y + 2);\n      }\n    });\n\n    // Add the sorted y values to the\n    stem_lines.push(line_ys.sort((a, b) => a - b));\n  });\n\n  return stem_lines;\n}\n\nexport class TabNote extends StemmableNote {\n  static get CATEGORY() { return 'tabnotes'; }\n\n  // Initialize the TabNote with a `tab_struct` full of properties\n  // and whether to `draw_stem` when rendering the note\n  constructor(tab_struct, draw_stem) {\n    super(tab_struct);\n    this.setAttribute('type', 'TabNote');\n\n    this.ghost = false; // Renders parenthesis around notes\n    // Note properties\n    //\n    // The fret positions in the note. An array of `{ str: X, fret: X }`\n    this.positions = tab_struct.positions;\n\n    // Render Options\n    Vex.Merge(this.render_options, {\n      // font size for note heads and rests\n      glyph_font_scale: Flow.DEFAULT_TABLATURE_FONT_SCALE,\n      // Flag to draw a stem\n      draw_stem,\n      // Flag to draw dot modifiers\n      draw_dots: draw_stem,\n      // Flag to extend the main stem through the stave and fret positions\n      draw_stem_through_stave: false,\n      // vertical shift from stave line\n      y_shift: 0,\n      // normal glyph scale\n      scale: 1.0,\n      // default tablature font\n      font: '10pt Arial',\n    });\n\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `Invalid note initialization data (No glyph found): ${JSON.stringify(tab_struct)}`\n      );\n    }\n\n    this.buildStem();\n\n    if (tab_struct.stem_direction) {\n      this.setStemDirection(tab_struct.stem_direction);\n    } else {\n      this.setStemDirection(Stem.UP);\n    }\n\n    // Renders parenthesis around notes\n    this.ghost = false;\n    this.updateWidth();\n  }\n\n  reset() {\n    if (this.stave) this.setStave(this.stave);\n  }\n\n  // The ModifierContext category\n  getCategory() { return TabNote.CATEGORY; }\n\n  // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n  // Often used for indicating frets that are being bent to\n  setGhost(ghost) {\n    this.ghost = ghost;\n    this.updateWidth();\n    return this;\n  }\n\n  // Determine if the note has a stem\n  hasStem() { return this.render_options.draw_stem; }\n\n  // Get the default stem extension for the note\n  getStemExtension() {\n    const glyph = this.getGlyph();\n\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.tabnote_stem_up_extension\n        : glyph.tabnote_stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Add a dot to the note\n  addDot() {\n    const dot = new Dot();\n    this.dots += 1;\n    return this.addModifier(dot, 0);\n  }\n\n  // Calculate and store the width of the note\n  updateWidth() {\n    this.glyphs = [];\n    this.width = 0;\n    for (let i = 0; i < this.positions.length; ++i) {\n      let fret = this.positions[i].fret;\n      if (this.ghost) fret = '(' + fret + ')';\n      const glyph = Flow.tabToGlyph(fret, this.render_options.scale);\n      this.glyphs.push(glyph);\n      this.width = Math.max(glyph.getWidth(), this.width);\n    }\n    // For some reason we associate a notehead glyph with a TabNote, and this\n    // glyph is used for certain width calculations. Of course, this is totally\n    // incorrect since a notehead is a poor approximation for the dimensions of\n    // a fret number which can have multiple digits. As a result, we must\n    // overwrite getWidth() to return the correct width\n    this.glyph.getWidth = () => this.width;\n  }\n\n  // Set the `stave` to the note\n  setStave(stave) {\n    super.setStave(stave);\n    this.context = stave.context;\n\n    // Calculate the fret number width based on font used\n    let i;\n    if (this.context) {\n      const ctx = this.context;\n      this.width = 0;\n      for (i = 0; i < this.glyphs.length; ++i) {\n        const glyph = this.glyphs[i];\n        const text = '' + glyph.text;\n        if (text.toUpperCase() !== 'X') {\n          ctx.save();\n          ctx.setRawFont(this.render_options.font);\n          glyph.width = ctx.measureText(text).width;\n          ctx.restore();\n          glyph.getWidth = () => glyph.width;\n        }\n        this.width = Math.max(glyph.getWidth(), this.width);\n      }\n      this.glyph.getWidth = () => this.width;\n    }\n\n    // we subtract 1 from `line` because getYForLine expects a 0-based index,\n    // while the position.str is a 1-based index\n    const ys = this.positions.map(({ str: line }) => stave.getYForLine(line - 1));\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      this.stem.setYBounds(this.getStemY(), this.getStemY());\n    }\n\n    return this;\n  }\n\n  // Get the fret positions for the note\n  getPositions() { return this.positions; }\n\n  // Add self to the provided modifier context `mc`\n  addToModifierContext(mc) {\n    this.setModifierContext(mc);\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addModifier(this.modifiers[i]);\n    }\n    this.modifierContext.addModifier(this);\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Get the `x` coordinate to the right of the note\n  getTieRightX() {\n    let tieStartX = this.getAbsoluteX();\n    const note_glyph_width = this.glyph.getWidth();\n    tieStartX += note_glyph_width / 2;\n    tieStartX += (-this.width / 2) + this.width + 2;\n\n    return tieStartX;\n  }\n\n  // Get the `x` coordinate to the left of the note\n  getTieLeftX() {\n    let tieEndX = this.getAbsoluteX();\n    const note_glyph_width = this.glyph.getWidth();\n    tieEndX += note_glyph_width / 2;\n    tieEndX -= (this.width / 2) + 2;\n\n    return tieEndX;\n  }\n\n  // Get the default `x` and `y` coordinates for a modifier at a specific\n  // `position` at a fret position `index`\n  getModifierStartXY(position, index) {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    let x = 0;\n    if (position === Modifier.Position.LEFT) {\n      x = -1 * 2;  // extra_left_px\n    } else if (position === Modifier.Position.RIGHT) {\n      x = this.width + 2; // extra_right_px\n    } else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n      const note_glyph_width = this.glyph.getWidth();\n      x = note_glyph_width / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Get the default line for rest\n  getLineForRest() { return this.positions[0].str; }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return;\n    if (this.modifierContext) this.modifierContext.preFormat();\n    // width is already set during init()\n    this.setPreFormatted(true);\n  }\n\n  // Get the x position for the stem\n  getStemX() { return this.getCenterGlyphX(); }\n\n  // Get the y position for the stem\n  getStemY() {\n    const num_lines = this.stave.getNumLines();\n\n    // The decimal staff line amounts provide optimal spacing between the\n    // fret number and the stem\n    const stemUpLine = -0.5;\n    const stemDownLine = num_lines - 0.5;\n    const stemStartLine = Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n\n    return this.stave.getYForLine(stemStartLine);\n  }\n\n  // Get the stem extents for the tabnote\n  getStemExtents() {\n    return this.stem.getExtents();\n  }\n\n  // Draw the fal onto the context\n  drawFlag() {\n    const {\n      beam, glyph, context, stem, stem_direction,\n      render_options: { draw_stem, glyph_font_scale },\n    } = this;\n\n    const shouldDrawFlag = beam == null && draw_stem;\n\n    // Now it's the flag's turn.\n    if (glyph.flag && shouldDrawFlag) {\n      const flag_x = this.getStemX() + 1;\n      const flag_y = this.getStemY() - stem.getHeight();\n\n      const flag_code = stem_direction === Stem.DOWN\n        ? glyph.code_flag_downstem // Down stems have flags on the left.\n        : glyph.code_flag_upstem;\n\n      // Draw the Flag\n      Glyph.renderGlyph(context, flag_x, flag_y, glyph_font_scale, flag_code);\n    }\n  }\n\n  // Render the modifiers onto the context\n  drawModifiers() {\n    // Draw the modifiers\n    this.modifiers.forEach((modifier) => {\n      // Only draw the dots if enabled\n      if (modifier.getCategory() === 'dots' && !this.render_options.draw_dots) return;\n\n      modifier.setContext(this.context);\n      modifier.draw();\n    });\n  }\n\n  // Render the stem extension through the fret positions\n  drawStemThrough() {\n    const stem_x = this.getStemX();\n    const stem_y = this.getStemY();\n    const ctx = this.context;\n\n    const stem_through = this.render_options.draw_stem_through_stave;\n    const draw_stem = this.render_options.draw_stem;\n    if (draw_stem && stem_through) {\n      const total_lines = this.stave.getNumLines();\n      const strings_used = this.positions.map(position => position.str);\n\n      const unused_strings = getUnusedStringGroups(total_lines, strings_used);\n      const stem_lines = getPartialStemLines(\n        stem_y,\n        unused_strings,\n        this.getStave(),\n        this.getStemDirection()\n      );\n\n      ctx.save();\n      ctx.setLineWidth(Stem.WIDTH);\n      stem_lines.forEach(bounds => {\n        if (bounds.length === 0) return;\n\n        ctx.beginPath();\n        ctx.moveTo(stem_x, bounds[0]);\n        ctx.lineTo(stem_x, bounds[bounds.length - 1]);\n        ctx.stroke();\n        ctx.closePath();\n      });\n      ctx.restore();\n    }\n  }\n\n  // Render the fret positions onto the context\n  drawPositions() {\n    const ctx = this.context;\n    const x = this.getAbsoluteX();\n    const ys = this.ys;\n    for (let i = 0; i < this.positions.length; ++i) {\n      const y = ys[i] + this.render_options.y_shift;\n      const glyph = this.glyphs[i];\n\n      // Center the fret text beneath the notation note head\n      const note_glyph_width = this.glyph.getWidth();\n      const tab_x = x + (note_glyph_width / 2) - (glyph.getWidth() / 2);\n\n      // FIXME: Magic numbers.\n      ctx.clearRect(tab_x - 2, y - 3, glyph.getWidth() + 4, 6);\n\n      if (glyph.code) {\n        Glyph.renderGlyph(ctx, tab_x, y,\n          this.render_options.glyph_font_scale * this.render_options.scale,\n          glyph.code);\n      } else {\n        ctx.save();\n        ctx.setRawFont(this.render_options.font);\n        const text = glyph.text.toString();\n        ctx.fillText(text, tab_x, y + 5 * this.render_options.scale);\n        ctx.restore();\n      }\n    }\n  }\n\n  // The main rendering function for the entire note\n  draw() {\n    this.checkContext();\n\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    this.setRendered();\n    const render_stem = this.beam == null && this.render_options.draw_stem;\n\n    this.drawPositions();\n    this.drawStemThrough();\n\n    const stem_x = this.getStemX();\n\n    this.stem.setNoteHeadXBounds(stem_x, stem_x);\n\n    if (render_stem) {\n      this.context.openGroup('stem', null, { pointerBBox: true });\n      this.stem.setContext(this.context).draw();\n      this.context.closeGroup();\n    }\n\n    this.drawFlag();\n    this.drawModifiers();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tabnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Balazs Forian-Szabo\n//\n// ## Description\n//\n// This file implements `VibratoBrackets`\n// that renders vibrato effect between two notes.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Vibrato } from './vibrato';\n\n// To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`.\nfunction L(...args) { if (VibratoBracket.DEBUG) Vex.L('Vex.Flow.VibratoBracket', args); }\n\nexport class VibratoBracket extends Element {\n\n  // bracket_data = {\n  //   start: Vex.Flow.Note (optional)\n  //   stop: Vex.Flow.Note (optional)\n  // };\n  // Either the stop or start note must be set, or both of them.\n  // A null value for the start or stop note indicates that the vibrato\n  // is drawn from the beginning or until the end of the stave accordingly.\n  constructor(bracket_data) {\n    super();\n    this.setAttribute('type', 'VibratoBracket');\n\n    this.start = bracket_data.start;\n    this.stop = bracket_data.stop;\n\n    this.line = 1;\n\n    this.render_options = {\n      harsh: false,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n  }\n\n  // Set line position of the vibrato bracket\n  setLine(line) { this.line = line; return this; }\n  setHarsh(harsh) { this.render_options.harsh = harsh; return this; }\n\n  // Draw the vibrato bracket on the rendering context\n  draw() {\n    const ctx = this.context;\n    this.setRendered();\n\n    const y = (this.start)\n      ? this.start.getStave().getYForTopText(this.line)\n      : this.stop.getStave().getYForTopText(this.line);\n\n    // If start note is not set then vibrato will be drawn\n    // from the beginning of the stave\n    const start_x = (this.start)\n      ? this.start.getAbsoluteX()\n      : this.stop.getStave().getTieStartX();\n\n      // If stop note is not set then vibrato will be drawn\n      // until the end of the stave\n    const stop_x = (this.stop)\n      ? this.stop.getAbsoluteX() - this.stop.getWidth() - 5\n      : this.start.getStave().getTieEndX() - 10;\n\n    this.render_options.vibrato_width = stop_x - start_x;\n\n    L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n\n    Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/vibratobracket.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Copyright Mohit Muthanna 2010\n//\n// Author Taehoon Moon 2014\n\nimport { Vex } from './vex';\nimport { BoundingBox } from './boundingbox';\nimport { Note } from './note';\nimport { Clef } from './clef';\nimport { Glyph } from './glyph';\n\n/** @constructor */\nexport class ClefNote extends Note {\n  static get CATEGORY() { return 'clefnote'; }\n\n  constructor(type, size, annotation) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'ClefNote');\n\n    this.setType(type, size, annotation);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  setType(type, size, annotation) {\n    this.type = type;\n    this.clef_obj = new Clef(type, size, annotation);\n    this.clef = this.clef_obj.clef;\n    this.glyph = new Glyph(this.clef.code, this.clef.point);\n    this.setWidth(this.glyph.getMetrics().width);\n    return this;\n  }\n\n  getClef() {\n    return this.clef;\n  }\n\n  setContext(context) {\n    this.context = context;\n    this.glyph.setContext(this.context);\n    return this;\n  }\n\n  getBoundingBox() {\n    return new BoundingBox(0, 0, 0, 0);\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  getCategory() { return ClefNote.CATEGORY; }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\n    if (!this.glyph.getContext()) {\n      this.glyph.setContext(this.context);\n    }\n\n    this.setRendered();\n    const abs_x = this.getAbsoluteX();\n\n    this.glyph.setStave(this.stave);\n    this.glyph.setYShift(\n      this.stave.getYForLine(this.clef.line) - this.stave.getYForGlyphs());\n    this.glyph.renderToStave(abs_x);\n\n    // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n    if (this.clef_obj.annotation !== undefined) {\n      const attachment = new Glyph(this.clef_obj.annotation.code, this.clef_obj.annotation.point);\n      if (!attachment.getContext()) {\n        attachment.setContext(this.context);\n      }\n      attachment.setStave(this.stave);\n      attachment.setYShift(\n        this.stave.getYForLine(this.clef_obj.annotation.line) - this.stave.getYForGlyphs());\n      attachment.setXShift(this.clef_obj.annotation.x_shift);\n      attachment.renderToStave(abs_x);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/clefnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { BoundingBox } from './boundingbox';\nimport { Note } from './note';\nimport { TimeSignature } from './timesignature';\n\nexport class TimeSigNote extends Note {\n  constructor(timeSpec, customPadding) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'TimeSigNote');\n\n    const timeSignature = new TimeSignature(timeSpec, customPadding);\n    this.timeSig = timeSignature.getTimeSig();\n    this.setWidth(this.timeSig.glyph.getMetrics().width);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  getBoundingBox() {\n    return new BoundingBox(0, 0, 0, 0);\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    this.stave.checkContext();\n    this.setRendered();\n\n    if (!this.timeSig.glyph.getContext()) {\n      this.timeSig.glyph.setContext(this.context);\n    }\n\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setYShift(\n      this.stave.getYForLine(this.timeSig.line) - this.stave.getYForGlyphs());\n    this.timeSig.glyph.renderToStave(this.getAbsoluteX());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/timesignote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { Vex } from './vex';\nimport { TabTie } from './tabtie';\n\nexport class TabSlide extends TabTie {\n  static get SLIDE_UP() {\n    return 1;\n  }\n  static get SLIDE_DOWN() {\n    return -1;\n  }\n\n  static createSlideUp(notes) {\n    return new TabSlide(notes, TabSlide.SLIDE_UP);\n  }\n\n  static createSlideDown(notes) {\n    return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n  }\n\n  constructor(notes, direction) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super(notes, 'sl.');\n    this.setAttribute('type', 'TabSlide');\n\n    if (!direction) {\n      const first_fret = notes.first_note.getPositions()[0].fret;\n      const last_fret = notes.last_note.getPositions()[0].fret;\n\n      direction = ((parseInt(first_fret, 10) > parseInt(last_fret, 10)) ?\n        TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP);\n    }\n\n    this.slide_direction = direction;\n    this.render_options.cp1 = 11;\n    this.render_options.cp2 = 14;\n    this.render_options.y_shift = 0.5;\n\n    this.setFont({ font: 'Times', size: 10, style: 'bold italic' });\n    this.setNotes(notes);\n  }\n\n  renderTie(params) {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.context;\n    const first_x_px = params.first_x_px;\n    const first_ys = params.first_ys;\n    const last_x_px = params.last_x_px;\n\n    const direction = this.slide_direction;\n    if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n      throw new Vex.RERR('BadSlide', 'Invalid slide direction');\n    }\n\n    for (let i = 0; i < this.first_indices.length; ++i) {\n      const slide_y = first_ys[this.first_indices[i]] +\n        this.render_options.y_shift;\n\n      if (isNaN(slide_y)) {\n        throw new Vex.RERR('BadArguments', 'Bad indices for slide rendering.');\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(first_x_px, slide_y + (3 * direction));\n      ctx.lineTo(last_x_px, slide_y - (3 * direction));\n      ctx.closePath();\n      ctx.stroke();\n    }\n\n    this.setRendered();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tabslide.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { StaveNote } from './stavenote';\nimport { Flow } from './tables';\n\nexport class GraceNote extends StaveNote {\n  static get CATEGORY() { return 'gracenotes'; }\n  static get LEDGER_LINE_OFFSET() { return 2; }\n  static get SCALE() { return 0.66; }\n\n  constructor(note_struct) {\n    super(Object.assign(note_struct, {\n      glyph_font_scale: Flow.DEFAULT_NOTATION_FONT_SCALE * GraceNote.SCALE,\n      stroke_px: GraceNote.LEDGER_LINE_OFFSET,\n    }));\n    this.setAttribute('type', 'GraceNote');\n\n    this.slash = note_struct.slash;\n    this.slur = true;\n\n    this.buildNoteHeads();\n\n    this.width = 3;\n  }\n\n  getStemExtension() {\n    const glyph = this.getGlyph();\n\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.gracenote_stem_up_extension\n        : glyph.gracenote_stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  getCategory() { return GraceNote.CATEGORY; }\n\n  draw() {\n    super.draw();\n    this.setRendered();\n    const ctx = this.context;\n    const stem_direction = this.getStemDirection();\n\n    if (this.slash) {\n      ctx.beginPath();\n\n      let x = this.getAbsoluteX();\n      let y = this.getYs()[0] - (this.stem.getHeight() / 2.8);\n      if (stem_direction === 1) {\n        x += 1;\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + 13, y - 9);\n      } else if (stem_direction === -1) {\n        x -= 4;\n        y += 1;\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + 13, y + 9);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/gracenote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Balazs Forian-Szabo\n//\n// ## Description\n//\n// A basic implementation of grace notes\n// to be rendered on a tab stave.\n//\n// See `tests/gracetabnote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { TabNote } from './tabnote';\n\nexport class GraceTabNote extends TabNote {\n  static get CATEGORY() { return 'gracetabnotes'; }\n\n  constructor(note_struct) {\n    super(note_struct, false);\n    this.setAttribute('type', 'GraceTabNote');\n\n    Vex.Merge(this.render_options, {\n      // vertical shift from stave line\n      y_shift: 0.3,\n      // grace glyph scale\n      scale: 0.6,\n      // grace tablature font\n      font: '7.5pt Arial',\n    });\n\n    this.updateWidth();\n  }\n\n  getCategory() { return GraceTabNote.CATEGORY; }\n\n  draw() {\n    super.draw();\n    this.setRendered();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/gracetabnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of tunings for tablature.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\n\nexport class Tuning {\n  static get names() {\n    return {\n      'standard': 'E/5,B/4,G/4,D/4,A/3,E/3',\n      'dagdad': 'D/5,A/4,G/4,D/4,A/3,D/3',\n      'dropd': 'E/5,B/4,G/4,D/4,A/3,D/3',\n      'eb': 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n      'standardBanjo': 'D/5,B/4,G/4,D/4,G/5',\n    };\n  }\n\n  constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n    // Default to standard tuning.\n    this.setTuning(tuningString);\n  }\n\n  noteToInteger(noteString) {\n    return Flow.keyProperties(noteString).int_value;\n  }\n\n  setTuning(noteString) {\n    if (Tuning.names[noteString]) {\n      noteString = Tuning.names[noteString];\n    }\n\n    this.tuningString = noteString;\n    this.tuningValues = [];\n    this.numStrings = 0;\n\n    const keys = noteString.split(/\\s*,\\s*/);\n    if (keys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'Invalid tuning string: ' + noteString);\n    }\n\n    this.numStrings = keys.length;\n    for (let i = 0; i < this.numStrings; ++i) {\n      this.tuningValues[i] = this.noteToInteger(keys[i]);\n    }\n  }\n\n  getValueForString(stringNum) {\n    const s = parseInt(stringNum, 10);\n    if (s < 1 || s > this.numStrings) {\n      throw new Vex.RERR(\n        'BadArguments', `String number must be between 1 and ${this.numStrings}:${stringNum}`\n      );\n    }\n\n    return this.tuningValues[s - 1];\n  }\n\n  getValueForFret(fretNum, stringNum) {\n    const stringValue = this.getValueForString(stringNum);\n    const f = parseInt(fretNum, 10);\n\n    if (f < 0) {\n      throw new Vex.RERR('BadArguments', 'Fret number must be 0 or higher: ' +\n          fretNum);\n    }\n\n    return stringValue + f;\n  }\n\n  getNoteForFret(fretNum, stringNum) {\n    const noteValue = this.getValueForFret(fretNum, stringNum);\n\n    const octave = Math.floor(noteValue / 12);\n    const value = noteValue % 12;\n\n    return Flow.integerToNote(value) + '/' + octave;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tuning.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements diatonic key management.\n\nimport { Vex } from './vex';\nimport { Music } from './music';\n\nexport class KeyManager {\n  constructor(key) {\n    this.music = new Music();\n    this.setKey(key);\n  }\n\n  setKey(key) {\n    this.key = key;\n    this.reset();\n    return this;\n  }\n\n  getKey() { return this.key; }\n\n  reset() {\n    this.keyParts = this.music.getKeyParts(this.key);\n\n    this.keyString = this.keyParts.root;\n    if (this.keyParts.accidental) this.keyString += this.keyParts.accidental;\n\n    const is_supported_type = Music.scaleTypes[this.keyParts.type];\n    if (!is_supported_type) {\n      throw new Vex.RERR('BadArguments', `Unsupported key type: ${this.key}`);\n    }\n\n    this.scale = this.music.getScaleTones(\n      this.music.getNoteValue(this.keyString),\n      Music.scaleTypes[this.keyParts.type]\n    );\n\n    this.scaleMap = {};\n    this.scaleMapByValue = {};\n    this.originalScaleMapByValue = {};\n\n    const noteLocation = Music.root_indices[this.keyParts.root];\n\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n\n      const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n      this.scaleMap[rootName] = noteName;\n      this.scaleMapByValue[this.scale[i]] = noteName;\n      this.originalScaleMapByValue[this.scale[i]] = noteName;\n    }\n\n    return this;\n  }\n\n  getAccidental(key) {\n    const root = this.music.getKeyParts(key).root;\n    const parts = this.music.getNoteParts(this.scaleMap[root]);\n\n    return {\n      note: this.scaleMap[root],\n      accidental: parts.accidental,\n    };\n  }\n\n  selectNote(note) {\n    note = note.toLowerCase();\n    const parts = this.music.getNoteParts(note);\n\n    // First look for matching note in our altered scale\n    const scaleNote = this.scaleMap[parts.root];\n    const modparts = this.music.getNoteParts(scaleNote);\n\n    if (scaleNote === note) {\n      return {\n        'note': scaleNote,\n        'accidental': parts.accidental,\n        'change': false,\n      };\n    }\n\n    // Then search for a note of equivalent value in our altered scale\n    const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n    if (valueNote != null) {\n      return {\n        'note': valueNote,\n        'accidental': this.music.getNoteParts(valueNote).accidental,\n        'change': false,\n      };\n    }\n\n    // Then search for a note of equivalent value in the original scale\n    const originalValueNote = this.originalScaleMapByValue[\n      this.music.getNoteValue(note)];\n    if (originalValueNote != null) {\n      this.scaleMap[modparts.root] = originalValueNote;\n      delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n      this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n      return {\n        'note': originalValueNote,\n        'accidental': this.music.getNoteParts(originalValueNote).accidental,\n        'change': true,\n      };\n    }\n\n    // Then try to unmodify a currently modified note.\n    if (modparts.root === note) {\n      delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n      this.scaleMapByValue[this.music.getNoteValue(modparts.root)] =  modparts.root;\n      this.scaleMap[modparts.root] = modparts.root;\n      return {\n        'note': modparts.root,\n        'accidental': null,\n        'change': true,\n      };\n    }\n\n    // Last resort -- shitshoot\n    delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n    this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n\n    delete this.scaleMap[modparts.root];\n    this.scaleMap[modparts.root] = note;\n\n    return {\n      note,\n      'accidental': parts.accidental,\n      'change': true,\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/keymanager.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class by Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either Crescendo or Descrescendo.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Modifier } from './modifier';\n\nexport class StaveHairpin extends Element {\n  static get type() {\n    return {\n      CRESC: 1,\n      DECRESC: 2,\n    };\n  }\n\n  /* Helper function to convert ticks into pixels.\n   * Requires a Formatter with voices joined and formatted (to\n   * get pixels per tick)\n   *\n   * options is struct that has:\n   *\n   *  {\n   *   height: px,\n   *   y_shift: px, //vertical offset\n   *   left_shift_ticks: 0, //left horizontal offset expressed in ticks\n   *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n   *  }\n   *\n   **/\n  static FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n    const ppt = formatter.pixelsPerTick;\n\n    if (ppt == null) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        'A valid Formatter must be provide to draw offsets by ticks.'\n      );\n    }\n\n    const l_shift_px = ppt * options.left_shift_ticks;\n    const r_shift_px = ppt * options.right_shift_ticks;\n\n    const hairpin_options = {\n      height: options.height,\n      y_shift: options.y_shift,\n      left_shift_px: l_shift_px,\n      right_shift_px: r_shift_px };\n\n    new StaveHairpin({\n      first_note: notes.first_note,\n      last_note: notes.last_note,\n    }, type)\n      .setContext(ctx)\n      .setRenderOptions(hairpin_options)\n      .setPosition(position)\n      .draw();\n  }\n\n  /**\n   * Create a new hairpin from the specified notes.\n   *\n   * @constructor\n   * @param {!Object} notes The notes to tie up.\n   * @param {!Object} type The type of hairpin\n   */\n  constructor(notes, type) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveHairpin');\n    this.notes = notes;\n    this.hairpin = type;\n    this.position = Modifier.Position.BELOW;\n\n    this.render_options = {\n      height: 10,\n      y_shift: 0, // vertical offset\n      left_shift_px: 0, // left horizontal offset\n      right_shift_px: 0, // right horizontal offset\n    };\n\n    this.setNotes(notes);\n  }\n\n  setPosition(position) {\n    if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n      this.position = position;\n    }\n    return this;\n  }\n\n  setRenderOptions(options) {\n    if (\n      options.height != null &&\n      options.y_shift != null &&\n      options.left_shift_px != null &&\n      options.right_shift_px != null\n    ) {\n      this.render_options = options;\n    }\n    return this;\n  }\n\n  /**\n   * Set the notes to attach this hairpin to.\n   *\n   * @param {!Object} notes The start and end notes.\n   */\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        'Hairpin needs to have either first_note or last_note set.'\n      );\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.last_note = notes.last_note;\n    return this;\n  }\n\n  renderHairpin(params) {\n    const ctx = this.checkContext();\n    let dis = this.render_options.y_shift + 20;\n    let y_shift = params.first_y;\n\n    if (this.position === Modifier.Position.ABOVE) {\n      dis = -dis + 30;\n      y_shift = params.first_y - params.staff_height;\n    }\n\n    const l_shift = this.render_options.left_shift_px;\n    const r_shift = this.render_options.right_shift_px;\n\n    ctx.beginPath();\n\n    switch (this.hairpin) {\n      case StaveHairpin.type.CRESC:\n        ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + (this.render_options.height / 2) + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n        break;\n      case StaveHairpin.type.DECRESC:\n        ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + (this.render_options.height / 2) + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const firstNote = this.first_note;\n    const lastNote = this.last_note;\n\n    const start = firstNote.getModifierStartXY(this.position, 0);\n    const end = lastNote.getModifierStartXY(this.position, 0);\n\n    this.renderHairpin({\n      first_x: start.x,\n      last_x: end.x,\n      first_y: firstNote.getStave().y + firstNote.getStave().height,\n      last_y: lastNote.getStave().y + lastNote.getStave().height,\n      staff_height: firstNote.getStave().height,\n    });\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavehairpin.js","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements curves (for slurs)\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\nexport class Curve extends Element {\n  static get Position() {\n    return {\n      NEAR_HEAD: 1,\n      NEAR_TOP: 2,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      nearHead: Curve.Position.NEAR_HEAD,\n      nearTop: Curve.Position.NEAR_TOP,\n    };\n  }\n\n  // from: Start note\n  // to: End note\n  // options:\n  //    cps: List of control points\n  //    x_shift: pixels to shift\n  //    y_shift: pixels to shift\n  constructor(from, to, options) {\n    super();\n    this.setAttribute('type', 'Curve');\n\n    this.render_options = {\n      spacing: 2,\n      thickness: 2,\n      x_shift: 0,\n      y_shift: 10,\n      position: Curve.Position.NEAR_HEAD,\n      position_end: Curve.Position.NEAR_HEAD,\n      invert: false,\n      cps: [{ x: 0, y: 10 }, { x: 0, y: 10 }],\n    };\n\n    Vex.Merge(this.render_options, options);\n    this.setNotes(from, to);\n  }\n\n  setNotes(from, to) {\n    if (!from && !to) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Curve needs to have either first_note or last_note set.'\n      );\n    }\n\n    this.from = from;\n    this.to = to;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial() {\n    return (!this.from || !this.to);\n  }\n\n  renderCurve(params) {\n    const ctx = this.context;\n    const cps = this.render_options.cps;\n\n    const x_shift = this.render_options.x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    const first_x = params.first_x + x_shift;\n    const first_y = params.first_y + y_shift;\n    const last_x = params.last_x - x_shift;\n    const last_y = params.last_y + y_shift;\n    const thickness = this.render_options.thickness;\n\n    const cp_spacing = (last_x - first_x) / (cps.length + 2);\n\n    ctx.beginPath();\n    ctx.moveTo(first_x, first_y);\n    ctx.bezierCurveTo(\n      first_x + cp_spacing + cps[0].x,\n      first_y + (cps[0].y * params.direction),\n      last_x - cp_spacing + cps[1].x,\n      last_y + (cps[1].y * params.direction),\n      last_x,\n      last_y\n    );\n    ctx.bezierCurveTo(\n      last_x - cp_spacing + cps[1].x,\n      last_y + ((cps[1].y + thickness) * params.direction),\n      first_x + cp_spacing + cps[0].x,\n      first_y + ((cps[0].y + thickness) * params.direction),\n      first_x,\n      first_y\n    );\n    ctx.stroke();\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.from;\n    const last_note = this.to;\n    let first_x;\n    let last_x;\n    let first_y;\n    let last_y;\n    let stem_direction;\n\n    let metric = 'baseY';\n    let end_metric = 'baseY';\n\n    function getPosition(position) {\n      return typeof(position) === 'string'\n        ? Curve.PositionString[position]\n        : position;\n    }\n    const position = getPosition(this.render_options.position);\n    const position_end = getPosition(this.render_options.position_end);\n\n    if (position === Curve.Position.NEAR_TOP) {\n      metric = 'topY';\n      end_metric = 'topY';\n    }\n\n    if (position_end === Curve.Position.NEAR_HEAD) {\n      end_metric = 'baseY';\n    } else if (position_end === Curve.Position.NEAR_TOP) {\n      end_metric = 'topY';\n    }\n\n    if (first_note) {\n      first_x = first_note.getTieRightX();\n      stem_direction = first_note.getStemDirection();\n      first_y = first_note.getStemExtents()[metric];\n    } else {\n      first_x = last_note.getStave().getTieStartX();\n      first_y = last_note.getStemExtents()[metric];\n    }\n\n    if (last_note) {\n      last_x = last_note.getTieLeftX();\n      stem_direction = last_note.getStemDirection();\n      last_y = last_note.getStemExtents()[end_metric];\n    } else {\n      last_x = first_note.getStave().getTieEndX();\n      last_y = first_note.getStemExtents()[end_metric];\n    }\n\n    this.renderCurve({\n      first_x,\n      last_x,\n      first_y,\n      last_y,\n      direction: stem_direction * (this.render_options.invert === true ? -1 : 1),\n    });\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/curve.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `TextDynamics` which renders traditional\n// text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n//\n// You can render any dynamics string that contains a combination of\n// the following letters:  P, M, F, Z, R, S\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`.\nfunction L(...args) { if (TextDynamics.DEBUG) Vex.L('Vex.Flow.TextDynamics', args); }\n\nexport class TextDynamics extends Note {\n  // The glyph data for each dynamics letter\n  static get GLYPHS() {\n    return {\n      'f': {\n        code: 'vba',\n        width: 12,\n      },\n      'p': {\n        code: 'vbf',\n        width: 14,\n      },\n      'm': {\n        code: 'v62',\n        width: 17,\n      },\n      's': {\n        code: 'v4a',\n        width: 10,\n      },\n      'z': {\n        code: 'v80',\n        width: 12,\n      },\n      'r': {\n        code: 'vb1',\n        width: 12,\n      },\n    };\n  }\n\n  // A `TextDynamics` object inherits from `Note` so that it can be formatted\n  // within a `Voice`.\n  // Create the dynamics marking. `text_struct` is an object\n  // that contains a `duration` property and a `sequence` of\n  // letters that represents the letters to render\n  constructor(text_struct) {\n    super(text_struct);\n    this.setAttribute('type', 'TextDynamics');\n\n    this.sequence = text_struct.text.toLowerCase();\n    this.line = text_struct.line || 0;\n    this.glyphs = [];\n\n    Vex.Merge(this.render_options, {\n      glyph_font_size: 40,\n    });\n\n    L('New Dynamics Text: ', this.sequence);\n  }\n\n  // Set the Stave line on which the note should be placed\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n\n  // Preformat the dynamics text\n  preFormat() {\n    let total_width = 0;\n    // Iterate through each letter\n    this.sequence.split('').forEach(letter => {\n      // Get the glyph data for the letter\n      const glyph_data = TextDynamics.GLYPHS[letter];\n      if (!glyph_data) throw new Vex.RERR('Invalid dynamics character: ' + letter);\n\n      const size =  this.render_options.glyph_font_size;\n      const glyph = new Glyph(glyph_data.code, size);\n\n      // Add the glyph\n      this.glyphs.push(glyph);\n\n      total_width += glyph_data.width;\n    });\n\n    // Store the width of the text\n    this.setWidth(total_width);\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Draw the dynamics text on the rendering context\n  draw() {\n    this.setRendered();\n    const x = this.getAbsoluteX();\n    const y = this.stave.getYForLine(this.line + (-3));\n\n    L('Rendering Dynamics: ', this.sequence);\n\n    let letter_x = x;\n    this.glyphs.forEach((glyph, index) => {\n      const current_letter = this.sequence[index];\n      glyph.render(this.context, letter_x, y);\n      letter_x += TextDynamics.GLYPHS[current_letter].width;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/textdynamics.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `render_options`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\n\n// Attribution: Arrow rendering implementations based off of\n// Patrick Horgan's article, \"Drawing lines and arcs with\n// arrow heads on  HTML5 Canvas\"\n//\n// Draw an arrow head that connects between 3 coordinates\nfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n  // all cases do this.\n  ctx.beginPath();\n  ctx.moveTo(x0, y0);\n  ctx.lineTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.lineTo(x0, y0);\n  ctx.closePath();\n\n  ctx.fill();\n}\n\n// Helper function to draw a line with arrow heads\nfunction drawArrowLine(ctx, point1, point2, config) {\n  const both_arrows = config.draw_start_arrow && config.draw_end_arrow;\n\n  const x1 = point1.x;\n  const y1 = point1.y;\n  const x2 = point2.x;\n  const y2 = point2.y;\n\n  // For ends with arrow we actually want to stop before we get to the arrow\n  // so that wide lines won't put a flat end on the arrow.\n  const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  const ratio = (distance - config.arrowhead_length / 3) / distance;\n  let end_x;\n  let end_y;\n  let start_x;\n  let start_y;\n  if (config.draw_end_arrow || both_arrows) {\n    end_x = Math.round(x1 + (x2 - x1) * ratio);\n    end_y = Math.round(y1 + (y2 - y1) * ratio);\n  } else {\n    end_x = x2;\n    end_y = y2;\n  }\n\n  if (config.draw_start_arrow || both_arrows) {\n    start_x = x1 + (x2 - x1) * (1 - ratio);\n    start_y = y1 + (y2 - y1) * (1 - ratio);\n  } else {\n    start_x = x1;\n    start_y = y1;\n  }\n\n  if (config.color) {\n    ctx.setStrokeStyle(config.color);\n    ctx.setFillStyle(config.color);\n  }\n\n  // Draw the shaft of the arrow\n  ctx.beginPath();\n  ctx.moveTo(start_x, start_y);\n  ctx.lineTo(end_x, end_y);\n  ctx.stroke();\n  ctx.closePath();\n\n  // calculate the angle of the line\n  const line_angle = Math.atan2(y2 - y1, x2 - x1);\n  // h is the line length of a side of the arrow head\n  const h = Math.abs(config.arrowhead_length / Math.cos(config.arrowhead_angle));\n\n  let angle1;\n  let angle2;\n  let top_x;\n  let top_y;\n  let bottom_x;\n  let bottom_y;\n\n  if (config.draw_end_arrow || both_arrows) {\n    angle1 = line_angle + Math.PI + config.arrowhead_angle;\n    top_x = x2 + Math.cos(angle1) * h;\n    top_y = y2 + Math.sin(angle1) * h;\n\n    angle2 = line_angle + Math.PI - config.arrowhead_angle;\n    bottom_x = x2 + Math.cos(angle2) * h;\n    bottom_y = y2 + Math.sin(angle2) * h;\n\n    drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n  }\n\n  if (config.draw_start_arrow || both_arrows) {\n    angle1 = line_angle + config.arrowhead_angle;\n    top_x = x1 + Math.cos(angle1) * h;\n    top_y = y1 + Math.sin(angle1) * h;\n\n    angle2 = line_angle - config.arrowhead_angle;\n    bottom_x = x1 + Math.cos(angle2) * h;\n    bottom_y = y1 + Math.sin(angle2) * h;\n\n    drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n  }\n}\n\nexport class StaveLine extends Element {\n  // Text Positioning\n  static get TextVerticalPosition() {\n    return {\n      TOP: 1,\n      BOTTOM: 2,\n    };\n  }\n\n  static get TextJustification() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n    };\n  }\n\n  // Initialize the StaveLine with the given `notes`.\n  //\n  // `notes` is a struct that has:\n  //\n  //  ```\n  //  {\n  //    first_note: Note,\n  //    last_note: Note,\n  //    first_indices: [n1, n2, n3],\n  //    last_indices: [n1, n2, n3]\n  //  }\n  //  ```\n  constructor(notes) {\n    super();\n    this.setAttribute('type', 'StaveLine');\n\n    this.notes = notes;\n\n    this.text = '';\n\n    this.font = {\n      family: 'Arial',\n      size: 10,\n      weight: '',\n    };\n\n    this.render_options = {\n      // Space to add to the left or the right\n      padding_left: 4,\n      padding_right: 3,\n\n      // The width of the line in pixels\n      line_width: 1,\n      // An array of line/space lengths. Unsupported with Raphael (SVG)\n      line_dash: null,\n      // Can draw rounded line end, instead of a square. Unsupported with Raphael (SVG)\n      rounded_end: true,\n      // The color of the line and arrowheads\n      color: null,\n\n      // Flags to draw arrows on each end of the line\n      draw_start_arrow: false,\n      draw_end_arrow: false,\n\n      // The length of the arrowhead sides\n      arrowhead_length: 10,\n      // The angle of the arrowhead\n      arrowhead_angle: Math.PI / 8,\n\n      // The position of the text\n      text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n      text_justification: StaveLine.TextJustification.CENTER,\n    };\n\n    this.setNotes(notes);\n  }\n\n  // Set the font for the `StaveLine` text\n  setFont(font) { this.font = font; return this; }\n  // The the annotation for the `StaveLine`\n  setText(text) { this.text = text; return this; }\n\n  // Set the notes for the `StaveLine`\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Notes needs to have either first_note or last_note set.'\n      );\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Connected notes must have similar index sizes'\n      );\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  // Apply the style of the `StaveLine` to the context\n  applyLineStyle() {\n    const ctx = this.checkContext();\n    const render_options = this.render_options;\n\n    if (render_options.line_dash) {\n      ctx.setLineDash(render_options.line_dash);\n    }\n\n    if (render_options.line_width) {\n      ctx.setLineWidth(render_options.line_width);\n    }\n\n    if (render_options.rounded_end) {\n      ctx.setLineCap('round');\n    } else {\n      ctx.setLineCap('square');\n    }\n  }\n\n  // Apply the text styling to the context\n  applyFontStyle() {\n    const ctx = this.checkContext();\n\n    if (this.font) {\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    }\n\n    if (this.render_options.color) {\n      ctx.setStrokeStyle(this.render_options.color);\n      ctx.setFillStyle(this.render_options.color);\n    }\n  }\n\n  // Renders the `StaveLine` on the context\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n    const render_options = this.render_options;\n\n    ctx.save();\n    this.applyLineStyle();\n\n    // Cycle through each set of indices and draw lines\n    let start_position;\n    let end_position;\n    this.first_indices.forEach((first_index, i) => {\n      const last_index = this.last_indices[i];\n\n      // Get initial coordinates for the start/end of the line\n      start_position = first_note.getModifierStartXY(2, first_index);\n      end_position = last_note.getModifierStartXY(1, last_index);\n      const upwards_slope = start_position.y > end_position.y;\n\n      // Adjust `x` coordinates for modifiers\n      start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n      end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n\n\n      // Adjust first `x` coordinates for displacements\n      const notehead_width = first_note.getGlyph().getWidth();\n      const first_displaced = first_note.getKeyProps()[first_index].displaced;\n      if (first_displaced && first_note.getStemDirection() === 1) {\n        start_position.x += notehead_width + render_options.padding_left;\n      }\n\n      // Adjust last `x` coordinates for displacements\n      const last_displaced = last_note.getKeyProps()[last_index].displaced;\n      if (last_displaced && last_note.getStemDirection() === -1) {\n        end_position.x -= notehead_width + render_options.padding_right;\n      }\n\n      // Adjust y position better if it's not coming from the center of the note\n      start_position.y += upwards_slope ? -3 : 1;\n      end_position.y += upwards_slope ? 2 : 0;\n\n      drawArrowLine(ctx, start_position, end_position, this.render_options);\n    });\n\n    ctx.restore();\n\n    // Determine the x coordinate where to start the text\n    const text_width = ctx.measureText(this.text).width;\n    const justification = render_options.text_justification;\n    let x = 0;\n    if (justification === StaveLine.TextJustification.LEFT) {\n      x = start_position.x;\n    } else if (justification === StaveLine.TextJustification.CENTER) {\n      const delta_x = (end_position.x - start_position.x);\n      const center_x = (delta_x / 2) + start_position.x;\n      x = center_x - (text_width / 2);\n    } else if (justification === StaveLine.TextJustification.RIGHT) {\n      x = end_position.x  -  text_width;\n    }\n\n    // Determine the y value to start the text\n    let y;\n    const vertical_position = render_options.text_position_vertical;\n    if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n      y = first_note.getStave().getYForTopText();\n    } else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n      y = first_note.getStave().getYForBottomText(Flow.TEXT_HEIGHT_OFFSET_HACK);\n    }\n\n    // Draw the text\n    ctx.save();\n    this.applyFontStyle();\n    ctx.fillText(this.text, x, y);\n    ctx.restore();\n\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/staveline.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements different types of pedal markings. These notation\n// elements indicate to the performer when to depress and release the a pedal.\n//\n// In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n// custom text for the release/depress pedal markings.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`.\nfunction L(...args) { if (PedalMarking.DEBUG) Vex.L('Vex.Flow.PedalMarking', args); }\n\n// Draws a pedal glyph with the provided `name` on a rendering `context`\n// at the coordinates `x` and `y. Takes into account the glyph data\n// coordinate shifts.\nfunction drawPedalGlyph(name, context, x, y, point) {\n  const glyph_data = PedalMarking.GLYPHS[name];\n  const glyph = new Glyph(glyph_data.code, point);\n  glyph.render(context, x + glyph_data.x_shift, y + glyph_data.y_shift);\n}\n\nexport class PedalMarking extends Element {\n  // Glyph data\n  static get GLYPHS() {\n    return {\n      'pedal_depress': {\n        code: 'v36',\n        x_shift: -10,\n        y_shift: 0,\n      },\n      'pedal_release': {\n        code: 'v5d',\n        x_shift: -2,\n        y_shift: 3,\n      },\n    };\n  }\n\n  static get Styles() {\n    return {\n      TEXT: 1,\n      BRACKET: 2,\n      MIXED: 3,\n    };\n  }\n\n  static get StylesString() {\n    return {\n      text: PedalMarking.Styles.TEXT,\n      bracket: PedalMarking.Styles.BRACKET,\n      mixed: PedalMarking.Styles.MIXED,\n    };\n  }\n\n  // Create a sustain pedal marking. Returns the defaults PedalMarking.\n  // Which uses the traditional \"Ped\" and \"*\"\" markings.\n  static createSustain(notes) {\n    const pedal = new PedalMarking(notes);\n    return pedal;\n  }\n\n  // Create a sostenuto pedal marking\n  static createSostenuto(notes) {\n    const pedal = new PedalMarking(notes);\n    pedal.setStyle(PedalMarking.Styles.MIXED);\n    pedal.setCustomText('Sost. Ped.');\n    return pedal;\n  }\n\n  // Create an una corda pedal marking\n  static createUnaCorda(notes) {\n    const pedal = new PedalMarking(notes);\n    pedal.setStyle(PedalMarking.Styles.TEXT);\n    pedal.setCustomText('una corda', 'tre corda');\n    return pedal;\n  }\n\n  // ## Prototype Methods\n  constructor(notes) {\n    super();\n    this.setAttribute('type', 'PedalMarking');\n\n    this.notes = notes;\n    this.style = PedalMarking.TEXT;\n    this.line = 0;\n\n    // Custom text for the release/depress markings\n    this.custom_depress_text = '';\n    this.custom_release_text = '';\n\n    this.font = {\n      family: 'Times New Roman',\n      size: 12,\n      weight: 'italic bold',\n    };\n\n    this.render_options = {\n      bracket_height: 10,\n      text_margin_right: 6,\n      bracket_line_width: 1,\n      glyph_point_size: 40,\n      color: 'black',\n    };\n  }\n\n  // Set custom text for the `depress`/`release` pedal markings. No text is\n  // set if the parameter is falsy.\n  setCustomText(depress, release) {\n    this.custom_depress_text = depress || '';\n    this.custom_release_text = release || '';\n    return this;\n  }\n\n  // Set the pedal marking style\n  setStyle(style) {\n    if (style < 1 && style > 3)  {\n      throw new Vex.RERR('InvalidParameter', 'The style must be one found in PedalMarking.Styles');\n    }\n\n    this.style = style;\n    return this;\n  }\n\n  // Set the staff line to render the markings on\n  setLine(line) { this.line = line; return this; }\n\n  // Draw the bracket based pedal markings\n  drawBracketed() {\n    const ctx = this.context;\n    let is_pedal_depressed = false;\n    let prev_x;\n    let prev_y;\n    const pedal = this;\n\n    // Iterate through each note\n    this.notes.forEach((note, index, notes) => {\n      // Each note triggers the opposite pedal action\n      is_pedal_depressed = !is_pedal_depressed;\n\n      // Get the initial coordinates for the note\n      const x = note.getAbsoluteX();\n      const y = note.getStave().getYForBottomText(pedal.line + 3);\n\n      // Throw if current note is positioned before the previous note\n      if (x < prev_x) {\n        throw new Vex.RERR(\n          'InvalidConfiguration', 'The notes provided must be in order of ascending x positions'\n        );\n      }\n\n      // Determine if the previous or next note are the same\n      // as the current note. We need to keep track of this for\n      // when adjustments are made for the release+depress action\n      const next_is_same = notes[index + 1] === note;\n      const prev_is_same = notes[index - 1] === note;\n\n      let x_shift = 0;\n      if (is_pedal_depressed) {\n        // Adjustment for release+depress\n        x_shift =  prev_is_same ? 5 : 0;\n\n        if (pedal.style === PedalMarking.Styles.MIXED && !prev_is_same) {\n          // For MIXED style, start with text instead of bracket\n          if (pedal.custom_depress_text) {\n            // If we have custom text, use instead of the default \"Ped\" glyph\n            const text_width = ctx.measureText(pedal.custom_depress_text).width;\n            ctx.fillText(pedal.custom_depress_text, x - (text_width / 2), y);\n            x_shift = (text_width / 2) + pedal.render_options.text_margin_right;\n          } else {\n            // Render the Ped glyph in position\n            drawPedalGlyph('pedal_depress', ctx, x, y, pedal.render_options.glyph_point_size);\n            x_shift = 20 + pedal.render_options.text_margin_right;\n          }\n        } else {\n          // Draw start bracket\n          ctx.beginPath();\n          ctx.moveTo(x, y - pedal.render_options.bracket_height);\n          ctx.lineTo(x + x_shift, y);\n          ctx.stroke();\n          ctx.closePath();\n        }\n      } else {\n        // Adjustment for release+depress\n        x_shift = next_is_same ? -5 : 0;\n\n        // Draw end bracket\n        ctx.beginPath();\n        ctx.moveTo(prev_x, prev_y);\n        ctx.lineTo(x + x_shift, y);\n        ctx.lineTo(x, y - pedal.render_options.bracket_height);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      // Store previous coordinates\n      prev_x = x + x_shift;\n      prev_y = y;\n    });\n  }\n\n  // Draw the text based pedal markings. This defaults to the traditional\n  // \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n  drawText() {\n    const ctx = this.context;\n    let is_pedal_depressed = false;\n    const pedal = this;\n\n    // The glyph point size\n    const point = pedal.render_options.glyph_point_size;\n\n    // Iterate through each note, placing glyphs or custom text accordingly\n    this.notes.forEach(note => {\n      is_pedal_depressed = !is_pedal_depressed;\n      const stave = note.getStave();\n      const x = note.getAbsoluteX();\n      const y = stave.getYForBottomText(pedal.line + 3);\n\n      let text_width = 0;\n      if (is_pedal_depressed) {\n        if (pedal.custom_depress_text) {\n          text_width = ctx.measureText(pedal.custom_depress_text).width;\n          ctx.fillText(pedal.custom_depress_text, x - (text_width / 2), y);\n        } else {\n          drawPedalGlyph('pedal_depress', ctx, x, y, point);\n        }\n      } else {\n        if (pedal.custom_release_text) {\n          text_width = ctx.measureText(pedal.custom_release_text).width;\n          ctx.fillText(pedal.custom_release_text, x - (text_width / 2), y);\n        } else {\n          drawPedalGlyph('pedal_release', ctx, x, y, point);\n        }\n      }\n    });\n  }\n\n  // Render the pedal marking in position on the rendering context\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.setStrokeStyle(this.render_options.color);\n    ctx.setFillStyle(this.render_options.color);\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\n    L('Rendering Pedal Marking');\n\n    if (this.style === PedalMarking.Styles.BRACKET || this.style === PedalMarking.Styles.MIXED) {\n      ctx.setLineWidth(this.render_options.bracket_line_width);\n      this.drawBracketed();\n    } else if (this.style === PedalMarking.Styles.TEXT) {\n      this.drawText();\n    }\n\n    ctx.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pedalmarking.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implement `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Renderer } from './renderer';\n\n// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\nfunction L(...args) { if (TextBracket.DEBUG) Vex.L('Vex.Flow.TextBracket', args); }\n\nexport class TextBracket extends Element {\n  // FIXME: Modifier.Position is singular while this is plural, make consistent\n  static get Positions() {\n    return {\n      TOP: 1,\n      BOTTOM: -1,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      top: TextBracket.Positions.TOP,\n      bottom: TextBracket.Positions.BOTTOM,\n    };\n  }\n\n  constructor({\n    start,\n    stop,\n    text = '',\n    superscript = '',\n    position = TextBracket.Positions.TOP,\n  }) {\n    super();\n    this.setAttribute('type', 'TextBracket');\n\n    this.start = start;\n    this.stop = stop;\n\n    this.text = text;\n    this.superscript = superscript;\n\n    this.position = typeof position === 'string'\n      ? TextBracket.PositionString[position]\n      : position;\n\n    this.line = 1;\n\n    this.font = {\n      family: 'Serif',\n      size: 15,\n      weight: 'italic',\n    };\n\n    this.render_options = {\n      dashed: true,\n      dash: [5],\n      color: 'black',\n      line_width: 1,\n      show_bracket: true,\n      bracket_height: 8,\n\n      // In the BOTTOM position, the bracket line can extend\n      // under the superscript.\n      underline_superscript: true,\n    };\n  }\n\n  // Apply the text backet styling to the provided `context`\n  applyStyle(context) {\n    // Apply style for the octave bracket\n    context.setFont(this.font.family, this.font.size, this.font.weight);\n    context.setStrokeStyle(this.render_options.color);\n    context.setFillStyle(this.render_options.color);\n    context.setLineWidth(this.render_options.line_width);\n\n    return this;\n  }\n\n  // Set whether the bracket line should be `dashed`. You can also\n  // optionally set the `dash` pattern by passing in an array of numbers\n  setDashed(dashed, dash) {\n    this.render_options.dashed = dashed;\n    if (dash) this.render_options.dash = dash;\n    return this;\n  }\n\n  // Set the font for the text\n  setFont(font) {\n    // We use Object.assign to support partial updates to the font object\n    this.font = Object.assign({}, this.font, font);\n    return this;\n  }\n  // Set the rendering `context` for the octave bracket\n  setLine(line) { this.line = line; return this; }\n\n  // Draw the octave bracket on the rendering context\n  draw() {\n    const ctx = this.context;\n    this.setRendered();\n\n    let y = 0;\n    switch (this.position) {\n      case TextBracket.Positions.TOP:\n        y =  this.start.getStave().getYForTopText(this.line);\n        break;\n      case TextBracket.Positions.BOTTOM:\n        y =  this.start.getStave().getYForBottomText(this.line + Flow.TEXT_HEIGHT_OFFSET_HACK);\n        break;\n      default:\n        throw new Vex.RERR('InvalidPosition', `The position ${this.position} is invalid`);\n    }\n\n    // Get the preliminary start and stop coordintates for the bracket\n    const start = { x: this.start.getAbsoluteX(), y };\n    const stop = { x: this.stop.getAbsoluteX(), y };\n\n    L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n\n    const bracket_height = this.render_options.bracket_height * this.position;\n\n    ctx.save();\n    this.applyStyle(ctx);\n\n    // Draw text\n    ctx.fillText(this.text, start.x, start.y);\n\n    // Get the width and height for the octave number\n    const main_width = ctx.measureText(this.text).width;\n    const main_height = ctx.measureText('M').width;\n\n    // Calculate the y position for the super script\n    const super_y = start.y - (main_height / 2.5);\n\n    // Draw the superscript\n    ctx.setFont(this.font.family, this.font.size / 1.4, this.font.weight);\n    ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n\n    // Determine width and height of the superscript\n    const superscript_width = ctx.measureText(this.superscript).width;\n    const super_height = ctx.measureText('M').width;\n\n    // Setup initial coordinates for the bracket line\n    let start_x = start.x;\n    let line_y = super_y;\n    const end_x = stop.x + this.stop.getGlyph().getWidth();\n\n    // Adjust x and y coordinates based on position\n    if (this.position === TextBracket.Positions.TOP) {\n      start_x += main_width + superscript_width + 5;\n      line_y -= super_height / 2.7;\n    } else if (this.position === TextBracket.Positions.BOTTOM) {\n      line_y += super_height / 2.7;\n      start_x += main_width + 2;\n\n      if (!this.render_options.underline_superscript) {\n        start_x += superscript_width;\n      }\n    }\n\n    if (this.render_options.dashed) {\n      // Main line\n      Renderer.drawDashedLine(\n        ctx,\n        start_x,\n        line_y,\n        end_x,\n        line_y,\n        this.render_options.dash\n      );\n      // Ending Bracket\n      if (this.render_options.show_bracket) {\n        Renderer.drawDashedLine(\n          ctx,\n          end_x,\n          line_y + (1 * this.position),\n          end_x,\n          line_y + bracket_height,\n          this.render_options.dash\n        );\n      }\n    } else {\n      ctx.beginPath();\n      ctx.moveTo(start_x, line_y);\n      // Main line\n      ctx.lineTo(end_x, line_y);\n      if (this.render_options.show_bracket) {\n        // Ending bracket\n        ctx.lineTo(end_x, line_y + bracket_height);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n\n    ctx.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/textbracket.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// A `BarNote` is used to render bar lines (from `barline.js`). `BarNote`s can\n// be added to a voice and rendered in the middle of a stave. Since it has no\n// duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n//\n// See `tests/barnote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Barline } from './stavebarline';\nimport { BoundingBox } from './boundingbox';\n\n// To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`.\nfunction L(...args) { if (BarNote.DEBUG) Vex.L('Vex.Flow.BarNote', args); }\n\nexport class BarNote extends Note {\n  constructor(type = Barline.type.SINGLE) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'BarNote');\n\n    this.metrics = {\n      widths: {},\n    };\n\n    const TYPE = Barline.type;\n    this.metrics.widths = {\n      [TYPE.SINGLE]: 8,\n      [TYPE.DOUBLE]: 12,\n      [TYPE.END]: 15,\n      [TYPE.REPEAT_BEGIN]: 14,\n      [TYPE.REPEAT_END]: 14,\n      [TYPE.REPEAT_BOTH]: 18,\n      [TYPE.NONE]: 0,\n    };\n\n    // Tell the formatter that bar notes have no duration.\n    this.ignore_ticks = true;\n    this.setType(type);\n  }\n\n  // Get and set the type of Bar note. `type` must be one of `Vex.Flow.Barline.type`.\n  getType() { return this.type; }\n  setType(type) {\n    this.type = typeof(type) === 'string'\n      ? Barline.typeString[type]\n      : type;\n\n    // Set width to width of relevant `Barline`.\n    this.setWidth(this.metrics.widths[this.type]);\n    return this;\n  }\n\n  getBoundingBox() {\n    return new BoundingBox(0, 0, 0, 0);\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    /* overridden to ignore */\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  // Render note to stave.\n  draw() {\n    this.checkContext();\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    L('Rendering bar line at: ', this.getAbsoluteX());\n    const barline = new Barline(this.type);\n    barline.setX(this.getAbsoluteX());\n    barline.draw(this.stave);\n    this.setRendered();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/barnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n\nimport { Vex } from './vex';\nimport { StemmableNote } from './stemmablenote';\n\nexport class GhostNote extends StemmableNote {\n  /** @constructor */\n  constructor(parameter) {\n    // Sanity check\n    if (!parameter) {\n      throw new Vex.RuntimeError('BadArguments',\n          'Ghost note must have valid initialization data to identify ' +\n          'duration.');\n    }\n\n    let note_struct;\n\n    // Preserve backwards-compatibility\n    if (typeof(parameter) === 'string') {\n      note_struct = { duration: parameter };\n    } else if (typeof(parameter) === 'object') {\n      note_struct = parameter;\n    } else {\n      throw new Vex.RuntimeError('BadArguments',\n          'Ghost note must have valid initialization data to identify ' +\n          'duration.');\n    }\n\n    super(note_struct);\n    this.setAttribute('type', 'GhostNote');\n\n    // Note properties\n    this.setWidth(0);\n  }\n\n  isRest() { return true; }\n\n  setStave(stave) {\n    super.setStave(stave);\n  }\n\n  addToModifierContext() { /* intentionally overridden */ return this; }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\n    // Draw the modifiers\n    this.setRendered();\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      const modifier = this.modifiers[i];\n      modifier.setContext(this.context);\n      modifier.draw();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ghostnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Mike Corrigan <corrigan@gmail.com>\n//\n// This class implements tremolo notation.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\n\nexport class Tremolo extends Modifier {\n  static get CATEGORY() { return 'tremolo'; }\n  constructor(num) {\n    super();\n    this.setAttribute('type', 'Tremolo');\n\n    this.num = num;\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.CENTER;\n    this.code = 'v74';\n    this.shift_right = -2;\n    this.y_spacing = 4;\n\n    this.render_options = {\n      font_scale: 35,\n      stroke_px: 3,\n      stroke_spacing: 10,\n    };\n\n    this.font = {\n      family: 'Arial',\n      size: 16,\n      weight: '',\n    };\n  }\n\n  getCategory() { return Tremolo.CATEGORY; }\n\n  draw() {\n    this.checkContext();\n\n    if (!(this.note && this.index != null)) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Tremolo without a note and index.\");\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let x = start.x;\n    let y = start.y;\n\n    x += this.shift_right;\n    for (let i = 0; i < this.num; ++i) {\n      Glyph.renderGlyph(this.context, x, y, this.render_options.font_scale, this.code);\n      y += this.y_spacing;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tremolo.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { TickContext } from './tickcontext';\n\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\nfunction L(...args) { if (Crescendo.DEBUG) Vex.L('Vex.Flow.Crescendo', args); }\n\n// Private helper to draw the hairpin\nfunction renderHairpin(ctx, params) {\n  const begin_x = params.begin_x;\n  const end_x = params.end_x;\n  const y = params.y;\n  const half_height =  params.height / 2;\n\n  ctx.beginPath();\n\n  if (params.reverse) {\n    ctx.moveTo(begin_x, y - half_height);\n    ctx.lineTo(end_x,  y);\n    ctx.lineTo(begin_x, y + half_height);\n  } else {\n    ctx.moveTo(end_x,  y - half_height);\n    ctx.lineTo(begin_x, y);\n    ctx.lineTo(end_x,  y + half_height);\n  }\n\n  ctx.stroke();\n  ctx.closePath();\n}\n\nexport class Crescendo extends Note {\n  // Initialize the crescendo's properties\n  constructor(note_struct) {\n    super(note_struct);\n    this.setAttribute('type', 'Crescendo');\n\n    // Whether the object is a decrescendo\n    this.decrescendo = false;\n\n    // The staff line to be placed on\n    this.line = note_struct.line || 0;\n\n    // The height at the open end of the cresc/decresc\n    this.height = 15;\n\n    Vex.Merge(this.render_options, {\n      // Extensions to the length of the crescendo on either side\n      extend_left: 0,\n      extend_right: 0,\n      // Vertical shift\n      y_shift: 0,\n    });\n  }\n\n  // Set the line to center the element on\n  setLine(line) { this.line = line; return this; }\n\n  // Set the full height at the open end\n  setHeight(height) { this.height = height; return this; }\n\n  // Set whether the sign should be a descresendo by passing a bool\n  // to `decresc`\n  setDecrescendo(decresc) {\n    this.decrescendo = decresc;\n    return this;\n  }\n\n  // Preformat the note\n  preFormat() { this.preFormatted = true; return this; }\n\n  // Render the Crescendo object onto the canvas\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const tick_context = this.getTickContext();\n    const next_context = TickContext.getNextContext(tick_context);\n\n    const begin_x = this.getAbsoluteX();\n    const end_x  = next_context ? next_context.getX() : this.stave.x + this.stave.width;\n    const y = this.stave.getYForLine(this.line + (-3)) + 1;\n\n    L(\n      'Drawing ',\n      this.decrescendo ? 'decrescendo ' : 'crescendo ',\n      this.height,\n      'x',\n      begin_x - end_x\n    );\n\n    renderHairpin(this.context, {\n      begin_x: begin_x - this.render_options.extend_left,\n      end_x: end_x + this.render_options.extend_right,\n      y: y + this.render_options.y_shift,\n      height: this.height,\n      reverse: this.decrescendo,\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/crescendo.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements a musical system, which is a collection of staves,\n// each which can have one or more voices. All voices across all staves in\n// the system are formatted together.\n\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Formatter } from './formatter';\nimport { Note } from './note';\n\nfunction setDefaults(params, defaults) {\n  const default_options = defaults.options;\n  params = Object.assign(defaults, params);\n  params.options = Object.assign(default_options, params.options);\n  return params;\n}\n\nexport class System extends Element {\n  constructor(params = {}) {\n    super();\n    this.setAttribute('type', 'System');\n    this.setOptions(params);\n    this.parts = [];\n  }\n\n  setOptions(options = {}) {\n    this.options = setDefaults(options, {\n      x: 10,\n      y: 10,\n      width: 500,\n      connector: null,\n      spaceBetweenStaves: 12, // stave spaces\n      factory: null,\n      debugFormatter: false,\n      formatIterations: 0,   // number of formatter tuning steps\n      options: {},\n    });\n\n    this.factory = this.options.factory || new Factory({ renderer: { el: null } });\n  }\n\n  setContext(context) {\n    super.setContext(context);\n    this.factory.setContext(context);\n    return this;\n  }\n\n  addConnector(type = 'double') {\n    this.connector = this.factory.StaveConnector({\n      top_stave: this.parts[0].stave,\n      bottom_stave: this.parts[this.parts.length - 1].stave,\n      type,\n    });\n    return this.connector;\n  }\n\n  addStave(params) {\n    params = setDefaults(params, {\n      stave: null,\n      voices: [],\n      spaceAbove: 0, // stave spaces\n      spaceBelow: 0, // stave spaces\n      debugNoteMetrics: false,\n      options: {},\n    });\n\n    if (!params.stave) {\n      const options = { left_bar: false };\n      params.stave = this.factory.Stave({\n        x: this.options.x,\n        y: this.options.y,\n        width: this.options.width,\n        options,\n      });\n    }\n\n    params.voices.forEach(voice =>\n      voice\n        .setContext(this.context)\n        .setStave(params.stave)\n        .getTickables()\n        .forEach(tickable => tickable.setStave(params.stave))\n    );\n\n    this.parts.push(params);\n    return params.stave;\n  }\n\n  format() {\n    const formatter = new Formatter();\n    this.formatter = formatter;\n\n    let y = this.options.y;\n    let startX = 0;\n    let allVoices = [];\n    const debugNoteMetricsYs = [];\n\n    // Join the voices for each stave.\n    this.parts.forEach(part => {\n      y = y + part.stave.space(part.spaceAbove);\n      part.stave.setY(y);\n      formatter.joinVoices(part.voices);\n      y = y + part.stave.space(part.spaceBelow);\n      y = y + part.stave.space(this.options.spaceBetweenStaves);\n      if (part.debugNoteMetrics) {\n        debugNoteMetricsYs.push({ y, voice: part.voices[0] });\n        y += 15;\n      }\n      allVoices = allVoices.concat(part.voices);\n\n      startX = Math.max(startX, part.stave.getNoteStartX());\n    });\n\n    // Update the start position of all staves.\n    this.parts.forEach(part => part.stave.setNoteStartX(startX));\n    const justifyWidth = this.options.width - (startX - this.options.x) - Note.STAVEPADDING;\n    formatter.format(allVoices, justifyWidth);\n\n    for (let i = 0; i < this.options.formatIterations; i++) {\n      formatter.tune();\n    }\n\n    this.startX = startX;\n    this.debugNoteMetricsYs = debugNoteMetricsYs;\n    this.lastY = y;\n  }\n\n  draw() {\n    // Render debugging information, if requested.\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    if (this.options.debugFormatter) {\n      Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n    }\n\n    this.debugNoteMetricsYs.forEach(d => {\n      d.voice.getTickables().forEach(note => Note.plotMetrics(ctx, note, d.y));\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/system.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a high level API around VexFlow. It will eventually\n// become the canonical way to use VexFlow.\n//\n// *This API is currently DRAFT*\n\nimport { Vex } from './vex';\nimport { Accidental } from './accidental';\nimport { Articulation } from './articulation';\nimport { Annotation } from './annotation';\nimport { Formatter } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { StringNumber } from './stringnumber';\nimport { TextDynamics } from './textdynamics';\nimport { ModifierContext } from './modifiercontext';\nimport { Renderer } from './renderer';\nimport { Stave } from './stave';\nimport { StaveTie } from './stavetie';\nimport { StaveLine } from './staveline';\nimport { StaveNote } from './stavenote';\nimport { StaveConnector } from './staveconnector';\nimport { System } from './system';\nimport { TickContext } from './tickcontext';\nimport { Tuplet } from './tuplet';\nimport { Voice } from './voice';\nimport { Beam } from './beam';\nimport { Curve } from './curve';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { NoteSubGroup } from './notesubgroup';\nimport { EasyScore } from './easyscore';\nimport { TimeSigNote } from './timesignote';\nimport { ClefNote } from './clefnote';\nimport { PedalMarking } from './pedalmarking';\nimport { TextBracket } from './textbracket';\nimport { VibratoBracket } from './vibratobracket';\nimport { GhostNote } from './ghostnote';\nimport { BarNote } from './barnote';\nimport { TabNote } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { TextNote } from './textnote';\n\n// To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`.\nfunction L(...args) { if (Factory.DEBUG) Vex.L('Vex.Flow.Factory', args); }\n\nexport const X = Vex.MakeException('FactoryError');\n\nfunction setDefaults(params = {}, defaults) {\n  const default_options = defaults.options;\n  params = Object.assign(defaults, params);\n  params.options = Object.assign(default_options, params.options);\n  return params;\n}\n\nexport class Factory {\n  constructor(options) {\n    L('New factory: ', options);\n    const defaults = {\n      stave: {\n        space: 10,\n      },\n      renderer: {\n        context: null,\n        elementId: '',\n        backend: Renderer.Backends.SVG,\n        width: 500,\n        height: 200,\n        background: '#FFF',\n      },\n      font: {\n        face: 'Arial',\n        point: 10,\n        style: '',\n      },\n    };\n\n    this.options = defaults;\n    this.setOptions(options);\n  }\n\n  static newFromElementId(elementId, width = 500, height = 200) {\n    return new Factory({ renderer: { elementId, width, height } });\n  }\n\n  reset() {\n    this.renderQ = [];\n    this.systems = [];\n    this.staves = [];\n    this.voices = [];\n    this.stave = null; // current stave\n  }\n\n  getOptions() { return this.options; }\n  setOptions(options) {\n    for (const key of ['stave', 'renderer', 'font']) {\n      Object.assign(this.options[key], options[key]);\n    }\n    if (this.options.renderer.elementId !== null || this.options.renderer.context) {\n      this.initRenderer();\n    }\n\n    this.reset();\n  }\n\n  initRenderer() {\n    const { elementId, backend, width, height, background } = this.options.renderer;\n    if (elementId === '') {\n      throw new X('HTML DOM element not set in Factory');\n    }\n\n    this.context = Renderer.buildContext(elementId, backend, width, height, background);\n  }\n\n  getContext() { return this.context; }\n  setContext(context) { this.context = context; return this; }\n  getStave() { return this.stave; }\n  getVoices() { return this.voices; }\n\n  // Returns pixels from current stave spacing.\n  space(spacing) { return this.options.stave.space * spacing; }\n\n  Stave(params) {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space,\n      },\n    });\n\n    const stave = new Stave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  TabStave(params) {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space * 1.3,\n      },\n    });\n\n    const stave = new TabStave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  StaveNote(noteStruct) {\n    const note = new StaveNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GhostNote(noteStruct) {\n    const ghostNote = new GhostNote(noteStruct);\n    if (this.stave) ghostNote.setStave(this.stave);\n    ghostNote.setContext(this.context);\n    this.renderQ.push(ghostNote);\n    return ghostNote;\n  }\n\n  TextNote(textNoteStruct) {\n    const textNote = new TextNote(textNoteStruct);\n    if (this.stave) textNote.setStave(this.stave);\n    textNote.setContext(this.context);\n    this.renderQ.push(textNote);\n    return textNote;\n  }\n\n  BarNote(params) {\n    params = setDefaults(params, {\n      type: 'single',\n      options: {},\n    });\n\n    const barNote = new BarNote(params.type);\n    if (this.stave) barNote.setStave(this.stave);\n    barNote.setContext(this.context);\n    this.renderQ.push(barNote);\n    return barNote;\n  }\n\n  ClefNote(params) {\n    params = setDefaults(params, {\n      type: 'treble',\n      options: {\n        size: 'default',\n      },\n    });\n\n    const clefNote = new ClefNote(params.type, params.options.size, params.options.annotation);\n    if (this.stave) clefNote.setStave(this.stave);\n    clefNote.setContext(this.context);\n    this.renderQ.push(clefNote);\n    return clefNote;\n  }\n\n  TimeSigNote(params) {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {},\n    });\n\n    const timeSigNote = new TimeSigNote(params.time);\n    if (this.stave) timeSigNote.setStave(this.stave);\n    timeSigNote.setContext(this.context);\n    this.renderQ.push(timeSigNote);\n    return timeSigNote;\n  }\n\n  TabNote(noteStruct) {\n    const note = new TabNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GraceNote(noteStruct) {\n    const note = new GraceNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    return note;\n  }\n\n  GraceNoteGroup(params) {\n    const group = new GraceNoteGroup(params.notes, params.slur);\n    group.setContext(this.context);\n    return group;\n  }\n\n  Accidental(params) {\n    params = setDefaults(params, {\n      type: null,\n      options: {},\n    });\n\n    const accid = new Accidental(params.type);\n    accid.setContext(this.context);\n    return accid;\n  }\n\n  Annotation(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      vJustify: 'below',\n      hJustify: 'center',\n      fontFamily: 'Times',\n      fontSize: 14,\n      fontWeight: 'bold italic',\n      options: {},\n    });\n\n    const annotation = new Annotation(params.text);\n    annotation.setJustification(params.hJustify);\n    annotation.setVerticalJustification(params.vJustify);\n    annotation.setFont(params.fontFamily, params.fontSize, params.fontWeight);\n    annotation.setContext(this.context);\n    return annotation;\n  }\n\n  Articulation(params) {\n    params = setDefaults(params, {\n      type: 'a.',\n      position: 'above',\n      options: {},\n    });\n\n    const articulation = new Articulation(params.type);\n    articulation.setPosition(params.position);\n    articulation.setContext(this.context);\n    return articulation;\n  }\n\n  TextDynamics(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      duration: 'q',\n      dots: 0,\n      line: 0,\n      options: {},\n    });\n\n    const text = new TextDynamics({\n      text: params.text,\n      line: params.line,\n      duration: params.duration,\n      dots: params.dots,\n    });\n\n    if (this.stave) text.setStave(this.stave);\n    text.setContext(this.context);\n    this.renderQ.push(text);\n    return text;\n  }\n\n  Fingering(params) {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {},\n    });\n\n    const fingering = new FretHandFinger(params.number);\n    fingering.setPosition(params.position);\n    fingering.setContext(this.context);\n    return fingering;\n  }\n\n  StringNumber(params) {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {},\n    });\n\n    const stringNumber = new StringNumber(params.number);\n    stringNumber.setPosition(params.position);\n    stringNumber.setContext(this.context);\n    return stringNumber;\n  }\n\n  TickContext() {\n    return new TickContext().setContext(this.context);\n  }\n\n  ModifierContext() {\n    return new ModifierContext();\n  }\n\n  Voice(params) {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {},\n    });\n    const voice = new Voice(params.time);\n    this.voices.push(voice);\n    return voice;\n  }\n\n  StaveConnector(params) {\n    params = setDefaults(params, {\n      top_stave: null,\n      bottom_stave: null,\n      type: 'double',\n      options: {},\n    });\n    const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n    connector.setType(params.type).setContext(this.context);\n    this.renderQ.push(connector);\n    return connector;\n  }\n\n  Formatter() {\n    return new Formatter();\n  }\n\n  Tuplet(params) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {},\n    });\n\n    const tuplet = new Tuplet(params.notes, params.options).setContext(this.context);\n    this.renderQ.push(tuplet);\n    return tuplet;\n  }\n\n  Beam(params) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        autoStem: false,\n        secondaryBeamBreaks: [],\n      },\n    });\n\n    const beam = new Beam(params.notes, params.options.autoStem).setContext(this.context);\n    beam.breakSecondaryAt(params.options.secondaryBeamBreaks);\n    this.renderQ.push(beam);\n    return beam;\n  }\n\n  Curve(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {},\n    });\n\n    const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n    this.renderQ.push(curve);\n    return curve;\n  }\n\n  StaveTie(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      text: null,\n      options: {\n        direction: undefined,\n      },\n    });\n\n    const tie = new StaveTie({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    }, params.text);\n\n    if (params.options.direction) tie.setDirection(params.options.direction);\n    tie.setContext(this.context);\n    this.renderQ.push(tie);\n    return tie;\n  }\n\n  StaveLine(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      options: {},\n    });\n\n    const line = new StaveLine({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    });\n\n    if (params.options.text) line.setText(params.options.text);\n    if (params.options.font) line.setFont(params.options.font);\n\n    line.setContext(this.context);\n    this.renderQ.push(line);\n    return line;\n  }\n\n  VibratoBracket(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {\n        harsh: false,\n      },\n    });\n\n    const vibratoBracket = new VibratoBracket({\n      start: params.from,\n      stop: params.to,\n    });\n\n    if (params.options.line) vibratoBracket.setLine(params.options.line);\n    if (params.options.harsh) vibratoBracket.setHarsh(params.options.harsh);\n\n    vibratoBracket.setContext(this.context);\n    this.renderQ.push(vibratoBracket);\n\n    return vibratoBracket;\n  }\n\n  TextBracket(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      text: '',\n      options: {\n        superscript: '',\n        position: 1,\n      },\n    });\n\n    const textBracket = new TextBracket({\n      start: params.from,\n      stop: params.to,\n      text: params.text,\n      superscript: params.options.superscript,\n      position: params.options.position,\n    });\n\n    if (params.options.line) textBracket.setLine(params.options.line);\n    if (params.options.font) textBracket.setFont(params.options.font);\n\n    textBracket.setContext(this.context);\n    this.renderQ.push(textBracket);\n    return textBracket;\n  }\n\n  System(params = {}) {\n    params.factory = this;\n    const system = new System(params).setContext(this.context);\n    this.systems.push(system);\n    return system;\n  }\n\n  EasyScore(params = {}) {\n    params.factory = this;\n    return new EasyScore(params);\n  }\n\n  PedalMarking(params = {}) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        style: 'mixed',\n      },\n    });\n\n    const pedal = new PedalMarking(params.notes);\n    pedal.setStyle(PedalMarking.StylesString[params.options.style]);\n    pedal.setContext(this.context);\n    this.renderQ.push(pedal);\n    return pedal;\n  }\n\n  NoteSubGroup(params = {}) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {},\n    });\n\n    const group = new NoteSubGroup(params.notes);\n    group.setContext(this.context);\n    return group;\n  }\n\n  draw() {\n    this.systems.forEach(i => i.setContext(this.context).format());\n    this.staves.forEach(i => i.setContext(this.context).draw());\n    this.voices.forEach(i => i.setContext(this.context).draw());\n    this.renderQ.forEach(i => {\n      if (!i.isRendered()) i.setContext(this.context).draw();\n    });\n    this.systems.forEach(i => i.setContext(this.context).draw());\n    this.reset();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/factory.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements a parser for a simple language to generate\n// VexFlow objects.\n\nimport { Vex } from './vex';\nimport { StaveNote } from './stavenote';\nimport { Parser } from './parser';\nimport { Articulation } from './articulation';\n\n// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\nfunction L(...args) { if (EasyScore.DEBUG) Vex.L('Vex.Flow.EasyScore', args); }\n\nexport const X = Vex.MakeException('EasyScoreError');\n\nclass Grammar {\n  constructor(builder) {\n    this.builder = builder;\n  }\n\n  begin() { return this.LINE; }\n\n  LINE() {\n    return {\n      expect: [this.PIECE, this.PIECES, this.EOL],\n    };\n  }\n  PIECE() {\n    return {\n      expect: [this.CHORDORNOTE, this.PARAMS],\n      run: () => this.builder.commitPiece(),\n    };\n  }\n  PIECES() {\n    return {\n      expect: [this.COMMA, this.PIECE],\n      zeroOrMore: true,\n    };\n  }\n  PARAMS() {\n    return {\n      expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n    };\n  }\n  CHORDORNOTE() {\n    return {\n      expect: [this.CHORD, this.SINGLENOTE],\n      or: true,\n    };\n  }\n  CHORD() {\n    return {\n      expect: [this.LPAREN, this.NOTES, this.RPAREN],\n      run: (state) => this.builder.addChord(state.matches[1]),\n    };\n  }\n  NOTES() {\n    return {\n      expect: [this.NOTE],\n      oneOrMore: true,\n    };\n  }\n  NOTE() {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n    };\n  }\n  SINGLENOTE() {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n      run: (state) =>\n        this.builder.addSingleNote(state.matches[0], state.matches[1], state.matches[2]),\n    };\n  }\n  ACCIDENTAL() {\n    return {\n      expect: [this.ACCIDENTALS],\n      maybe: true,\n    };\n  }\n  DOTS() {\n    return {\n      expect: [this.DOT],\n      zeroOrMore: true,\n      run: (state) => this.builder.setNoteDots(state.matches[0]),\n    };\n  }\n  TYPE() {\n    return {\n      expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n      maybe: true,\n      run: (state) => this.builder.setNoteType(state.matches[2]),\n    };\n  }\n  DURATION() {\n    return {\n      expect: [this.SLASH, this.DURATIONS],\n      maybe: true,\n      run: (state) => this.builder.setNoteDuration(state.matches[1]),\n    };\n  }\n  OPTS() {\n    return {\n      expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n      maybe: true,\n    };\n  }\n  KEYVALS() {\n    return {\n      expect: [this.COMMA, this.KEYVAL],\n      zeroOrMore: true,\n    };\n  }\n  KEYVAL() {\n    const unquote = (str) => str.slice(1, -1);\n\n    return {\n      expect: [this.KEY, this.EQUALS, this.VAL],\n      run: (state) => this.builder.addNoteOption(state.matches[0], unquote(state.matches[2])),\n    };\n  }\n  VAL()  {\n    return {\n      expect: [this.SVAL, this.DVAL],\n      or: true,\n    };\n  }\n\n  KEY()         { return { token: '[a-zA-Z][a-zA-Z0-9]*' }; }\n  DVAL()        { return { token: '[\"][^\"]*[\"]' }; }\n  SVAL()        { return { token: \"['][^']*[']\" }; }\n  NOTENAME()    { return { token: '[a-gA-G]' }; }\n  OCTAVE()      { return { token: '[0-9]+' }; }\n  ACCIDENTALS() { return { token: 'bbs|bb|bss|bs|b|db|d|##|#|n|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' }; }\n  DURATIONS()   { return { token: '[0-9whq]+' }; }\n  TYPES()       { return { token: '[rRsSxX]' }; }\n  LPAREN()      { return { token: '[(]' }; }\n  RPAREN()      { return { token: '[)]' }; }\n  COMMA()       { return { token: '[,]' }; }\n  DOT()         { return { token: '[.]' }; }\n  SLASH()       { return { token: '[/]' }; }\n  MAYBESLASH()  { return { token: '[/]?' }; }\n  EQUALS()      { return { token: '[=]' }; }\n  LBRACKET()    { return { token: '\\\\[' }; }\n  RBRACKET()    { return { token: '\\\\]' }; }\n  EOL()         { return { token: '$' }; }\n}\n\nclass Builder {\n  constructor(factory) {\n    this.factory = factory;\n    this.commitHooks = [];\n    this.reset();\n  }\n\n  reset(options = {}) {\n    this.options = {\n      stem: 'auto',\n      clef: 'treble',\n    };\n    this.elements = {\n      notes: [],\n      accidentals: [],\n    };\n    this.rollingDuration = '8';\n    this.resetPiece();\n    Object.assign(this.options, options);\n  }\n\n  getFactory() { return this.factory; }\n\n  getElements() { return this.elements; }\n\n  addCommitHook(commitHook) {\n    this.commitHooks.push(commitHook);\n  }\n\n  resetPiece() {\n    L('resetPiece');\n    this.piece = {\n      chord: [],\n      duration: this.rollingDuration,\n      dots: 0,\n      type: undefined,\n      options: {},\n    };\n  }\n\n  setNoteDots(dots) {\n    L('setNoteDots:', dots);\n    if (dots) this.piece.dots = dots.length;\n  }\n\n  setNoteDuration(duration) {\n    L('setNoteDuration:', duration);\n    this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n  }\n\n  setNoteType(type) {\n    L('setNoteType:', type);\n    if (type) this.piece.type = type;\n  }\n\n  addNoteOption(key, value) {\n    L('addNoteOption: key:', key, 'value:', value);\n    this.piece.options[key] = value;\n  }\n\n  addNote(key, accid, octave) {\n    L('addNote:', key, accid, octave);\n    this.piece.chord.push({ key, accid, octave });\n  }\n\n  addSingleNote(key, accid, octave) {\n    L('addSingleNote:', key, accid, octave);\n    this.addNote(key, accid, octave);\n  }\n\n  addChord(notes) {\n    L('startChord');\n    if (typeof(notes[0]) !== 'object') {\n      this.addSingleNote(notes[0]);\n    } else {\n      notes.forEach(n => {\n        if (n) this.addNote(...n);\n      });\n    }\n    L('endChord');\n  }\n\n  commitPiece() {\n    L('commitPiece');\n    const { factory } = this;\n\n    if (!factory) return;\n\n    const options = Object.assign({}, this.options, this.piece.options);\n    const { stem, clef } = options;\n    const autoStem = stem.toLowerCase() === 'auto';\n    const stemDirection = !autoStem && stem.toLowerCase() === 'up'\n      ? StaveNote.STEM_UP\n      : StaveNote.STEM_DOWN;\n\n    // Build StaveNotes.\n    const { chord, duration, dots, type } = this.piece;\n    const keys = chord.map(note => note.key + '/' + note.octave);\n    const note = factory.StaveNote({\n      keys,\n      duration,\n      dots,\n      type,\n      clef,\n      auto_stem: autoStem,\n    });\n    if (!autoStem) note.setStemDirection(stemDirection);\n\n    // Attach accidentals.\n    const accids = chord.map(note => note.accid || null);\n    accids.forEach((accid, i) => {\n      if (accid) note.addAccidental(i, factory.Accidental({ type: accid }));\n    });\n\n    // Attach dots.\n    for (let i = 0; i < dots; i++) note.addDotToAll();\n\n    this.commitHooks.forEach(fn => fn(options, note, this));\n\n    this.elements.notes.push(note);\n    this.elements.accidentals.concat(accids);\n    this.resetPiece();\n  }\n}\n\nfunction setId({ id }, note) {\n  if (id === undefined) return;\n\n  note.setAttribute('id', id);\n}\n\n\nfunction setClass(options, note) {\n  if (!options.class) return;\n\n  const commaSeparatedRegex = /\\s*,\\s*/;\n\n  options.class\n    .split(commaSeparatedRegex)\n    .forEach(className => note.addClass(className));\n}\n\nexport class EasyScore {\n  constructor(options = {}) {\n    this.setOptions(options);\n    this.defaults = {\n      clef: 'treble',\n      time: '4/4',\n      stem: 'auto',\n    };\n  }\n\n  set(defaults) {\n    Object.assign(this.defaults, defaults);\n    return this;\n  }\n\n  setOptions(options) {\n    this.options = Object.assign({\n      factory: null,\n      builder: null,\n      commitHooks: [\n        setId,\n        setClass,\n        Articulation.easyScoreHook,\n      ],\n      throwOnError: false,\n    }, options);\n\n    this.factory = this.options.factory;\n    this.builder = this.options.builder || new Builder(this.factory);\n    this.grammar = new Grammar(this.builder);\n    this.parser = new Parser(this.grammar);\n    this.options.commitHooks.forEach(commitHook => this.addCommitHook(commitHook));\n    return this;\n  }\n\n  setContext(context) {\n    if (this.factory) this.factory.setContext(context);\n    return this;\n  }\n\n  parse(line, options = {}) {\n    this.builder.reset(options);\n    const result = this.parser.parse(line);\n    if (!result.success && this.options.throwOnError) {\n      throw new X('Error parsing line: ' + line, result);\n    }\n    return result;\n  }\n\n  beam(notes, options = {}) {\n    this.factory.Beam({ notes, options });\n    return notes;\n  }\n\n  tuplet(notes, options = {}) {\n    this.factory.Tuplet({ notes, options });\n    return notes;\n  }\n\n  notes(line, options = {}) {\n    options = Object.assign({ clef: this.defaults.clef, stem: this.defaults.stem }, options);\n    this.parse(line, options);\n    return this.builder.getElements().notes;\n  }\n\n  voice(notes, voiceOptions) {\n    voiceOptions = Object.assign({ time: this.defaults.time }, voiceOptions);\n    return this.factory.Voice(voiceOptions).addTickables(notes);\n  }\n\n  addCommitHook(commitHook) {\n    return this.builder.addCommitHook(commitHook);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/easyscore.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// A generic text parsing class for VexFlow.\n\nimport { Vex } from './vex';\n\n// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\nfunction L(...args) { if (Parser.DEBUG) Vex.L('Vex.Flow.Parser', args); }\n\nexport const X = Vex.MakeException('ParserError');\n\n// Converts parser results into an easy to reference list that can be\n// used in triggers.\nfunction flattenMatches(results) {\n  if (results.matchedString !== undefined) return results.matchedString;\n  if (results.results) return flattenMatches(results.results);\n  if (results.length === 1) return flattenMatches(results[0]);\n  if (results.length === 0) return null;\n  return results.map(flattenMatches);\n}\n\n// This is the base parser class. Given an arbitrary context-free grammar, it\n// can parse any line and execute code when specific rules are met (e.g.,\n// when a string is terminated.)\nexport class Parser {\n  // For an example of a simple grammar, take a look at tests/parser_tests.js or\n  // the EasyScore grammar in easyscore.js.\n  constructor(grammar) {\n    this.grammar = grammar;\n  }\n\n  // Parse `line` using current grammar. Returns {success: true} if the\n  // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n  // where `errorPos` is the location of the error in the string.\n  parse(line) {\n    this.line = line;\n    this.pos = 0;\n    this.errorPos = -1;\n    const results = this.expect(this.grammar.begin());\n    results.errorPos = this.errorPos;\n    return results;\n  }\n\n  matchFail(returnPos) {\n    if (this.errorPos === -1) this.errorPos = this.pos;\n    this.pos = returnPos;\n  }\n\n  matchSuccess() {\n    this.errorPos = -1;\n  }\n\n  // Look for `token` in this.line[this.pos], and return success\n  // if one is found. `token` is specified as a regular expression.\n  matchToken(token, noSpace = false) {\n    const regexp = noSpace\n      ? new RegExp('^((' + token + '))')\n      : new RegExp('^((' + token + ')\\\\s*)');\n    const workingLine = this.line.slice(this.pos);\n    const result = workingLine.match(regexp);\n    if (result !== null) {\n      return {\n        success: true,\n        matchedString: result[2],\n        incrementPos: result[1].length,\n        pos: this.pos,\n      };\n    } else {\n      return {\n        success: false,\n        pos: this.pos,\n      };\n    }\n  }\n\n  // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n  // set, then return success even if the token is not found, but reset\n  // the position before exiting.\n  expectOne(rule, maybe = false) {\n    const results = [];\n    const pos = this.pos;\n\n    let allMatches = true;\n    let oneMatch = false;\n    maybe = (maybe === true) || (rule.maybe === true);\n\n    // Execute all sub rules in sequence.\n    for (let i = 0; i < rule.expect.length; i++) {\n      const next = rule.expect[i];\n      const localPos = this.pos;\n      const result = this.expect(next);\n\n      // If `rule.or` is set, then return success if any one\n      // of the subrules match, else all subrules must match.\n      if (result.success) {\n        results.push(result);\n        oneMatch = true;\n        if (rule.or) break;\n      } else {\n        allMatches = false;\n        if (!rule.or) {\n          this.pos = localPos;\n          break;\n        }\n      }\n    }\n\n    const gotOne = (rule.or && oneMatch) || allMatches;\n    const success = gotOne || (maybe === true);\n    if (maybe && !gotOne) this.pos = pos;\n    if (success) this.matchSuccess(); else this.matchFail(pos);\n    return { success, results, numMatches: gotOne ? 1 : 0 };\n  }\n\n  // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n  // then a failed match is also a success (but the position is reset).\n  expectOneOrMore(rule, maybe = false) {\n    const results = [];\n    const pos = this.pos;\n    let numMatches = 0;\n    let more = true;\n\n    do {\n      const result = this.expectOne(rule);\n      if (result.success) {\n        numMatches++;\n        results.push(result.results);\n      } else {\n        more = false;\n      }\n    } while (more);\n\n    const success = (numMatches > 0) || (maybe === true);\n    if (maybe && !(numMatches > 0)) this.pos = pos;\n    if (success) this.matchSuccess(); else this.matchFail(pos);\n    return { success, results, numMatches };\n  }\n\n  // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n  expectZeroOrMore(rule) {\n    return this.expectOneOrMore(rule, true);\n  }\n\n  // Execute the rule produced by the provided the `rules` function. This\n  // ofloads to one of the above matchers and consolidates the results. It is also\n  // responsible for executing any code triggered by the rule (in `rule.run`.)\n  expect(rules) {\n    L('Evaluating rules:', rules);\n    let result;\n    if (!rules) {\n      throw new X('Invalid Rule: ' + rules, rules);\n    }\n\n    // Get rule from Grammar class.\n    const rule = rules.bind(this.grammar)();\n\n    if (rule.token) {\n      // Base case: parse the regex and throw an error if the\n      // line doesn't match.\n      result = this.matchToken(rule.token, (rule.noSpace === true));\n      if (result.success) {\n        // Token match! Update position and throw away parsed portion\n        // of string.\n        this.pos += result.incrementPos;\n      }\n    } else if (rule.expect) {\n      if (rule.oneOrMore) {\n        result = this.expectOneOrMore(rule);\n      } else if (rule.zeroOrMore) {\n        result = this.expectZeroOrMore(rule);\n      } else {\n        result = this.expectOne(rule);\n      }\n    } else {\n      throw new X('Bad grammar! No `token` or `expect` property', rule);\n    }\n\n    // If there's a trigger attached to this rule, then pull it.\n    result.matches = [];\n    if (result.results) result.results.forEach(r => result.matches.push(flattenMatches(r)));\n    if (rule.run && result.success) rule.run(result);\n    return result;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/parser.js"],"sourceRoot":""}