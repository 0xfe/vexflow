{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 836a19ad40380feb2de8","webpack:///./src/index.js","webpack:///./src/vex.js","webpack:///./src/tables.js","webpack:///./src/fraction.js","webpack:///./src/glyph.js","webpack:///./src/element.js","webpack:///./src/registry.js","webpack:///./src/boundingboxcomputation.js","webpack:///./src/boundingbox.js","webpack:///./src/fonts/vexflow_font.js","webpack:///./src/renderer.js","webpack:///./src/canvascontext.js","webpack:///./src/raphaelcontext.js","webpack:///./src/svgcontext.js","webpack:///./src/formatter.js","webpack:///./src/beam.js","webpack:///./src/tuplet.js","webpack:///./src/stem.js","webpack:///./src/voice.js","webpack:///./src/staveconnector.js","webpack:///./src/stavenote.js","webpack:///./src/notehead.js","webpack:///./src/note.js","webpack:///./src/tickable.js","webpack:///./src/stemmablenote.js","webpack:///./src/modifier.js","webpack:///./src/dot.js","webpack:///./src/modifiercontext.js","webpack:///./src/frethandfinger.js","webpack:///./src/accidental.js","webpack:///./src/music.js","webpack:///./src/notesubgroup.js","webpack:///./src/gracenotegroup.js","webpack:///./src/stavetie.js","webpack:///./src/tabtie.js","webpack:///./src/strokes.js","webpack:///./src/stringnumber.js","webpack:///./src/articulation.js","webpack:///./src/ornament.js","webpack:///./src/tickcontext.js","webpack:///./src/annotation.js","webpack:///./src/bend.js","webpack:///./src/vibrato.js","webpack:///./src/stave.js","webpack:///./src/stavebarline.js","webpack:///./src/stavemodifier.js","webpack:///./src/staverepetition.js","webpack:///./src/stavesection.js","webpack:///./src/stavetempo.js","webpack:///./src/stavetext.js","webpack:///./src/textnote.js","webpack:///./src/clef.js","webpack:///./src/keysignature.js","webpack:///./src/timesignature.js","webpack:///./src/stavevolta.js","webpack:///./src/tabstave.js","webpack:///./src/tabnote.js","webpack:///./src/vibratobracket.js","webpack:///./src/clefnote.js","webpack:///./src/timesignote.js","webpack:///./src/tabslide.js","webpack:///./src/gracenote.js","webpack:///./src/gracetabnote.js","webpack:///./src/tuning.js","webpack:///./src/keymanager.js","webpack:///./src/stavehairpin.js","webpack:///./src/curve.js","webpack:///./src/textdynamics.js","webpack:///./src/staveline.js","webpack:///./src/pedalmarking.js","webpack:///./src/textbracket.js","webpack:///./src/barnote.js","webpack:///./src/ghostnote.js","webpack:///./src/tremolo.js","webpack:///./src/crescendo.js","webpack:///./src/system.js","webpack:///./src/factory.js","webpack:///./src/easyscore.js","webpack:///./src/parser.js"],"names":[],"mappings":"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","file":"/Users/mmuthanna/git/vexflow/build/vexflow-legacy-debug.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 836a19ad40380feb2de8\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Renderer } from './renderer';\nimport { Formatter } from './formatter';\nimport { Music } from './music';\nimport { Glyph } from './glyph';\nimport { Stave } from './stave';\nimport { StaveNote } from './stavenote';\nimport { StaveModifier } from './stavemodifier';\nimport { Voice } from './voice';\nimport { Accidental } from './accidental';\nimport { Beam } from './beam';\nimport { StaveTie } from './stavetie';\nimport { TabStave } from './tabstave';\nimport { TabNote } from './tabnote';\nimport { Bend } from './bend';\nimport { Vibrato } from './vibrato';\nimport { VibratoBracket } from './vibratobracket';\nimport { Note } from './note';\nimport { ModifierContext } from './modifiercontext';\nimport { TickContext } from './tickcontext';\nimport { Articulation } from './articulation';\nimport { Annotation } from './annotation';\nimport { Barline } from './stavebarline';\nimport { NoteHead } from './notehead';\nimport { StaveConnector } from './staveconnector';\nimport { ClefNote } from './clefnote';\nimport { KeySignature } from './keysignature';\nimport { TimeSignature } from './timesignature';\nimport { TimeSigNote } from './timesignote';\nimport { Stem } from './stem';\nimport { TabTie } from './tabtie';\nimport { Clef } from './clef';\nimport { Modifier } from './modifier';\nimport { TabSlide } from './tabslide';\nimport { Tuplet } from './tuplet';\nimport { GraceNote } from './gracenote';\nimport { GraceTabNote } from './gracetabnote';\nimport { Tuning } from './tuning';\nimport { KeyManager } from './keymanager';\nimport { StaveHairpin } from './stavehairpin';\nimport { BoundingBox } from './boundingbox';\nimport { Stroke } from './strokes';\nimport { TextNote } from './textnote';\nimport { Curve } from './curve';\nimport { TextDynamics } from './textdynamics';\nimport { StaveLine } from './staveline';\nimport { Ornament } from './ornament';\nimport { PedalMarking } from './pedalmarking';\nimport { TextBracket } from './textbracket';\nimport { FretHandFinger } from './frethandfinger';\nimport { Repetition } from './staverepetition';\nimport { BarNote } from './barnote';\nimport { GhostNote } from './ghostnote';\nimport { NoteSubGroup } from './notesubgroup';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { Tremolo } from './tremolo';\nimport { StringNumber } from './stringnumber';\nimport { Crescendo } from './crescendo';\nimport { Volta } from './stavevolta';\nimport { Font } from './fonts/vexflow_font';\nimport { System } from './system';\nimport { Factory } from './factory';\nimport { Parser } from './parser';\nimport { EasyScore } from './easyscore';\nimport { Registry } from './registry';\n\nVex.Flow = Flow;\nVex.Flow.Element = Element;\nVex.Flow.Fraction = Fraction;\nVex.Flow.Renderer = Renderer;\nVex.Flow.Formatter = Formatter;\nVex.Flow.Music = Music;\nVex.Flow.Glyph = Glyph;\nVex.Flow.Stave = Stave;\nVex.Flow.StaveNote = StaveNote;\nVex.Flow.StaveModifier = StaveModifier;\nVex.Flow.Voice = Voice;\nVex.Flow.Accidental = Accidental;\nVex.Flow.Beam = Beam;\nVex.Flow.StaveTie = StaveTie;\nVex.Flow.TabStave = TabStave;\nVex.Flow.TabNote = TabNote;\nVex.Flow.Bend = Bend;\nVex.Flow.Vibrato = Vibrato;\nVex.Flow.VibratoBracket = VibratoBracket;\nVex.Flow.Note = Note;\nVex.Flow.ModifierContext = ModifierContext;\nVex.Flow.TickContext = TickContext;\nVex.Flow.Articulation = Articulation;\nVex.Flow.Annotation = Annotation;\nVex.Flow.Barline = Barline;\nVex.Flow.NoteHead = NoteHead;\nVex.Flow.StaveConnector = StaveConnector;\nVex.Flow.ClefNote = ClefNote;\nVex.Flow.KeySignature = KeySignature;\nVex.Flow.TimeSignature = TimeSignature;\nVex.Flow.TimeSigNote = TimeSigNote;\nVex.Flow.Stem = Stem;\nVex.Flow.TabTie = TabTie;\nVex.Flow.Clef = Clef;\nVex.Flow.Modifier = Modifier;\nVex.Flow.TabSlide = TabSlide;\nVex.Flow.Tuplet = Tuplet;\nVex.Flow.GraceNote = GraceNote;\nVex.Flow.GraceTabNote = GraceTabNote;\nVex.Flow.Tuning = Tuning;\nVex.Flow.KeyManager = KeyManager;\nVex.Flow.StaveHairpin = StaveHairpin;\nVex.Flow.BoundingBox = BoundingBox;\nVex.Flow.Stroke = Stroke;\nVex.Flow.TextNote = TextNote;\nVex.Flow.Curve = Curve;\nVex.Flow.TextDynamics = TextDynamics;\nVex.Flow.StaveLine = StaveLine;\nVex.Flow.Ornament = Ornament;\nVex.Flow.PedalMarking = PedalMarking;\nVex.Flow.TextBracket = TextBracket;\nVex.Flow.FretHandFinger = FretHandFinger;\nVex.Flow.Repetition = Repetition;\nVex.Flow.BarNote = BarNote;\nVex.Flow.GhostNote = GhostNote;\nVex.Flow.NoteSubGroup = NoteSubGroup;\nVex.Flow.GraceNoteGroup = GraceNoteGroup;\nVex.Flow.Tremolo = Tremolo;\nVex.Flow.StringNumber = StringNumber;\nVex.Flow.Crescendo = Crescendo;\nVex.Flow.Volta = Volta;\nVex.Flow.Font = Font;\nVex.Flow.System = System;\nVex.Flow.Factory = Factory;\nVex.Flow.Parser = Parser;\nVex.Flow.EasyScore = EasyScore;\nVex.Flow.Registry = Registry;\n\nexport default Vex;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements utility methods used by the rest of the VexFlow\n// codebase.\n//\n\nconst Vex = () => {};\n\n// Default log function sends all arguments to console.\nVex.L = (block, args) => {\n  if (!args) return;\n  const line = Array.prototype.slice.call(args).join(' ');\n  window.console.log(block + ': ' + line);\n};\n\nVex.MakeException = (name) => {\n  const exception = class extends Error {\n    constructor(message, data) {\n      super(message);\n      this.name = name;\n      this.message = message;\n      this.data = data;\n    }\n  };\n\n  return exception;\n};\n\n// Default runtime exception.\nclass RuntimeError {\n  constructor(code, message) {\n    this.code = code;\n    this.message = message;\n  }\n\n  toString() {\n    return '[RuntimeError] ' + this.code + ':' + this.message;\n  }\n}\n\n// Shortcut method for `RuntimeError`.\nVex.RuntimeError = RuntimeError;\nVex.RERR = Vex.RuntimeError;\n\n// Merge `destination` hash with `source` hash, overwriting like keys\n// in `source` if necessary.\nVex.Merge = (destination, source) => {\n  for (const property in source) { // eslint-disable-line guard-for-in\n    destination[property] = source[property];\n  }\n  return destination;\n};\n\n// DEPRECATED. Use `Math.*`.\nVex.Min = Math.min;\nVex.Max = Math.max;\nVex.forEach = (a, fn) => {\n  for (let i = 0; i < a.length; i++) {\n    fn(a[i], i);\n  }\n};\n\n// Round number to nearest fractional value (`.5`, `.25`, etc.)\nVex.RoundN = (x, n) =>\n  (x % n) >= (n / 2)\n    ? parseInt(x / n, 10) * n + n\n    : parseInt(x / n, 10) * n;\n\n// Locate the mid point between stave lines. Returns a fractional line if a space.\nVex.MidLine = (a, b) => {\n  let mid_line = b + (a - b) / 2;\n  if (mid_line % 2 > 0) {\n    mid_line = Vex.RoundN(mid_line * 10, 5) / 10;\n  }\n  return mid_line;\n};\n\n// Take `arr` and return a new list consisting of the sorted, unique,\n// contents of arr. Does not modify `arr`.\nVex.SortAndUnique = (arr, cmp, eq) => {\n  if (arr.length > 1) {\n    const newArr = [];\n    let last;\n    arr.sort(cmp);\n\n    for (let i = 0; i < arr.length; ++i) {\n      if (i === 0 || !eq(arr[i], last)) {\n        newArr.push(arr[i]);\n      }\n      last = arr[i];\n    }\n\n    return newArr;\n  } else {\n    return arr;\n  }\n};\n\n// Check if array `a` contains `obj`.\nVex.Contains = (a, obj) => {\n  let i = a.length;\n  while (i--) {\n    if (a[i] === obj) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Get the 2D Canvas context from DOM element `canvas_sel`.\nVex.getCanvasContext = canvas_sel => {\n  if (!canvas_sel) {\n    throw new Vex.RERR('BadArgument', 'Invalid canvas selector: ' + canvas_sel);\n  }\n\n  const canvas = document.getElementById(canvas_sel);\n  if (!(canvas && canvas.getContext)) {\n    throw new Vex.RERR(\n      'UnsupportedBrowserError', 'This browser does not support HTML5 Canvas'\n    );\n  }\n\n  return canvas.getContext('2d');\n};\n\n// Draw a tiny dot marker on the specified canvas. A great debugging aid.\n//\n// `ctx`: Canvas context.\n// `x`, `y`: Dot coordinates.\nVex.drawDot = (ctx, x, y, color = '#55') => {\n  ctx.save();\n  ctx.setFillStyle(color);\n\n  // draw a circle\n  ctx.beginPath();\n  ctx.arc(x, y, 3, 0, Math.PI * 2, true);\n  ctx.closePath();\n  ctx.fill();\n  ctx.restore();\n};\n\n// Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds.\nVex.BM = (s, f) => {\n  const start_time = new Date().getTime();\n  f();\n  const elapsed = new Date().getTime() - start_time;\n  Vex.L(s + elapsed + 'ms');\n};\n\n// Get stack trace.\nVex.StackTrace = () => {\n  const err = new Error();\n  return err.stack;\n};\n\n// Dump warning to console.\nVex.W = (...args) => {\n  const line = Array.prototype.slice.call(args).join(' ');\n  window.console.log('Warning: ', line, Vex.StackTrace());\n};\n\n// Used by various classes (e.g., SVGContext) to provide a\n// unique prefix to element names (or other keys in shared namespaces).\nVex.Prefix = text => Vex.Prefix.prefix + text;\nVex.Prefix.prefix = 'vf-';\n\nexport { Vex };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vex.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\n/* eslint-disable key-spacing */\n\nimport { Vex } from './vex';\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\n\nconst Flow = {\n  STEM_WIDTH: 1.5,\n  STEM_HEIGHT: 35,\n  STAVE_LINE_THICKNESS: 1,\n  RESOLUTION: 16384,\n  DEFAULT_NOTATION_FONT_SCALE: 39,\n  DEFAULT_TABLATURE_FONT_SCALE: 39,\n  SLASH_NOTEHEAD_WIDTH: 15,\n\n  // HACK:\n  // Since text origins are positioned at the baseline, we must\n  // compensate for the ascender of the text. Of course, 1 staff space is\n  // a very poor approximation.\n  //\n  // This will be deprecated in the future. This is a temporary solution until\n  // we have more robust text metrics.\n  TEXT_HEIGHT_OFFSET_HACK: 1,\n\n  /* Kerning (DEPRECATED) */\n  IsKerned: true,\n};\n\n\nFlow.clefProperties = clef => {\n  if (!clef) throw new Vex.RERR('BadArgument', 'Invalid clef: ' + clef);\n\n  const props = Flow.clefProperties.values[clef];\n  if (!props) throw new Vex.RERR('BadArgument', 'Invalid clef: ' + clef);\n\n  return props;\n};\n\nFlow.clefProperties.values = {\n  'treble': { line_shift: 0 },\n  'bass': { line_shift: 6 },\n  'tenor': { line_shift: 4 },\n  'alto': { line_shift: 3 },\n  'soprano': { line_shift: 1 },\n  'percussion': { line_shift: 0 },\n  'mezzo-soprano': { line_shift: 2 },\n  'baritone-c': { line_shift: 5 },\n  'baritone-f': { line_shift: 5 },\n  'subbass': { line_shift: 7 },\n  'french': { line_shift: -1 },\n};\n\n/*\n  Take a note in the format \"Key/Octave\" (e.g., \"C/5\") and return properties.\n\n  The last argument, params, is a struct the currently can contain one option,\n  octave_shift for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n*/\nFlow.keyProperties = (key, clef, params) => {\n  if (clef === undefined) {\n    clef = 'treble';\n  }\n\n  const options = { octave_shift: 0 };\n\n  if (typeof params === 'object') {\n    Vex.Merge(options, params);\n  }\n\n  const pieces = key.split('/');\n\n  if (pieces.length < 2) {\n    throw new Vex.RERR('BadArguments', `Key must have note + octave and an optional glyph: ${key}`);\n  }\n\n  const k = pieces[0].toUpperCase();\n  const value = Flow.keyProperties.note_values[k];\n  if (!value) throw new Vex.RERR('BadArguments', 'Invalid key name: ' + k);\n  if (value.octave) pieces[1] = value.octave;\n\n  let octave = parseInt(pieces[1], 10);\n\n  // Octave_shift is the shift to compensate for clef 8va/8vb.\n  octave += -1 * options.octave_shift;\n\n  const base_index = (octave * 7) - (4 * 7);\n  let line = (base_index + value.index) / 2;\n  line += Flow.clefProperties(clef).line_shift;\n\n  let stroke = 0;\n\n  if (line <= 0 && (((line * 2) % 2) === 0)) stroke = 1;  // stroke up\n  if (line >= 6 && (((line * 2) % 2) === 0)) stroke = -1; // stroke down\n\n  // Integer value for note arithmetic.\n  const int_value = typeof(value.int_val) !== 'undefined'\n    ? (octave * 12) + value.int_val\n    : null;\n\n  /* Check if the user specified a glyph. */\n  let code = value.code;\n  let shift_right = value.shift_right;\n  if (pieces.length > 2 && pieces[2]) {\n    const glyph_name = pieces[2].toUpperCase();\n    const note_glyph = Flow.keyProperties.note_glyph[glyph_name];\n    if (note_glyph) {\n      code = note_glyph.code;\n      shift_right = note_glyph.shift_right;\n    }\n  }\n\n  return {\n    key: k,\n    octave,\n    line,\n    int_value,\n    accidental: value.accidental,\n    code,\n    stroke,\n    shift_right,\n    displaced: false,\n  };\n};\n\nFlow.keyProperties.note_values = {\n  'C': { index: 0, int_val: 0, accidental: null },\n  'CN': { index: 0, int_val: 0, accidental: 'n' },\n  'C#': { index: 0, int_val: 1, accidental: '#' },\n  'C##': { index: 0, int_val: 2, accidental: '##' },\n  'CB': { index: 0, int_val: -1, accidental: 'b' },\n  'CBB': { index: 0, int_val: -2, accidental: 'bb' },\n  'D': { index: 1, int_val: 2, accidental: null },\n  'DN': { index: 1, int_val: 2, accidental: 'n' },\n  'D#': { index: 1, int_val: 3, accidental: '#' },\n  'D##': { index: 1, int_val: 4, accidental: '##' },\n  'DB': { index: 1, int_val: 1, accidental: 'b' },\n  'DBB': { index: 1, int_val: 0, accidental: 'bb' },\n  'E': { index: 2, int_val: 4, accidental: null },\n  'EN': { index: 2, int_val: 4, accidental: 'n' },\n  'E#': { index: 2, int_val: 5, accidental: '#' },\n  'E##': { index: 2, int_val: 6, accidental: '##' },\n  'EB': { index: 2, int_val: 3, accidental: 'b' },\n  'EBB': { index: 2, int_val: 2, accidental: 'bb' },\n  'F': { index: 3, int_val: 5, accidental: null },\n  'FN': { index: 3, int_val: 5, accidental: 'n' },\n  'F#': { index: 3, int_val: 6, accidental: '#' },\n  'F##': { index: 3, int_val: 7, accidental: '##' },\n  'FB': { index: 3, int_val: 4, accidental: 'b' },\n  'FBB': { index: 3, int_val: 3, accidental: 'bb' },\n  'G': { index: 4, int_val: 7, accidental: null },\n  'GN': { index: 4, int_val: 7, accidental: 'n' },\n  'G#': { index: 4, int_val: 8, accidental: '#' },\n  'G##': { index: 4, int_val: 9, accidental: '##' },\n  'GB': { index: 4, int_val: 6, accidental: 'b' },\n  'GBB': { index: 4, int_val: 5, accidental: 'bb' },\n  'A': { index: 5, int_val: 9, accidental: null },\n  'AN': { index: 5, int_val: 9, accidental: 'n' },\n  'A#': { index: 5, int_val: 10, accidental: '#' },\n  'A##': { index: 5, int_val: 11, accidental: '##' },\n  'AB': { index: 5, int_val: 8, accidental: 'b' },\n  'ABB': { index: 5, int_val: 7, accidental: 'bb' },\n  'B': { index: 6, int_val: 11, accidental: null },\n  'BN': { index: 6, int_val: 11, accidental: 'n' },\n  'B#': { index: 6, int_val: 12, accidental: '#' },\n  'B##': { index: 6, int_val: 13, accidental: '##' },\n  'BB': { index: 6, int_val: 10, accidental: 'b' },\n  'BBB': { index: 6, int_val: 9, accidental: 'bb' },\n  'R': { index: 6, int_val: 9, rest: true }, // Rest\n  'X': {\n    index: 6,\n    accidental: '',\n    octave: 4,\n    code: 'v3e',\n    shift_right: 5.5,\n  },\n};\n\nFlow.keyProperties.note_glyph = {\n  /* Diamond */\n  'D0': { code: 'v27', shift_right: -0.5 },\n  'D1': { code: 'v2d', shift_right: -0.5 },\n  'D2': { code: 'v22', shift_right: -0.5 },\n  'D3': { code: 'v70', shift_right: -0.5 },\n\n  /* Triangle */\n  'T0': { code: 'v49', shift_right: -2 },\n  'T1': { code: 'v93', shift_right: 0.5 },\n  'T2': { code: 'v40', shift_right: 0.5 },\n  'T3': { code: 'v7d', shift_right: 0.5 },\n\n  /* Cross */\n  'X0': { code: 'v92', shift_right: -2 },\n  'X1': { code: 'v95', shift_right: -0.5 },\n  'X2': { code: 'v7f', shift_right: 0.5 },\n  'X3': { code: 'v3b', shift_right: -2 },\n};\n\nFlow.integerToNote = integer => {\n  if (typeof(integer) === 'undefined') {\n    throw new Vex.RERR('BadArguments', 'Undefined integer for integerToNote');\n  }\n\n  if (integer < -2) {\n    throw new Vex.RERR('BadArguments', `integerToNote requires integer > -2: ${integer}`);\n  }\n\n  const noteValue = Flow.integerToNote.table[integer];\n  if (!noteValue) {\n    throw new Vex.RERR('BadArguments', `Unknown note value for integer: ${integer}`);\n  }\n\n  return noteValue;\n};\n\nFlow.integerToNote.table = {\n  0: 'C',\n  1: 'C#',\n  2: 'D',\n  3: 'D#',\n  4: 'E',\n  5: 'F',\n  6: 'F#',\n  7: 'G',\n  8: 'G#',\n  9: 'A',\n  10: 'A#',\n  11: 'B',\n};\n\n\nFlow.tabToGlyph = (fret, scale = 1.0) => {\n  let glyph = null;\n  let width = 0;\n  let shift_y = 0;\n\n  if (fret.toString().toUpperCase() === 'X') {\n    const glyphMetrics = new Glyph('v7f', Flow.DEFAULT_TABLATURE_FONT_SCALE).getMetrics();\n    glyph = 'v7f';\n    width = glyphMetrics.width;\n    shift_y = -glyphMetrics.height / 2;\n  } else {\n    width = Flow.textWidth(fret.toString());\n  }\n\n  return {\n    text: fret,\n    code: glyph,\n    getWidth: () => width * scale,\n    shift_y,\n  };\n};\n\nFlow.textWidth = text => 7 * text.toString().length;\n\nFlow.articulationCodes = artic => Flow.articulationCodes.articulations[artic];\n\nFlow.articulationCodes.articulations = {\n  'a.': { code: 'v23', between_lines: true }, // Staccato\n  'av': { code: 'v28', between_lines: true }, // Staccatissimo\n  'a>': { code: 'v42', between_lines: true }, // Accent\n  'a-': { code: 'v25', between_lines: true }, // Tenuto\n  'a^': { code: 'va',  between_lines: false }, // Marcato\n  'a+': { code: 'v8b', between_lines: false }, // Left hand pizzicato\n  'ao': { code: 'v94', between_lines: false }, // Snap pizzicato\n  'ah': { code: 'vb9', between_lines: false }, // Natural harmonic or open note\n  'a@a': { code: 'v43', between_lines: false }, // Fermata above staff\n  'a@u': { code: 'v5b', between_lines: false }, // Fermata below staff\n  'a|': { code: 'v75', between_lines: false }, // Bow up - up stroke\n  'am': { code: 'v97', between_lines: false }, // Bow down - down stroke\n  'a,': { code: 'vb3', between_lines: false }, // Choked\n};\n\nFlow.accidentalCodes = acc => Flow.accidentalCodes.accidentals[acc];\n\nFlow.accidentalCodes.accidentals = {\n  '#':   { code: 'v18', parenRightPaddingAdjustment: -1 },\n  '##':  { code: 'v7f', parenRightPaddingAdjustment: -1 },\n  'b':   { code: 'v44', parenRightPaddingAdjustment: -2 },\n  'bb':  { code: 'v26', parenRightPaddingAdjustment: -2 },\n  'n':   { code: 'v4e', parenRightPaddingAdjustment: -1 },\n  '{':   { code: 'v9c', parenRightPaddingAdjustment: -1 },\n  '}':   { code: 'v84', parenRightPaddingAdjustment: -1 },\n  'db':  { code: 'v9e', parenRightPaddingAdjustment: -1 },\n  'd':   { code: 'vab', parenRightPaddingAdjustment:  0 },\n  'bbs': { code: 'v90', parenRightPaddingAdjustment: -1 },\n  '++':  { code: 'v51', parenRightPaddingAdjustment: -1 },\n  '+':   { code: 'v78', parenRightPaddingAdjustment: -1 },\n  '+-':  { code: 'v8d', parenRightPaddingAdjustment: -1 },\n  '++-': { code: 'v7a', parenRightPaddingAdjustment: -1 },\n  'bs':  { code: 'vb7', parenRightPaddingAdjustment: -1 },\n  'bss': { code: 'v39', parenRightPaddingAdjustment: -1 },\n};\n\nFlow.accidentalColumnsTable = {\n  1: { a: [1], b: [1] },\n  2: { a: [1, 2] },\n  3: { a: [1, 3, 2], b: [1, 2, 1], second_on_bottom: [1, 2, 3] },\n  4: { a: [1, 3, 4, 2], b: [1, 2, 3, 1], spaced_out_tetrachord: [1, 2, 1, 2] },\n  5: { a: [1, 3, 5, 4, 2], b: [1, 2, 4, 3, 1],\n        spaced_out_pentachord: [1, 2, 3, 2, 1],\n        very_spaced_out_pentachord: [1, 2, 1, 2, 1] },\n  6: { a: [1, 3, 5, 6, 4, 2], b: [1, 2, 4, 5, 3, 1],\n        spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n        very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2] },\n};\n\nFlow.ornamentCodes = acc => Flow.ornamentCodes.ornaments[acc];\n\nFlow.ornamentCodes.ornaments = {\n  'mordent': { code: 'v1e' },\n  'mordent_inverted': { code: 'v45' },\n  'turn': { code: 'v72' },\n  'turn_inverted': { code: 'v33' },\n  'tr': { code: 'v1f' },\n  'upprall': { code: 'v60' },\n  'downprall': { code: 'vb4' },\n  'prallup': { code: 'v6d' },\n  'pralldown': { code: 'v2c' },\n  'upmordent': { code: 'v29' },\n  'downmordent': { code: 'v68' },\n  'lineprall': { code: 'v20' },\n  'prallprall': { code: 'v86' },\n};\n\nFlow.keySignature = spec => {\n  const keySpec = Flow.keySignature.keySpecs[spec];\n\n  if (!keySpec) {\n    throw new Vex.RERR('BadKeySignature', `Bad key signature spec: '${spec}'`);\n  }\n\n  if (!keySpec.acc) {\n    return [];\n  }\n\n  const notes = Flow.keySignature.accidentalList(keySpec.acc);\n\n  const acc_list = [];\n  for (let i = 0; i < keySpec.num; ++i) {\n    const line = notes[i];\n    acc_list.push({ type: keySpec.acc, line });\n  }\n\n  return acc_list;\n};\n\nFlow.keySignature.keySpecs = {\n  'C': { acc: null, num: 0 },\n  'Am': { acc: null, num: 0 },\n  'F': { acc: 'b', num: 1 },\n  'Dm': { acc: 'b', num: 1 },\n  'Bb': { acc: 'b', num: 2 },\n  'Gm': { acc: 'b', num: 2 },\n  'Eb': { acc: 'b', num: 3 },\n  'Cm': { acc: 'b', num: 3 },\n  'Ab': { acc: 'b', num: 4 },\n  'Fm': { acc: 'b', num: 4 },\n  'Db': { acc: 'b', num: 5 },\n  'Bbm': { acc: 'b', num: 5 },\n  'Gb': { acc: 'b', num: 6 },\n  'Ebm': { acc: 'b', num: 6 },\n  'Cb': { acc: 'b', num: 7 },\n  'Abm': { acc: 'b', num: 7 },\n  'G': { acc: '#', num: 1 },\n  'Em': { acc: '#', num: 1 },\n  'D': { acc: '#', num: 2 },\n  'Bm': { acc: '#', num: 2 },\n  'A': { acc: '#', num: 3 },\n  'F#m': { acc: '#', num: 3 },\n  'E': { acc: '#', num: 4 },\n  'C#m': { acc: '#', num: 4 },\n  'B': { acc: '#', num: 5 },\n  'G#m': { acc: '#', num: 5 },\n  'F#': { acc: '#', num: 6 },\n  'D#m': { acc: '#', num: 6 },\n  'C#': { acc: '#', num: 7 },\n  'A#m': { acc: '#', num: 7 },\n};\n\nFlow.unicode = {\n  // Unicode accidentals\n  'sharp': String.fromCharCode(parseInt('266F', 16)),\n  'flat': String.fromCharCode(parseInt('266D', 16)),\n  'natural': String.fromCharCode(parseInt('266E', 16)),\n  // Major Chord\n  'triangle': String.fromCharCode(parseInt('25B3', 16)),\n  // half-diminished\n  'o-with-slash': String.fromCharCode(parseInt('00F8', 16)),\n   // Diminished\n  'degrees': String.fromCharCode(parseInt('00B0', 16)),\n  'circle': String.fromCharCode(parseInt('25CB', 16)),\n};\n\nFlow.keySignature.accidentalList = (acc) => {\n  const patterns = {\n    'b': [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n    '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n  };\n\n  return patterns[acc];\n};\n\nFlow.parseNoteDurationString = durationString => {\n  if (typeof(durationString) !== 'string') {\n    return null;\n  }\n\n  const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n\n  const result = regexp.exec(durationString);\n  if (!result) {\n    return null;\n  }\n\n  const duration = result[1];\n  const dots = result[2].length;\n  let type = result[3];\n\n  if (type.length === 0) {\n    type = 'n';\n  }\n\n  return {\n    duration,\n    dots,\n    type,\n  };\n};\n\nFlow.parseNoteData = noteData => {\n  const duration = noteData.duration;\n\n  // Preserve backwards-compatibility\n  const durationStringData = Flow.parseNoteDurationString(duration);\n  if (!durationStringData) {\n    return null;\n  }\n\n  let ticks = Flow.durationToTicks(durationStringData.duration);\n  if (ticks == null) {\n    return null;\n  }\n\n  let type = noteData.type;\n\n  if (type) {\n    if (!(type === 'n' || type === 'r' || type === 'h' || type === 'm' || type === 's')) {\n      return null;\n    }\n  } else {\n    type = durationStringData.type;\n    if (!type) {\n      type = 'n';\n    }\n  }\n\n  const dots = noteData.dots ? noteData.dots : durationStringData.dots;\n\n  if (typeof(dots) !== 'number') {\n    return null;\n  }\n\n  let currentTicks = ticks;\n\n  for (let i = 0; i < dots; i++) {\n    if (currentTicks <= 1) return null;\n\n    currentTicks = currentTicks / 2;\n    ticks += currentTicks;\n  }\n\n  return {\n    duration: durationStringData.duration,\n    type,\n    dots,\n    ticks,\n  };\n};\n\n// Used to convert duration aliases to the number based duration.\n// If the input isn't an alias, simply return the input.\n//\n// example: 'q' -> '4', '8' -> '8'\nFlow.sanitizeDuration = duration => {\n  const alias = Flow.durationAliases[duration];\n  if (alias !== undefined) {\n    duration = alias;\n  }\n\n  if (Flow.durationToTicks.durations[duration] === undefined) {\n    throw new Vex.RERR('BadArguments', `The provided duration is not valid: ${duration}`);\n  }\n\n  return duration;\n};\n\n// Convert the `duration` to an fraction\nFlow.durationToFraction = duration => new Fraction().parse(Flow.sanitizeDuration(duration));\n\n// Convert the `duration` to an number\nFlow.durationToNumber = duration => Flow.durationToFraction(duration).value();\n\n// Convert the `duration` to total ticks\nFlow.durationToTicks = duration => {\n  duration = Flow.sanitizeDuration(duration);\n\n  const ticks = Flow.durationToTicks.durations[duration];\n  if (ticks === undefined) {\n    return null;\n  }\n\n  return ticks;\n};\n\nFlow.durationToTicks.durations = {\n  '1/2': Flow.RESOLUTION * 2,\n  '1': Flow.RESOLUTION / 1,\n  '2': Flow.RESOLUTION / 2,\n  '4': Flow.RESOLUTION / 4,\n  '8': Flow.RESOLUTION / 8,\n  '16': Flow.RESOLUTION / 16,\n  '32': Flow.RESOLUTION / 32,\n  '64': Flow.RESOLUTION / 64,\n  '128': Flow.RESOLUTION / 128,\n  '256': Flow.RESOLUTION / 256,\n};\n\nFlow.durationAliases = {\n  'w': '1',\n  'h': '2',\n  'q': '4',\n\n  // This is the default duration used to render bars (BarNote). Bars no longer\n  // consume ticks, so this should be a no-op.\n  //\n  // TODO(0xfe): This needs to be cleaned up.\n  'b': '256',\n};\n\nFlow.durationToGlyph = (duration, type) => {\n  duration = Flow.sanitizeDuration(duration);\n\n  const code = Flow.durationToGlyph.duration_codes[duration];\n  if (code === undefined) {\n    return null;\n  }\n\n  if (!type) {\n    type = 'n';\n  }\n\n  const glyphTypeProperties = code.type[type];\n  if (glyphTypeProperties === undefined) {\n    return null;\n  }\n\n  return Vex.Merge(Vex.Merge({}, code.common), glyphTypeProperties);\n};\n\nFlow.durationToGlyph.duration_codes = {\n  '1/2': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v53', scale).getMetrics().width;\n      },\n      stem: false,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: -Flow.STEM_HEIGHT,\n      stem_down_extension: -Flow.STEM_HEIGHT,\n      gracenote_stem_up_extension: -Flow.STEM_HEIGHT,\n      gracenote_stem_down_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Breve note\n        code_head: 'v53',\n      },\n      'h': { // Breve note harmonic\n        code_head: 'v59',\n      },\n      'm': { // Breve note muted -\n        code_head: 'vf',\n        stem_offset: 0,\n      },\n      'r': { // Breve rest\n        code_head: 'v31',\n        rest: true,\n        position: 'B/5',\n        dot_shiftY: 0.5,\n      },\n      's': { // Breve note slash -\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '1': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v1d', scale).getMetrics().width;\n      },\n      stem: false,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: -Flow.STEM_HEIGHT,\n      stem_down_extension: -Flow.STEM_HEIGHT,\n      gracenote_stem_up_extension: -Flow.STEM_HEIGHT,\n      gracenote_stem_down_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Whole note\n        code_head: 'v1d',\n      },\n      'h': { // Whole note harmonic\n        code_head: 'v46',\n      },\n      'm': { // Whole note muted\n        code_head: 'v92',\n        stem_offset: -3,\n      },\n      'r': { // Whole rest\n        code_head: 'v5c',\n        rest: true,\n        position: 'D/5',\n        dot_shiftY: 0.5,\n      },\n      's': { // Whole note slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '2': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v81', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      gracenote_stem_up_extension: -14,\n      gracenote_stem_down_extension: -14,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Half note\n        code_head: 'v81',\n      },\n      'h': { // Half note harmonic\n        code_head: 'v2d',\n      },\n      'm': { // Half note muted\n        code_head: 'v95',\n        stem_offset: -3,\n      },\n      'r': { // Half rest\n        code_head: 'vc',\n        stem: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n      },\n      's': { // Half note slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '4': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      gracenote_stem_up_extension: -14,\n      gracenote_stem_down_extension: -14,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Quarter note\n        code_head: 'vb',\n      },\n      'h': { // Quarter harmonic\n        code_head: 'v22',\n      },\n      'm': { // Quarter muted\n        code_head: 'v3e',\n        stem_offset: -3,\n      },\n      'r': { // Quarter rest\n        code_head: 'v7c',\n        stem: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.5,\n        line_below: 1.5,\n      },\n      's': { // Quarter slash\n         // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '8': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      beam_count: 1,\n      code_flag_upstem: 'v54',\n      code_flag_downstem: 'v9a',\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      gracenote_stem_up_extension: -14,\n      gracenote_stem_down_extension: -14,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Eighth note\n        code_head: 'vb',\n      },\n      'h': { // Eighth note harmonic\n        code_head: 'v22',\n      },\n      'm': { // Eighth note muted\n        code_head: 'v3e',\n      },\n      'r': { // Eighth rest\n        code_head: 'va5',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 1.0,\n      },\n      's': { // Eight slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '16': {\n    common: {\n      beam_count: 2,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v3f',\n      code_flag_downstem: 'v8f',\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      gracenote_stem_up_extension: -14,\n      gracenote_stem_down_extension: -14,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Sixteenth note\n        code_head: 'vb',\n      },\n      'h': { // Sixteenth note harmonic\n        code_head: 'v22',\n      },\n      'm': { // Sixteenth note muted\n        code_head: 'v3e',\n      },\n      'r': { // Sixteenth rest\n        code_head: 'v3c',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 2.0,\n      },\n      's': { // Sixteenth slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '32': {\n    common: {\n      beam_count: 3,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v47',\n      code_flag_downstem: 'v2a',\n      stem_up_extension: 9,\n      stem_down_extension: 9,\n      gracenote_stem_up_extension: -12,\n      gracenote_stem_down_extension: -12,\n      tabnote_stem_up_extension: 8,\n      tabnote_stem_down_extension: 5,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Thirty-second note\n        code_head: 'vb',\n      },\n      'h': { // Thirty-second harmonic\n        code_head: 'v22',\n      },\n      'm': { // Thirty-second muted\n        code_head: 'v3e',\n      },\n      'r': { // Thirty-second rest\n        code_head: 'v55',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 2.0,\n      },\n      's': { // Thirty-second slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '64': {\n    common: {\n      beam_count: 4,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'va9',\n      code_flag_downstem: 'v58',\n      stem_up_extension: 13,\n      stem_down_extension: 13,\n      gracenote_stem_up_extension: -10,\n      gracenote_stem_down_extension: -10,\n      tabnote_stem_up_extension: 12,\n      tabnote_stem_down_extension: 9,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Sixty-fourth note\n        code_head: 'vb',\n      },\n      'h': { // Sixty-fourth harmonic\n        code_head: 'v22',\n      },\n      'm': { // Sixty-fourth muted\n        code_head: 'v3e',\n      },\n      'r': { // Sixty-fourth rest\n        code_head: 'v38',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 3.0,\n      },\n      's': { // Sixty-fourth slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '128': {\n    common: {\n      beam_count: 5,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v9b',\n      code_flag_downstem: 'v30',\n      stem_up_extension: 22,\n      stem_down_extension: 22,\n      gracenote_stem_up_extension: -8,\n      gracenote_stem_down_extension: -8,\n      tabnote_stem_up_extension: 21,\n      tabnote_stem_down_extension: 18,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': {  // Hundred-twenty-eight note\n        code_head: 'vb',\n      },\n      'h': { // Hundred-twenty-eight harmonic\n        code_head: 'v22',\n      },\n      'm': { // Hundred-twenty-eight muted\n        code_head: 'v3e',\n      },\n      'r': {  // Hundred-twenty-eight rest\n        code_head: 'vaa',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: 1.5,\n        line_above: 3.0,\n        line_below: 3.0,\n      },\n      's': { // Hundred-twenty-eight rest\n              // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n};\n\n// Some defaults\nFlow.TIME4_4 = {\n  num_beats: 4,\n  beat_value: 4,\n  resolution: Flow.RESOLUTION,\n};\nexport { Flow };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tables.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Fraction class that represents a rational number\n//\n// @author zz85\n// @author incompleteopus (modifications)\n\n/* eslint-disable no-underscore-dangle */\n\nimport { Vex } from './vex';\nexport class Fraction {\n\n  /**\n   * GCD: Find greatest common divisor using Euclidean algorithm\n   */\n  static GCD(a, b) {\n    if (typeof a !== 'number' || typeof b !== 'number') {\n      throw new Vex.RERR('BadArgument', `Invalid numbers: ${a}, ${b}`);\n    }\n\n    let t;\n\n    while (b !== 0) {\n      t = b;\n      b = a % b;\n      a = t;\n    }\n\n    return a;\n  }\n\n  /**\n   * LCM: Lowest common multiple\n   */\n  static LCM(a, b) {\n    return ((a * b) / Fraction.GCD(a, b));\n  }\n\n  /**\n   * LCMM: Lowest common multiple for more than two numbers\n   */\n  static LCMM(args) {\n    if (args.length === 0) {\n      return 0;\n    } else if (args.length === 1) {\n      return args[0];\n    } else if (args.length === 2) {\n      return Fraction.LCM(args[0], args[1]);\n    } else {\n      const arg0 = args[0];\n      args.shift();\n      return Fraction.LCM(arg0, Fraction.LCMM(args));\n    }\n  }\n\n  constructor(numerator, denominator) {\n    this.set(numerator, denominator);\n  }\n  set(numerator, denominator) {\n    this.numerator = numerator === undefined ? 1 : numerator;\n    this.denominator = denominator === undefined ? 1 : denominator;\n    return this;\n  }\n  value() {\n    return this.numerator / this.denominator;\n  }\n  simplify() {\n    let u = this.numerator;\n    let d = this.denominator;\n\n    const gcd = Fraction.GCD(u, d);\n    u /= gcd;\n    d /= gcd;\n\n    if (d < 0) {\n      d = -d;\n      u = -u;\n    }\n    return this.set(u, d);\n  }\n  add(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 0;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n\n    const u = this.numerator * a + otherNumerator * b;\n    return this.set(u, lcm);\n  }\n  subtract(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 0;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n\n    const u = this.numerator * a - otherNumerator * b;\n    return this.set(u, lcm);\n  }\n  multiply(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 1;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n  }\n  divide(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 1;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n  }\n\n  // Simplifies both sides and checks if they are equal.\n  equals(compare) {\n    const a = Fraction.__compareA.copy(compare).simplify();\n    const b = Fraction.__compareB.copy(this).simplify();\n\n    return (a.numerator === b.numerator) && (a.denominator === b.denominator);\n  }\n\n  // Greater than operator.\n  greaterThan(compare) {\n    const a = Fraction.__compareB.copy(this);\n    a.subtract(compare);\n    return (a.numerator > 0);\n  }\n\n  // Greater than or equals operator.\n  greaterThanEquals(compare) {\n    const a = Fraction.__compareB.copy(this);\n    a.subtract(compare);\n    return (a.numerator >= 0);\n  }\n\n  // Less than operator.\n  lessThan(compare) {\n    return !(this.greaterThanEquals(compare));\n  }\n\n  // Less than or equals operator.\n  lessThanEquals(compare) {\n    return !(this.greaterThan(compare));\n  }\n\n  // Creates a new copy with this current values.\n  clone() {\n    return new Fraction(this.numerator, this.denominator);\n  }\n\n  // Copies value of another Fraction into itself.\n  copy(copy) {\n    return this.set(copy.numerator, copy.denominator);\n  }\n\n  // Returns the integer component eg. (4/2) == 2\n  quotient() {\n    return Math.floor(this.numerator / this.denominator);\n  }\n\n  // Returns the fraction component when reduced to a mixed number\n  fraction() {\n    return this.numerator % this.denominator;\n  }\n\n  // Returns the absolute value\n  abs() {\n    this.denominator = Math.abs(this.denominator);\n    this.numerator = Math.abs(this.numerator);\n    return this;\n  }\n\n  // Returns a raw string representation\n  toString() {\n    return this.numerator + '/' + this.denominator;\n  }\n\n  // Returns a simplified string respresentation\n  toSimplifiedString() {\n    return Fraction.__tmp.copy(this).simplify().toString();\n  }\n\n  // Returns string representation in mixed form\n  toMixedString() {\n    let s = '';\n    const q = this.quotient();\n    const f = Fraction.__tmp.copy(this);\n\n    if (q < 0) {\n      f.abs().fraction();\n    } else {\n      f.fraction();\n    }\n\n    if (q !== 0) {\n      s += q;\n\n      if (f.numerator !== 0) {\n        s += ' ' + f.toSimplifiedString();\n      }\n    } else {\n      if (f.numerator === 0) {\n        s = '0';\n      } else {\n        s = f.toSimplifiedString();\n      }\n    }\n\n    return s;\n  }\n\n  // Parses a fraction string\n  parse(str) {\n    const i = str.split('/');\n    const n = parseInt(i[0], 10);\n    const d = (i[1]) ? parseInt(i[1], 10) : 1;\n\n    return this.set(n, d);\n  }\n}\n\n// Temporary cached objects\nFraction.__compareA = new Fraction();\nFraction.__compareB = new Fraction();\nFraction.__tmp = new Fraction();\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/fraction.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { BoundingBox } from './boundingbox';\nimport { Font } from './fonts/vexflow_font';\n\nfunction processOutline(outline, originX, originY, scaleX, scaleY, outlineFns) {\n  let command;\n  let x;\n  let y;\n  let i = 0;\n\n  function nextX() { return originX + outline[i++] * scaleX; }\n  function nextY() { return originY + outline[i++] * scaleY; }\n\n  while (i < outline.length) {\n    command = outline[i++];\n    switch (command) {\n      case 'm':\n      case 'l':\n        outlineFns[command](nextX(), nextY());\n        break;\n      case 'q':\n        x = nextX();\n        y = nextY();\n        outlineFns.q(nextX(), nextY(), x, y);\n        break;\n      case 'b':\n        x = nextX();\n        y = nextY();\n        outlineFns.b(nextX(), nextY(), nextX(), nextY(), x, y);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class Glyph extends Element {\n  /* Static methods used to implement loading / unloading of glyphs */\n  static loadMetrics(font, code, cache) {\n    const glyph = font.glyphs[code];\n    if (!glyph) {\n      throw new Vex.RERR('BadGlyph', `Glyph ${code} does not exist in font.`);\n    }\n\n    const x_min = glyph.x_min;\n    const x_max = glyph.x_max;\n    const ha = glyph.ha;\n\n    let outline;\n\n    if (glyph.o) {\n      if (cache) {\n        if (glyph.cached_outline) {\n          outline = glyph.cached_outline;\n        } else {\n          outline = glyph.o.split(' ');\n          glyph.cached_outline = outline;\n        }\n      } else {\n        if (glyph.cached_outline) delete glyph.cached_outline;\n        outline = glyph.o.split(' ');\n      }\n\n      return {\n        x_min,\n        x_max,\n        ha,\n        outline,\n      };\n    } else {\n      throw new Vex.RERR('BadGlyph', `Glyph ${code} has no outline defined.`);\n    }\n  }\n\n  /**\n   * A quick and dirty static glyph renderer. Renders glyphs from the default\n   * font defined in Vex.Flow.Font.\n   *\n   * @param {!Object} ctx The canvas context.\n   * @param {number} x_pos X coordinate.\n   * @param {number} y_pos Y coordinate.\n   * @param {number} point The point size to use.\n   * @param {string} val The glyph code in Vex.Flow.Font.\n   * @param {boolean} nocache If set, disables caching of font outline.\n   */\n  static renderGlyph(ctx, x_pos, y_pos, point, val, nocache) {\n    const scale = point * 72.0 / (Font.resolution * 100.0);\n    const metrics = Glyph.loadMetrics(Font, val, !nocache);\n    Glyph.renderOutline(ctx, metrics.outline, scale, x_pos, y_pos);\n  }\n\n  static renderOutline(ctx, outline, scale, x_pos, y_pos) {\n    ctx.beginPath();\n    ctx.moveTo(x_pos, y_pos);\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: ctx.moveTo.bind(ctx),\n      l: ctx.lineTo.bind(ctx),\n      q: ctx.quadraticCurveTo.bind(ctx),\n      b: ctx.bezierCurveTo.bind(ctx),\n    });\n    ctx.fill();\n  }\n\n  static getOutlineBoundingBox(outline, scale, x_pos, y_pos) {\n    const bboxComp = new BoundingBoxComputation();\n\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: bboxComp.addPoint.bind(bboxComp),\n      l: bboxComp.addPoint.bind(bboxComp),\n      q: bboxComp.addQuadraticCurve.bind(bboxComp),\n      b: bboxComp.addBezierCurve.bind(bboxComp),\n    });\n\n    return new BoundingBox(\n      bboxComp.x1,\n      bboxComp.y1,\n      bboxComp.width(),\n      bboxComp.height()\n    );\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(code, point, options) {\n    super();\n    this.setAttribute('type', 'Glyph');\n\n    this.code = code;\n    this.point = point;\n    this.options = {\n      cache: true,\n      font: Font,\n    };\n\n    this.metrics = null;\n    this.x_shift = 0;\n    this.y_shift = 0;\n\n    this.originShift = {\n      x: 0,\n      y: 0,\n    };\n\n    if (options) {\n      this.setOptions(options);\n    } else {\n      this.reset();\n    }\n  }\n\n  setOptions(options) {\n    Vex.Merge(this.options, options);\n    this.reset();\n  }\n\n  setPoint(point) { this.point = point; return this; }\n  setStave(stave) { this.stave = stave; return this; }\n  setXShift(x_shift) { this.x_shift = x_shift; return this; }\n  setYShift(y_shift) { this.y_shift = y_shift; return this; }\n\n  reset() {\n    this.scale = this.point * 72 / (this.options.font.resolution * 100);\n    this.metrics = Glyph.loadMetrics(\n      this.options.font,\n      this.code,\n      this.options.cache\n    );\n    this.bbox = Glyph.getOutlineBoundingBox(\n      this.metrics.outline,\n      this.scale,\n      0,\n      0\n    );\n  }\n\n  getMetrics() {\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    return {\n      x_min: this.metrics.x_min * this.scale,\n      x_max: this.metrics.x_max * this.scale,\n      width: this.bbox.getW(),\n      height: this.bbox.getH(),\n    };\n  }\n\n  setOriginX(x) {\n    const { bbox } = this;\n    const originX = Math.abs(bbox.getX() / bbox.getW());\n    const xShift = (x - originX) * bbox.getW();\n    this.originShift.x = -xShift;\n  }\n\n  setOriginY(y) {\n    const { bbox } = this;\n    const originY = Math.abs(bbox.getY() / bbox.getH());\n    const yShift = (y - originY) * bbox.getH();\n    this.originShift.y = -yShift;\n  }\n\n  setOrigin(x, y) {\n    this.setOriginX(x);\n    this.setOriginY(y);\n  }\n\n  render(ctx, x, y) {\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale;\n\n    this.setRendered();\n    Glyph.renderOutline(ctx, outline, scale, x + this.originShift.x, y + this.originShift.y);\n  }\n\n  renderToStave(x) {\n    this.checkContext();\n\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    if (!this.stave) {\n      throw new Vex.RuntimeError('GlyphError', 'No valid stave');\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale;\n\n    this.setRendered();\n    Glyph.renderOutline(this.context, outline, scale,\n        x + this.x_shift, this.stave.getYForGlyphs() + this.y_shift);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/glyph.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a generic base class for VexFlow, with implementations\n// of general functions and properties that can be inherited by all VexFlow elements.\n\nimport { Vex } from './vex';\nimport { Registry } from './registry';\n\nexport class Element {\n  static newID() { return 'auto' + (Element.ID++); }\n\n  constructor({ type } = {}) {\n    this.attrs = {\n      id: Element.newID(),\n      el: null,\n      type: type || 'Base',\n      classes: {},\n    };\n\n    this.boundingBox = null;\n    this.context = null;\n    this.rendered = false;\n\n    // If a default registry exist, then register with it right away.\n    if (Registry.getDefaultRegistry()) {\n      Registry.getDefaultRegistry().register(this);\n    }\n  }\n\n  // An element can have multiple class labels.\n  hasClass(className) { return (this.attrs.classes[className] === true); }\n  addClass(className) {\n    this.attrs.classes[className] = true;\n    if (this.registry) {\n      this.registry.onUpdate({\n        id: this.getAttribute('id'),\n        name: 'class',\n        value: className,\n        oldValue: null,\n      });\n    }\n    return this;\n  }\n\n  removeClass(className) {\n    delete this.attrs.classes[className];\n    if (this.registry) {\n      this.registry.onUpdate({\n        id: this.getAttribute('id'),\n        name: 'class',\n        value: null,\n        oldValue: className,\n      });\n    }\n    return this;\n  }\n\n  // This is called by the registry after the element is registered.\n  onRegister(registry) { this.registry = registry; return this; }\n  isRendered() { return this.rendered; }\n  setRendered(rendered = true) { this.rendered = rendered; return this; }\n\n  getAttributes() { return this.attrs; }\n  getAttribute(name) { return this.attrs[name]; }\n  setAttribute(name, value) {\n    const id = this.attrs.id;\n    const oldValue = this.attrs[name];\n    this.attrs[name] = value;\n    if (this.registry) {\n      // Register with old id to support id changes.\n      this.registry.onUpdate({ id, name, value, oldValue });\n    }\n    return this;\n  }\n\n  getContext() { return this.context; }\n  setContext(context) { this.context = context; return this; }\n  getBoundingBox() { return this.boundingBox; }\n\n  // Validators\n  checkContext() {\n    if (!this.context) {\n      throw new Vex.RERR('NoContext', 'No rendering context attached to instance');\n    }\n    return this.context;\n  }\n}\n\nElement.ID = 1000;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/element.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a registry for VexFlow elements. It allows users\n// to track, query, and manage some subset of generated elements, and\n// dynamically get and set attributes.\n//\n// There are two ways to regiser with a registry:\n//\n// 1) Explicitly call `element.register(registry)`, or,\n// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n//    elements will automatically register with it.\n//\n// Once an element is registered, selected attributes are tracked and indexed by\n// the registry. This allows fast look up of elements by attributes like id, type,\n// and class.\n\nimport { Vex } from './vex';\n\nexport const X = Vex.MakeException('RegistryError');\n\nfunction setIndexValue(index, name, value, id, elem) {\n  if (!index[name][value]) index[name][value] = {};\n  index[name][value][id] = elem;\n}\n\nexport class Registry {\n  static get INDEXES() { return ['type']; }\n\n  constructor() {\n    this.clear();\n  }\n\n  // If you call `enableDefaultRegistry`, any new elements will auto-register with\n  // the provided registry as soon as they're constructed.\n  static enableDefaultRegistry(registry) {\n    Registry.defaultRegistry = registry;\n  }\n\n  static getDefaultRegistry() {\n    return Registry.defaultRegistry;\n  }\n\n  static disableDefaultRegistry() {\n    Registry.defaultRegistry = null;\n  }\n\n  clear() {\n    // Indexes are represented as maps of maps (of maps). This allows\n    // for both multi-labeling (e.g., an element can have multiple classes)\n    // and efficient lookup.\n    this.index = {\n      id: {},\n      type: {},\n      class: {},\n    };\n    return this;\n  }\n\n  // Updates the indexes for element 'id'. If an element's attribute changes\n  // from A -> B, make sure to remove the element from A.\n  updateIndex({ id, name, value, oldValue }) {\n    const elem = this.getElementById(id);\n    if (oldValue !== null && this.index[name][oldValue]) {\n      delete this.index[name][oldValue][id];\n    }\n    if (value !== null) {\n      setIndexValue(this.index, name, value, elem.getAttribute('id'), elem);\n    }\n  }\n\n  // Register element `elem` with this registry. This adds the element to its index and watches\n  // it for attribute changes.\n  register(elem, id) {\n    id = id || elem.getAttribute('id');\n\n    if (!id) {\n      throw new X('Can\\'t add element without `id` attribute to registry', elem);\n    }\n\n    // Manually add id to index, then update other indexes.\n    elem.setAttribute('id', id);\n    setIndexValue(this.index, 'id', id, id, elem);\n    Registry.INDEXES.forEach(name => {\n      this.updateIndex({ id, name, value: elem.getAttribute(name), oldValue: null });\n    });\n    elem.onRegister(this);\n    return this;\n  }\n\n  getElementById(id) {\n    return this.index.id[id] ? this.index.id[id][id] : null;\n  }\n\n  getElementsByAttribute(attrName, value) {\n    const index = this.index[attrName];\n    if (index && index[value]) {\n      return Object.keys(index[value]).map(i => index[value][i]);\n    } else {\n      return [];\n    }\n  }\n\n  getElementsByType(type) { return this.getElementsByAttribute('type', type); }\n  getElementsByClass(className) { return this.getElementsByAttribute('class', className); }\n\n  // This is called by the element when an attribute value changes. If an indexed\n  // attribute changes, then update the local index.\n  onUpdate({ id, name, value, oldValue }) {\n    function includes(array, value) {\n      return array.filter(x => x === value).length > 0;\n    }\n\n    if (!includes(Registry.INDEXES.concat(['id', 'class']), name)) return this;\n    this.updateIndex({ id, name, value, oldValue });\n    return this;\n  }\n}\n\nRegistry.defaultRegistry = null;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/registry.js\n **/","// ## Description\n//\n// Object which computes metrics for a bounding box by continuously\n// taking canvas path commands\n\n// Warning: This file is merely a crutch to get bounding box information without\n// explicit metadata. This is likely to get deprecated following SMuFL support.\n//\n// taken from: https://github.com/gabelerner/canvg/blob/860e418aca67b9a41e858a223d74d375793ec364/ca\n// nvg.js#L449\n\nexport class BoundingBoxComputation {\n  constructor(x1, y1, x2, y2) { // pass in initial points if you want\n    this.x1 = Number.NaN;\n    this.y1 = Number.NaN;\n    this.x2 = Number.NaN;\n    this.y2 = Number.NaN;\n\n    this.addPoint(x1, y1);\n    this.addPoint(x2, y2);\n  }\n\n  width() {\n    return this.x2 - this.x1;\n  }\n\n  height() {\n    return this.y2 - this.y1;\n  }\n\n  addPoint(x, y) {\n    if (x != null) {\n      if (isNaN(this.x1) || isNaN(this.x2)) {\n        this.x1 = x;\n        this.x2 = x;\n      }\n      if (x < this.x1) this.x1 = x;\n      if (x > this.x2) this.x2 = x;\n    }\n\n    if (y != null) {\n      if (isNaN(this.y1) || isNaN(this.y2)) {\n        this.y1 = y;\n        this.y2 = y;\n      }\n      if (y < this.y1) this.y1 = y;\n      if (y > this.y2) this.y2 = y;\n    }\n  }\n\n  addX(x) {\n    this.addPoint(x, null);\n  }\n\n  addY(y) {\n    this.addPoint(null, y);\n  }\n\n  addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n    const cp1x = p0x + 2 / 3 * (p1x - p0x); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp1y = p0y + 2 / 3 * (p1y - p0y); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp2x = cp1x + 1 / 3 * (p2x - p0x); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    const cp2y = cp1y + 1 / 3 * (p2y - p0y); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    this.addBezierCurve(p0x, p0y, cp1x, cp1y, cp2x, cp2y, p2x, p2y);\n  }\n\n  addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n    // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    const p0 = [p0x, p0y];\n    const p1 = [p1x, p1y];\n    const p2 = [p2x, p2y];\n    const p3 = [p3x, p3y];\n    let i;\n\n    this.addPoint(p0[0], p0[1]);\n    this.addPoint(p3[0], p3[1]);\n\n    const f = (t, i) => Math.pow(1 - t, 3) * p0[i] +\n      3 * Math.pow(1 - t, 2) * t * p1[i] +\n      3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n      Math.pow(t, 3) * p3[i];\n\n    for (i = 0; i <= 1; i++) {\n      const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n      const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n      const c = 3 * p1[i] - 3 * p0[i];\n\n      if (a === 0) {\n        if (b === 0) continue;\n        const t = -c / b;\n        if (0 < t && t < 1) {\n          if (i === 0) this.addX(f(t, i));\n          if (i === 1) this.addY(f(t, i));\n        }\n        continue;\n      }\n\n      const b2ac = Math.pow(b, 2) - 4 * c * a;\n      if (b2ac < 0) continue;\n      const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        if (i === 0) this.addX(f(t1, i));\n        if (i === 1) this.addY(f(t1, i));\n      }\n      const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        if (i === 0) this.addX(f(t2, i));\n        if (i === 1) this.addY(f(t2, i));\n      }\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/boundingboxcomputation.js\n **/","// Vex Music Notation\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// Copyright Mohit Muthanna 2010\n\n// Bounding boxes for interactive notation\n\nexport class BoundingBox {\n  static copy(that) {\n    return new BoundingBox(that.x, that.y, that.w, that.h);\n  }\n\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }\n  getX() { return this.x; }\n  getY() { return this.y; }\n  getW() { return this.w; }\n  getH() { return this.h; }\n  setX(x) { this.x = x; return this; }\n  setY(y) { this.y = y; return this; }\n  setW(w) { this.w = w; return this; }\n  setH(h) { this.h = h; return this; }\n  move(x, y) { this.x += x; this.y += y; }\n  clone() { return BoundingBox.copy(this); }\n\n  // Merge my box with given box. Creates a bigger bounding box unless\n  // the given box is contained in this one.\n  mergeWith(boundingBox, ctx) {\n    const that = boundingBox;\n\n    const new_x = this.x < that.x ? this.x : that.x;\n    const new_y = this.y < that.y ? this.y : that.y;\n    const new_w = (this.x + this.w) < (that.x + that.w)\n      ? (that.x + that.w) - this.x\n      : (this.x + this.w) - Math.min(this.x, that.x);\n    const new_h = (this.y + this.h) < (that.y + that.h)\n      ? (that.y + that.h) - this.y\n      : (this.y + this.h) - Math.min(this.y, that.y);\n\n    this.x = new_x;\n    this.y = new_y;\n    this.w = new_w;\n    this.h = new_h;\n\n    if (ctx) this.draw(ctx);\n    return this;\n  }\n\n  draw(ctx, x, y) {\n    if (!x) x = 0;\n    if (!y) y = 0;\n    ctx.rect(this.x + x, this.y + y, this.w, this.h);\n    ctx.stroke();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/boundingbox.js\n **/","export var Font = {\n\"glyphs\":{\n\"v0\":{\"x_min\":0,\"x_max\":514.5,\"ha\":525,\"o\":\"m 236 648 b 246 648 238 648 242 648 b 288 646 261 648 283 648 b 472 513 364 634 428 587 b 514 347 502 464 514 413 b 462 163 514 272 499 217 b 257 44 409 83 333 44 b 50 163 181 44 103 83 b 0 347 14 217 0 272 b 40 513 0 413 12 464 b 236 648 87 591 155 638 m 277 614 b 253 616 273 616 261 616 b 242 616 247 616 243 616 b 170 499 193 609 181 589 b 159 348 163 446 159 398 b 166 222 159 308 161 266 b 201 91 174 138 183 106 b 257 76 215 81 235 76 b 311 91 277 76 299 81 b 347 222 330 106 338 138 b 353 348 352 266 353 308 b 344 499 353 398 351 446 b 277 614 333 587 322 606 m 257 -1 l 258 -1 l 255 -1 l 257 -1 m 257 673 l 258 673 l 255 673 l 257 673 \"},\n\"v1\":{\"x_min\":-1.359375,\"x_max\":344.359375,\"ha\":351,\"o\":\"m 126 637 l 129 638 l 198 638 l 266 638 l 269 635 b 274 631 272 634 273 632 l 277 627 l 277 395 b 279 156 277 230 277 161 b 329 88 281 123 295 106 b 344 69 341 81 344 79 b 337 55 344 62 343 59 l 333 54 l 197 54 l 61 54 l 58 55 b 50 69 53 59 50 62 b 65 88 50 79 53 81 b 80 97 72 91 74 93 b 117 156 103 113 112 129 b 117 345 117 161 117 222 l 117 528 l 100 503 l 38 406 b 14 383 24 384 23 383 b -1 398 5 383 -1 390 b 4 415 -1 403 1 409 b 16 437 5 416 10 426 l 72 539 l 100 596 b 121 632 119 631 119 631 b 126 637 122 634 125 635 m 171 -1 l 172 -1 l 170 -1 l 171 -1 m 171 673 l 172 673 l 170 673 l 171 673 \"},\n\"v2\":{\"x_min\":-1.359375,\"x_max\":458.6875,\"ha\":468,\"o\":\"m 197 648 b 216 648 201 648 208 648 b 258 646 232 648 253 648 b 419 546 333 637 393 599 b 432 489 428 528 432 509 b 356 342 432 440 405 384 b 235 278 322 313 288 295 b 69 170 166 256 107 217 b 69 169 69 170 69 169 b 69 169 69 169 69 169 b 74 173 69 169 72 170 b 209 222 112 204 163 222 b 310 195 247 222 274 215 b 371 179 332 184 352 179 b 396 181 379 179 387 179 b 428 202 409 184 423 194 b 442 212 431 209 436 212 b 458 197 450 212 458 206 b 441 148 458 190 449 165 b 299 44 409 84 353 44 b 288 45 295 44 292 44 b 250 61 274 45 268 49 b 122 99 212 86 164 99 b 73 91 104 99 88 97 b 28 63 53 84 34 72 b 14 54 25 56 20 54 b 1 62 9 54 4 56 l -1 65 l -1 79 b 0 99 -1 91 0 95 b 2 113 1 102 2 108 b 164 309 20 197 81 272 b 285 470 232 341 277 398 b 287 487 287 476 287 481 b 171 595 287 551 239 595 b 155 595 166 595 160 595 b 142 592 145 594 142 594 b 145 589 142 592 142 591 b 179 527 168 576 179 551 b 132 455 179 496 163 467 b 104 451 122 452 112 451 b 27 530 62 451 27 487 b 29 555 27 538 27 546 b 197 648 44 601 115 639 m 228 -1 l 230 -1 l 227 -1 l 228 -1 m 228 673 l 230 673 l 227 673 l 228 673 \"},\n\"v3\":{\"x_min\":-1.359375,\"x_max\":409.6875,\"ha\":418,\"o\":\"m 174 648 b 191 648 176 648 183 648 b 225 648 204 648 220 648 b 402 523 317 638 389 588 b 404 503 404 517 404 510 b 402 484 404 495 404 488 b 264 373 389 437 334 394 b 257 370 259 371 257 371 b 257 370 257 370 257 370 b 264 369 258 370 261 369 b 409 202 359 334 409 267 b 318 72 409 152 381 104 b 200 43 281 52 240 43 b 23 113 134 43 69 68 b 0 169 6 129 0 149 b 77 249 0 210 29 249 l 77 249 b 152 174 125 249 152 212 b 103 102 152 145 137 116 b 103 102 103 102 103 102 b 147 94 103 101 132 95 b 153 94 149 94 151 94 b 265 206 219 94 265 141 b 264 226 265 213 265 219 b 147 355 253 299 204 353 b 126 371 133 356 126 362 b 147 388 126 383 132 388 b 254 474 196 391 238 424 b 259 502 258 484 259 494 b 182 592 259 544 228 582 b 156 595 175 595 166 595 b 115 592 142 595 129 594 l 111 591 l 115 588 b 152 524 141 574 152 549 b 92 449 152 491 130 458 b 76 448 87 448 81 448 b -1 530 32 448 -1 488 b 20 581 -1 548 5 566 b 174 648 55 619 108 641 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 \"},\n\"v4\":{\"x_min\":0,\"x_max\":468.21875,\"ha\":478,\"o\":\"m 174 637 b 232 638 175 638 189 638 b 277 638 245 638 259 638 l 378 638 l 381 635 b 389 623 386 632 389 627 b 382 609 389 617 386 613 b 366 589 381 606 372 598 l 313 528 l 245 451 l 209 410 l 155 348 l 84 267 b 59 240 72 252 59 240 b 59 240 59 240 59 240 b 151 238 59 238 68 238 l 242 238 l 242 303 b 243 371 242 369 242 370 b 289 426 245 374 254 385 l 303 441 l 317 456 l 338 483 l 360 506 l 371 520 b 386 527 375 526 381 527 b 400 519 392 527 397 524 b 401 440 401 516 401 514 b 401 377 401 423 401 402 l 401 238 l 426 238 b 453 237 449 238 450 238 b 465 217 461 234 465 226 b 460 202 465 212 464 206 b 426 197 454 197 453 197 l 401 197 l 401 180 b 451 88 402 129 412 109 b 468 69 465 81 468 79 b 461 55 468 62 466 59 l 458 54 l 321 54 l 185 54 l 182 55 b 175 69 176 59 175 62 b 191 88 175 79 176 81 b 240 180 230 109 240 129 l 240 197 l 125 197 b 73 195 104 195 87 195 b 8 197 10 195 9 197 b 0 212 2 199 0 205 b 0 212 0 212 0 212 b 20 242 0 219 0 219 b 163 610 104 344 163 492 b 174 637 163 628 166 634 m 234 -1 l 235 -1 l 232 -1 l 234 -1 m 234 673 l 235 673 l 232 673 l 234 673 \"},\n\"v5\":{\"x_min\":0,\"x_max\":409.6875,\"ha\":418,\"o\":\"m 47 637 b 53 638 49 638 50 638 b 69 634 55 638 61 637 b 210 610 114 619 161 610 b 363 634 259 610 311 619 b 382 638 372 637 378 638 b 392 634 386 638 389 637 b 397 623 396 630 397 627 b 393 610 397 620 396 616 b 298 505 368 552 338 520 b 212 494 277 498 246 494 b 65 517 163 494 106 502 b 61 517 62 517 61 517 b 61 517 61 517 61 517 b 51 408 61 517 51 412 b 51 408 51 408 51 408 b 51 408 51 408 51 408 b 61 412 53 408 55 409 b 125 434 80 421 103 430 b 185 441 145 440 166 441 b 409 244 310 441 409 353 b 401 191 409 227 406 209 b 197 43 375 105 287 43 b 159 47 183 43 171 44 b 23 123 112 56 61 86 b 0 180 6 140 0 159 b 76 260 0 220 31 260 b 92 259 81 260 87 259 b 152 183 132 251 152 216 b 100 112 152 152 134 122 b 95 111 98 112 95 111 b 95 111 95 111 95 111 b 129 98 95 109 119 101 b 148 97 136 97 141 97 b 264 235 206 97 261 158 b 265 248 265 240 265 244 b 210 398 265 312 243 373 b 179 408 201 406 194 408 b 174 408 178 408 176 408 b 53 369 130 408 88 394 b 34 359 39 359 38 359 b 17 374 24 359 17 365 b 39 628 17 384 38 625 b 47 637 40 631 43 635 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 \"},\n\"v6\":{\"x_min\":0,\"x_max\":475.03125,\"ha\":485,\"o\":\"m 255 648 b 274 648 259 648 266 648 b 314 646 288 648 307 648 b 450 555 374 637 438 594 b 454 530 453 546 454 538 b 375 451 454 485 416 451 b 328 467 359 451 343 455 b 300 526 310 483 300 503 b 352 598 300 557 319 589 b 356 599 355 598 356 599 b 352 602 356 599 355 601 b 288 616 330 612 308 616 b 210 584 257 616 230 605 b 164 433 189 559 174 508 b 160 374 163 415 160 381 b 160 374 160 374 160 374 b 160 374 160 374 160 374 b 168 377 160 374 164 376 b 258 395 200 390 228 395 b 366 367 294 395 328 387 b 475 223 436 333 475 283 b 472 197 475 215 473 206 b 349 65 462 141 419 95 b 259 43 317 51 288 43 b 167 69 230 43 200 52 b 4 290 80 113 20 195 b 0 349 1 309 0 328 b 20 467 0 391 6 433 b 255 648 58 563 155 637 m 269 363 b 257 363 265 363 261 363 b 210 345 236 363 220 356 b 186 226 196 324 186 272 b 187 198 186 216 186 206 b 213 95 191 151 202 112 b 257 76 221 83 238 76 b 270 77 261 76 266 76 b 321 156 299 81 310 99 b 329 229 326 183 329 206 b 321 301 329 252 326 274 b 269 363 311 342 298 359 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 \"},\n\"v7\":{\"x_min\":0,\"x_max\":442.359375,\"ha\":451,\"o\":\"m 147 648 b 166 649 153 649 160 649 b 313 598 217 649 273 630 b 340 587 323 588 328 587 l 341 587 b 412 628 367 587 390 601 b 427 638 416 635 421 638 b 439 632 431 638 435 637 b 442 623 441 630 442 628 b 430 569 442 616 439 603 b 352 369 408 492 377 410 b 300 259 325 324 313 298 b 273 84 283 205 273 140 b 265 55 273 65 272 59 l 261 54 l 181 54 l 99 54 l 96 55 b 91 61 95 56 92 59 l 89 63 l 89 77 b 147 263 89 133 111 202 b 261 401 176 313 212 355 b 378 541 315 449 349 489 l 382 548 l 375 544 b 240 495 333 512 285 495 b 129 535 198 495 160 509 b 84 560 108 552 95 560 b 76 559 81 560 78 560 b 31 487 59 555 43 530 b 14 470 27 473 24 470 b 1 477 8 470 4 471 l 0 480 l 0 553 l 0 627 l 1 630 b 16 638 4 635 9 638 b 23 635 17 638 20 637 b 49 626 36 626 39 626 b 96 638 59 626 80 630 b 104 639 99 638 102 639 b 117 644 107 641 112 642 b 147 648 125 645 137 648 m 220 -1 l 221 -1 l 219 -1 l 220 -1 m 220 673 l 221 673 l 219 673 l 220 673 \"},\n\"v8\":{\"x_min\":0,\"x_max\":488.640625,\"ha\":499,\"o\":\"m 217 648 b 245 649 225 648 235 649 b 453 516 343 649 430 595 b 458 478 455 503 458 491 b 412 370 458 440 441 398 b 411 369 412 369 411 369 b 415 365 411 367 412 367 b 488 231 462 331 488 281 b 472 165 488 208 483 186 b 243 43 434 86 338 43 b 63 104 178 43 112 62 b 0 233 20 140 0 186 b 73 365 0 283 24 331 l 77 369 l 72 374 b 29 476 42 406 29 441 b 217 648 29 557 103 635 m 258 605 b 242 606 253 605 247 606 b 157 552 198 606 157 580 b 160 541 157 548 159 544 b 319 413 176 503 242 452 l 337 403 l 338 406 b 359 476 352 428 359 452 b 258 605 359 537 318 595 m 138 326 b 130 330 134 328 130 330 b 130 330 130 330 130 330 b 107 305 127 330 112 313 b 84 231 91 281 84 256 b 243 86 84 156 151 86 b 249 87 245 86 246 87 b 347 156 303 88 347 120 b 344 172 347 162 345 167 b 156 319 325 227 257 281 b 138 326 151 322 144 324 m 243 -1 l 245 -1 l 242 -1 l 243 -1 m 243 673 l 245 673 l 242 673 l 243 673 \"},\n\"v9\":{\"x_min\":0,\"x_max\":475.03125,\"ha\":485,\"o\":\"m 191 646 b 212 649 198 648 205 649 b 255 644 227 649 243 646 b 458 448 348 616 428 539 b 475 342 469 415 475 378 b 460 244 475 308 469 274 b 193 44 421 124 303 44 b 91 69 157 44 122 51 b 19 161 43 97 19 126 b 21 181 19 167 20 174 b 98 241 32 220 65 241 b 170 186 129 241 160 223 b 172 166 171 179 172 173 b 121 94 172 134 152 102 b 117 93 118 94 117 93 b 121 90 117 93 118 91 b 185 76 142 80 164 76 b 270 119 220 76 251 91 b 308 259 287 145 300 194 b 313 317 310 277 313 310 b 313 317 313 317 313 317 b 313 317 313 317 313 317 b 304 315 313 317 308 316 b 216 295 273 302 245 295 b 145 308 193 295 170 299 b 19 398 88 327 42 360 b 0 469 5 420 0 444 b 24 551 0 496 8 526 b 191 646 54 596 125 637 m 227 614 b 215 616 224 616 220 616 b 202 614 210 616 206 616 b 152 535 174 610 163 592 b 144 463 147 509 144 485 b 152 391 144 440 147 417 b 216 328 163 344 179 328 b 280 391 253 328 269 344 b 288 463 285 417 288 440 b 280 535 288 485 285 509 b 227 614 269 594 258 610 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 \"},\n\"va\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 \"},\n\"vb\":{\"x_min\":0,\"x_max\":428.75,\"ha\":438,\"o\":\"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 \"},\n\"vc\":{\"x_min\":0,\"x_max\":447.8125,\"ha\":457,\"o\":\"m 0 86 l 0 173 l 223 173 l 447 173 l 447 86 l 447 0 l 223 0 l 0 0 l 0 86 \"},\n\"vd\":{\"x_min\":0,\"x_max\":343,\"ha\":350,\"o\":\"m 329 331 b 333 331 330 331 332 331 b 343 322 338 331 343 327 b 343 320 343 322 343 320 b 318 276 341 317 340 313 b 279 223 291 227 294 230 b 202 208 257 212 236 208 b 144 210 186 208 167 208 b 93 212 123 212 107 212 b 19 195 59 212 39 208 b 8 191 14 192 10 191 b 0 198 5 191 2 194 b 0 201 0 199 0 199 b 23 248 0 205 4 213 b 62 301 50 297 47 292 b 140 316 84 312 104 316 b 197 313 155 316 174 315 b 249 310 217 312 234 310 b 322 328 283 310 303 316 b 329 331 325 328 328 331 \"},\n\"ve\":{\"x_min\":-390.640625,\"x_max\":389.28125,\"ha\":397,\"o\":\"m -378 502 l -374 503 l 0 503 l 372 503 l 377 502 b 387 491 381 499 385 496 l 389 488 l 389 251 l 389 15 l 387 12 b 367 0 383 4 375 0 b 348 12 360 0 352 4 l 347 15 l 347 174 l 347 335 l 0 335 l -348 335 l -348 174 l -348 15 l -349 12 b -368 0 -353 4 -362 0 b -389 12 -377 0 -385 4 l -390 15 l -390 251 l -390 488 l -389 491 b -378 502 -386 496 -382 499 m -13 131 b -1 133 -9 133 -5 133 b 50 105 19 133 39 123 b 61 70 57 95 61 83 b 50 34 61 58 57 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -58 38 -62 55 b -13 131 -62 98 -44 124 \"},\n\"vf\":{\"x_min\":0,\"x_max\":370.21875,\"ha\":378,\"o\":\"m 0 0 l 0 277 l 61 277 l 122 277 l 122 0 l 122 -278 l 61 -278 l 0 -278 l 0 0 m 246 -1 l 246 277 l 308 277 l 370 277 l 370 -1 l 370 -278 l 308 -278 l 246 -278 l 246 -1 \"},\n\"v10\":{\"x_min\":0,\"x_max\":559.421875,\"ha\":571,\"o\":\"m 5 127 b 14 127 6 127 9 127 b 51 126 25 127 43 127 b 175 98 93 122 138 112 l 186 94 b 279 51 210 86 255 65 b 285 47 280 51 283 48 b 319 27 291 44 311 31 l 326 22 b 359 0 332 19 352 4 l 367 -6 b 371 -9 368 -6 370 -8 l 379 -15 b 387 -22 383 -18 386 -20 l 398 -30 l 411 -40 l 417 -47 l 427 -55 l 434 -61 b 441 -66 436 -62 439 -65 l 446 -72 l 453 -77 l 462 -87 b 558 -188 490 -113 549 -176 b 559 -195 559 -191 559 -194 b 548 -205 559 -201 555 -205 b 541 -204 547 -205 544 -205 b 534 -198 539 -201 536 -199 l 525 -191 b 481 -162 518 -187 490 -167 b 472 -155 477 -159 472 -156 b 468 -152 470 -155 469 -154 b 461 -149 466 -152 464 -151 b 428 -130 454 -145 441 -137 b 371 -99 413 -122 372 -99 b 363 -95 371 -99 367 -98 b 353 -91 357 -94 353 -91 b 348 -90 353 -91 352 -91 b 332 -81 343 -87 341 -86 b 27 -12 230 -37 127 -13 b 0 -5 4 -11 2 -11 b 0 58 0 -2 0 27 b 0 122 0 88 0 120 b 5 127 1 124 4 126 \"},\n\"v11\":{\"x_min\":-155.171875,\"x_max\":153.8125,\"ha\":157,\"o\":\"m -137 353 b -130 353 -136 353 -133 353 b -112 349 -125 353 -119 352 b -100 342 -110 347 -104 344 b 0 317 -69 326 -35 317 b 111 349 38 317 76 328 b 129 353 117 352 123 353 b 153 327 142 353 153 344 b 144 302 153 320 153 317 b 27 6 93 226 50 113 b 21 -13 24 -11 24 -11 b 0 -26 17 -22 8 -26 b -24 -12 -9 -26 -19 -22 b -28 5 -24 -9 -27 -2 b -145 302 -53 117 -95 224 b -155 327 -155 317 -155 320 b -137 353 -155 340 -148 349 \"},\n\"v12\":{\"x_min\":0,\"x_max\":699.609375,\"ha\":714,\"o\":\"m 0 0 l 0 563 l 65 563 l 132 563 l 132 0 l 132 -564 l 65 -564 l 0 -564 l 0 0 m 181 0 l 181 563 l 197 563 l 215 563 l 215 294 b 215 24 215 95 215 24 b 228 37 216 24 221 30 b 332 245 274 84 311 159 b 344 262 334 258 338 262 b 349 262 347 262 348 262 b 359 244 356 259 357 256 b 488 91 364 158 424 91 b 519 97 499 91 509 94 b 582 306 570 113 582 156 l 582 308 b 544 501 582 423 573 471 b 464 528 525 520 496 528 b 387 512 439 528 412 523 b 381 508 383 509 381 508 b 383 508 381 508 382 508 b 430 473 400 508 421 491 b 436 445 434 464 436 455 b 372 380 436 412 408 380 b 366 380 370 380 368 380 b 304 449 328 384 304 416 b 323 498 304 467 310 484 b 465 555 362 537 413 555 b 656 453 536 555 611 520 b 699 312 686 410 699 360 b 496 66 699 191 617 74 b 487 66 494 66 490 66 b 412 91 461 66 438 74 b 404 97 408 95 405 97 b 404 95 404 97 404 97 b 348 1 404 95 352 9 l 347 0 l 375 -49 b 405 -98 392 -76 404 -98 l 405 -98 b 415 -91 405 -97 409 -94 b 492 -68 438 -74 464 -68 b 598 -105 526 -68 564 -80 b 688 -238 641 -136 673 -184 b 699 -313 695 -263 699 -290 b 594 -516 699 -395 661 -469 b 465 -556 555 -542 510 -556 b 353 -523 426 -556 386 -545 b 304 -460 321 -501 307 -484 b 304 -451 304 -458 304 -453 b 372 -381 304 -410 337 -381 b 408 -392 383 -381 396 -384 b 436 -445 427 -405 436 -426 b 385 -508 436 -474 417 -503 l 379 -509 l 387 -513 b 464 -530 412 -524 438 -530 b 522 -517 485 -530 506 -526 b 579 -390 558 -501 574 -463 b 582 -299 582 -370 582 -334 b 581 -226 582 -272 582 -242 b 519 -98 575 -144 560 -112 b 488 -93 510 -95 499 -93 b 359 -245 424 -93 364 -158 b 345 -263 357 -258 355 -263 b 332 -244 337 -263 336 -260 b 220 -30 310 -155 268 -73 l 215 -24 l 215 -295 l 215 -564 l 197 -564 l 181 -564 l 181 0 \"},\n\"v13\":{\"x_min\":-1.359375,\"x_max\":455.96875,\"ha\":465,\"o\":\"m 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 \"},\n\"v14\":{\"x_min\":-1.359375,\"x_max\":349.8125,\"ha\":357,\"o\":\"m 230 287 b 243 287 234 287 238 287 b 266 285 251 287 261 287 b 349 180 319 274 349 227 b 307 95 349 149 336 117 b 208 63 280 74 245 63 b 84 106 166 63 122 79 b 76 113 80 111 77 113 b 76 113 76 113 76 113 b 132 -74 76 112 102 27 b 187 -272 179 -235 187 -263 b 186 -276 187 -273 186 -274 b 166 -288 183 -284 174 -288 b 148 -278 159 -288 152 -285 b -1 231 145 -273 -1 227 b 20 252 -1 244 9 252 b 36 244 25 252 32 249 b 40 234 38 242 39 238 b 167 112 63 174 112 127 l 174 111 l 170 113 b 142 181 152 133 142 158 b 230 287 142 230 176 277 \"},\n\"v15\":{\"x_min\":-209.609375,\"x_max\":208.25,\"ha\":213,\"o\":\"m -12 248 b -1 249 -9 249 -5 249 b 55 219 20 249 43 237 b 66 180 62 206 66 194 b 36 123 66 158 55 137 b 0 112 25 116 12 112 b -57 142 -21 112 -43 122 b -68 180 -63 154 -68 167 b -12 248 -68 212 -46 242 m -197 19 b 1 20 -194 19 -96 20 b 196 19 98 20 193 19 b 208 -1 204 15 208 6 b 202 -15 208 -5 206 -11 b 95 -22 197 -20 212 -22 b -1 -22 69 -22 38 -22 b -96 -22 -39 -22 -70 -22 b -204 -15 -213 -22 -198 -20 b -209 -1 -208 -11 -209 -5 b -197 19 -209 6 -205 15 \"},\n\"v16\":{\"x_min\":-155.171875,\"x_max\":153.8125,\"ha\":157,\"o\":\"m -137 353 b -129 355 -134 353 -132 355 b -102 333 -118 355 -111 348 b -8 129 -63 273 -32 205 b 0 106 -4 116 -1 106 b 6 129 0 106 2 116 b 100 333 31 205 62 273 b 114 349 107 344 108 347 b 127 353 118 352 123 353 b 153 327 141 353 153 344 b 144 302 153 320 153 317 b 29 18 96 227 54 123 l 25 -4 b -1 -26 21 -19 13 -26 b -27 -4 -14 -26 -23 -19 l -31 18 b -145 302 -55 123 -98 227 b -155 327 -155 317 -155 320 b -137 353 -155 340 -148 349 \"},\n\"v17\":{\"x_min\":0,\"x_max\":102.078125,\"ha\":104,\"o\":\"m 42 104 b 47 104 43 104 46 104 b 66 102 54 104 62 102 b 102 51 89 94 102 72 b 76 5 102 33 93 15 b 51 -1 68 1 59 -1 b 10 18 35 -1 20 5 b 0 51 2 27 0 38 b 42 104 0 76 16 99 \"},\n\"v18\":{\"x_min\":0,\"x_max\":323.9375,\"ha\":331,\"o\":\"m 217 535 b 225 537 220 537 221 537 b 245 524 235 537 242 533 l 246 521 l 247 390 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 492 87 498 b 103 495 98 498 100 496 b 114 485 107 494 111 489 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 384 l 205 521 l 206 524 b 217 535 209 528 212 533 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 \"},\n\"v19\":{\"x_min\":-10.890625,\"x_max\":366.140625,\"ha\":363,\"o\":\"m 98 172 b 110 173 102 173 106 173 b 210 120 142 173 172 156 b 281 66 235 95 264 74 b 294 63 285 63 289 63 b 341 87 307 63 322 72 b 356 97 348 94 352 97 b 363 93 359 97 362 95 b 366 87 364 90 366 88 b 355 72 366 83 363 79 b 268 2 317 31 288 9 b 243 -1 259 0 251 -1 b 144 52 212 -1 181 16 b 72 106 119 77 91 98 b 61 109 69 108 65 109 b 13 84 47 109 31 101 b 0 76 5 77 2 76 b -10 86 -6 76 -10 80 b -10 88 -10 87 -10 88 b 62 158 -9 95 43 145 b 98 172 73 165 87 170 \"},\n\"v1a\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -9 151 b -1 152 -6 151 -2 152 b 1 152 0 152 0 152 l 9 151 b 144 37 72 148 127 99 b 148 -62 148 19 148 15 b 148 -111 148 -76 148 -93 l 148 -216 l 147 -219 b 127 -231 144 -227 136 -231 b 108 -219 119 -231 112 -227 l 107 -216 l 107 -104 b 103 26 106 18 107 12 b -1 109 89 76 46 109 b -38 102 -13 109 -25 106 b -104 27 -70 90 -96 62 b -108 -101 -108 15 -108 22 l -108 -216 l -110 -219 b -129 -231 -114 -227 -122 -231 b -148 -219 -137 -231 -145 -227 l -149 -216 l -149 -99 b -149 -63 -149 -87 -149 -74 b -145 37 -149 26 -149 20 b -9 151 -130 101 -74 148 \"},\n\"v1b\":{\"x_min\":0,\"x_max\":559.421875,\"ha\":571,\"o\":\"m 544 204 b 548 204 545 204 547 204 b 559 194 555 204 559 199 b 559 190 559 192 559 191 b 530 156 559 188 556 184 b 462 86 510 134 481 104 b 453 76 458 81 454 77 l 446 70 l 441 65 b 434 59 439 63 436 61 l 427 54 b 409 37 426 51 416 44 b 392 23 398 29 394 26 b 387 19 389 22 387 20 b 379 13 386 19 383 16 l 371 8 l 367 5 l 359 -1 l 337 -16 b 285 -48 319 -29 298 -41 l 279 -52 b 186 -95 255 -66 210 -87 l 175 -99 b 23 -129 127 -117 68 -129 b 17 -129 20 -129 19 -129 b 1 -123 2 -129 2 -129 b 0 -49 0 -122 0 -83 b 0 4 0 -22 0 1 b 27 11 2 9 4 9 b 185 31 78 12 145 20 b 198 34 186 31 193 33 b 314 73 234 44 277 58 b 349 88 328 79 340 84 b 353 90 352 90 353 90 b 363 94 353 90 357 93 b 371 98 367 97 371 98 b 428 129 372 98 413 120 b 461 148 441 136 454 144 b 468 151 464 149 466 151 b 472 154 469 152 470 154 b 481 161 473 155 477 158 b 525 190 490 166 518 186 l 534 197 b 540 201 536 198 539 199 b 544 204 541 202 544 204 \"},\n\"v1c\":{\"x_min\":0,\"x_max\":326.671875,\"ha\":333,\"o\":\"m 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -105 b 239 -262 239 -167 239 -219 b 238 -448 239 -416 239 -445 b 238 -451 238 -449 238 -451 b 238 -452 238 -452 238 -452 b 243 -451 239 -452 240 -451 b 298 -431 262 -448 280 -441 b 308 -427 300 -428 304 -427 b 326 -446 318 -427 326 -435 l 326 -446 l 326 -452 l 321 -462 b 238 -674 283 -520 253 -599 b 219 -695 234 -689 230 -695 b 197 -670 206 -695 202 -689 b 115 -462 179 -591 152 -520 l 110 -452 l 110 -446 l 110 -446 b 127 -427 110 -435 118 -427 b 138 -431 130 -427 134 -428 b 193 -451 155 -441 172 -448 b 198 -452 196 -452 197 -452 b 198 -451 198 -452 198 -452 b 198 -448 198 -451 198 -449 b 197 -323 197 -445 197 -426 b 197 -201 197 -247 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 \"},\n\"v1d\":{\"x_min\":0,\"x_max\":619.3125,\"ha\":632,\"o\":\"m 274 184 b 307 186 285 186 296 186 b 616 22 465 186 597 116 b 619 -1 617 13 619 5 b 308 -187 619 -104 483 -187 b 0 -1 133 -187 0 -102 b 5 36 0 11 1 23 b 274 184 29 115 141 176 m 289 161 b 272 162 284 162 277 162 b 171 41 209 162 171 108 b 205 -73 171 5 182 -34 b 345 -163 243 -133 298 -163 b 436 -98 385 -163 420 -142 b 446 -43 443 -80 446 -62 b 289 161 446 47 377 147 \"},\n\"v1e\":{\"x_min\":-402.890625,\"x_max\":401.53125,\"ha\":410,\"o\":\"m -219 173 b -213 174 -217 174 -215 174 b -202 173 -209 174 -205 173 b -114 86 -200 172 -179 151 b -28 0 -66 37 -28 0 b 40 84 -28 0 2 37 b 117 174 111 173 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b -42 -86 27 0 -4 -38 b -118 -174 -112 -174 -111 -173 b -123 -176 -119 -176 -121 -176 b -133 -174 -126 -176 -130 -174 b -296 -12 -136 -173 -172 -137 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 172 -398 -43 -228 167 b -219 173 -223 172 -220 173 \"},\n\"v1f\":{\"x_min\":-340.28125,\"x_max\":338.921875,\"ha\":346,\"o\":\"m -32 520 b -29 521 -31 520 -31 521 b -23 519 -27 521 -24 520 b -20 513 -21 517 -20 516 b -21 506 -20 512 -20 509 b -31 474 -23 502 -27 488 l -53 402 l -66 352 l -68 349 l -57 349 b -32 351 -51 349 -40 351 b 123 370 19 352 74 359 b 137 371 127 370 133 371 b 170 356 152 371 164 366 b 171 355 170 355 170 355 b 216 366 174 355 183 358 b 280 378 268 377 266 377 b 287 378 283 378 284 378 b 332 349 307 378 322 369 b 338 319 336 341 338 330 b 332 301 338 310 336 302 b 242 280 329 299 246 280 b 242 280 242 280 242 280 b 235 288 236 280 235 283 b 235 292 235 290 235 291 b 236 302 236 297 236 299 b 220 337 236 316 230 330 l 216 340 l 210 335 b 159 276 189 322 172 301 b 118 149 152 265 156 274 b 81 34 84 36 85 36 b -8 13 78 33 -4 13 b -8 13 -8 13 -8 13 b -14 20 -12 15 -14 15 b -8 44 -14 24 -12 31 b -2 66 -5 55 -2 65 b -2 66 -2 66 -2 66 l -2 66 b -43 41 -2 66 -21 55 b -114 4 -98 8 -98 8 b -144 0 -123 0 -134 0 b -242 99 -197 0 -242 43 b -242 109 -242 102 -242 105 b -212 219 -240 122 -242 116 b -185 312 -197 270 -185 312 l -185 312 b -189 312 -185 312 -186 312 b -259 312 -200 312 -227 312 b -321 310 -291 312 -310 310 b -334 312 -330 310 -334 312 b -340 319 -338 313 -340 316 b -336 326 -340 322 -338 324 b -291 337 -334 326 -314 331 l -247 347 l -210 348 b -172 348 -190 348 -172 348 b -168 363 -172 348 -171 355 b -145 442 -151 424 -145 441 b -133 452 -144 444 -140 446 l -77 489 b -32 520 -53 506 -32 520 m 57 334 b 53 335 55 335 54 335 b 44 334 50 335 49 335 b -70 316 8 326 -28 320 b -78 309 -78 316 -78 316 b -108 202 -80 305 -88 274 b -141 81 -136 112 -141 93 b -140 74 -141 79 -141 77 b -117 49 -137 59 -127 49 b -107 52 -114 49 -110 51 b 16 127 -106 54 14 126 b 42 217 16 127 42 215 b 49 241 42 222 44 229 b 73 320 53 251 73 317 b 57 334 73 327 65 333 \"},\n\"v20\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m -559 351 b -551 352 -556 352 -553 352 b -530 338 -543 352 -533 348 b -529 169 -530 337 -529 291 l -529 1 l -507 27 l -441 112 b -382 174 -394 169 -390 174 b -378 174 -381 174 -379 174 b -281 86 -370 174 -375 179 b -196 0 -234 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 279 172 b 289 174 285 174 288 174 b 300 173 294 174 298 173 b 462 11 303 172 340 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 375 -176 371 -176 b 280 -87 367 -173 347 -152 b 194 0 234 -38 194 0 b 126 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 44 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -140 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -288 -176 b -300 -174 -294 -176 -298 -174 b -464 -11 -303 -173 -374 -102 l -476 0 l -506 -37 b -539 -76 -528 -65 -537 -74 b -551 -80 -543 -79 -547 -80 b -570 -68 -558 -80 -566 -76 l -571 -65 l -571 136 b -570 340 -571 331 -571 337 b -559 351 -568 344 -564 348 \"},\n\"v21\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -138 229 b -129 230 -136 230 -133 230 b -110 217 -121 230 -114 226 l -108 215 l -108 99 b -104 -29 -108 -23 -108 -16 b -38 -104 -96 -63 -70 -91 b -1 -111 -25 -108 -13 -111 b 103 -27 46 -111 89 -77 b 107 102 107 -13 106 -19 l 107 215 l 108 217 b 127 230 112 226 119 230 b 137 229 130 230 134 230 b 147 217 141 226 145 223 l 148 215 l 148 109 b 148 63 148 91 148 76 b 147 -24 148 -1 148 -13 b -1 -154 134 -101 70 -154 b -38 -148 -13 -154 -25 -151 b -145 -38 -91 -134 -133 -93 b -149 62 -149 -22 -149 -27 b -149 98 -149 73 -149 86 l -149 215 l -148 217 b -138 229 -147 223 -142 226 \"},\n\"v22\":{\"x_min\":0,\"x_max\":432.828125,\"ha\":442,\"o\":\"m 209 186 b 213 187 210 187 212 187 b 216 187 215 187 216 187 b 224 174 216 186 220 180 b 420 -1 269 105 338 43 b 432 -12 431 -8 432 -9 b 421 -23 432 -15 432 -16 b 228 -180 345 -70 264 -137 b 219 -188 221 -188 221 -188 l 219 -188 b 208 -177 215 -188 215 -188 b 10 1 163 -106 93 -44 b 0 11 0 6 0 8 b 10 22 0 13 0 15 b 202 179 87 69 167 136 b 209 186 206 183 209 186 \"},\n\"v23\":{\"x_min\":0,\"x_max\":133.390625,\"ha\":136,\"o\":\"m 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 \"},\n\"v24\":{\"x_min\":-627.46875,\"x_max\":626.109375,\"ha\":639,\"o\":\"m -69 173 b -53 174 -62 174 -58 174 b -42 172 -49 174 -44 174 b -28 149 -32 166 -28 158 b -42 126 -28 140 -32 131 b -231 73 -44 124 -29 129 l -371 34 l -469 8 b -499 0 -485 2 -499 0 b -469 -9 -499 -1 -485 -4 l -371 -36 l -231 -74 b -40 -129 -21 -131 -44 -124 b -28 -151 -32 -133 -28 -141 b -40 -172 -28 -159 -32 -167 b -54 -176 -44 -174 -49 -176 b -69 -174 -58 -176 -62 -176 l -288 -113 l -552 -41 b -616 -22 -619 -23 -611 -24 b -627 0 -623 -18 -627 -9 b -616 20 -627 8 -623 16 b -615 22 -615 22 -615 22 b -615 22 -615 22 -615 22 b -288 112 -615 23 -598 27 l -69 173 m 44 174 b 51 174 47 174 49 174 b 68 173 55 174 61 174 l 287 112 l 551 40 b 615 20 617 22 609 23 b 626 0 622 16 626 8 b 615 -22 626 -9 622 -18 b 613 -23 613 -23 613 -23 b 613 -23 613 -23 613 -23 b 287 -113 613 -24 597 -29 l 68 -174 b 53 -176 61 -176 57 -176 b 39 -172 47 -176 43 -174 b 27 -151 31 -167 27 -159 b 39 -129 27 -141 31 -133 b 230 -74 43 -124 20 -131 l 370 -36 l 468 -9 b 498 0 484 -4 498 -1 b 468 8 498 0 484 2 l 370 34 l 230 73 b 40 126 28 129 43 124 b 27 149 31 131 27 140 b 44 174 27 161 34 170 \"},\n\"v25\":{\"x_min\":0,\"x_max\":318.5,\"ha\":325,\"o\":\"m 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 \"},\n\"v26\":{\"x_min\":-21.78125,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 179 164 199 187 192 l 210 176 l 210 396 l 210 617 l 212 621 b 231 632 216 628 223 632 b 250 620 239 632 247 628 b 251 383 251 616 251 616 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\n\"v27\":{\"x_min\":0,\"x_max\":432.828125,\"ha\":442,\"o\":\"m 208 184 b 213 187 209 186 212 187 b 224 176 217 187 221 183 b 245 147 225 172 235 159 b 419 -1 288 90 347 38 b 431 -8 424 -4 431 -8 b 432 -12 432 -9 432 -11 b 430 -18 432 -13 432 -16 b 364 -61 424 -20 383 -47 b 225 -183 307 -102 250 -152 b 223 -187 224 -184 223 -187 b 220 -188 221 -188 220 -188 b 208 -176 216 -188 210 -184 b 187 -148 205 -173 197 -159 b 12 0 144 -90 84 -38 b 0 11 4 5 0 8 b 16 24 0 13 4 18 b 183 158 83 69 141 115 b 208 184 194 169 198 173 m 183 105 b 176 113 181 109 176 113 b 172 109 176 113 175 112 b 92 45 149 90 117 62 l 88 41 l 102 31 b 247 -105 160 -6 210 -55 l 254 -115 l 257 -112 l 269 -102 b 340 -45 287 -87 319 -61 l 344 -43 l 330 -33 b 183 105 272 6 221 54 \"},\n\"v28\":{\"x_min\":-73.5,\"x_max\":72.140625,\"ha\":74,\"o\":\"m -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 \"},\n\"v29\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m 175 273 b 182 274 178 273 181 274 b 202 262 190 274 198 269 b 204 158 204 259 204 259 l 204 56 l 250 112 b 303 174 296 172 298 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 208 -6 213 0 210 -2 l 204 -12 l 204 -147 b 204 -210 204 -173 204 -194 b 198 -292 204 -297 204 -287 b 183 -299 194 -297 189 -299 b 164 -287 175 -299 167 -295 b 163 -174 163 -284 163 -284 l 161 -63 l 119 -117 b 65 -176 76 -170 73 -176 b 61 -176 63 -176 62 -176 b -35 -87 51 -174 57 -180 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -363 174 -374 170 -371 174 b -359 174 -362 174 -360 174 b -262 86 -351 174 -356 179 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 147 11 -13 172 35 123 l 157 -1 l 160 1 l 163 4 l 163 130 b 164 260 163 256 163 258 b 175 273 166 266 170 270 \"},\n\"v2a\":{\"x_min\":-21.78125,\"x_max\":366.140625,\"ha\":374,\"o\":\"m 276 1378 b 284 1379 279 1379 281 1379 b 306 1360 292 1379 298 1374 b 352 1247 326 1326 343 1286 b 366 1139 362 1213 366 1175 b 347 1009 366 1093 359 1049 l 344 1002 l 347 992 b 352 971 348 986 351 977 b 366 863 362 936 366 899 b 347 732 366 818 359 773 l 344 725 l 347 716 b 352 695 348 710 351 700 b 366 588 362 659 366 623 b 223 262 366 464 314 345 b 189 233 212 252 212 252 b 35 76 126 183 73 129 b -1 16 20 56 2 27 b -19 4 -4 9 -12 4 l -21 4 l -21 137 l -21 270 l -17 270 b 186 344 59 281 134 308 b 319 606 270 399 319 499 b 317 650 319 620 319 635 l 315 659 l 314 655 b 223 537 288 607 258 570 b 189 509 212 528 212 528 b 35 352 126 459 73 405 b -1 292 20 333 2 303 b -19 280 -4 285 -12 280 l -21 280 l -21 413 l -21 546 l -17 546 b 186 620 59 557 134 584 b 319 882 270 675 319 775 b 317 925 319 896 319 911 l 315 935 l 314 931 b 223 813 288 884 258 846 b 189 785 212 805 212 805 b 35 628 126 735 73 681 b -1 569 20 609 2 580 b -19 556 -4 562 -12 556 l -21 556 l -21 689 l -21 823 l -17 823 b 202 907 68 835 152 867 b 319 1157 280 968 319 1061 b 270 1338 319 1218 303 1281 b 262 1358 264 1349 262 1353 b 262 1364 262 1360 262 1363 b 276 1378 265 1371 269 1376 \"},\n\"v2b\":{\"x_min\":0,\"x_max\":386.5625,\"ha\":394,\"o\":\"m 0 0 l 0 347 l 193 347 l 386 347 l 386 0 l 386 -348 l 193 -348 l 0 -348 l 0 0 \"},\n\"v2c\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -413 173 b -408 174 -412 174 -409 174 b -397 173 -404 174 -400 173 b -308 86 -394 172 -374 151 b -223 0 -261 37 -223 0 b -153 84 -223 0 -191 37 b -77 174 -83 173 -84 172 b -72 174 -76 174 -74 174 b -62 173 -68 174 -63 173 b 25 86 -59 172 -39 151 b 112 0 73 37 111 0 b 181 84 112 0 144 37 b 257 174 251 173 251 172 b 262 174 258 174 261 174 b 273 173 266 174 270 173 b 436 9 276 172 347 101 l 447 -1 l 477 36 b 522 79 511 79 513 79 l 522 79 b 552 51 533 79 539 73 b 596 -112 582 6 596 -51 b 567 -262 596 -161 586 -213 b 539 -322 558 -287 544 -316 b 524 -327 534 -326 529 -327 b 504 -315 515 -327 507 -323 b 503 -308 503 -312 503 -309 b 511 -285 503 -302 504 -297 b 555 -113 540 -227 555 -169 b 544 -34 555 -86 551 -59 b 522 19 540 -16 530 8 l 521 22 l 481 -26 l 405 -122 b 353 -176 366 -172 362 -176 b 349 -176 352 -176 351 -176 b 253 -87 341 -176 347 -180 b 167 0 206 -38 167 0 b 99 -86 167 0 136 -38 b 21 -174 27 -174 28 -173 b 17 -176 20 -176 19 -176 b 6 -174 13 -176 9 -174 b -81 -87 4 -173 -14 -152 b -167 0 -129 -38 -167 0 b -236 -86 -167 0 -198 -38 b -313 -174 -307 -174 -306 -173 b -318 -176 -314 -176 -315 -176 b -328 -174 -321 -176 -325 -174 b -491 -12 -330 -173 -367 -137 l -503 0 l -530 -34 b -570 -77 -562 -73 -564 -76 b -577 -79 -571 -79 -574 -79 b -597 -58 -588 -79 -597 -69 b -596 -49 -597 -55 -597 -52 b -417 172 -593 -43 -423 167 b -413 173 -417 172 -415 173 \"},\n\"v2d\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 190 b 219 191 213 191 216 191 b 236 176 225 191 228 190 b 419 18 277 105 341 49 b 436 5 431 13 434 11 b 438 -1 438 4 438 1 b 424 -16 438 -8 432 -13 b 356 -49 409 -20 379 -36 b 234 -180 306 -83 258 -133 b 219 -192 230 -188 224 -192 b 200 -176 213 -192 206 -187 b 9 -15 157 -102 89 -45 b 0 0 2 -12 0 -6 b 16 18 0 9 2 12 b 200 176 93 48 159 104 b 212 190 205 186 208 188 m 239 113 b 236 117 238 116 238 117 b 230 108 235 117 234 115 b 92 -15 196 58 140 8 b 88 -18 91 -16 88 -18 b 92 -20 88 -18 91 -19 b 198 -116 130 -43 166 -74 b 200 -117 200 -117 200 -117 b 201 -117 200 -117 201 -117 b 264 -43 212 -98 242 -62 b 345 15 288 -19 321 4 b 348 18 347 16 348 16 b 344 20 348 18 347 19 b 239 113 307 41 266 79 \"},\n\"v2e\":{\"x_min\":-108.890625,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 863 b 0 864 -5 864 -2 864 b 12 859 4 864 9 863 b 19 843 16 856 16 853 b 102 631 34 768 65 689 l 107 621 l 107 616 l 107 616 b 89 596 107 605 99 596 b 78 601 85 596 83 598 b 47 614 69 606 55 612 b 19 621 39 617 21 621 b 19 621 19 621 19 621 b 19 619 19 621 19 620 b 20 383 20 616 20 585 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 b -20 619 -21 563 -21 616 b -20 621 -20 620 -20 621 b -20 621 -20 621 -20 621 b -49 614 -23 621 -40 617 b -80 601 -57 612 -70 606 b -91 596 -84 598 -87 596 b -108 616 -100 596 -108 605 l -108 616 l -108 621 l -103 631 b -20 839 -66 689 -38 760 b -8 863 -17 856 -14 859 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"v2f\":{\"x_min\":-1.359375,\"x_max\":680.5625,\"ha\":694,\"o\":\"m 597 1042 b 604 1042 600 1042 602 1042 b 642 1002 627 1042 642 1022 b 619 966 642 988 635 974 b 439 927 574 942 503 927 l 426 927 l 426 921 b 430 838 428 893 430 866 b 345 480 430 696 398 560 b 179 391 307 423 249 391 b 156 392 171 391 164 392 b 138 394 149 394 142 394 b 103 434 115 396 103 416 b 129 471 103 451 111 466 b 141 474 133 473 137 474 b 172 459 153 474 164 469 b 181 455 175 456 176 455 b 187 456 182 455 185 455 b 253 520 212 460 234 483 b 315 836 294 605 315 714 b 311 928 315 867 314 898 b 302 945 310 943 311 942 b 245 953 283 950 262 953 b 130 891 193 953 149 931 b 84 860 119 870 102 860 b 36 905 61 860 39 877 b 36 910 36 907 36 909 b 80 970 36 931 50 949 b 249 1017 125 1000 187 1017 b 322 1009 273 1017 299 1014 l 341 1003 b 436 991 372 995 406 991 b 577 1031 495 991 545 1004 b 597 1042 583 1038 590 1041 m 416 360 b 424 360 419 360 421 360 b 481 309 454 360 479 338 b 503 145 484 280 495 199 b 585 -185 525 16 555 -106 b 630 -245 596 -213 613 -237 l 634 -247 l 638 -245 b 647 -244 641 -245 645 -244 b 680 -278 666 -244 680 -262 b 664 -308 680 -290 675 -301 b 638 -312 658 -310 650 -312 b 613 -309 631 -312 623 -310 b 477 -201 555 -303 502 -260 b 417 -2 460 -159 434 -72 b 416 5 417 1 416 5 b 416 5 416 5 416 5 b 411 -5 415 5 413 0 b 359 -97 397 -33 377 -70 b 353 -106 355 -102 353 -105 b 359 -112 353 -108 355 -109 b 409 -130 375 -123 390 -129 b 426 -134 420 -130 421 -131 b 431 -147 428 -137 431 -141 b 420 -162 431 -152 427 -159 b 382 -169 409 -166 396 -169 b 323 -155 363 -169 341 -165 l 317 -152 l 314 -155 b 62 -303 240 -240 148 -295 b 36 -305 55 -305 44 -305 b 23 -303 29 -305 24 -305 b -1 -273 6 -299 -1 -287 b 31 -240 -1 -256 10 -240 b 36 -240 32 -240 34 -240 b 42 -241 38 -241 39 -241 b 134 -204 63 -241 99 -226 b 367 288 265 -115 357 81 b 375 330 368 313 370 320 b 416 360 383 347 400 358 m 360 -359 b 379 -359 363 -359 371 -359 b 424 -360 396 -359 416 -359 b 646 -502 536 -373 624 -430 b 649 -527 649 -510 649 -519 b 530 -673 649 -578 604 -635 l 521 -677 l 529 -681 b 653 -811 592 -714 637 -762 b 660 -853 658 -827 660 -839 b 645 -911 660 -873 656 -892 b 426 -1021 608 -981 519 -1021 b 283 -989 377 -1021 328 -1011 b 235 -949 249 -972 239 -964 b 234 -936 234 -946 234 -941 b 234 -928 234 -934 234 -931 l 235 -925 l 234 -927 l 225 -934 b 87 -982 186 -966 138 -982 b 80 -982 85 -982 83 -982 b 55 -981 70 -981 58 -981 b 17 -943 32 -981 17 -964 b 54 -904 17 -921 35 -904 b 78 -914 62 -904 72 -909 l 83 -918 l 88 -918 b 190 -831 122 -918 166 -881 b 269 -506 242 -727 269 -612 b 268 -462 269 -492 269 -477 b 266 -449 266 -458 266 -452 b 265 -444 266 -445 266 -444 b 257 -446 264 -444 261 -445 b 132 -545 196 -470 152 -505 b 88 -573 122 -563 104 -573 b 39 -523 63 -573 39 -553 b 63 -476 39 -505 44 -494 b 360 -359 136 -408 235 -369 m 419 -424 b 393 -423 411 -423 406 -423 l 375 -423 l 377 -426 b 379 -439 377 -427 378 -434 b 383 -510 382 -463 383 -487 b 314 -811 383 -609 360 -710 b 266 -893 296 -850 285 -870 b 264 -898 265 -896 264 -898 l 264 -898 b 264 -898 264 -898 264 -898 b 268 -898 264 -898 266 -898 b 273 -898 270 -898 272 -898 b 300 -909 283 -898 291 -900 b 426 -957 340 -941 385 -957 b 476 -949 443 -957 460 -954 b 547 -853 522 -931 547 -893 b 485 -745 547 -816 526 -775 b 397 -707 460 -727 432 -714 b 366 -675 375 -703 366 -692 b 396 -642 366 -657 377 -645 b 530 -557 455 -637 511 -601 b 536 -527 534 -548 536 -537 b 419 -424 536 -480 490 -437 \"},\n\"v30\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 276 1900 b 284 1901 279 1900 281 1901 b 306 1883 291 1901 298 1896 b 367 1686 347 1825 367 1757 b 343 1558 367 1643 359 1600 l 338 1549 l 343 1537 b 367 1411 359 1497 367 1454 b 343 1282 367 1367 359 1324 l 338 1272 l 343 1261 b 367 1135 359 1221 367 1178 b 343 1007 367 1090 359 1047 l 338 996 l 343 985 b 367 859 359 945 367 902 b 343 731 367 814 359 771 l 338 720 l 343 709 b 367 582 359 667 367 626 b 289 362 367 503 340 426 b 239 312 276 345 259 330 b 29 77 152 237 76 152 b -1 18 14 54 2 30 b -19 4 -4 11 -12 4 l -21 4 l -21 133 l -20 260 l -13 262 b 98 299 17 269 62 284 b 111 305 103 302 110 305 b 167 334 123 310 156 327 b 319 595 264 391 319 491 b 313 659 319 616 318 638 b 310 667 311 664 311 667 b 307 663 310 667 308 666 b 240 588 289 637 269 614 b 16 331 141 505 62 413 b -1 294 8 316 1 302 b -19 280 -4 287 -12 280 l -21 280 l -21 408 l -20 537 l -13 538 b 98 576 17 545 62 560 b 111 581 103 578 110 581 b 167 610 123 587 156 603 b 319 871 264 667 319 767 b 313 935 319 892 318 913 b 310 942 311 941 311 942 b 307 939 310 942 308 941 b 240 864 289 913 269 889 b 16 607 141 781 62 689 b -1 570 8 592 1 578 b -19 556 -4 563 -12 556 l -21 556 l -21 684 l -20 813 l -13 814 b 98 852 17 821 62 836 b 111 857 103 855 110 857 b 167 886 123 863 156 880 b 319 1147 264 943 319 1043 b 313 1211 319 1168 318 1189 b 310 1218 311 1217 311 1218 b 307 1215 310 1218 308 1217 b 240 1140 289 1188 269 1165 b 16 884 141 1057 62 966 b -1 846 8 868 1 855 b -19 832 -4 839 -12 832 l -21 832 l -21 960 l -20 1089 l -13 1090 b 98 1128 17 1097 62 1111 b 111 1134 103 1131 110 1134 b 167 1163 123 1139 156 1156 b 319 1424 264 1220 319 1320 b 313 1486 319 1444 318 1465 b 310 1494 311 1493 311 1494 b 307 1492 310 1494 308 1493 b 240 1417 289 1464 269 1442 b 16 1160 141 1333 62 1242 b -1 1121 8 1145 1 1131 b -19 1109 -4 1115 -12 1109 l -21 1109 l -21 1236 l -20 1365 l -13 1367 b 98 1404 17 1374 62 1388 b 111 1410 103 1407 110 1410 b 250 1508 172 1437 215 1467 b 319 1701 296 1564 319 1633 b 270 1859 319 1757 303 1814 b 262 1882 265 1868 262 1875 b 276 1900 262 1890 266 1896 \"},\n\"v31\":{\"x_min\":0,\"x_max\":386.5625,\"ha\":394,\"o\":\"m 0 173 l 0 347 l 193 347 l 386 347 l 386 173 l 386 0 l 193 0 l 0 0 l 0 173 \"},\n\"v32\":{\"x_min\":-390.640625,\"x_max\":389.28125,\"ha\":397,\"o\":\"m -378 573 l -374 576 l 0 576 l 372 576 l 377 573 b 387 563 381 571 385 567 l 389 559 l 389 287 l 389 15 l 387 12 b 367 0 383 4 375 0 b 348 12 360 0 352 4 l 347 15 l 347 210 l 347 406 l 0 406 l -348 406 l -348 210 l -348 15 l -349 12 b -368 0 -353 4 -362 0 b -389 12 -377 0 -385 4 l -390 15 l -390 287 l -390 559 l -389 563 b -378 573 -386 567 -382 571 m -274 337 l -270 338 l 0 338 l 269 338 l 273 337 b 284 326 279 334 281 330 l 285 323 l 285 169 l 285 15 l 284 12 b 265 -1 280 4 272 -1 b 245 12 257 -1 249 4 l 245 15 l 243 108 l 243 201 l 0 201 l -245 201 l -245 108 l -245 15 l -246 12 b -266 -1 -250 4 -258 -1 b -285 12 -273 -1 -281 4 l -287 15 l -287 169 l -287 323 l -285 326 b -274 337 -283 330 -280 334 m -13 131 b -1 133 -9 133 -5 133 b 50 105 19 133 39 123 b 61 70 57 95 61 83 b 50 34 61 58 57 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -58 38 -62 55 b -13 131 -62 98 -44 124 \"},\n\"v33\":{\"x_min\":-423.3125,\"x_max\":421.9375,\"ha\":431,\"o\":\"m -10 276 b -2 277 -8 277 -5 277 b 17 265 5 277 13 273 b 19 163 19 260 19 260 l 19 68 l 39 45 b 277 -95 122 -34 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -54 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 200 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 137 b 421 22 421 37 421 29 b 257 -198 421 -86 347 -188 b 242 -198 251 -198 247 -198 b 20 -105 181 -198 95 -163 l 19 -104 l 19 -183 b 19 -216 19 -195 19 -206 b 12 -273 19 -272 17 -267 b -2 -278 8 -277 2 -278 b -21 -266 -10 -278 -19 -274 b -23 -165 -23 -263 -23 -262 l -23 -69 l -44 -47 b -250 86 -117 23 -183 66 b -295 94 -270 93 -284 94 b -315 91 -302 94 -308 94 b -381 5 -356 81 -381 43 b -355 -56 -381 -16 -372 -40 b -299 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -168 -77 -196 -58 -179 -65 b -151 -122 -156 -90 -151 -105 b -179 -174 -151 -141 -160 -162 b -239 -195 -194 -184 -217 -192 b -257 -197 -245 -195 -250 -197 b -423 -5 -349 -197 -423 -113 b -423 0 -423 -4 -423 -1 b -277 194 -420 97 -362 173 b -247 197 -268 197 -258 197 b -24 104 -185 197 -100 162 l -23 102 l -23 181 b -21 265 -23 260 -23 260 b -10 276 -20 269 -14 274 \"},\n\"v34\":{\"x_min\":0,\"x_max\":622.03125,\"ha\":635,\"o\":\"m 398 417 b 406 419 401 419 404 419 b 427 398 417 419 427 409 b 427 391 427 395 427 392 b 34 -274 424 385 38 -272 b 20 -280 29 -278 25 -280 b 0 -259 9 -280 0 -270 b 0 -252 0 -256 0 -254 b 393 413 2 -247 389 410 b 398 417 394 415 397 416 m 592 417 b 600 419 594 419 597 419 b 622 398 611 419 622 409 b 620 391 622 395 620 392 b 227 -274 617 385 231 -272 b 213 -280 223 -278 219 -280 b 193 -259 202 -280 193 -270 b 194 -252 193 -256 193 -254 b 586 413 196 -247 582 410 b 592 417 588 415 590 416 \"},\n\"v35\":{\"x_min\":0,\"x_max\":323.9375,\"ha\":331,\"o\":\"m 217 535 b 225 537 220 537 221 537 b 245 524 235 537 242 533 l 246 521 l 247 390 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 492 87 498 b 103 495 98 498 100 496 b 114 485 107 494 111 489 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 384 l 205 521 l 206 524 b 217 535 209 528 212 533 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 \"},\n\"v36\":{\"x_min\":-1.359375,\"x_max\":1064.390625,\"ha\":1086,\"o\":\"m 296 692 b 314 694 302 694 307 694 b 386 685 337 694 366 689 b 548 498 480 660 548 580 b 548 481 548 492 548 487 b 455 395 541 426 499 395 b 370 462 420 395 383 417 b 362 496 364 477 362 488 b 377 514 362 509 367 514 b 393 501 386 514 390 510 b 432 474 397 484 413 474 b 470 487 445 474 458 478 b 491 530 484 496 491 510 b 490 544 491 534 491 539 b 333 660 479 606 411 657 l 323 662 l 315 646 b 269 524 285 591 269 556 b 321 431 269 492 287 466 b 349 395 338 413 343 408 b 363 342 359 378 363 362 b 359 312 363 333 362 322 b 285 158 348 266 318 206 b 281 152 283 155 281 152 b 281 152 281 152 281 152 b 287 154 283 152 284 152 b 318 155 298 154 308 155 b 461 98 371 155 419 136 l 464 97 l 483 112 b 503 129 494 120 503 127 b 504 130 503 129 504 129 b 503 138 504 131 503 134 b 500 180 500 152 500 166 b 553 326 500 238 518 288 b 604 366 560 331 592 358 b 649 381 617 376 632 381 b 696 362 665 381 681 374 b 724 302 714 347 724 324 b 695 238 724 278 714 255 b 660 210 691 234 662 212 b 579 148 658 209 582 151 b 579 148 579 148 579 148 b 596 106 579 144 589 119 b 622 77 604 88 609 83 b 657 69 632 72 645 69 b 748 112 688 69 721 84 b 755 123 754 117 755 120 b 755 127 755 124 755 126 b 751 165 752 137 751 151 b 758 219 751 183 754 202 b 894 387 774 290 820 347 b 896 390 896 388 896 388 b 891 398 896 391 895 392 b 622 560 827 477 730 535 b 600 580 605 564 600 569 b 617 596 600 591 607 596 b 628 595 622 596 624 596 b 1057 248 846 552 1020 412 b 1064 191 1061 229 1064 209 b 922 0 1064 94 1005 9 b 902 -1 916 -1 909 -1 b 774 76 847 -1 800 26 b 769 83 770 81 770 83 b 769 81 769 83 769 83 b 627 -1 733 29 677 -1 b 548 27 597 -1 570 8 b 515 88 537 37 525 61 l 513 95 l 510 93 l 453 45 b 390 0 396 0 396 0 b 390 0 390 0 390 0 b 374 15 381 0 377 4 b 268 105 359 69 314 105 b 250 104 262 105 257 105 l 243 102 l 234 90 b 155 1 201 49 159 2 b 147 -1 152 0 149 -1 b 130 15 138 -1 130 6 b 132 20 130 18 132 19 b 136 31 133 22 134 27 b 220 131 149 74 178 109 b 231 137 225 134 230 136 b 302 278 280 202 302 244 b 265 335 302 299 295 309 b 209 442 234 363 213 402 b 209 455 209 446 209 451 b 279 648 209 502 232 564 l 285 659 l 283 659 b 176 627 238 653 210 645 b 57 477 111 594 66 538 b 55 459 55 471 55 464 b 72 409 55 437 61 415 b 93 403 78 405 87 403 b 152 467 123 403 151 431 b 168 488 153 483 157 488 b 185 462 181 488 185 483 l 185 460 b 137 344 183 409 168 369 b 78 322 119 328 98 322 b 13 360 50 322 25 335 b -1 426 4 380 -1 402 b 89 610 -1 488 32 559 b 296 692 147 659 210 685 m 926 348 b 921 353 924 351 922 353 b 914 348 920 353 918 351 b 823 167 857 306 823 237 b 828 124 823 154 826 138 b 890 31 837 79 862 40 b 896 31 892 31 894 31 b 956 104 916 31 940 59 b 970 191 965 129 970 159 b 966 241 970 208 969 224 b 926 348 959 277 945 313 m 627 326 b 619 326 624 326 622 326 b 598 316 611 326 604 323 b 568 215 579 288 568 255 b 568 208 568 213 568 210 b 571 183 570 195 570 184 l 571 183 b 594 201 571 183 582 191 l 634 231 b 660 259 653 247 656 248 b 664 278 662 266 664 272 b 627 326 664 299 649 320 \"},\n\"v37\":{\"x_min\":0,\"x_max\":333.46875,\"ha\":340,\"o\":\"m 219 818 b 225 821 220 820 223 821 b 239 816 231 821 235 818 b 245 800 242 811 243 810 b 328 587 259 725 291 646 l 333 578 l 333 573 l 333 571 b 315 553 333 560 325 553 b 306 556 313 553 308 555 b 251 577 288 567 270 574 b 246 578 249 577 247 578 b 245 577 246 578 245 578 b 246 576 245 577 246 577 b 247 416 246 574 246 542 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 494 87 498 b 114 485 102 498 110 494 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 409 b 206 574 205 546 205 571 b 206 577 206 576 206 577 b 205 578 206 578 206 578 b 200 577 205 578 202 577 b 147 556 181 574 163 567 b 136 553 142 555 138 553 b 118 571 126 553 118 560 l 118 573 l 118 578 l 123 587 b 205 796 160 646 187 717 b 219 818 209 813 210 816 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 \"},\n\"v38\":{\"x_min\":-1.359375,\"x_max\":651.96875,\"ha\":665,\"o\":\"m 389 644 b 405 645 394 645 400 645 b 504 566 450 645 492 613 b 507 541 506 557 507 549 b 480 471 507 514 498 489 l 477 467 l 483 470 b 609 591 539 485 586 531 b 613 601 611 595 613 599 b 631 609 619 607 624 609 b 651 588 641 609 651 602 b 200 -946 651 584 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 537 313 478 300 508 b 389 644 300 585 334 635 \"},\n\"v39\":{\"x_min\":-171.5,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"v3a\":{\"x_min\":-1.359375,\"x_max\":227.3125,\"ha\":232,\"o\":\"m 182 210 b 196 215 189 213 193 215 b 204 209 200 215 202 212 b 205 204 205 206 205 205 b 193 191 205 199 201 195 b 104 54 137 159 104 105 b 122 -8 104 31 110 11 l 123 -11 l 130 -11 b 202 -45 156 -11 185 -24 b 227 -112 219 -65 227 -88 b 172 -205 227 -149 208 -186 b 127 -216 157 -212 142 -216 b -1 -52 59 -216 -1 -144 b 0 -37 -1 -48 0 -43 b 182 210 6 58 80 155 \"},\n\"v3b\":{\"x_min\":0,\"x_max\":484.5625,\"ha\":494,\"o\":\"m 228 245 b 239 247 234 247 239 247 b 243 247 240 247 242 247 b 303 238 257 247 287 242 b 484 -2 417 208 484 104 b 412 -177 484 -65 461 -127 b 243 -248 363 -226 303 -248 b 6 -63 138 -248 36 -180 b 0 -1 1 -41 0 -20 b 228 245 0 127 98 240 m 255 181 b 240 183 247 183 245 183 b 232 181 238 183 235 183 b 142 152 200 180 168 170 l 138 149 l 190 97 l 242 44 l 294 97 l 345 149 l 340 152 b 255 181 315 169 284 180 m 147 -54 l 197 -1 l 147 51 l 95 104 l 91 99 b 62 -1 72 70 62 34 b 66 -43 62 -15 63 -29 b 91 -101 72 -63 80 -84 l 95 -106 l 147 -54 m 393 99 b 389 104 390 102 389 104 b 337 51 389 104 366 80 l 285 -1 l 337 -54 l 389 -106 l 393 -101 b 421 -1 412 -72 421 -36 b 393 99 421 34 412 69 m 294 -98 b 242 -45 265 -69 242 -45 b 190 -98 242 -45 219 -69 l 138 -151 l 142 -154 b 242 -184 172 -174 206 -184 b 340 -154 276 -184 311 -174 l 345 -151 l 294 -98 \"},\n\"v3c\":{\"x_min\":0,\"x_max\":450.53125,\"ha\":460,\"o\":\"m 189 302 b 204 303 193 302 198 303 b 303 224 250 303 292 270 b 306 199 304 216 306 208 b 279 129 306 173 296 147 l 276 126 l 281 127 b 408 249 337 142 385 190 b 412 259 409 254 412 258 b 430 267 417 265 423 267 b 450 247 441 267 450 259 b 200 -605 450 242 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 194 111 136 99 165 b 189 302 99 244 133 292 \"},\n\"v3d\":{\"x_min\":0,\"x_max\":677.828125,\"ha\":692,\"o\":\"m 390 1199 b 396 1200 392 1200 394 1200 b 426 1179 404 1200 412 1195 b 528 975 468 1135 507 1059 b 543 863 537 938 543 900 b 401 533 543 743 494 627 l 364 496 l 344 476 l 345 471 l 355 430 l 383 291 l 385 284 l 387 284 b 420 287 398 285 409 287 b 616 192 494 287 567 251 b 677 18 658 140 677 79 b 502 -244 677 -88 615 -195 b 496 -247 499 -245 496 -247 b 514 -334 496 -247 499 -259 l 526 -394 b 537 -467 536 -437 537 -444 b 307 -700 536 -602 428 -700 b 215 -681 276 -700 245 -695 b 114 -595 174 -663 130 -626 b 103 -544 107 -578 103 -562 b 156 -444 103 -505 122 -466 b 219 -424 175 -431 197 -424 b 303 -463 250 -424 283 -438 b 329 -535 321 -485 329 -510 b 234 -644 329 -588 292 -638 l 224 -644 l 225 -645 b 268 -659 235 -650 254 -656 b 307 -663 281 -662 294 -663 b 498 -494 401 -663 484 -592 b 500 -467 499 -484 500 -476 b 491 -406 500 -452 498 -435 l 480 -348 b 461 -259 466 -284 461 -259 b 461 -259 461 -259 461 -259 b 457 -260 460 -259 458 -259 b 374 -270 430 -267 402 -270 b 190 -222 311 -270 246 -254 b 0 115 68 -151 0 -20 b 46 303 0 179 14 242 b 268 581 80 369 182 496 l 281 595 l 280 605 l 254 730 b 236 850 239 799 236 813 b 235 868 235 857 235 863 b 239 927 235 888 236 903 b 340 1153 250 1010 285 1090 b 390 1199 356 1171 383 1197 m 446 1039 b 434 1041 442 1041 438 1041 b 306 921 389 1041 332 989 b 284 810 291 884 284 849 b 296 705 284 780 288 745 l 308 649 b 313 627 311 637 313 627 l 313 627 b 344 657 314 627 332 645 b 487 957 434 757 487 870 b 483 995 487 970 485 982 b 446 1039 477 1021 468 1034 m 315 437 b 314 442 314 440 314 442 b 314 442 314 442 314 442 b 230 345 311 442 255 378 b 104 101 142 234 115 183 b 102 55 103 86 102 70 b 374 -242 102 -108 225 -242 b 420 -238 389 -242 404 -241 b 454 -229 431 -237 453 -230 b 454 -229 454 -229 454 -229 b 451 -213 454 -227 453 -220 l 441 -162 l 426 -93 l 378 136 b 372 149 375 145 375 149 b 364 147 371 149 368 148 b 270 12 306 123 270 70 b 274 -20 270 1 272 -9 b 333 -101 281 -52 302 -80 b 343 -117 340 -105 343 -112 b 330 -133 343 -124 338 -130 b 328 -133 329 -133 328 -133 b 238 -70 308 -133 262 -101 b 193 61 206 -30 193 15 b 340 272 193 151 247 240 b 348 276 345 274 348 276 b 347 284 348 276 348 280 l 315 437 m 443 155 b 421 156 436 156 428 156 b 412 155 416 156 412 156 b 412 155 412 155 412 155 b 420 117 412 154 416 137 l 435 44 l 449 -19 l 460 -72 l 475 -147 b 488 -212 484 -188 488 -208 b 490 -213 488 -212 490 -213 b 494 -210 490 -213 491 -212 b 571 -134 525 -194 553 -165 b 601 -33 592 -102 601 -66 b 443 155 601 56 539 140 \"},\n\"v3e\":{\"x_min\":0,\"x_max\":406.96875,\"ha\":415,\"o\":\"m 21 183 b 28 183 24 183 25 183 b 42 181 34 183 39 183 b 127 108 47 179 47 179 b 202 41 168 72 202 41 b 279 108 204 41 238 72 b 357 177 321 145 356 176 b 375 183 363 181 370 183 b 406 151 392 183 406 169 b 404 137 406 147 405 141 b 322 62 401 131 398 129 b 251 0 284 27 251 0 b 322 -63 251 -1 284 -29 b 404 -138 398 -130 401 -133 b 406 -152 405 -142 406 -148 b 375 -184 406 -170 392 -184 b 357 -179 370 -184 363 -183 b 279 -109 356 -177 321 -147 b 202 -43 238 -73 204 -43 b 127 -109 202 -43 168 -73 b 49 -179 85 -147 50 -177 b 31 -184 43 -183 36 -184 b 0 -152 13 -184 0 -170 b 2 -138 0 -148 0 -142 b 83 -63 5 -133 8 -130 b 155 0 122 -29 155 -1 b 83 62 155 0 122 27 b 8 129 43 97 10 127 b 0 151 2 136 0 144 b 21 183 0 165 8 177 \"},\n\"v3f\":{\"x_min\":-24.5,\"x_max\":317.140625,\"ha\":324,\"o\":\"m -24 -147 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 58 -123 6 -43 31 -86 b 196 -278 93 -173 134 -219 b 317 -570 274 -356 317 -460 b 294 -713 317 -617 308 -666 l 289 -724 l 294 -735 b 317 -873 308 -780 317 -827 b 235 -1132 317 -963 288 -1054 b 209 -1165 228 -1140 224 -1146 b 189 -1177 204 -1172 196 -1177 b 171 -1164 182 -1177 175 -1172 b 168 -1154 170 -1161 168 -1159 b 181 -1132 168 -1149 172 -1142 b 269 -891 238 -1064 269 -975 b 269 -881 269 -886 269 -884 b 262 -814 269 -857 265 -827 b 258 -800 261 -811 259 -806 b 142 -628 240 -731 198 -667 b -8 -589 112 -606 47 -589 b -20 -589 -13 -589 -19 -589 l -24 -589 l -24 -449 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 58 -424 6 -345 31 -388 b 194 -580 93 -476 136 -523 b 259 -660 221 -606 245 -635 b 261 -663 259 -662 261 -663 b 264 -656 262 -663 262 -660 b 269 -587 268 -632 269 -610 b 264 -521 269 -566 268 -544 b 262 -512 264 -517 262 -513 b 258 -498 261 -509 259 -503 b 142 -326 240 -428 198 -365 b -8 -287 112 -303 47 -288 b -20 -287 -13 -287 -19 -287 l -24 -287 l -24 -147 \"},\n\"v40\":{\"x_min\":-1.359375,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 \"},\n\"v41\":{\"x_min\":-1.359375,\"x_max\":556.6875,\"ha\":568,\"o\":\"m 294 322 b 318 323 299 322 308 323 b 360 320 334 323 352 322 b 526 217 430 310 490 273 b 543 166 537 202 543 184 b 447 70 543 117 503 70 b 445 70 447 70 446 70 b 359 159 394 72 359 113 b 368 201 359 173 362 187 b 442 245 382 229 412 245 b 455 244 446 245 451 245 b 460 244 458 244 460 244 b 460 244 460 244 460 244 b 454 248 460 244 458 245 b 325 291 417 276 372 291 b 285 287 313 291 299 290 b 144 -2 183 269 144 190 b 281 -290 144 -208 179 -280 b 304 -291 289 -291 298 -291 b 524 -105 412 -291 506 -212 b 541 -84 526 -88 530 -84 b 556 -101 551 -84 556 -90 b 549 -138 556 -111 553 -122 b 334 -322 521 -237 435 -310 b 302 -324 323 -323 313 -324 b 13 -101 172 -324 54 -234 b -1 -1 4 -68 -1 -34 b 294 322 -1 161 121 303 \"},\n\"v42\":{\"x_min\":-348.4375,\"x_max\":24.5,\"ha\":25,\"o\":\"m -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 \"},\n\"v43\":{\"x_min\":-442.359375,\"x_max\":441,\"ha\":450,\"o\":\"m -31 487 b -1 488 -21 488 -10 488 b 434 104 216 488 397 330 b 441 27 438 79 441 47 b 439 12 441 20 439 15 b 419 0 435 4 427 0 b 404 5 413 0 408 1 b 398 30 400 11 398 13 b 0 351 390 213 213 351 b -59 348 -20 351 -39 349 b -400 30 -251 324 -393 191 b -405 5 -400 13 -401 11 b -420 0 -409 1 -415 0 b -441 12 -428 0 -436 4 b -442 27 -441 15 -442 20 b -435 104 -442 47 -439 79 b -31 487 -401 316 -235 474 m -13 131 b -1 133 -9 133 -5 133 b 51 105 19 133 39 123 b 61 70 58 95 61 83 b 51 34 61 58 58 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -57 38 -62 54 b -13 131 -62 98 -44 124 \"},\n\"v44\":{\"x_min\":-21.78125,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"v45\":{\"x_min\":-402.890625,\"x_max\":401.53125,\"ha\":410,\"o\":\"m -10 273 b -4 274 -9 273 -6 274 b 16 262 4 274 12 269 b 17 158 17 259 17 259 l 17 56 l 62 112 b 117 174 110 172 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b 21 -6 27 0 24 -2 l 17 -12 l 17 -147 b 17 -210 17 -173 17 -194 b 10 -292 17 -297 16 -287 b -2 -299 6 -297 2 -299 b -21 -287 -10 -299 -19 -295 b -24 -174 -23 -284 -23 -284 l -24 -63 l -66 -117 b -121 -176 -110 -170 -114 -176 b -125 -176 -122 -176 -123 -176 b -296 -12 -134 -174 -125 -184 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 170 -398 -43 -231 165 b -212 174 -221 173 -216 174 b -202 173 -208 174 -205 174 b -39 11 -200 172 -151 122 l -28 -1 l -25 1 l -24 4 l -24 130 b -23 260 -24 256 -24 258 b -10 273 -20 266 -16 270 \"},\n\"v46\":{\"x_min\":0,\"x_max\":627.46875,\"ha\":640,\"o\":\"m 306 190 b 314 191 308 191 311 191 b 326 184 318 191 322 190 l 336 173 b 510 52 377 127 442 80 b 515 49 513 51 515 49 b 611 16 537 40 579 24 b 627 0 624 13 627 9 b 607 -18 627 -11 624 -13 b 330 -181 490 -49 389 -109 b 314 -192 323 -190 319 -192 b 306 -191 311 -192 308 -192 b 294 -177 302 -188 302 -188 b 257 -140 287 -170 265 -148 b 19 -18 193 -84 114 -44 b 0 0 2 -13 0 -11 b 16 16 0 9 2 13 b 110 49 47 24 89 40 b 117 52 111 49 114 51 b 145 65 126 56 130 58 b 281 163 200 93 245 124 b 300 186 288 170 291 174 b 306 190 300 187 303 188 m 317 137 b 313 142 315 141 314 142 b 308 137 313 142 311 141 b 161 4 276 84 220 33 b 155 0 159 1 155 0 b 163 -4 155 0 159 -2 b 308 -138 220 -34 276 -84 b 313 -142 311 -141 313 -142 b 317 -138 314 -142 315 -141 b 464 -4 351 -84 406 -34 b 470 0 468 -2 470 0 b 464 4 470 0 468 1 b 317 137 406 33 351 84 \"},\n\"v47\":{\"x_min\":-24.5,\"x_max\":315.78125,\"ha\":322,\"o\":\"m -24 -145 l -24 -5 l -20 -5 b 1 -26 -10 -5 -6 -9 b 175 -241 31 -86 96 -166 b 314 -548 259 -323 304 -420 b 315 -589 315 -555 315 -571 b 314 -630 315 -606 315 -623 b 298 -730 311 -664 306 -699 l 295 -742 l 296 -748 b 314 -850 304 -778 311 -813 b 315 -892 315 -857 315 -874 b 314 -932 315 -909 315 -925 b 298 -1032 311 -967 306 -1002 l 295 -1045 l 296 -1050 b 314 -1153 304 -1081 311 -1115 b 315 -1193 315 -1160 315 -1177 b 314 -1235 315 -1211 315 -1228 b 217 -1526 306 -1338 270 -1444 b 201 -1533 213 -1532 208 -1533 b 182 -1522 193 -1533 185 -1529 b 179 -1514 181 -1518 179 -1517 b 189 -1489 179 -1508 182 -1501 b 266 -1217 240 -1403 266 -1308 b 262 -1156 266 -1196 265 -1177 b 110 -907 247 -1043 190 -950 b 0 -889 87 -895 50 -889 l -1 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 1 -631 -10 -610 -6 -614 b 175 -846 31 -691 96 -771 b 259 -956 213 -884 236 -914 b 265 -966 262 -961 264 -966 b 265 -966 265 -966 265 -966 b 265 -953 265 -964 265 -959 b 266 -920 266 -943 266 -932 b 262 -853 266 -898 265 -873 b 110 -605 247 -741 190 -648 b 0 -587 87 -592 50 -587 l -1 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 1 -328 -10 -308 -6 -312 b 175 -544 31 -388 96 -469 b 259 -655 213 -581 236 -612 b 265 -663 262 -659 264 -663 b 265 -663 265 -663 265 -663 b 265 -650 265 -663 265 -657 b 266 -617 266 -641 266 -630 b 262 -551 266 -595 265 -570 b 110 -303 247 -438 190 -345 b 0 -284 87 -290 50 -284 l -1 -284 l -24 -284 l -24 -145 \"},\n\"v48\":{\"x_min\":0,\"x_max\":720.03125,\"ha\":735,\"o\":\"m 251 280 b 269 280 258 280 264 280 b 487 215 348 280 432 255 b 594 -2 558 159 594 87 b 590 -55 594 -19 593 -37 b 44 -598 553 -309 330 -533 b 10 -605 25 -603 16 -605 b 1 -599 5 -605 2 -603 b 0 -594 0 -598 0 -595 b 8 -580 0 -587 2 -580 b 43 -566 9 -580 32 -571 b 453 -54 279 -467 434 -274 b 454 -9 454 -48 454 -29 b 453 34 454 9 454 29 b 351 230 443 129 411 192 b 259 255 323 247 292 255 b 70 133 183 255 103 208 b 68 124 68 127 68 124 b 68 123 68 123 68 123 b 70 126 68 123 69 124 b 126 141 88 137 107 141 b 202 109 153 141 182 131 b 234 33 224 87 234 59 b 126 -77 234 -23 191 -77 b 5 61 53 -77 5 -13 b 27 147 5 88 12 119 b 251 280 68 226 151 274 m 672 172 b 677 173 673 173 676 173 b 720 130 700 173 720 152 b 714 111 720 124 717 117 b 677 88 707 95 692 88 b 642 108 664 88 650 95 b 637 130 638 115 637 123 b 672 172 637 151 650 169 m 672 -90 b 677 -90 673 -90 676 -90 b 720 -131 700 -90 720 -109 b 714 -151 720 -138 717 -144 b 677 -174 707 -166 692 -174 b 642 -154 664 -174 650 -167 b 637 -133 638 -147 637 -140 b 672 -90 637 -112 650 -93 \"},\n\"v49\":{\"x_min\":0,\"x_max\":630.203125,\"ha\":643,\"o\":\"m 308 204 b 314 205 310 205 313 205 b 326 201 319 205 323 204 b 355 154 328 199 338 180 b 401 83 362 142 392 95 l 409 72 b 431 41 412 66 424 49 b 619 -174 498 -51 570 -134 b 630 -192 626 -180 630 -186 b 626 -202 630 -195 628 -199 b 616 -206 623 -205 620 -206 b 552 -188 608 -206 592 -202 b 310 -155 488 -169 392 -155 b 268 -156 295 -155 281 -155 b 77 -188 197 -161 126 -173 b 13 -206 35 -202 20 -206 b 9 -206 12 -206 10 -206 b 0 -191 2 -202 0 -197 b 8 -176 0 -186 2 -180 b 204 49 58 -136 138 -43 l 220 72 l 227 83 b 295 188 245 108 281 166 b 308 204 299 197 304 202 m 315 147 b 314 147 315 147 314 147 b 314 147 314 147 314 147 b 306 129 314 145 310 138 l 296 105 b 281 72 292 97 284 77 l 274 56 b 181 -123 247 -4 212 -72 l 174 -134 l 176 -133 b 314 -123 215 -127 272 -123 b 451 -133 356 -123 413 -127 l 454 -134 l 449 -123 b 353 56 417 -72 381 -4 l 347 72 b 332 105 344 77 336 97 l 322 129 b 315 147 318 138 315 145 \"},\n\"v4a\":{\"x_min\":70.78125,\"x_max\":378.390625,\"ha\":315,\"o\":\"m 246 373 b 254 373 249 373 251 373 b 372 324 303 373 360 351 b 378 302 377 317 378 309 b 338 251 378 278 362 255 b 328 249 334 249 332 249 b 283 294 303 249 283 270 b 288 315 283 301 284 308 b 289 319 289 317 289 319 b 289 319 289 319 289 319 b 283 320 289 320 287 320 b 270 322 279 322 274 322 b 206 288 242 322 215 308 b 206 283 206 287 206 285 b 257 223 206 267 230 238 b 284 206 272 213 277 210 b 351 90 328 173 351 130 b 340 47 351 74 348 59 b 205 -30 314 -2 264 -30 b 182 -29 198 -30 190 -30 b 84 15 147 -24 103 -5 b 70 48 74 24 70 36 b 108 99 70 70 85 94 b 121 102 112 101 117 102 b 167 56 147 102 167 80 b 159 31 167 48 164 40 l 156 26 l 157 26 b 190 20 167 22 178 20 b 220 26 201 20 212 22 b 258 65 243 34 258 51 b 257 70 258 66 258 69 b 204 126 249 94 234 109 b 114 258 148 158 114 209 b 125 302 114 273 118 288 b 246 373 147 342 193 370 \"},\n\"v4b\":{\"x_min\":0,\"x_max\":503.609375,\"ha\":514,\"o\":\"m 274 430 b 277 430 276 430 277 430 b 310 394 296 430 310 415 b 308 383 310 391 308 387 b 306 367 307 381 307 374 b 236 120 298 305 272 210 b 40 -273 189 -5 125 -134 b 20 -287 35 -283 27 -287 b 5 -281 14 -287 9 -285 b 0 -267 1 -277 0 -273 b 9 -242 0 -262 2 -255 b 246 395 137 -12 232 242 b 274 430 249 416 257 427 m 468 430 b 472 430 469 430 470 430 b 503 394 490 430 503 415 b 502 383 503 391 503 387 b 499 367 502 381 500 374 b 431 120 491 305 465 210 b 234 -273 382 -5 318 -134 b 213 -287 228 -283 220 -287 b 198 -281 208 -287 202 -285 b 193 -267 194 -277 193 -273 b 202 -242 193 -262 196 -255 b 439 395 330 -12 426 242 b 468 430 442 416 451 427 \"},\n\"v4c\":{\"x_min\":-348.4375,\"x_max\":24.5,\"ha\":25,\"o\":\"m -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -6 27 -221 95 -117 52 b 10 23 1 26 8 23 b 24 -1 20 18 24 8 b 12 -23 24 -9 20 -19 b -8 -29 9 -26 9 -26 b -298 -148 -112 -52 -223 -97 b -322 -158 -313 -158 -315 -158 b -348 -133 -338 -158 -348 -147 b -343 -115 -348 -127 -347 -120 b -313 -1 -323 -79 -313 -40 b -337 101 -313 34 -321 69 b -343 113 -338 105 -341 111 b -348 131 -347 119 -348 126 b -330 155 -348 142 -343 152 \"},\n\"v4d\":{\"x_min\":-311.6875,\"x_max\":310.328125,\"ha\":317,\"o\":\"m -9 388 b -2 390 -8 390 -5 390 b 5 388 1 390 4 390 b 19 378 10 387 16 383 b 23 333 23 371 23 371 b 24 298 23 299 24 298 b 81 276 34 298 65 285 b 213 91 145 240 190 177 b 224 24 217 76 224 36 b 257 24 224 24 235 24 b 299 19 292 24 292 24 b 310 -1 306 15 310 6 b 299 -23 310 -11 306 -19 b 257 -27 292 -27 292 -27 b 224 -29 235 -27 224 -29 b 213 -95 224 -40 217 -80 b 81 -280 190 -181 145 -244 b 24 -301 65 -290 34 -301 b 23 -335 24 -301 23 -303 l 23 -340 b 17 -381 23 -374 23 -374 b -1 -391 13 -388 5 -391 b -21 -381 -9 -391 -17 -388 b -27 -340 -27 -374 -27 -374 l -27 -335 b -28 -301 -27 -303 -27 -301 b -85 -280 -38 -301 -69 -290 b -217 -95 -149 -244 -194 -181 b -228 -29 -221 -80 -228 -40 b -259 -27 -228 -29 -238 -27 b -300 -23 -294 -27 -294 -27 b -311 -2 -307 -19 -311 -11 b -294 23 -311 8 -304 19 b -259 24 -291 23 -284 24 b -228 24 -239 24 -228 24 b -217 91 -228 36 -221 76 b -85 276 -194 177 -149 240 b -28 298 -69 285 -38 298 b -27 333 -27 298 -27 299 b -27 371 -27 362 -27 369 b -9 388 -24 378 -17 385 m -27 136 b -28 247 -27 197 -28 247 b -61 216 -31 247 -53 226 b -123 33 -95 172 -121 98 l -125 24 l -76 24 l -27 24 l -27 136 m 29 242 b 24 247 27 245 24 247 b 23 136 24 247 23 197 l 23 24 l 72 24 l 121 24 l 119 33 b 29 242 115 116 77 206 m -27 -140 l -27 -27 l -76 -27 l -125 -27 l -123 -36 b -61 -220 -121 -102 -95 -176 b -28 -251 -53 -230 -31 -251 b -27 -140 -28 -251 -27 -201 m 119 -36 l 121 -27 l 72 -27 l 23 -27 l 23 -140 b 24 -251 23 -201 24 -251 b 57 -220 27 -251 49 -230 b 119 -36 91 -176 117 -102 \"},\n\"v4e\":{\"x_min\":0,\"x_max\":239.5625,\"ha\":244,\"o\":\"m 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -106 l 239 -448 l 238 -451 b 219 -463 234 -459 225 -463 b 198 -451 210 -463 202 -459 l 197 -448 l 197 -324 b 197 -201 197 -248 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 \"},\n\"v4f\":{\"x_min\":0,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 85 514 b 95 517 88 517 89 517 b 114 505 103 517 110 513 l 115 502 l 115 376 b 115 249 115 306 115 249 b 141 258 117 249 127 252 l 167 266 l 172 266 b 190 254 181 265 187 262 l 193 251 l 193 202 l 193 188 b 187 147 193 149 191 152 b 147 130 183 142 182 141 l 115 119 l 115 9 b 115 -99 115 -51 115 -99 b 141 -91 115 -99 127 -95 b 171 -81 166 -81 167 -81 l 171 -81 b 191 -94 181 -81 189 -87 b 193 -142 191 -97 193 -120 b 191 -195 193 -167 191 -194 b 125 -227 187 -205 187 -204 l 115 -230 l 115 -366 l 115 -503 l 114 -506 b 95 -519 110 -514 102 -519 b 74 -506 87 -519 78 -514 l 73 -503 l 73 -374 b 73 -245 73 -260 73 -245 b 73 -245 73 -245 73 -245 b 55 -252 72 -245 63 -249 l 32 -260 b 19 -263 27 -262 23 -263 b 4 -256 13 -263 8 -260 b 0 -215 0 -251 0 -254 b 0 -199 0 -210 0 -206 l 0 -152 l 1 -149 b 8 -140 2 -145 5 -141 b 42 -127 9 -140 24 -133 l 73 -116 l 73 -5 b 73 23 73 4 73 15 b 73 105 73 70 73 105 b 49 97 73 105 61 101 b 17 88 32 91 23 88 b 4 95 10 88 8 91 b 0 137 0 101 0 98 b 0 151 0 141 0 145 l 0 199 l 1 202 b 43 224 5 212 5 212 l 73 234 l 73 367 l 73 502 l 74 505 b 85 514 77 509 81 513 \"},\n\"v50\":{\"x_min\":-111.609375,\"x_max\":110.25,\"ha\":113,\"o\":\"m -8 112 b -1 112 -5 112 -2 112 b 110 -1 63 112 110 58 b 87 -69 110 -24 103 -48 b -1 -113 65 -98 32 -113 b -88 -69 -34 -113 -66 -98 b -111 -1 -104 -48 -111 -24 b -8 112 -111 55 -70 108 m 17 94 b 0 95 12 95 6 95 b -53 79 -17 95 -38 90 b -95 -1 -80 61 -95 30 b -72 -63 -95 -23 -88 -45 b -1 -97 -53 -87 -27 -97 b 89 -31 38 -97 74 -73 b 93 0 92 -20 93 -11 b 17 94 93 44 63 83 \"},\n\"v51\":{\"x_min\":-1.359375,\"x_max\":455.96875,\"ha\":465,\"o\":\"m 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 \"},\n\"v52\":{\"x_min\":-10.890625,\"x_max\":298.078125,\"ha\":294,\"o\":\"m 138 473 b 142 474 140 473 141 474 b 164 459 148 474 153 470 b 191 402 183 442 191 423 b 181 353 191 388 187 371 b 178 349 179 352 178 349 b 179 348 178 348 179 348 b 185 349 181 348 182 348 b 255 376 210 355 234 363 b 272 381 264 381 266 381 b 298 355 287 381 298 370 b 288 330 298 348 298 345 b 171 34 238 254 194 141 b 166 13 168 16 168 16 b 144 1 161 5 152 1 b 121 15 134 1 125 5 b 115 33 119 18 117 24 b 0 330 91 145 49 252 b -10 355 -9 345 -10 348 b 13 381 -10 371 0 381 b 31 376 19 381 25 380 b 132 345 61 358 103 345 l 136 345 l 137 355 b 145 378 138 359 142 370 b 152 415 149 394 152 405 b 137 452 152 427 148 438 b 133 464 134 458 133 460 b 138 473 133 467 134 470 \"},\n\"v53\":{\"x_min\":0,\"x_max\":902.421875,\"ha\":921,\"o\":\"m 17 240 b 24 241 19 241 21 241 b 32 240 28 241 31 241 b 46 229 38 238 43 234 b 50 88 50 223 50 237 b 50 -1 50 63 50 34 b 50 -90 50 -36 50 -65 b 46 -231 50 -238 50 -224 b 25 -242 42 -238 34 -242 b 0 -224 14 -242 4 -235 b 0 2 0 -222 0 -108 b 0 223 0 112 0 220 b 17 240 2 230 9 237 m 110 240 b 118 241 111 241 114 241 b 126 240 121 241 123 241 b 142 223 133 237 140 230 b 144 123 144 220 144 205 b 144 29 144 45 144 29 b 144 29 144 29 144 29 b 393 183 166 106 264 167 b 450 186 412 184 431 186 b 756 29 600 186 732 120 b 756 29 756 29 756 29 b 758 123 758 29 758 45 b 760 227 758 226 758 223 b 784 241 766 237 774 241 b 804 229 792 241 800 237 b 809 88 808 223 809 237 l 809 -1 l 809 -90 b 804 -231 809 -238 808 -224 b 784 -242 800 -238 792 -242 b 762 -231 775 -242 766 -238 b 758 -124 756 -224 758 -231 b 756 -30 758 -47 758 -30 b 756 -30 756 -30 756 -30 b 509 -184 736 -108 637 -169 b 450 -187 488 -187 469 -187 b 144 -30 300 -187 168 -122 b 144 -30 144 -30 144 -30 b 144 -124 144 -30 144 -47 b 140 -231 144 -231 144 -224 b 118 -242 134 -238 126 -242 b 92 -224 107 -242 96 -235 b 92 2 92 -222 92 -108 b 92 223 92 112 92 220 b 110 240 95 230 102 237 m 432 161 b 413 162 426 162 420 162 b 313 41 351 162 313 109 b 347 -73 313 5 323 -34 b 487 -163 385 -133 439 -163 b 578 -97 526 -163 562 -142 b 588 -43 585 -80 588 -62 b 432 161 588 47 518 147 m 868 240 b 876 241 869 241 872 241 b 884 240 879 241 882 241 b 898 229 890 238 894 234 b 902 88 902 223 902 237 l 902 -1 l 902 -90 b 898 -231 902 -238 902 -224 b 876 -242 892 -238 884 -242 b 852 -224 865 -242 854 -235 b 850 2 850 -222 850 -108 b 852 223 850 112 850 220 b 868 240 853 230 860 237 \"},\n\"v54\":{\"x_min\":-24.5,\"x_max\":317.140625,\"ha\":324,\"o\":\"m -24 -161 l -24 -5 l -20 -5 b 0 -24 -9 -5 -2 -12 b 171 -315 21 -124 84 -233 b 317 -660 268 -406 317 -531 b 187 -1014 317 -782 274 -909 b 161 -1034 172 -1034 171 -1034 b 141 -1013 149 -1034 141 -1025 b 152 -991 141 -1004 142 -1002 b 266 -682 228 -899 266 -788 b 174 -430 266 -588 236 -498 b -23 -317 136 -388 66 -348 b -24 -161 -23 -316 -24 -285 \"},\n\"v55\":{\"x_min\":0,\"x_max\":551.25,\"ha\":563,\"o\":\"m 289 644 b 304 645 294 645 299 645 b 404 566 349 645 392 613 b 406 541 405 557 406 549 b 379 471 406 514 397 489 l 377 467 l 382 470 b 509 591 438 485 485 531 b 513 601 510 595 513 599 b 530 609 518 607 524 609 b 551 588 540 609 551 602 b 200 -605 551 584 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 195 112 136 99 165 b 118 256 99 217 106 238 b 204 303 138 287 171 303 b 292 249 238 303 273 285 b 306 199 302 234 306 217 b 279 129 306 173 296 148 l 276 126 l 281 127 b 408 248 336 142 385 190 b 473 470 409 254 473 469 b 473 470 473 470 473 470 b 465 464 473 470 469 467 b 341 421 428 435 383 421 b 236 458 303 421 266 433 b 200 537 212 478 200 508 b 289 644 200 585 234 635 \"},\n\"v56\":{\"x_min\":0,\"x_max\":1159.671875,\"ha\":1183,\"o\":\"m 0 0 l 0 347 l 193 347 l 386 347 l 386 0 l 386 -348 l 193 -348 l 0 -348 l 0 0 m 773 -1 l 773 347 l 966 347 l 1159 347 l 1159 -1 l 1159 -348 l 966 -348 l 773 -348 l 773 -1 \"},\n\"v57\":{\"x_min\":0,\"x_max\":272.21875,\"ha\":278,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 \"},\n\"v58\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 259 1553 b 265 1553 261 1553 264 1553 b 288 1540 272 1553 277 1550 b 367 1351 340 1493 367 1424 b 336 1221 367 1308 357 1263 l 332 1211 l 333 1208 b 367 1077 356 1170 367 1124 b 336 945 367 1032 357 986 l 332 935 l 333 932 b 367 800 356 893 367 848 b 336 669 367 756 357 710 l 332 659 l 333 656 b 367 523 356 617 367 571 b 345 412 367 485 360 446 b 231 273 322 356 284 310 b -1 19 121 195 27 93 b -17 4 -4 11 -10 5 l -21 4 l -21 134 l -21 265 l -17 265 b 133 291 20 265 96 278 b 318 537 245 328 318 433 b 307 603 318 559 315 582 b 303 614 304 612 304 614 b 298 609 302 614 300 613 b 231 549 281 589 258 567 b -1 295 121 471 27 369 b -17 280 -4 287 -10 281 l -21 280 l -21 410 l -21 541 l -17 541 b 133 567 20 541 96 555 b 318 813 245 605 318 709 b 307 880 318 835 315 859 b 303 891 304 888 304 891 b 298 885 302 891 300 888 b 231 825 281 866 258 843 b -1 571 121 748 27 645 b -17 556 -4 563 -10 557 l -21 556 l -21 687 l -21 817 l -17 817 b 133 843 20 817 96 830 b 318 1089 245 881 318 985 b 307 1156 318 1111 315 1134 b 303 1167 304 1164 304 1167 b 298 1161 302 1167 300 1164 b 231 1102 281 1140 258 1120 b -1 848 121 1024 27 921 b -17 832 -4 839 -10 834 l -21 832 l -21 963 l -21 1093 l -17 1093 b 114 1113 12 1093 78 1103 b 313 1314 215 1142 289 1218 b 318 1364 317 1331 318 1347 b 255 1511 318 1422 295 1478 b 243 1532 247 1519 243 1525 b 259 1553 243 1540 250 1550 \"},\n\"v59\":{\"x_min\":0,\"x_max\":464.140625,\"ha\":474,\"o\":\"m 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 \"},\n\"v5a\":{\"x_min\":-171.5,\"x_max\":170.140625,\"ha\":174,\"o\":\"m -6 566 b 0 567 -5 567 -2 567 b 14 556 6 567 12 563 b 92 285 14 555 50 433 b 170 13 166 33 170 19 b 168 13 170 13 170 13 b 161 1 168 8 167 4 l 159 0 l 122 0 l 84 0 l 81 1 b 21 195 76 5 78 -5 b -32 381 -8 297 -32 381 b -87 197 -32 381 -57 298 b -141 8 -115 94 -140 9 b -155 0 -142 2 -149 0 b -171 15 -163 0 -171 5 b -14 556 -171 18 -24 528 b -6 566 -14 560 -10 564 \"},\n\"v5b\":{\"x_min\":-441,\"x_max\":439.640625,\"ha\":449,\"o\":\"m -428 -2 b -421 0 -427 -1 -424 0 b -406 -6 -416 0 -409 -2 b -400 -31 -401 -12 -400 -15 b -1 -352 -392 -215 -215 -352 b 58 -349 19 -352 38 -351 b 398 -31 250 -326 392 -192 b 404 -6 398 -15 400 -12 b 419 -1 408 -2 413 -1 b 439 -13 427 -1 435 -5 b 439 -29 439 -16 439 -22 b 434 -105 439 -48 438 -80 b 0 -489 397 -333 213 -489 b -68 -484 -23 -489 -44 -488 b -441 -36 -280 -452 -436 -263 b -441 -30 -441 -34 -441 -31 b -428 -2 -441 -11 -439 -5 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -57 -102 -62 -87 b -13 -9 -62 -44 -44 -16 \"},\n\"v5c\":{\"x_min\":0,\"x_max\":447.8125,\"ha\":457,\"o\":\"m 0 -87 l 0 0 l 223 0 l 447 0 l 447 -87 l 447 -174 l 223 -174 l 0 -174 l 0 -87 \"},\n\"v5d\":{\"x_min\":-1.359375,\"x_max\":592.078125,\"ha\":604,\"o\":\"m 280 692 b 295 694 283 692 289 694 b 310 692 300 694 307 692 b 357 630 340 684 357 657 b 336 580 357 612 351 594 b 311 538 321 566 311 549 b 352 492 311 512 330 492 b 366 495 357 492 362 492 b 397 553 390 503 397 517 b 415 603 397 576 402 591 b 460 623 427 617 443 623 b 509 599 479 623 498 614 b 522 559 518 587 522 573 b 494 506 522 538 513 519 b 451 495 481 498 473 496 b 415 488 432 495 426 494 b 394 449 404 483 394 464 b 394 448 394 448 394 448 l 394 440 l 397 433 b 428 409 404 420 413 413 b 438 408 431 408 435 408 b 479 431 450 408 462 415 b 528 455 495 448 510 455 b 548 452 534 455 541 453 b 592 391 577 442 592 416 b 549 331 592 365 577 340 b 528 327 541 328 534 327 b 479 351 510 327 495 335 b 438 374 464 367 450 374 b 417 369 431 374 424 373 b 394 333 402 360 394 348 b 400 312 394 326 396 319 b 451 287 408 294 420 288 b 513 258 484 285 499 278 b 522 223 519 247 522 234 b 461 159 522 190 496 159 b 449 161 457 159 453 159 b 397 229 416 167 397 191 b 366 288 397 265 390 278 b 352 290 362 290 357 290 b 315 262 336 290 321 280 b 311 245 313 256 311 251 b 334 204 311 233 318 220 b 355 170 348 190 351 184 b 357 152 356 166 357 159 b 355 136 357 147 356 140 b 295 88 345 104 321 88 b 232 152 264 88 232 112 b 255 204 232 174 238 186 b 279 244 273 222 279 231 l 279 245 b 238 290 279 270 259 290 b 224 288 234 290 228 290 b 193 229 200 278 193 265 b 141 161 193 191 174 167 b 129 159 137 159 133 159 b 68 223 93 159 68 190 b 77 258 68 234 70 247 b 138 287 91 278 106 285 b 185 302 166 287 175 291 b 196 333 193 312 196 323 b 174 369 196 347 187 360 b 152 374 166 373 159 374 b 111 351 140 374 126 367 b 62 327 95 335 80 327 b 51 328 58 327 54 327 b -1 391 16 334 -1 363 b 53 455 -1 420 17 449 b 62 455 57 455 59 455 b 111 431 80 455 95 448 b 152 408 127 415 140 408 b 161 409 155 408 159 408 b 193 433 176 413 186 420 l 196 440 l 196 448 b 196 451 196 449 196 449 b 190 471 196 459 194 463 b 137 495 182 489 167 495 l 134 495 l 134 495 b 68 560 95 495 68 521 b 129 623 68 596 95 623 b 144 621 134 623 138 623 b 193 553 175 614 193 589 b 224 495 193 517 200 503 b 238 492 228 492 234 492 b 279 538 259 492 279 512 b 254 580 279 549 269 566 b 232 630 239 594 232 612 b 280 692 232 657 250 684 m 307 456 b 295 458 303 458 299 458 b 230 391 258 458 230 426 b 236 360 230 381 231 371 b 295 324 249 337 272 324 b 353 360 318 324 341 337 b 360 391 357 370 360 381 b 307 456 360 421 340 451 \"},\n\"v5e\":{\"x_min\":-206.890625,\"x_max\":428.75,\"ha\":438,\"o\":\"m -178 811 b -172 811 -175 811 -174 811 b -145 800 -164 811 -157 809 l -114 778 l -50 735 l 13 691 l 77 646 l 141 602 l 205 559 l 269 514 l 332 471 l 394 427 b 428 392 421 409 426 405 b 428 384 428 390 428 387 b 394 349 428 365 412 349 b 375 355 387 349 382 351 b 272 426 372 356 303 403 l 209 469 l 145 513 l 83 556 l -34 638 l -87 674 l -151 718 b -202 759 -196 749 -198 752 b -206 775 -205 764 -206 770 b -178 811 -206 792 -196 809 \"},\n\"v5f\":{\"x_min\":-390.640625,\"x_max\":389.28125,\"ha\":397,\"o\":\"m -378 -2 b -368 -1 -375 -1 -374 -1 b -349 -13 -360 -1 -353 -5 l -348 -16 l -348 -176 l -348 -337 l 0 -337 l 347 -337 l 347 -176 l 347 -16 l 348 -13 b 367 0 352 -5 360 0 b 387 -13 375 0 383 -5 l 389 -16 l 389 -252 l 389 -489 l 387 -492 b 377 -503 385 -498 381 -501 l 372 -505 l 0 -505 l -374 -505 l -378 -503 b -389 -492 -382 -501 -386 -498 l -390 -489 l -390 -252 l -390 -16 l -389 -13 b -378 -2 -386 -8 -382 -4 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -58 -102 -62 -87 b -13 -9 -62 -44 -44 -16 \"},\n\"v60\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m -367 173 b -362 174 -366 174 -364 174 b -351 173 -357 174 -353 173 b -262 86 -348 172 -328 151 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 72 86 -13 172 6 151 b 157 0 119 37 157 0 b 227 84 159 0 189 37 b 303 174 298 173 296 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 144 -86 213 0 182 -38 b 68 -174 73 -174 74 -173 b 62 -176 66 -176 65 -176 b 53 -174 59 -176 55 -174 b -35 -87 50 -173 29 -152 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -367 173 -375 169 -372 172 \"},\n\"v61\":{\"x_min\":-108.890625,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 93 -148 206 -40 179 -70 l 38 -199 l 23 -215 l 20 -217 l 20 -241 b 19 -267 20 -260 20 -266 b 19 -270 19 -269 19 -270 b 19 -270 19 -270 19 -270 b 47 -263 21 -270 39 -266 b 78 -249 55 -260 69 -255 b 89 -247 83 -247 85 -247 b 107 -265 99 -247 107 -254 l 107 -265 l 107 -270 l 102 -280 b 19 -492 65 -338 34 -417 b 0 -513 14 -508 10 -513 b -20 -488 -12 -513 -16 -508 b -103 -280 -38 -409 -66 -338 l -108 -270 l -108 -265 l -108 -265 b -91 -247 -108 -254 -100 -247 b -80 -249 -87 -247 -84 -247 b -49 -263 -70 -255 -57 -260 b -20 -270 -40 -266 -23 -270 b -20 -270 -20 -270 -20 -270 b -20 -267 -20 -270 -20 -269 b -21 174 -21 -266 -21 -208 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"v62\":{\"x_min\":46.28125,\"x_max\":669.671875,\"ha\":563,\"o\":\"m 183 376 b 189 376 185 376 187 376 b 212 374 197 376 208 376 b 265 337 234 369 253 355 b 274 317 268 331 273 320 b 274 316 274 317 274 316 b 280 323 276 316 276 319 b 311 358 288 337 299 348 b 319 366 315 360 318 365 b 356 376 326 373 340 376 b 382 371 364 376 374 374 b 428 337 400 366 417 352 b 436 317 431 331 436 320 b 438 316 436 317 436 316 b 442 323 438 316 439 319 b 475 358 451 337 462 348 b 483 366 477 360 481 365 b 518 376 488 373 503 376 b 544 373 528 376 536 376 b 604 285 579 360 604 326 b 597 249 604 273 601 258 b 543 63 596 247 544 70 b 541 54 543 61 541 55 b 540 44 540 51 540 47 b 552 23 540 33 545 23 b 552 23 552 23 552 23 b 647 126 586 29 627 72 b 658 138 651 136 653 138 b 660 138 660 138 660 138 b 669 129 666 137 669 136 b 654 88 669 122 665 109 b 562 -12 631 43 602 9 l 549 -19 b 521 -27 540 -24 530 -27 b 447 30 490 -27 458 -4 b 443 58 445 38 443 48 b 450 93 443 72 446 84 b 504 278 453 97 504 272 b 507 288 506 283 506 287 b 509 298 507 292 509 295 b 491 326 509 310 502 320 b 487 327 490 327 488 327 b 479 324 484 327 483 326 b 441 270 462 316 443 288 b 435 249 441 265 436 254 b 398 127 434 248 419 195 b 362 4 379 61 362 5 b 328 -1 359 -1 362 -1 b 314 -1 323 -1 319 -1 b 302 -1 310 -1 306 -1 b 266 4 266 -1 269 -1 b 265 6 265 5 265 5 b 303 144 265 13 272 34 b 343 278 325 216 343 276 b 344 288 343 281 344 285 b 345 298 345 291 345 295 b 330 326 345 310 340 320 b 323 327 328 327 325 327 b 317 324 322 327 321 326 b 279 270 300 316 281 288 b 273 249 279 265 274 254 b 236 127 272 248 255 195 b 200 4 216 61 200 5 b 164 -1 197 -1 198 -1 b 151 -1 161 -1 156 -1 b 140 -1 147 -1 142 -1 b 103 4 104 -1 106 -1 b 103 6 103 5 103 5 b 141 144 103 13 108 34 b 181 278 161 216 179 276 b 182 288 181 281 181 285 b 183 298 182 291 183 295 b 168 324 183 310 178 320 b 160 327 166 326 163 327 b 141 320 156 327 151 324 b 69 230 112 305 85 272 b 57 215 65 217 62 215 b 55 215 57 215 55 215 b 46 224 49 215 46 217 b 59 260 46 231 50 242 b 151 363 81 306 112 341 b 161 369 155 365 160 367 b 183 376 166 371 174 374 \"},\n\"v63\":{\"x_min\":-1.359375,\"x_max\":392,\"ha\":400,\"o\":\"m 253 341 b 317 341 276 341 298 341 b 363 341 344 341 362 341 b 392 309 379 340 392 326 l 392 309 b 266 -320 392 305 269 -310 b 246 -341 262 -330 255 -337 b 136 -342 243 -342 189 -342 b 21 -341 80 -342 24 -342 b -1 -310 8 -337 -1 -324 b 0 -310 -1 -310 0 -310 b 123 316 0 -306 118 297 b 144 340 126 327 133 335 b 253 341 147 341 151 341 m 321 276 b 250 277 321 277 307 277 b 179 276 194 277 179 277 b 123 -1 179 276 153 151 l 68 -278 l 140 -278 b 167 -278 149 -278 159 -278 b 210 -278 191 -278 210 -278 b 321 276 210 -278 321 274 \"},\n\"v64\":{\"x_min\":-355.25,\"x_max\":353.890625,\"ha\":361,\"o\":\"m -355 534 l -355 1068 l 0 1068 l 353 1068 l 353 534 l 353 0 l 0 0 l -355 0 l -355 534 m 325 881 l 325 1041 l -1 1041 l -326 1041 l -326 881 l -326 721 l -1 721 l 325 721 l 325 881 m 325 534 l 325 694 l 0 694 l -326 694 l -326 534 l -326 374 l 0 374 l 325 374 l 325 534 m 325 187 l 325 347 l 0 347 l -326 347 l -326 187 l -326 27 l 0 27 l 325 27 l 325 187 \"},\n\"v65\":{\"x_min\":-695.53125,\"x_max\":694.171875,\"ha\":708,\"o\":\"m -50 1414 b 1 1415 -32 1414 -16 1415 b 683 828 333 1415 626 1168 b 694 706 690 787 694 746 b -1 0 694 323 389 0 b -695 706 -385 0 -695 315 b -50 1413 -695 1079 -415 1386 l -50 1414 m 44 1385 b -2 1386 28 1386 13 1386 b -526 1124 -204 1386 -400 1289 b -564 1068 -539 1107 -564 1070 b -1 1067 -564 1068 -311 1067 b 563 1068 308 1067 563 1068 b 524 1124 563 1070 537 1107 b 44 1385 406 1276 235 1371 m 590 1021 l 581 1039 l -1 1039 l -582 1039 l -592 1021 b -666 728 -637 931 -666 816 l -666 720 l -1 720 l 665 720 l 665 728 b 590 1021 665 816 635 931 m 665 685 l 665 692 l -1 692 l -666 692 l -666 685 b -590 391 -666 596 -637 480 l -582 374 l -1 374 l 579 374 l 589 391 b 665 685 634 480 665 596 m 558 337 l 563 345 l -1 345 l -564 345 l -559 337 b 0 27 -436 142 -223 27 b 148 44 49 27 99 33 b 558 337 315 83 465 191 \"},\n\"v66\":{\"x_min\":-73.5,\"x_max\":72.140625,\"ha\":74,\"o\":\"m -36 -126 b 0 0 -17 -56 -1 0 b 70 -254 0 0 70 -249 l 72 -255 l 0 -255 l -73 -255 l -72 -254 b -36 -126 -72 -254 -55 -195 \"},\n\"v67\":{\"x_min\":-1.359375,\"x_max\":549.890625,\"ha\":561,\"o\":\"m 296 692 b 314 694 302 694 307 694 b 386 685 337 694 366 689 b 548 498 480 660 548 580 b 548 481 548 492 548 487 b 455 395 541 426 499 395 b 370 462 420 395 383 417 b 362 496 364 477 362 488 b 377 514 362 509 367 514 b 393 501 386 514 390 510 b 432 474 397 484 413 474 b 470 487 445 474 458 478 b 491 530 484 496 491 510 b 490 544 491 534 491 539 b 333 660 479 606 411 657 l 323 662 l 315 646 b 269 524 285 591 269 556 b 321 431 269 492 287 466 b 349 395 338 413 343 408 b 363 342 359 378 363 362 b 359 312 363 333 362 322 b 285 158 348 266 318 206 b 281 152 283 155 281 152 b 281 152 281 152 281 152 b 287 154 283 152 284 152 b 318 155 298 154 308 155 b 461 98 371 155 419 136 l 464 97 l 495 122 b 534 148 528 148 528 148 b 549 133 544 148 549 142 l 549 133 b 549 130 549 131 549 131 b 509 91 549 124 548 123 l 436 33 b 390 0 397 0 396 0 b 374 15 381 0 377 4 b 268 105 359 69 314 105 b 250 104 262 105 257 105 l 243 102 l 234 90 b 155 1 201 49 159 2 b 147 -1 152 0 149 -1 b 130 15 138 -1 130 6 b 132 20 130 18 132 19 b 136 31 133 22 134 27 b 220 131 149 74 178 109 b 231 137 225 134 230 136 b 302 278 280 202 302 244 b 265 335 302 299 295 309 b 209 442 234 363 213 402 b 209 455 209 446 209 451 b 279 648 209 502 232 564 l 285 659 l 283 659 b 176 627 238 653 210 645 b 57 477 111 594 66 538 b 55 459 55 471 55 464 b 72 409 55 437 61 415 b 93 403 78 405 87 403 b 152 467 123 403 151 431 b 168 488 153 483 157 488 b 185 462 181 488 185 483 l 185 460 b 137 344 183 409 168 369 b 78 322 119 328 98 322 b 13 360 50 322 25 335 b -1 426 4 380 -1 402 b 89 610 -1 488 32 559 b 296 692 147 659 210 685 \"},\n\"v68\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 155 11 -5 172 43 123 l 166 -1 l 168 1 l 170 4 l 170 130 b 171 260 170 256 170 258 b 191 274 175 269 183 274 b 205 267 196 274 201 272 b 212 158 212 262 210 273 l 212 56 l 257 112 b 311 173 304 172 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 216 -6 221 -1 219 -2 l 212 -12 l 212 -147 b 212 -210 212 -173 212 -194 b 205 -292 212 -297 210 -287 b 191 -299 201 -297 196 -299 b 172 -287 183 -299 175 -295 b 170 -174 171 -284 171 -284 l 170 -63 l 127 -117 b 73 -176 84 -170 80 -176 b 68 -176 72 -176 70 -176 b -27 -87 59 -174 65 -180 b -114 0 -74 -38 -112 0 b -182 -86 -114 0 -145 -38 b -258 -174 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 \"},\n\"v69\":{\"x_min\":-25.859375,\"x_max\":347.078125,\"ha\":354,\"o\":\"m 313 155 b 321 156 315 156 318 156 b 329 156 325 156 328 156 b 347 130 341 152 347 141 b 338 109 347 123 344 115 b 288 79 332 105 307 88 b 126 6 236 49 186 26 b 104 0 114 2 104 0 b 126 -8 104 -1 114 -4 b 326 -104 201 -33 268 -65 b 343 -117 337 -111 340 -112 b 347 -131 345 -122 347 -127 b 321 -158 347 -145 337 -158 b 296 -148 314 -158 311 -158 b 17 -31 223 -99 121 -56 l -4 -27 b -25 0 -19 -23 -25 -15 b -4 26 -25 13 -19 22 l 17 30 b 296 147 121 55 223 98 b 313 155 307 152 310 155 \"},\n\"v6a\":{\"x_min\":-85.75,\"x_max\":84.390625,\"ha\":86,\"o\":\"m -17 84 b 0 86 -12 86 -6 86 b 84 -1 46 86 84 45 b 83 -18 84 -6 84 -12 b -1 -87 73 -62 36 -87 b -66 -55 -25 -87 -49 -77 b -85 -1 -80 -38 -85 -19 b -17 84 -85 37 -59 74 \"},\n\"v6b\":{\"x_min\":-1.359375,\"x_max\":544.4375,\"ha\":556,\"o\":\"m 475 834 b 483 835 477 834 480 835 b 514 803 500 835 514 820 b 509 785 514 798 513 791 b 356 742 496 764 424 743 l 341 742 l 341 738 b 344 671 343 716 344 694 b 247 351 344 533 306 401 b 144 315 217 326 185 315 b 121 316 136 315 129 315 b 83 340 98 317 88 323 b 81 348 83 342 81 345 b 114 380 81 366 98 380 b 137 369 122 380 130 377 b 147 365 140 366 142 365 b 191 399 159 365 178 378 b 251 673 230 459 251 560 b 250 739 251 695 251 717 b 239 757 249 756 249 755 b 194 763 224 762 209 763 b 103 712 153 763 121 745 b 68 689 95 696 81 689 b 29 730 47 689 29 703 b 77 785 29 749 43 766 b 198 814 111 805 155 814 b 262 806 220 814 243 811 b 351 793 294 798 323 793 b 462 827 396 793 435 805 b 475 834 466 831 469 832 m 334 290 b 340 290 336 290 338 290 b 386 244 364 290 383 272 b 470 -154 397 115 439 -81 b 509 -195 481 -177 498 -195 b 510 -195 509 -195 510 -195 b 518 -194 513 -194 515 -194 b 544 -223 533 -194 544 -208 b 530 -244 544 -231 540 -240 b 510 -248 526 -247 519 -248 b 450 -235 491 -248 466 -244 b 351 -68 401 -210 381 -176 b 333 5 344 -44 333 1 b 333 5 333 5 333 5 b 326 -8 333 5 329 -1 b 289 -73 313 -34 302 -54 l 281 -84 l 284 -86 b 328 -102 295 -95 313 -102 b 344 -116 340 -104 344 -106 b 323 -131 344 -124 340 -129 b 304 -134 317 -133 311 -134 b 259 -123 289 -134 273 -130 l 254 -120 l 251 -124 b 78 -237 198 -183 141 -222 b 29 -242 63 -241 44 -242 b 16 -241 24 -242 19 -242 b -1 -217 5 -237 -1 -227 b 17 -192 -1 -206 5 -195 b 23 -191 19 -191 20 -191 b 29 -191 24 -191 27 -191 b 32 -191 29 -191 31 -191 b 175 -97 70 -191 132 -152 b 294 237 246 -12 287 105 b 306 273 295 256 298 263 b 334 290 313 281 323 288 m 292 -285 b 311 -285 299 -285 306 -285 b 517 -399 405 -285 496 -334 b 519 -420 518 -406 519 -413 b 427 -535 519 -462 485 -505 l 416 -541 l 427 -546 b 528 -681 491 -580 528 -631 b 518 -724 528 -695 525 -710 b 341 -816 488 -782 417 -816 b 216 -785 299 -816 255 -806 b 186 -750 194 -774 186 -764 b 187 -742 186 -748 186 -745 l 187 -739 l 186 -742 b 66 -784 151 -771 114 -784 b 59 -784 65 -784 62 -784 b 16 -767 31 -784 23 -781 b 13 -753 14 -763 13 -757 b 43 -723 13 -737 27 -723 b 62 -730 50 -723 55 -725 b 70 -734 66 -734 66 -734 b 151 -666 96 -734 130 -705 b 167 -630 153 -660 155 -656 b 213 -444 193 -570 209 -506 b 215 -412 215 -437 215 -426 b 212 -355 215 -385 213 -356 b 212 -353 212 -355 212 -353 b 176 -369 209 -353 187 -363 b 106 -433 145 -385 119 -409 b 69 -458 98 -449 83 -458 b 36 -437 57 -458 44 -451 b 31 -417 32 -431 31 -424 b 53 -378 31 -405 38 -391 b 292 -285 111 -324 191 -294 m 336 -338 b 310 -337 329 -338 318 -337 b 300 -338 304 -337 300 -337 b 300 -338 300 -338 300 -338 b 306 -408 303 -345 306 -381 b 306 -415 306 -410 306 -413 b 247 -657 304 -496 284 -578 b 217 -709 235 -682 228 -695 b 210 -717 215 -713 212 -716 b 210 -717 210 -717 210 -717 b 215 -717 210 -717 212 -717 b 217 -717 215 -717 216 -717 b 220 -717 217 -717 219 -717 b 242 -727 228 -717 232 -718 b 337 -764 273 -752 303 -763 b 341 -764 338 -764 340 -764 b 436 -681 396 -764 436 -728 b 435 -664 436 -675 436 -670 b 319 -566 427 -617 381 -578 b 299 -557 307 -563 304 -562 b 292 -539 294 -552 292 -545 b 317 -513 292 -527 302 -514 b 423 -445 364 -508 409 -480 b 428 -421 427 -437 428 -430 b 336 -338 428 -384 392 -349 \"},\n\"v6c\":{\"x_min\":-1.359375,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 78 233 b 87 233 81 233 84 233 b 187 140 132 233 174 195 b 193 102 190 127 193 115 b 43 -113 193 22 136 -62 b 27 -119 36 -116 31 -119 b 19 -108 21 -119 19 -115 b 29 -97 19 -102 20 -101 b 102 13 73 -72 102 -27 b 92 51 102 26 98 40 l 91 54 l 84 54 b 8 104 53 54 21 74 b -1 142 1 116 -1 130 b 78 233 -1 187 31 227 \"},\n\"v6d\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m 544 335 b 553 337 548 337 551 337 b 575 313 563 337 570 330 b 589 226 583 285 589 256 b 517 8 589 152 563 76 b 464 -58 507 -4 503 -9 l 401 -136 b 362 -176 372 -172 370 -176 b 357 -176 360 -176 359 -176 b 261 -87 349 -174 355 -180 b 175 0 215 -38 175 0 b 106 -86 175 0 144 -38 b 29 -174 35 -174 36 -173 b 24 -176 28 -176 27 -176 b 14 -174 21 -176 17 -174 b -73 -87 12 -173 -8 -152 b -159 0 -121 -38 -159 0 b -228 -86 -160 0 -190 -38 b -304 -174 -299 -174 -298 -173 b -310 -176 -306 -176 -308 -176 b -319 -174 -314 -176 -318 -174 b -483 -12 -323 -173 -359 -137 l -495 0 l -524 -34 b -562 -77 -553 -73 -556 -76 b -568 -79 -564 -79 -566 -79 b -590 -58 -581 -79 -590 -69 b -588 -49 -590 -55 -589 -52 b -412 170 -585 -43 -417 165 b -398 174 -408 173 -402 174 b -389 173 -394 174 -392 174 b -300 86 -387 172 -366 151 b -215 -1 -254 37 -215 -1 b -145 84 -215 -1 -183 37 b -69 173 -74 173 -76 172 b -63 174 -68 174 -66 174 b -54 173 -61 174 -57 173 b 34 86 -51 172 -31 151 b 119 -1 81 37 119 -1 b 189 84 121 -1 151 37 b 265 173 259 173 258 172 b 270 174 266 174 269 174 b 280 173 274 174 279 173 b 370 84 283 172 303 151 b 455 -1 416 37 455 -1 l 455 -1 b 476 24 455 -1 469 15 b 547 226 522 87 547 159 b 534 302 547 252 543 278 b 532 317 533 308 532 313 b 544 335 532 326 536 333 \"},\n\"v6e\":{\"x_min\":-355.25,\"x_max\":353.890625,\"ha\":361,\"o\":\"m -27 720 b -13 721 -24 720 -20 721 b 42 718 4 721 34 720 b 343 446 190 699 308 591 b 353 360 349 417 353 390 b 84 9 353 197 245 49 b 0 0 55 2 27 0 b -344 273 -160 0 -306 109 b -355 359 -351 302 -355 331 b -39 718 -355 539 -221 700 l -27 720 m 39 691 b -13 692 32 691 4 692 b -25 692 -19 692 -23 692 b -326 383 -190 675 -314 548 l -326 374 l -1 374 l 325 374 l 325 383 b 39 691 314 541 197 667 m 325 337 l 325 345 l -1 345 l -326 345 l -326 337 b -55 33 -315 184 -204 58 b -1 29 -34 29 -29 29 b 54 33 28 29 32 29 b 325 337 201 58 314 184 \"},\n\"v6f\":{\"x_min\":-80.3125,\"x_max\":78.9375,\"ha\":81,\"o\":\"m 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 \"},\n\"v70\":{\"x_min\":0,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 190 b 217 191 215 191 216 191 b 231 184 223 191 228 188 b 249 154 240 167 246 159 b 419 18 292 91 348 45 b 436 -1 435 11 436 8 b 424 -16 436 -9 434 -13 b 308 -87 394 -26 340 -59 b 231 -186 276 -117 257 -142 b 219 -192 228 -191 225 -192 b 198 -174 209 -192 208 -191 b 47 -33 161 -113 110 -63 b 10 -16 34 -26 17 -19 b 0 -1 2 -13 0 -9 b 17 18 0 8 1 11 b 198 173 95 48 156 101 b 213 190 206 187 208 188 \"},\n\"v71\":{\"x_min\":-25.859375,\"x_max\":347.078125,\"ha\":354,\"o\":\"m 313 155 b 321 156 315 156 318 156 b 334 154 325 156 330 155 b 347 131 343 148 347 140 b 341 113 347 126 345 120 b 336 101 340 111 337 105 b 311 -1 319 69 311 34 b 341 -115 311 -40 322 -79 b 347 -133 345 -120 347 -127 b 321 -158 347 -147 337 -158 b 296 -148 314 -158 311 -158 b 6 -29 221 -97 111 -52 b -13 -23 -10 -26 -10 -26 b -25 -1 -21 -19 -25 -9 b -12 23 -25 8 -21 18 b 5 27 -9 23 -2 26 b 296 147 115 52 220 95 b 313 155 307 152 310 155 \"},\n\"v72\":{\"x_min\":-423.3125,\"x_max\":421.9375,\"ha\":431,\"o\":\"m -262 197 b -247 197 -257 197 -253 197 b -118 162 -210 197 -163 184 b 40 45 -61 134 -13 98 b 277 -95 119 -33 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -55 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 201 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 136 b 421 22 421 37 421 29 b 245 -199 421 -93 338 -199 b 238 -198 243 -199 240 -199 b -44 -47 148 -194 50 -141 b -250 86 -114 22 -183 66 b -295 94 -270 91 -283 94 b -315 91 -302 94 -307 94 b -381 4 -356 81 -381 43 b -355 -56 -381 -18 -372 -40 b -298 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -178 -69 -200 -58 -189 -62 b -151 -122 -160 -81 -151 -101 b -171 -167 -151 -138 -157 -155 b -239 -195 -185 -181 -213 -192 b -257 -197 -245 -197 -250 -197 b -423 -5 -352 -197 -423 -109 b -412 65 -423 16 -419 40 b -262 197 -389 137 -329 188 \"},\n\"v73\":{\"x_min\":0,\"x_max\":347.078125,\"ha\":354,\"o\":\"m 231 818 b 239 821 234 820 236 821 b 251 816 243 821 249 818 b 258 800 255 811 255 810 b 341 587 273 725 304 646 l 347 578 l 347 573 l 347 571 b 329 553 347 560 338 553 b 318 556 325 553 322 555 b 264 577 302 567 283 574 b 258 578 261 577 259 578 b 258 577 258 578 258 578 b 258 576 258 577 258 577 b 259 416 259 574 259 542 l 259 258 l 285 265 b 318 270 302 269 311 270 b 336 259 328 270 332 267 b 337 208 336 256 337 233 b 336 158 337 184 336 159 b 302 140 332 148 329 147 b 259 130 266 131 259 130 b 259 65 259 130 259 104 b 259 20 259 51 259 36 l 259 -88 l 285 -81 b 318 -76 302 -77 311 -76 b 332 -81 325 -76 328 -77 b 337 -123 336 -87 337 -86 l 337 -138 l 337 -154 b 332 -195 337 -191 336 -190 b 281 -210 328 -199 328 -199 b 262 -216 272 -213 264 -216 l 259 -216 l 259 -349 l 259 -483 l 258 -487 b 239 -499 254 -495 246 -499 b 220 -487 231 -499 223 -495 l 219 -483 l 217 -355 l 217 -227 l 216 -227 l 194 -233 l 152 -244 b 129 -249 140 -247 130 -249 b 127 -410 127 -249 127 -258 b 127 -576 127 -548 127 -573 b 126 -578 126 -577 126 -578 b 127 -580 126 -578 126 -580 b 133 -578 129 -580 130 -578 b 186 -557 152 -576 170 -569 b 197 -555 190 -556 194 -555 b 215 -573 206 -555 215 -562 l 215 -574 l 215 -580 l 209 -588 b 126 -802 172 -648 141 -727 b 107 -823 123 -817 118 -823 b 87 -798 95 -823 91 -817 b 5 -588 69 -718 40 -648 l 0 -580 l 0 -574 b 0 -573 0 -574 0 -574 b 16 -555 0 -562 6 -555 b 27 -557 20 -555 24 -556 b 81 -578 44 -569 62 -576 b 87 -580 84 -578 85 -580 b 88 -578 88 -580 88 -580 b 87 -576 88 -578 88 -577 b 87 -416 87 -573 87 -549 b 85 -260 87 -270 87 -260 b 85 -260 85 -260 85 -260 b 32 -273 74 -263 35 -273 b 13 -260 24 -273 16 -267 b 12 -209 12 -256 12 -256 l 12 -162 l 13 -158 b 74 -134 17 -148 17 -148 l 87 -131 l 87 -22 b 85 86 87 79 87 86 b 85 86 85 86 85 86 b 32 74 74 83 35 74 b 13 86 24 74 16 79 b 12 137 12 90 12 90 l 12 184 l 13 188 b 73 212 17 198 17 198 l 87 215 l 87 348 l 87 481 l 88 485 b 107 498 92 494 99 498 b 126 485 115 498 122 494 l 127 481 l 127 353 l 127 226 l 133 226 b 172 235 136 227 153 231 l 212 247 l 217 248 l 217 409 b 219 574 217 546 217 571 b 219 577 219 576 219 577 b 219 578 219 578 219 578 b 213 577 217 578 216 577 b 159 556 194 574 175 567 b 148 553 155 555 152 553 b 130 571 138 553 130 560 l 130 573 l 130 578 l 136 587 b 219 796 172 646 200 717 b 231 818 221 813 224 816 m 217 9 b 217 119 217 70 217 119 l 217 119 b 194 113 217 119 206 116 l 152 102 b 129 97 140 99 130 97 b 127 -12 127 97 127 91 l 127 -122 l 133 -120 b 172 -111 136 -119 153 -115 l 212 -101 l 217 -98 l 217 9 \"},\n\"v74\":{\"x_min\":-206.890625,\"x_max\":428.75,\"ha\":438,\"o\":\"m 389 -351 b 394 -351 390 -351 393 -351 b 428 -385 413 -351 428 -367 b 428 -394 428 -388 428 -391 b 394 -428 426 -406 421 -410 l 332 -473 l 269 -516 l 205 -560 l 141 -603 l 77 -648 l 13 -692 l -50 -737 l -114 -780 l -145 -802 b -171 -813 -157 -810 -163 -813 b -175 -813 -172 -813 -174 -813 b -206 -777 -194 -811 -206 -795 b -202 -760 -206 -771 -205 -766 b -87 -675 -197 -752 -206 -757 l -34 -639 l 83 -557 l 145 -514 l 209 -470 l 272 -427 b 389 -351 375 -356 381 -352 \"},\n\"v75\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -137 381 b -130 383 -134 383 -133 383 b -111 371 -122 383 -114 378 b -55 224 -110 370 -85 305 b 0 80 -25 145 -1 80 b 54 224 0 80 24 145 b 112 377 114 384 110 373 b 127 384 118 381 122 384 b 148 362 138 384 148 374 l 148 356 l 83 183 b 16 9 47 88 17 11 b -1 0 12 2 5 0 b -14 5 -5 0 -10 1 b -84 183 -19 9 -13 -6 l -149 356 l -149 362 b -137 381 -149 371 -145 378 \"},\n\"v76\":{\"x_min\":0,\"x_max\":737.71875,\"ha\":753,\"o\":\"m 9 13 b 208 15 10 15 51 15 b 368 15 251 15 304 15 l 726 15 l 729 12 b 737 -1 735 9 737 4 b 729 -15 737 -6 735 -11 l 726 -16 l 660 -16 l 592 -16 l 592 -95 l 592 -174 l 368 -174 l 144 -174 l 144 -95 l 144 -16 l 77 -16 l 9 -16 l 6 -15 b 0 -1 1 -11 0 -6 b 9 13 0 5 2 11 \"},\n\"v77\":{\"x_min\":-209.609375,\"x_max\":208.25,\"ha\":213,\"o\":\"m -197 19 b 1 20 -194 19 -96 20 b 196 19 98 20 193 19 b 208 -1 204 15 208 6 b 202 -15 208 -6 206 -11 b 95 -22 197 -20 212 -22 b -1 -22 69 -22 38 -22 b -96 -22 -39 -22 -70 -22 b -204 -15 -213 -22 -198 -20 b -209 -1 -208 -11 -209 -6 b -197 19 -209 6 -205 15 \"},\n\"v78\":{\"x_min\":0,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 85 514 b 95 517 88 517 89 517 b 114 505 103 517 110 513 l 115 502 l 115 376 b 115 249 115 306 115 249 b 141 258 117 249 127 252 l 167 266 l 172 266 b 190 254 181 265 187 262 l 193 251 l 193 202 l 193 188 b 187 147 193 149 191 152 b 147 130 183 142 182 141 l 115 119 l 115 9 b 115 -99 115 -51 115 -99 b 141 -91 115 -99 127 -95 b 171 -81 166 -81 167 -81 l 171 -81 b 191 -94 181 -81 189 -87 b 193 -142 191 -97 193 -120 b 191 -195 193 -167 191 -194 b 125 -227 187 -205 187 -204 l 115 -230 l 115 -366 l 115 -503 l 114 -506 b 95 -519 110 -514 102 -519 b 74 -506 87 -519 78 -514 l 73 -503 l 73 -374 b 73 -245 73 -260 73 -245 b 73 -245 73 -245 73 -245 b 55 -252 72 -245 63 -249 l 32 -260 b 19 -263 27 -262 23 -263 b 4 -256 13 -263 8 -260 b 0 -215 0 -251 0 -254 b 0 -199 0 -210 0 -206 l 0 -152 l 1 -149 b 8 -140 2 -145 5 -141 b 42 -127 9 -140 24 -133 l 73 -116 l 73 -5 b 73 23 73 4 73 15 b 73 105 73 70 73 105 b 49 97 73 105 61 101 b 17 88 32 91 23 88 b 4 95 10 88 8 91 b 0 137 0 101 0 98 b 0 151 0 141 0 145 l 0 199 l 1 202 b 43 224 5 212 5 212 l 73 234 l 73 367 l 73 502 l 74 505 b 85 514 77 509 81 513 \"},\n\"v79\":{\"x_min\":-1.359375,\"x_max\":899.703125,\"ha\":918,\"o\":\"m 307 349 b 332 351 315 351 323 351 b 443 340 367 351 408 347 b 741 47 607 306 720 195 b 744 0 743 31 744 16 b 660 -303 744 -90 713 -206 b 28 -755 534 -531 304 -695 b 14 -756 23 -755 19 -756 b -1 -741 4 -756 -1 -750 b 21 -720 -1 -731 1 -728 b 567 -56 337 -601 548 -344 b 568 -11 568 -41 568 -24 b 442 285 568 129 525 233 b 325 319 406 308 367 319 b 93 177 232 319 137 266 b 84 154 91 170 84 155 b 84 154 84 154 84 154 b 88 156 84 154 85 155 b 159 177 110 170 134 177 b 257 134 194 177 231 162 b 294 41 281 108 294 73 b 171 -97 294 -24 246 -90 b 156 -98 166 -97 161 -98 b 6 74 73 -98 6 -22 b 6 80 6 76 6 79 b 307 349 10 223 141 340 m 839 215 b 845 216 841 216 842 216 b 862 213 852 216 860 215 b 899 163 887 206 899 184 b 872 117 899 145 890 127 b 847 111 865 112 856 111 b 808 130 833 111 818 117 b 796 162 800 140 796 151 b 839 215 796 187 812 212 m 839 -112 b 845 -112 841 -112 842 -112 b 862 -115 852 -112 860 -113 b 899 -165 887 -122 899 -144 b 872 -210 899 -183 890 -201 b 847 -217 865 -215 856 -217 b 808 -198 833 -217 818 -210 b 796 -165 800 -188 796 -177 b 839 -112 796 -140 812 -116 \"},\n\"v7a\":{\"x_min\":-1.359375,\"x_max\":386.5625,\"ha\":394,\"o\":\"m 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 \"},\n\"v7b\":{\"x_min\":-212.328125,\"x_max\":210.96875,\"ha\":215,\"o\":\"m -8 216 b -1 217 -6 216 -4 217 b 19 204 8 217 16 212 b 20 111 20 201 20 199 l 20 20 l 107 20 b 142 20 121 20 133 20 b 205 13 205 20 198 19 b 210 0 209 9 210 4 b 198 -20 210 -9 206 -16 b 107 -22 194 -22 193 -22 l 20 -22 l 20 -112 b 20 -148 20 -126 20 -138 b 13 -212 20 -213 19 -206 b 0 -219 9 -216 4 -219 b -20 -205 -8 -219 -16 -213 b -21 -112 -21 -202 -21 -201 l -21 -22 l -108 -22 b -200 -20 -194 -22 -196 -22 b -212 0 -208 -16 -212 -9 b -206 13 -212 4 -210 9 b -144 20 -200 19 -206 20 b -108 20 -134 20 -122 20 l -21 20 l -21 111 b -20 204 -21 199 -21 201 b -8 216 -17 209 -13 213 \"},\n\"v7c\":{\"x_min\":0,\"x_max\":300.8125,\"ha\":307,\"o\":\"m 49 505 b 53 506 50 505 51 506 b 70 496 58 506 62 503 b 81 485 73 492 78 488 l 96 473 l 111 459 l 122 449 l 134 438 l 182 396 l 255 330 b 292 291 292 298 292 298 l 292 290 l 292 284 l 283 270 b 209 36 234 197 209 113 b 288 -170 209 -44 235 -119 b 299 -184 295 -179 299 -181 b 300 -191 300 -187 300 -188 b 285 -206 300 -199 294 -206 b 280 -206 283 -206 281 -206 b 247 -201 270 -202 259 -201 b 176 -222 223 -201 197 -208 b 114 -340 136 -249 114 -292 b 172 -471 114 -384 134 -433 b 185 -492 182 -481 185 -487 b 181 -502 185 -496 183 -499 b 171 -508 176 -505 174 -508 b 152 -498 166 -508 160 -503 b 0 -284 65 -428 12 -352 b 0 -260 0 -278 0 -270 b 1 -238 0 -252 0 -242 b 148 -140 16 -177 73 -140 b 209 -148 167 -140 189 -142 b 215 -149 212 -148 215 -149 b 215 -149 215 -149 215 -149 l 215 -149 b 201 -136 215 -148 209 -142 l 157 -97 l 96 -41 b 17 34 21 24 17 29 b 17 37 17 36 17 36 b 17 38 17 37 17 38 b 25 56 17 44 17 44 b 110 298 81 131 110 219 b 46 474 110 367 88 431 b 38 491 40 480 38 487 b 49 505 38 498 42 502 \"},\n\"v7d\":{\"x_min\":-1.359375,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 \"},\n\"v7e\":{\"x_min\":-390.640625,\"x_max\":389.28125,\"ha\":397,\"o\":\"m -377 -1 b -368 0 -375 -1 -372 0 b -362 -1 -366 0 -363 -1 b -343 -24 -356 -4 -352 -8 l -285 -119 l -187 -280 l -88 -444 l -35 -533 b -31 -538 -32 -537 -32 -538 b -28 -534 -31 -538 -29 -537 l -23 -526 l -19 -517 l -13 -509 l -8 -501 l -2 -492 l 2 -483 l 6 -476 l 17 -458 l 23 -449 l 32 -433 l 38 -424 l 42 -416 l 47 -408 l 53 -399 l 58 -391 l 63 -381 l 68 -373 l 73 -365 l 78 -356 l 84 -348 l 89 -340 l 93 -330 l 99 -322 l 104 -315 l 114 -297 l 125 -280 l 129 -272 l 134 -263 l 140 -255 l 145 -247 l 151 -238 l 155 -230 l 160 -220 l 166 -212 l 171 -204 l 176 -195 l 181 -187 l 186 -177 l 191 -169 l 196 -162 l 201 -154 l 206 -144 l 217 -127 l 221 -119 l 227 -111 l 232 -102 l 238 -94 l 242 -86 l 247 -77 l 253 -69 l 258 -59 l 262 -51 l 268 -43 l 273 -34 l 279 -26 l 283 -18 b 321 -1 292 -2 292 -1 b 338 -1 326 -1 332 -1 b 382 -6 378 -1 375 -1 b 389 -20 386 -9 389 -15 b 382 -38 389 -26 386 -31 l 378 -47 l 372 -55 l 367 -63 l 362 -72 l 356 -80 l 351 -90 l 347 -98 l 341 -106 l 336 -115 l 330 -123 l 325 -131 l 321 -141 l 315 -149 l 310 -158 l 304 -166 l 299 -174 b 295 -183 298 -177 296 -181 l 289 -191 l 285 -199 l 280 -208 l 274 -216 l 269 -224 l 264 -233 l 259 -242 l 254 -251 l 249 -259 l 243 -267 l 238 -276 l 234 -284 l 228 -292 l 223 -302 l 217 -310 l 213 -319 l 208 -327 b 202 -335 206 -330 204 -334 l 197 -344 l 193 -351 l 187 -360 l 182 -369 l 176 -377 l 172 -385 l 167 -394 l 161 -403 l 156 -412 l 152 -420 l 147 -428 l 141 -437 l 136 -445 l 130 -455 l 126 -463 l 121 -471 l 115 -480 b 110 -488 114 -483 111 -487 l 106 -496 l 100 -503 l 96 -512 l 89 -521 l 85 -530 l 80 -538 l 74 -546 l 69 -555 l 65 -564 l 59 -573 l 54 -581 l 49 -589 l 43 -598 l 39 -606 l 34 -616 l 28 -624 l 23 -632 b 19 -641 21 -635 20 -638 b 0 -653 14 -649 8 -653 b -25 -631 -10 -653 -14 -649 l -80 -541 l -359 -79 b -389 -29 -375 -52 -389 -30 b -390 -22 -389 -26 -390 -24 b -377 -1 -390 -13 -385 -5 m -13 -9 b -1 -8 -9 -8 -5 -8 b 51 -36 19 -8 39 -19 b 61 -72 58 -47 61 -59 b 51 -106 61 -84 58 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -127 b -62 -72 -57 -102 -62 -87 b -13 -9 -62 -44 -44 -16 \"},\n\"v7f\":{\"x_min\":0,\"x_max\":367.5,\"ha\":375,\"o\":\"m 0 124 l 0 187 l 61 187 l 122 187 l 122 138 l 122 91 l 153 61 l 183 30 l 213 61 l 243 91 l 243 138 l 243 187 l 306 187 l 367 187 l 367 124 l 367 61 l 321 61 l 274 61 l 243 30 l 213 0 l 243 -31 l 274 -62 l 321 -62 l 367 -62 l 367 -124 l 367 -188 l 306 -188 l 243 -188 l 243 -140 l 243 -93 l 213 -62 l 183 -31 l 153 -62 l 122 -93 l 122 -140 l 122 -188 l 61 -188 l 0 -188 l 0 -124 l 0 -62 l 46 -62 l 92 -62 l 123 -31 l 153 0 l 123 30 l 92 61 l 46 61 l 0 61 l 0 124 \"},\n\"v80\":{\"x_min\":29.9375,\"x_max\":420.578125,\"ha\":371,\"o\":\"m 115 345 b 221 347 117 345 166 347 b 411 345 306 347 409 345 b 420 330 416 342 420 335 b 415 319 420 326 419 321 b 178 118 397 303 179 118 b 178 117 178 118 178 117 b 181 117 178 117 178 117 b 189 117 182 117 185 117 b 193 117 190 117 191 117 b 247 98 215 117 232 111 b 296 75 266 83 280 76 b 302 75 299 75 300 75 b 322 91 311 75 315 79 b 322 91 322 91 322 91 b 322 91 322 91 322 91 b 319 91 322 91 321 91 b 313 90 318 90 315 90 b 283 107 300 90 288 97 b 277 126 279 114 277 121 b 319 167 277 149 295 167 b 319 167 319 167 319 167 b 362 118 347 167 362 147 b 355 82 362 108 359 96 b 311 33 349 65 340 55 b 224 1 284 12 253 1 b 194 5 213 1 204 2 b 168 18 183 8 178 11 b 110 36 151 30 130 36 b 57 15 88 36 68 29 b 47 11 54 12 51 11 b 31 20 40 11 34 13 b 29 26 31 22 29 25 b 68 66 29 36 39 45 b 285 250 73 71 281 248 b 285 250 285 250 285 250 b 231 252 285 252 261 252 b 137 250 190 252 141 250 b 93 227 122 248 110 241 b 78 220 88 222 83 220 b 66 227 74 220 70 222 b 63 234 65 229 63 231 b 85 291 63 241 69 252 b 115 345 108 342 108 344 \"},\n\"v81\":{\"x_min\":0,\"x_max\":428.75,\"ha\":438,\"o\":\"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 m 366 131 b 352 134 362 133 357 134 b 219 81 321 134 269 115 b 47 -111 126 23 50 -62 b 47 -112 47 -111 47 -112 b 77 -136 47 -129 58 -136 b 264 -45 118 -136 194 -101 b 382 109 336 12 382 76 b 366 131 382 120 377 129 \"},\n\"v82\":{\"x_min\":0,\"x_max\":607.0625,\"ha\":619,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 m 347 631 b 353 632 348 632 351 632 b 374 620 363 632 371 628 b 375 383 375 616 375 616 l 375 148 l 377 151 b 492 199 415 183 454 199 b 537 191 507 199 522 197 b 607 84 582 176 607 134 b 583 0 607 58 598 29 b 455 -142 562 -40 533 -72 l 378 -215 b 355 -229 364 -229 362 -229 b 334 -216 345 -229 337 -224 l 333 -212 l 333 201 l 333 616 l 334 620 b 347 631 337 624 341 630 m 465 131 b 451 133 461 133 455 133 b 445 133 449 133 446 133 b 379 87 419 129 396 113 l 375 80 l 375 -37 l 375 -156 l 378 -152 b 499 81 451 -72 499 20 l 499 83 b 465 131 499 113 490 126 \"},\n\"v83\":{\"x_min\":-1.359375,\"x_max\":847.96875,\"ha\":865,\"o\":\"m 488 1499 b 495 1500 490 1500 492 1500 b 541 1465 507 1500 521 1490 b 679 1078 622 1372 679 1210 b 677 1050 679 1068 677 1060 b 477 642 668 893 604 764 l 443 609 l 431 596 l 431 592 l 438 562 l 449 508 l 460 458 b 481 355 475 390 481 355 b 481 355 481 355 481 355 b 490 356 481 355 485 355 b 528 358 495 356 511 358 b 558 356 540 358 552 356 b 839 95 699 338 808 237 b 847 22 845 72 847 47 b 631 -303 847 -113 766 -242 b 620 -309 623 -308 620 -309 l 620 -310 b 631 -359 620 -310 626 -333 l 646 -435 l 660 -496 b 672 -588 668 -535 672 -563 b 664 -653 672 -610 669 -630 b 383 -875 630 -792 509 -875 b 201 -810 321 -875 257 -855 b 129 -680 151 -768 129 -730 b 274 -530 129 -592 200 -530 b 351 -553 300 -530 326 -538 b 412 -669 393 -582 412 -626 b 287 -805 412 -735 366 -800 l 279 -805 l 285 -809 b 383 -830 318 -823 351 -830 b 586 -718 464 -830 540 -789 b 626 -584 612 -678 626 -631 b 619 -528 626 -566 623 -548 b 612 -495 619 -526 616 -510 b 577 -324 590 -387 577 -324 b 577 -324 577 -324 577 -324 b 568 -326 575 -324 571 -324 b 528 -334 558 -328 537 -333 b 465 -338 506 -337 485 -338 b 24 -11 269 -338 87 -206 b -1 145 8 41 -1 93 b 96 442 -1 249 32 351 b 322 714 166 541 236 626 l 352 745 l 345 782 l 332 843 l 315 921 b 303 984 310 950 304 978 b 295 1082 298 1017 295 1049 b 413 1426 295 1208 336 1329 b 488 1499 436 1456 477 1496 m 549 1301 b 541 1301 547 1301 544 1301 b 411 1207 500 1301 447 1263 b 355 1004 374 1152 355 1079 b 359 942 355 984 356 963 b 371 881 362 927 363 917 l 385 818 b 392 782 389 799 392 784 l 392 782 b 434 828 393 782 424 816 b 607 1165 534 941 594 1060 b 608 1193 608 1175 608 1183 b 597 1270 608 1224 604 1254 b 549 1301 589 1286 571 1299 m 398 528 b 393 555 396 542 393 553 b 392 555 393 555 393 555 b 317 470 390 555 347 505 b 190 298 266 408 212 334 b 127 70 148 227 127 148 b 155 -77 127 19 137 -30 b 468 -303 209 -216 333 -303 b 519 -299 484 -303 502 -302 b 568 -284 541 -295 568 -287 l 568 -284 b 563 -263 568 -284 566 -274 l 534 -120 l 511 -13 l 496 61 l 480 133 b 469 187 472 176 469 187 b 468 188 469 187 469 188 b 416 162 462 188 430 172 b 337 13 364 126 337 69 b 413 -124 337 -40 363 -93 b 428 -144 424 -131 428 -137 b 428 -149 428 -145 428 -148 b 409 -166 426 -161 419 -166 b 394 -162 405 -166 400 -165 b 240 77 302 -122 240 -27 l 240 77 b 430 342 240 197 315 301 l 436 344 l 426 394 l 398 528 m 548 194 b 526 195 540 195 532 195 b 519 195 524 195 521 195 l 514 195 l 518 177 l 539 79 l 552 15 l 566 -48 l 594 -187 l 605 -240 b 612 -266 609 -254 611 -266 b 612 -266 612 -266 612 -266 b 641 -248 613 -266 630 -256 b 744 -98 692 -212 730 -156 b 751 -40 749 -79 751 -59 b 548 194 751 76 665 181 \"},\n\"v84\":{\"x_min\":25.859375,\"x_max\":164.6875,\"ha\":168,\"o\":\"m 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 \"},\n\"v85\":{\"x_min\":-21.78125,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"v86\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m -386 173 b -381 174 -385 174 -383 174 b -370 173 -377 174 -372 173 b -281 86 -367 172 -347 151 b -196 0 -235 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 277 172 b 289 174 285 174 288 174 b 299 173 294 174 298 173 b 462 11 303 172 338 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 374 -176 371 -176 b 280 -87 367 -173 345 -152 b 194 0 234 -38 194 0 b 125 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 43 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -141 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -289 -176 b -300 -174 -295 -176 -299 -174 b -464 -12 -304 -173 -340 -137 l -476 0 l -504 -34 b -543 -77 -534 -73 -537 -76 b -549 -79 -545 -79 -547 -79 b -571 -58 -562 -79 -571 -69 b -568 -49 -571 -55 -570 -52 b -392 172 -566 -43 -396 167 b -386 173 -390 172 -387 173 \"},\n\"v87\":{\"x_min\":0,\"x_max\":0,\"ha\":263 },\n\"v88\":{\"x_min\":-1.359375,\"x_max\":413.78125,\"ha\":422,\"o\":\"m 99 692 b 107 694 102 692 104 694 b 121 688 112 694 117 691 b 126 673 123 685 125 682 b 209 460 141 598 172 519 l 215 451 l 215 445 l 215 445 b 197 426 215 434 206 426 b 186 430 194 426 190 427 b 133 449 170 440 152 446 b 127 451 130 449 129 451 b 126 449 126 451 126 451 b 127 446 126 449 127 448 b 127 324 127 444 127 424 b 129 205 127 259 129 205 b 215 227 129 205 167 215 b 308 249 283 244 300 249 b 315 247 311 249 313 248 b 325 237 319 245 323 241 l 326 233 l 326 -105 b 326 -262 326 -167 326 -219 b 326 -448 326 -416 326 -445 b 325 -451 325 -449 325 -451 b 326 -452 325 -452 325 -452 b 330 -451 326 -452 329 -451 b 385 -431 351 -448 368 -441 b 396 -427 389 -428 393 -427 b 413 -446 405 -427 413 -435 l 413 -446 l 413 -452 l 408 -462 b 325 -674 371 -520 340 -599 b 306 -695 322 -689 317 -695 b 285 -670 294 -695 289 -689 b 204 -462 268 -591 239 -520 l 197 -452 l 197 -446 l 197 -446 b 215 -427 197 -435 205 -427 b 225 -431 219 -427 223 -428 b 280 -451 243 -441 261 -448 b 285 -452 283 -452 284 -452 b 287 -451 287 -452 287 -452 b 285 -448 287 -451 287 -449 b 285 -323 285 -445 285 -426 b 284 -201 285 -247 284 -201 b 197 -223 284 -201 245 -210 b 104 -245 129 -240 111 -245 b 98 -242 102 -245 100 -244 b 88 -233 93 -241 89 -237 l 87 -230 l 87 106 b 87 262 87 169 87 220 b 87 446 87 415 87 444 b 88 449 88 448 88 449 b 87 451 88 451 88 451 b 81 449 85 451 84 451 b 27 430 62 446 44 440 b 16 426 24 427 20 426 b -1 445 6 426 -1 434 b 0 445 -1 445 0 445 l 0 451 l 5 460 b 87 669 40 519 69 589 b 99 692 91 685 92 688 m 284 22 b 285 70 285 41 285 58 b 284 116 285 113 284 116 l 284 116 b 205 97 283 116 247 106 l 127 77 l 127 -18 b 129 -112 127 -69 129 -112 l 206 -93 l 284 -73 l 284 22 \"},\n\"v89\":{\"x_min\":0,\"x_max\":737.71875,\"ha\":753,\"o\":\"m 144 94 l 144 173 l 368 173 l 592 173 l 592 94 l 592 15 l 660 15 l 726 15 l 729 12 b 737 -1 735 9 737 4 b 729 -15 737 -6 735 -11 l 726 -16 l 368 -16 l 9 -16 l 6 -15 b 0 -1 1 -11 0 -6 b 6 12 0 4 1 9 l 9 15 l 77 15 l 144 15 l 144 94 \"},\n\"v8a\":{\"x_min\":-170.140625,\"x_max\":168.78125,\"ha\":172,\"o\":\"m -160 567 b -122 567 -159 567 -149 567 l -87 567 l -84 566 b -74 553 -78 563 -77 560 b -20 366 -73 551 -49 466 b 31 186 8 267 31 186 b 85 371 31 186 55 269 b 140 559 114 473 138 557 b 153 567 141 564 148 567 b 168 559 159 567 166 564 b 168 555 168 557 168 557 b 92 281 168 548 159 513 b 14 13 50 134 14 13 b 0 0 14 6 6 0 b -17 15 -8 0 -17 8 b -93 283 -17 15 -51 136 b -170 552 -166 533 -170 548 b -170 553 -170 552 -170 552 b -160 567 -170 560 -167 564 \"},\n\"v8b\":{\"x_min\":0,\"x_max\":319.859375,\"ha\":326,\"o\":\"m 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 \"},\n\"v8c\":{\"x_min\":-330.75,\"x_max\":329.390625,\"ha\":336,\"o\":\"m -133 483 b -117 484 -127 484 -122 484 b 31 373 -51 484 9 440 b 35 348 34 365 35 356 b -25 285 35 313 10 285 b -87 331 -55 285 -76 302 b -167 402 -100 376 -133 402 b -191 398 -175 402 -183 401 b -227 341 -215 388 -227 369 b -225 320 -227 334 -227 327 b -13 74 -209 230 -125 133 b 6 65 -4 70 5 66 l 9 63 l 10 65 b 117 231 12 68 40 112 l 189 341 l 242 424 b 268 460 262 456 264 458 b 283 464 273 463 277 464 b 308 438 296 464 308 453 l 308 437 b 287 396 308 430 308 428 l 95 98 l 59 43 l 58 41 l 65 37 b 253 -156 151 -8 217 -77 b 281 -285 272 -199 281 -244 b 148 -481 281 -381 231 -463 b 115 -485 137 -484 126 -485 b -32 -376 51 -485 -9 -442 b -36 -349 -35 -366 -36 -358 b 25 -287 -36 -315 -12 -287 b 85 -333 54 -287 74 -302 b 166 -403 99 -377 133 -403 b 190 -399 174 -403 182 -402 b 225 -342 215 -390 225 -370 b 224 -322 225 -335 225 -328 b 12 -76 208 -231 125 -134 b -8 -66 2 -72 -6 -68 l -10 -65 l -12 -66 b -118 -231 -13 -68 -42 -113 l -190 -342 l -243 -426 b -269 -462 -264 -458 -265 -458 b -284 -466 -274 -464 -279 -466 b -310 -440 -298 -466 -310 -455 l -310 -438 b -288 -398 -310 -430 -308 -430 l -96 -99 l -59 -44 l -59 -43 l -66 -38 b -281 284 -198 33 -281 158 l -281 284 b -133 483 -281 392 -220 474 m 254 177 b 266 179 258 177 262 179 b 319 149 287 179 307 167 b 329 115 326 140 329 127 b 319 79 329 102 326 90 b 268 51 307 61 287 51 b 221 72 250 51 234 58 b 205 115 210 84 205 99 b 254 177 205 142 223 170 m -281 -54 b -269 -52 -277 -52 -273 -52 b -223 -73 -253 -52 -235 -59 b -206 -116 -212 -84 -206 -101 b -216 -151 -206 -129 -209 -141 b -269 -179 -228 -170 -249 -179 b -314 -159 -285 -179 -302 -173 b -330 -116 -325 -147 -330 -131 b -281 -54 -330 -88 -313 -61 \"},\n\"v8d\":{\"x_min\":-1.359375,\"x_max\":255.890625,\"ha\":261,\"o\":\"m 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 \"},\n\"v8e\":{\"x_min\":-299.4375,\"x_max\":298.078125,\"ha\":304,\"o\":\"m -281 174 b -274 174 -280 174 -277 174 b -259 173 -270 174 -265 174 l -40 112 l 224 40 b 287 20 289 22 283 23 b 298 0 295 16 298 8 b 287 -22 298 -9 295 -18 b 287 -23 287 -23 287 -23 b 287 -23 287 -23 287 -23 b -40 -113 287 -24 270 -29 l -259 -174 b -274 -176 -265 -176 -270 -176 b -288 -172 -280 -176 -284 -174 b -299 -151 -296 -167 -299 -159 b -288 -129 -299 -141 -296 -133 b -98 -74 -284 -124 -307 -131 l 42 -36 l 140 -9 b 170 0 156 -4 170 -1 b 140 8 170 0 156 2 l 42 34 l -98 73 b -287 126 -299 129 -284 124 b -299 149 -295 131 -299 140 b -281 174 -299 161 -294 170 \"},\n\"v8f\":{\"x_min\":-21.78125,\"x_max\":362.0625,\"ha\":369,\"o\":\"m 302 1031 b 308 1032 304 1032 307 1032 b 330 1016 318 1032 325 1027 b 362 867 351 970 362 920 b 340 738 362 824 353 780 l 336 727 l 340 717 b 362 591 355 677 362 634 b 257 323 362 496 325 401 b 204 272 243 306 227 290 b 20 56 129 206 66 133 b -1 18 12 44 0 22 b -19 4 -4 9 -12 4 l -21 4 l -21 140 l -21 276 l -12 277 b 167 333 61 288 127 309 b 319 598 262 388 319 491 b 311 664 319 620 317 642 l 310 673 l 304 664 b 204 548 279 620 250 587 b 20 333 129 483 66 409 b -1 292 12 320 0 298 b -19 280 -4 285 -12 280 l -21 280 l -21 416 l -21 552 l -12 553 b 167 609 61 564 127 585 b 319 874 264 666 319 770 b 294 992 319 914 311 954 b 288 1011 288 1004 288 1007 b 302 1031 288 1021 294 1028 \"},\n\"v90\":{\"x_min\":-171.5,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\n\"v91\":{\"x_min\":-355.25,\"x_max\":353.890625,\"ha\":361,\"o\":\"m -27 720 b -13 721 -24 720 -20 721 b 42 718 4 721 34 720 b 343 446 190 699 308 591 b 353 360 349 417 353 390 b 84 9 353 197 245 49 b 0 0 55 2 27 0 b -344 273 -160 0 -306 109 b -355 359 -351 302 -355 331 b -39 718 -355 539 -221 700 l -27 720 m 39 691 b -13 692 32 691 4 692 b -25 692 -19 692 -23 692 b -322 416 -178 677 -296 566 b -326 360 -325 394 -326 390 b -325 323 -326 341 -325 328 b -36 29 -303 163 -193 51 b -1 29 -31 29 -16 29 b 35 29 14 29 29 29 b 323 323 191 51 302 163 b 325 360 323 328 325 341 b 321 416 325 390 323 394 b 39 691 296 560 185 669 m -12 655 b -4 655 -9 655 -6 655 b 20 652 4 655 14 653 b 66 585 50 642 66 613 b 32 524 66 562 55 538 b 25 521 28 523 25 521 b 16 403 25 520 16 408 b 16 403 16 403 16 403 l 16 403 b 54 448 17 403 34 423 l 92 492 l 89 499 b 87 519 88 506 87 513 b 103 564 87 535 92 552 b 155 589 117 581 136 589 b 216 551 179 589 204 576 b 224 520 221 541 224 530 b 156 449 224 483 193 449 b 136 453 149 449 142 451 l 129 455 l 85 416 b 42 377 61 395 42 378 l 42 377 l 42 377 b 156 387 46 377 156 387 b 160 394 156 387 159 390 b 220 430 172 417 197 430 b 280 394 243 430 266 417 b 288 360 285 384 288 371 b 280 326 288 348 285 337 b 220 291 266 302 243 291 b 160 327 197 291 172 302 b 156 333 159 330 156 333 b 42 342 156 333 46 342 b 42 342 42 342 42 342 l 42 342 b 85 303 42 342 61 324 l 129 265 l 136 267 b 155 270 142 269 148 270 b 198 254 171 270 186 265 b 223 201 216 240 223 220 b 186 138 223 176 210 151 b 155 131 176 133 166 131 b 87 201 119 131 87 162 b 89 220 87 206 88 213 l 92 227 l 54 272 b 16 316 34 297 17 316 l 16 316 b 16 316 16 316 16 316 b 25 199 16 313 25 199 b 32 195 25 199 28 198 b 68 134 55 183 68 158 b 32 73 68 111 55 87 b -1 65 23 68 10 65 b -34 73 -12 65 -24 68 b -69 134 -57 87 -69 111 b -34 195 -69 158 -57 183 b -27 199 -29 198 -27 199 b -17 316 -27 199 -17 313 b -17 316 -17 316 -17 316 l -17 316 b -55 272 -19 316 -35 297 l -93 227 l -91 220 b -88 201 -89 215 -88 208 b -104 156 -88 184 -93 169 b -156 131 -118 140 -137 131 b -217 169 -181 131 -205 144 b -225 201 -223 179 -225 190 b -157 270 -225 238 -194 270 b -137 267 -151 270 -144 269 l -130 265 l -87 303 b -43 342 -62 324 -43 342 l -43 342 b -43 342 -43 342 -43 342 b -157 333 -47 342 -157 333 b -161 327 -159 333 -160 330 b -221 291 -175 302 -198 291 b -281 326 -245 291 -268 302 b -289 360 -287 337 -289 348 b -281 394 -289 371 -287 384 b -221 430 -268 417 -245 430 b -161 394 -198 430 -175 417 b -157 387 -160 390 -159 387 b -43 377 -157 387 -47 377 l -43 377 l -43 377 b -87 416 -43 378 -62 395 l -130 455 l -137 453 b -156 449 -144 451 -149 449 b -200 466 -172 449 -187 455 b -224 520 -217 480 -224 499 b -187 581 -224 545 -212 569 b -156 589 -178 587 -167 589 b -88 520 -121 589 -88 559 b -91 499 -88 513 -89 506 l -93 492 l -55 448 b -17 403 -35 423 -19 403 l -17 403 b -17 403 -17 403 -17 403 b -27 521 -17 408 -27 520 b -34 524 -27 521 -29 523 b -68 585 -57 538 -68 562 b -12 655 -68 617 -47 649 \"},\n\"v92\":{\"x_min\":0,\"x_max\":598.890625,\"ha\":611,\"o\":\"m 62 181 b 77 183 66 183 72 183 b 91 181 83 183 88 183 b 202 131 100 180 106 177 l 299 87 l 394 131 b 517 183 499 181 502 183 b 519 183 517 183 518 183 b 598 104 567 183 598 144 b 577 49 598 84 592 65 b 518 15 567 38 563 37 b 484 0 499 6 484 0 b 518 -16 484 -1 499 -8 b 577 -51 563 -38 567 -40 b 598 -105 592 -66 598 -86 b 519 -184 598 -145 567 -184 b 517 -184 518 -184 517 -184 b 394 -133 502 -184 499 -183 l 299 -88 l 202 -133 b 81 -184 99 -183 95 -184 b 77 -184 80 -184 78 -184 b 0 -105 29 -184 0 -145 b 20 -51 0 -86 5 -66 b 80 -16 29 -40 34 -38 b 114 -1 98 -8 114 -1 b 80 15 114 0 98 6 b 20 49 34 37 29 38 b 0 104 6 65 0 84 b 62 181 0 140 23 174 m 88 134 b 74 136 85 134 80 136 b 68 134 72 136 69 136 b 46 104 54 130 46 117 b 55 81 46 95 49 88 b 149 34 59 76 53 80 b 224 -1 190 15 224 0 b 144 -38 224 -1 187 -18 b 54 -84 59 -79 58 -79 b 46 -105 49 -90 46 -98 b 76 -137 46 -122 58 -137 b 78 -137 77 -137 77 -137 b 194 -86 87 -137 76 -141 b 298 -36 250 -58 298 -36 b 298 -36 298 -36 298 -36 b 402 -84 299 -36 345 -58 b 518 -137 522 -141 510 -137 b 521 -137 519 -137 519 -137 b 551 -105 539 -137 551 -122 b 541 -83 551 -98 548 -90 b 447 -36 537 -77 544 -81 b 374 -1 406 -16 374 -1 b 447 34 374 0 406 15 b 541 81 544 80 537 76 b 551 104 548 88 551 97 b 521 136 551 120 539 136 b 518 136 519 136 519 136 b 517 136 518 136 517 136 l 517 136 b 402 83 511 136 511 136 b 298 34 345 56 299 34 b 298 34 298 34 298 34 b 194 84 298 34 250 56 b 88 134 137 111 89 133 \"},\n\"v93\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 205 b 219 205 213 205 216 205 b 239 183 228 205 231 204 b 421 -163 298 40 363 -83 b 438 -191 434 -180 438 -186 b 436 -197 438 -192 438 -195 b 424 -206 434 -204 431 -206 b 406 -201 420 -206 415 -205 b 216 -156 347 -172 281 -156 b 23 -205 148 -156 80 -173 b 14 -206 20 -206 17 -206 b 0 -191 6 -206 0 -201 b 6 -176 0 -187 1 -183 b 202 192 63 -104 142 45 b 212 205 205 199 208 202 m 264 48 l 249 81 l 243 94 l 242 91 b 89 -126 208 36 137 -66 b 81 -138 85 -133 81 -138 b 81 -138 81 -138 81 -138 b 81 -138 81 -138 81 -138 b 95 -133 81 -138 87 -136 b 280 -94 156 -108 221 -94 b 334 -98 299 -94 317 -95 b 343 -99 338 -99 343 -99 b 343 -99 343 -99 343 -99 b 338 -94 343 -99 341 -97 b 264 48 318 -58 287 1 \"},\n\"v94\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 \"},\n\"v95\":{\"x_min\":0,\"x_max\":406.96875,\"ha\":415,\"o\":\"m 55 181 b 70 183 61 183 66 183 b 111 170 85 183 99 179 b 160 130 115 167 137 149 l 202 95 l 245 130 b 319 181 299 176 302 179 b 334 183 325 183 330 183 b 406 109 375 183 406 148 b 401 81 406 99 405 91 b 348 24 394 65 390 59 b 318 -1 332 11 318 0 b 348 -26 318 -1 332 -12 b 401 -83 390 -61 394 -66 b 406 -111 405 -93 406 -101 b 334 -184 406 -149 375 -184 b 319 -183 330 -184 325 -184 b 245 -131 302 -180 299 -177 l 202 -97 l 160 -131 b 85 -183 107 -177 103 -180 b 70 -184 80 -184 76 -184 b 0 -111 31 -184 0 -149 b 4 -83 0 -101 1 -93 b 58 -26 10 -66 16 -61 b 88 -1 74 -12 88 -1 b 58 24 88 0 74 11 b 10 69 23 54 17 59 b 0 109 2 81 0 95 b 55 181 0 142 21 173 m 83 133 b 72 136 78 136 76 136 b 57 131 66 136 61 134 b 46 109 49 126 46 117 b 50 93 46 104 47 98 b 107 45 51 91 77 70 b 160 0 137 20 160 0 b 107 -47 160 -1 137 -22 b 50 -94 77 -72 51 -93 b 46 -111 47 -99 46 -105 b 59 -134 46 -120 50 -130 b 72 -137 62 -136 68 -137 b 83 -136 76 -137 80 -136 b 144 -84 84 -134 107 -116 b 202 -36 176 -58 202 -36 b 261 -84 202 -36 230 -58 b 323 -136 299 -116 321 -134 b 334 -137 326 -136 330 -137 b 345 -134 338 -137 343 -136 b 360 -111 355 -130 360 -120 b 355 -94 360 -105 359 -99 b 299 -47 353 -93 329 -72 b 245 0 269 -22 245 -1 b 299 45 245 0 269 20 b 355 93 329 70 353 91 b 360 109 359 98 360 104 b 345 133 360 119 355 129 b 334 136 343 134 338 136 b 323 134 330 136 326 134 b 261 83 321 133 299 115 b 202 34 230 56 202 34 b 144 83 202 34 176 56 b 83 133 106 115 84 133 \"},\n\"v96\":{\"x_min\":0,\"x_max\":597.53125,\"ha\":610,\"o\":\"m 356 341 b 479 341 402 341 445 341 b 570 341 533 341 568 341 b 597 309 586 340 597 326 l 597 309 b 472 -320 597 305 475 -310 b 451 -341 469 -330 462 -337 b 242 -342 450 -342 347 -342 b 21 -341 134 -342 24 -342 b 0 -310 8 -337 0 -324 b 0 -310 0 -310 0 -310 b 123 316 0 -306 118 297 b 144 340 126 327 133 335 b 356 341 147 341 153 341 m 528 276 b 353 277 528 277 492 277 b 179 276 215 277 179 277 b 123 -1 179 276 153 151 l 68 -278 l 242 -278 b 310 -278 266 -278 289 -278 b 416 -278 372 -278 416 -278 b 528 276 417 -278 528 274 \"},\n\"v97\":{\"x_min\":-228.671875,\"x_max\":227.3125,\"ha\":232,\"o\":\"m -217 487 l -213 488 l 0 488 l 212 488 l 216 487 b 225 476 220 484 224 480 l 227 473 l 227 244 l 227 15 l 225 12 b 206 0 223 4 215 0 b 197 1 204 0 200 0 b 187 12 193 4 189 6 l 186 15 l 186 138 l 186 262 l -1 262 l -187 262 l -187 138 l -187 15 l -189 12 b -208 0 -193 4 -200 0 b -227 12 -216 0 -223 4 l -228 15 l -228 244 l -228 473 l -227 476 b -217 487 -225 480 -221 484 \"},\n\"v98\":{\"x_min\":-1.359375,\"x_max\":427.390625,\"ha\":436,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 b 272 494 272 616 272 616 l 272 370 l 344 333 b 426 285 426 292 423 294 b 427 277 426 283 427 280 b 405 256 427 266 417 256 b 405 256 405 256 405 256 l 400 256 l 336 290 b 272 322 300 308 272 322 b 272 54 272 322 272 201 b 270 -216 272 -212 272 -212 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b -1 84 9 18 -1 52 b 111 199 -1 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 245 l 231 342 l 157 380 b 81 420 92 413 84 417 b 76 435 77 424 76 430 b 96 456 76 446 84 456 b 98 456 96 456 98 456 l 103 456 l 166 424 b 230 391 201 406 230 391 b 231 503 230 391 231 442 b 232 620 231 614 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 \"},\n\"v99\":{\"x_min\":0,\"x_max\":239.5625,\"ha\":244,\"o\":\"m 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -106 l 239 -448 l 238 -451 b 219 -463 234 -459 225 -463 b 198 -451 210 -463 202 -459 l 197 -448 l 197 -324 b 197 -201 197 -248 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 \"},\n\"v9a\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 230 1031 b 238 1032 232 1032 235 1032 b 259 1014 245 1032 251 1027 b 367 662 330 906 367 782 b 364 602 367 641 367 621 b 232 317 352 488 304 384 b 57 120 155 245 103 187 b -1 18 31 84 6 40 b -19 4 -4 11 -12 4 l -21 4 l -21 159 l -21 315 l -16 315 b 96 335 10 315 62 324 b 315 695 227 380 315 527 b 313 738 315 709 314 724 b 224 991 304 825 273 916 b 216 1013 219 999 216 1007 b 230 1031 216 1021 220 1028 \"},\n\"v9b\":{\"x_min\":-24.5,\"x_max\":313.0625,\"ha\":319,\"o\":\"m -24 -133 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 142 -213 13 -61 74 -144 b 258 -376 196 -269 230 -315 b 313 -605 295 -449 313 -528 b 292 -742 313 -652 306 -699 b 288 -752 289 -748 288 -752 b 288 -752 288 -752 288 -752 b 292 -764 289 -753 291 -757 b 313 -907 306 -811 313 -860 b 292 -1045 313 -954 306 -1002 b 288 -1054 289 -1050 288 -1054 b 288 -1054 288 -1054 288 -1054 b 292 -1067 289 -1054 291 -1060 b 313 -1210 306 -1113 313 -1161 b 292 -1346 313 -1257 306 -1304 b 288 -1357 289 -1353 288 -1357 b 288 -1357 288 -1357 288 -1357 b 292 -1368 289 -1357 291 -1363 b 313 -1512 306 -1415 313 -1464 b 292 -1648 313 -1560 306 -1605 b 288 -1660 289 -1654 288 -1660 b 288 -1660 288 -1660 288 -1660 b 292 -1671 289 -1660 291 -1665 b 313 -1814 306 -1719 313 -1766 b 250 -2040 313 -1897 291 -1977 b 232 -2062 238 -2057 236 -2059 b 221 -2065 230 -2063 225 -2065 b 200 -2045 210 -2065 201 -2057 b 200 -2043 200 -2044 200 -2044 b 208 -2026 200 -2037 202 -2034 b 269 -1826 249 -1966 269 -1897 b 153 -1544 269 -1726 230 -1625 b -9 -1472 115 -1506 58 -1481 b -21 -1471 -14 -1471 -19 -1471 l -24 -1471 l -24 -1343 l -24 -1215 l -20 -1215 b -1 -1229 -12 -1215 -4 -1221 b 142 -1424 13 -1270 74 -1353 b 257 -1582 196 -1478 228 -1524 b 264 -1594 261 -1589 264 -1594 l 264 -1594 b 265 -1582 264 -1594 264 -1589 b 270 -1525 268 -1562 270 -1544 b 153 -1243 270 -1424 228 -1321 b -9 -1170 115 -1203 58 -1178 b -21 -1168 -14 -1170 -19 -1168 l -24 -1168 l -24 -1041 l -24 -913 l -20 -913 b -1 -927 -12 -913 -4 -918 b 142 -1121 13 -967 74 -1050 b 257 -1281 196 -1175 228 -1221 b 264 -1292 261 -1286 264 -1292 l 264 -1292 b 265 -1279 264 -1292 264 -1286 b 270 -1222 268 -1261 270 -1242 b 153 -941 270 -1121 228 -1018 b -9 -867 115 -900 58 -875 b -21 -866 -14 -867 -19 -866 l -24 -866 l -24 -738 l -24 -610 l -20 -610 b -1 -624 -12 -610 -4 -616 b 142 -818 13 -664 74 -749 b 257 -978 196 -873 228 -918 b 264 -989 261 -984 264 -989 l 264 -989 b 265 -977 264 -989 264 -984 b 270 -920 268 -959 270 -939 b 153 -638 270 -818 228 -716 b -9 -564 115 -598 58 -573 b -21 -563 -14 -564 -19 -563 l -24 -563 l -24 -435 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 142 -516 13 -363 74 -446 b 257 -675 196 -571 228 -616 b 264 -687 261 -681 264 -687 l 264 -687 b 265 -674 264 -687 264 -681 b 270 -617 268 -656 270 -637 b 153 -335 270 -516 228 -413 b -9 -262 115 -295 58 -270 b -21 -260 -14 -262 -19 -260 l -24 -260 l -24 -133 \"},\n\"v9c\":{\"x_min\":-166.0625,\"x_max\":-25.859375,\"ha\":0,\"o\":\"m -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 \"},\n\"v9d\":{\"x_min\":-1.359375,\"x_max\":326.671875,\"ha\":333,\"o\":\"m 99 692 b 107 694 102 692 104 694 b 121 688 112 694 117 691 b 126 673 123 685 125 682 b 209 460 141 598 172 519 l 215 451 l 215 445 l 215 445 b 197 426 215 434 206 426 b 186 430 194 426 190 427 b 133 449 170 440 152 446 b 127 451 130 449 129 451 b 126 449 126 451 126 451 b 127 446 126 449 127 448 b 127 324 127 444 127 424 b 129 205 127 259 129 205 b 215 227 129 205 167 215 b 308 249 283 244 300 249 b 315 247 311 249 313 248 b 325 237 319 245 323 241 l 326 233 l 326 -106 l 326 -448 l 325 -451 b 306 -463 321 -459 314 -463 b 287 -451 298 -463 291 -459 l 285 -448 l 285 -324 b 284 -201 285 -248 284 -201 b 197 -223 284 -201 245 -210 b 104 -245 129 -240 111 -245 b 98 -242 102 -245 100 -244 b 88 -233 93 -241 89 -237 l 87 -230 l 87 106 b 87 262 87 169 87 220 b 87 446 87 415 87 444 b 88 449 88 448 88 449 b 87 451 88 451 88 451 b 81 449 85 451 84 451 b 27 430 62 446 44 440 b 16 426 24 427 20 426 b -1 445 6 426 -1 434 b 0 445 -1 445 0 445 l 0 451 l 5 460 b 87 669 40 519 69 589 b 99 692 91 685 92 688 m 284 22 b 285 70 285 41 285 58 b 284 116 285 113 284 116 l 284 116 b 205 97 283 116 247 106 l 127 77 l 127 -18 b 129 -112 127 -69 129 -112 l 206 -93 l 284 -73 l 284 22 \"},\n\"v9e\":{\"x_min\":0,\"x_max\":607.0625,\"ha\":619,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 m 347 631 b 353 632 348 632 351 632 b 374 620 363 632 371 628 b 375 383 375 616 375 616 l 375 148 l 377 151 b 492 199 415 183 454 199 b 537 191 507 199 522 197 b 607 84 582 176 607 134 b 583 0 607 58 598 29 b 455 -142 562 -40 533 -72 l 378 -215 b 355 -229 364 -229 362 -229 b 334 -216 345 -229 337 -224 l 333 -212 l 333 201 l 333 616 l 334 620 b 347 631 337 624 341 630 m 465 131 b 451 133 461 133 455 133 b 445 133 449 133 446 133 b 379 87 419 129 396 113 l 375 80 l 375 -37 l 375 -156 l 378 -152 b 499 81 451 -72 499 20 l 499 83 b 465 131 499 113 490 126 \"},\n\"v9f\":{\"x_min\":-311.6875,\"x_max\":310.328125,\"ha\":317,\"o\":\"m -9 388 b -2 390 -8 390 -5 390 b 5 388 1 390 4 390 b 19 378 10 387 16 383 b 23 333 23 371 23 371 l 23 328 l 23 290 l 27 290 b 172 274 62 290 129 283 b 200 259 191 270 196 267 b 215 40 204 249 215 102 b 215 26 215 33 215 26 l 216 24 l 253 24 l 255 24 b 299 19 292 24 292 23 b 310 -1 306 15 310 6 b 299 -23 310 -11 306 -19 b 255 -27 292 -27 292 -27 l 253 -27 l 216 -27 l 215 -30 b 215 -55 215 -31 215 -43 b 202 -244 213 -111 209 -179 b 174 -277 200 -270 198 -273 b 40 -294 132 -285 87 -291 l 23 -294 l 23 -331 b 23 -340 23 -334 23 -337 b 17 -381 23 -376 23 -374 b -1 -391 13 -388 5 -391 b -21 -381 -9 -391 -17 -388 b -27 -340 -27 -374 -27 -376 b -27 -331 -27 -337 -27 -334 l -27 -294 l -44 -294 b -178 -277 -91 -291 -136 -285 b -205 -258 -198 -273 -204 -270 b -219 -44 -210 -215 -219 -94 b -219 -29 -219 -37 -219 -30 l -220 -27 l -255 -27 l -258 -27 b -300 -23 -294 -27 -294 -27 b -311 -2 -307 -19 -311 -11 b -294 23 -311 8 -304 19 b -255 24 -291 23 -284 24 l -220 24 l -219 26 b -219 40 -219 26 -219 33 b -204 259 -219 104 -208 249 b -176 274 -200 267 -196 270 b -31 290 -133 283 -66 290 l -27 290 l -27 328 b -27 371 -27 360 -27 369 b -9 388 -24 378 -17 385 m -27 136 l -27 247 l -28 247 b -103 233 -46 245 -100 235 b -107 197 -103 233 -106 217 b -115 52 -111 147 -114 94 b -115 27 -115 40 -115 29 l -115 24 l -72 24 l -27 24 l -27 136 m 34 245 b 24 247 28 247 24 247 b 23 136 24 247 23 197 l 23 24 l 68 24 l 111 24 l 111 27 b 111 52 111 29 111 40 b 103 197 110 94 107 147 b 99 233 102 217 100 233 b 34 245 98 235 54 244 m -27 -140 l -27 -27 l -72 -27 l -115 -27 l -115 -30 b -115 -56 -115 -33 -115 -44 b -107 -201 -114 -98 -111 -151 b -103 -237 -106 -222 -103 -237 b -28 -251 -100 -240 -40 -251 b -27 -140 -28 -251 -27 -201 m 111 -30 l 111 -27 l 68 -27 l 23 -27 l 23 -140 b 24 -251 23 -201 24 -251 b 99 -237 36 -251 96 -240 b 103 -201 100 -237 102 -222 b 111 -56 107 -151 110 -98 b 111 -30 111 -44 111 -33 \"},\n\"va0\":{\"x_min\":0,\"x_max\":622.03125,\"ha\":635,\"o\":\"m 398 417 b 406 419 401 419 404 419 b 427 398 417 419 427 409 b 427 391 427 395 427 392 b 34 -274 424 385 38 -272 b 20 -280 29 -278 25 -280 b 0 -259 9 -280 0 -270 b 0 -252 0 -256 0 -254 b 393 413 2 -247 389 410 b 398 417 394 415 397 416 m 592 417 b 600 419 594 419 597 419 b 622 398 611 419 622 409 b 620 391 622 395 620 392 b 227 -274 617 385 231 -272 b 213 -280 223 -278 219 -280 b 193 -259 202 -280 193 -270 b 194 -252 193 -256 193 -254 b 586 413 196 -247 582 410 b 592 417 588 415 590 416 \"},\n\"va1\":{\"x_min\":0,\"x_max\":294,\"ha\":300,\"o\":\"m 138 381 b 147 381 141 381 144 381 b 221 299 191 381 221 341 b 194 238 221 278 213 255 b 159 210 190 234 161 212 b 78 148 157 209 81 151 b 78 148 78 148 78 148 b 95 106 78 144 88 119 b 121 77 103 88 108 83 b 156 69 132 72 144 69 b 259 127 193 69 232 91 b 273 140 266 137 269 138 b 279 141 274 141 276 141 b 294 124 287 141 294 134 b 292 117 294 123 294 120 b 255 66 289 113 261 72 b 126 -1 220 22 171 -1 b 47 27 96 -1 69 8 b 2 133 31 43 9 93 b 0 180 0 149 0 165 b 53 326 0 237 17 288 b 103 366 59 331 91 358 b 138 381 112 373 129 380 m 126 326 b 118 326 123 326 121 326 b 98 316 110 326 103 323 b 68 215 78 288 68 255 b 68 208 68 213 68 210 b 70 183 69 195 69 184 l 70 183 b 93 201 70 183 81 191 l 133 231 b 159 259 152 247 155 248 b 163 278 161 266 163 272 b 126 326 163 299 148 320 \"},\n\"va2\":{\"x_min\":0,\"x_max\":367.5,\"ha\":375,\"o\":\"m 0 124 l 0 187 l 61 187 l 122 187 l 122 138 l 122 91 l 153 61 l 183 30 l 213 61 l 243 91 l 243 138 l 243 187 l 306 187 l 367 187 l 367 124 l 367 61 l 321 61 l 274 61 l 243 30 l 213 0 l 243 -31 l 274 -62 l 321 -62 l 367 -62 l 367 -124 l 367 -188 l 306 -188 l 243 -188 l 243 -140 l 243 -93 l 213 -62 l 183 -31 l 153 -62 l 122 -93 l 122 -140 l 122 -188 l 61 -188 l 0 -188 l 0 -124 l 0 -62 l 46 -62 l 92 -62 l 123 -31 l 153 0 l 123 30 l 92 61 l 46 61 l 0 61 l 0 124 \"},\n\"va3\":{\"x_min\":58.53125,\"x_max\":228.671875,\"ha\":294,\"o\":\"m 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 \"},\n\"va4\":{\"x_min\":-21.78125,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 179 164 199 187 192 l 210 176 l 210 396 l 210 617 l 212 621 b 231 632 216 628 223 632 b 250 620 239 632 247 628 b 251 383 251 616 251 616 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\n\"va5\":{\"x_min\":0,\"x_max\":349.8125,\"ha\":357,\"o\":\"m 88 302 b 103 303 93 302 98 303 b 202 224 149 303 191 270 b 205 199 204 216 205 208 b 178 129 205 173 196 147 l 175 126 l 182 127 b 307 249 236 142 284 190 b 313 259 308 254 311 258 b 329 267 317 265 323 267 b 349 247 340 267 349 259 b 201 -263 349 242 204 -258 b 182 -273 197 -270 190 -273 b 163 -260 174 -273 166 -269 b 161 -256 161 -259 161 -258 b 217 -59 161 -248 170 -220 b 272 129 247 43 272 127 b 272 129 272 129 272 129 b 264 122 272 129 268 126 b 140 80 227 94 183 80 b 36 115 102 80 65 91 b 0 194 10 136 0 165 b 88 302 0 244 32 292 \"},\n\"va6\":{\"x_min\":0,\"x_max\":462.78125,\"ha\":472,\"o\":\"m 8 595 b 14 596 10 596 12 596 b 50 591 21 596 29 595 b 455 248 255 544 420 405 b 462 191 460 229 462 209 b 321 0 462 94 404 9 b 300 -1 314 -1 307 -1 b 149 167 215 -1 149 69 b 294 387 149 258 201 337 b 296 390 295 388 296 388 b 289 398 296 391 294 392 b 21 560 225 477 130 535 b 2 569 9 563 5 566 b 0 580 0 573 0 576 b 8 595 0 587 2 592 m 325 348 b 321 353 322 351 322 353 b 313 348 319 353 317 351 b 223 167 255 306 223 237 b 227 124 223 154 224 138 b 289 31 236 79 261 40 b 295 31 291 31 294 31 b 355 104 315 31 338 59 b 368 191 364 129 368 159 b 364 241 368 208 367 224 b 325 348 357 277 344 313 \"},\n\"va7\":{\"x_min\":-155.171875,\"x_max\":153.8125,\"ha\":157,\"o\":\"m -9 24 b 0 26 -5 24 -2 26 b 25 2 12 26 21 16 l 29 -19 b 144 -303 54 -124 96 -229 b 153 -328 153 -319 153 -322 b 127 -355 153 -344 142 -355 b 100 -334 115 -355 111 -351 b 6 -130 62 -274 31 -206 b -1 -108 2 -117 0 -108 b -8 -130 -1 -108 -4 -117 b -102 -334 -32 -206 -63 -274 b -129 -355 -112 -351 -117 -355 b -155 -328 -144 -355 -155 -344 b -145 -303 -155 -322 -155 -319 b -31 -19 -98 -229 -55 -124 l -27 2 b -9 24 -24 13 -17 22 \"},\n\"va8\":{\"x_min\":-68.0625,\"x_max\":66.6875,\"ha\":68,\"o\":\"m -12 66 b -1 68 -9 68 -5 68 b 55 37 20 68 43 56 b 66 -1 62 26 66 12 b 36 -58 66 -23 55 -44 b 0 -69 25 -65 12 -69 b -57 -38 -21 -69 -43 -58 b -68 -1 -63 -27 -68 -13 b -12 66 -68 30 -46 61 \"},\n\"va9\":{\"x_min\":-24.5,\"x_max\":314.421875,\"ha\":321,\"o\":\"m -24 -145 l -24 -5 l -20 -5 b 0 -23 -9 -5 -2 -12 b 27 -87 4 -38 14 -66 b 138 -220 53 -136 88 -177 b 235 -328 179 -255 208 -288 b 314 -592 287 -409 314 -501 b 292 -732 314 -639 307 -687 l 289 -742 l 294 -756 b 314 -896 307 -802 314 -849 b 292 -1035 314 -943 307 -991 l 289 -1045 l 294 -1057 b 314 -1197 307 -1104 314 -1152 b 292 -1338 314 -1246 307 -1292 l 289 -1347 l 294 -1360 b 314 -1500 307 -1407 314 -1454 b 273 -1689 314 -1565 300 -1628 b 250 -1712 265 -1710 261 -1712 b 228 -1691 236 -1712 228 -1704 l 228 -1685 l 234 -1675 b 270 -1507 258 -1621 270 -1564 b 98 -1193 270 -1381 209 -1261 b 40 -1174 76 -1179 58 -1174 b -10 -1189 24 -1174 8 -1178 b -20 -1192 -14 -1192 -16 -1192 l -24 -1192 l -24 -1052 l -24 -913 l -20 -913 b 0 -931 -9 -913 -2 -920 b 27 -995 4 -946 14 -974 b 138 -1128 53 -1043 88 -1085 b 257 -1275 190 -1172 228 -1220 b 262 -1283 259 -1279 262 -1283 l 262 -1283 b 269 -1249 264 -1282 268 -1260 b 270 -1206 270 -1233 270 -1220 b 98 -891 270 -1075 206 -957 b 40 -871 76 -877 58 -871 b -10 -886 24 -871 8 -875 b -20 -889 -14 -889 -16 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 0 -628 -9 -610 -2 -617 b 27 -692 4 -644 14 -671 b 138 -825 53 -741 88 -782 b 257 -973 190 -870 228 -917 b 262 -981 259 -977 262 -981 l 262 -981 b 269 -946 264 -979 268 -957 b 270 -903 270 -931 270 -917 b 98 -588 270 -774 206 -655 b 40 -569 76 -574 58 -569 b -10 -584 24 -569 8 -574 b -20 -587 -14 -587 -16 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 0 -326 -9 -308 -2 -315 b 27 -390 4 -341 14 -369 b 138 -523 53 -438 88 -480 b 257 -670 190 -567 228 -614 b 262 -678 259 -674 262 -678 b 262 -678 262 -678 262 -678 b 269 -644 264 -677 268 -656 b 270 -601 270 -628 270 -614 b 98 -285 270 -471 206 -352 b 40 -266 76 -273 58 -266 b -10 -281 24 -266 8 -272 b -20 -284 -14 -284 -16 -284 l -24 -284 l -24 -145 \"},\n\"vaa\":{\"x_min\":-1.359375,\"x_max\":752.703125,\"ha\":768,\"o\":\"m 490 985 b 504 986 495 986 500 986 b 604 907 551 986 593 954 b 607 884 607 900 607 892 b 581 813 607 857 597 831 l 578 810 l 583 811 b 710 932 638 827 687 873 b 714 943 711 936 713 942 b 730 952 720 949 725 952 b 752 931 741 952 752 943 b 200 -946 752 927 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 538 314 477 300 508 b 318 598 300 559 306 580 b 404 645 340 630 372 645 b 494 592 439 645 475 627 b 507 541 502 577 507 559 b 480 471 507 516 498 489 l 477 467 l 483 470 b 608 589 537 485 586 531 b 675 811 611 595 675 810 b 675 811 675 811 675 811 b 666 806 675 811 671 809 b 543 763 628 777 585 763 b 438 799 504 763 468 775 b 401 878 412 820 401 849 b 490 985 401 928 434 977 \"},\n\"vab\":{\"x_min\":0,\"x_max\":272.21875,\"ha\":278,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 \"},\n\"vac\":{\"x_min\":-390.640625,\"x_max\":389.28125,\"ha\":397,\"o\":\"m -9 650 b -1 652 -6 650 -4 652 b 19 639 6 652 13 648 l 23 631 b 28 623 24 628 27 626 l 34 614 l 39 606 l 43 598 l 49 588 l 54 580 l 59 571 l 65 563 l 69 555 l 74 546 l 80 537 l 85 528 b 89 520 87 526 89 523 l 95 512 l 100 503 l 106 494 l 111 487 l 115 478 l 121 470 l 126 462 l 130 453 l 136 445 l 141 437 l 147 427 l 151 419 l 156 410 l 161 402 l 167 394 l 172 385 l 176 376 b 182 367 179 374 181 370 l 187 359 l 193 351 l 198 342 l 202 334 l 208 326 l 212 317 l 217 309 l 223 301 l 228 292 l 234 284 l 238 274 l 243 266 l 249 258 l 254 249 l 259 241 l 264 233 l 269 224 b 274 216 270 222 273 217 l 280 206 l 285 198 l 295 180 l 299 174 l 304 165 l 310 156 l 315 148 l 321 140 l 325 131 l 330 123 l 336 113 l 341 105 l 347 97 l 351 88 l 356 80 l 360 72 b 364 66 362 70 363 68 b 370 58 366 65 368 61 l 379 41 b 389 19 386 31 389 24 b 382 4 389 13 386 8 b 347 0 377 0 378 0 b 337 0 344 0 340 0 b 336 0 336 0 336 0 b 287 11 294 0 294 0 l 281 19 l 276 27 l 272 37 l 266 45 l 261 54 l 255 62 l 250 70 l 246 79 l 240 87 l 235 97 l 230 105 l 224 113 l 220 122 l 215 130 l 209 140 l 204 148 l 200 155 l 194 163 b 189 172 193 165 191 169 l 185 180 l 179 188 l 174 198 l 168 206 l 163 215 l 159 223 l 153 231 l 148 240 l 142 249 l 138 258 l 133 266 l 127 274 l 122 283 l 117 292 l 111 301 l 107 308 l 102 316 b 98 324 102 317 99 322 l 92 333 l 87 341 l 81 349 l 77 359 l 72 367 l 66 376 l 61 384 l 55 392 l 51 401 l 46 410 l 40 419 l 35 427 l 31 435 l 24 444 l 20 453 l 14 460 l 10 469 b 5 477 9 470 6 474 l 0 485 l -5 494 l -9 502 l -14 512 b -20 519 -16 513 -19 517 l -24 526 l -28 534 b -31 537 -29 535 -31 537 b -35 533 -32 537 -32 535 l -88 444 l -187 280 l -285 117 l -343 23 b -362 1 -352 6 -356 2 b -368 0 -364 0 -367 0 b -390 20 -381 0 -390 8 l -390 20 b -359 77 -390 27 -390 27 l -80 539 l -25 631 b -9 650 -17 644 -13 648 m -13 133 b -1 134 -9 133 -5 134 b 50 105 19 134 39 123 b 61 70 57 95 61 83 b 50 34 61 58 57 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 70 -57 40 -62 55 b -13 133 -62 98 -44 126 \"},\n\"vad\":{\"x_min\":0,\"x_max\":873.828125,\"ha\":892,\"o\":\"m 0 0 l 0 703 l 81 703 l 164 703 l 164 0 l 164 -705 l 81 -705 l 0 -705 l 0 0 m 225 0 l 225 703 l 246 703 l 268 703 l 268 366 l 268 30 l 274 36 b 314 79 284 44 302 63 b 413 302 357 137 392 213 b 432 327 419 324 421 327 b 449 306 443 327 447 322 b 611 115 457 195 529 115 b 651 122 624 115 638 117 b 728 316 705 140 724 188 b 729 388 728 342 729 366 b 671 635 729 533 711 602 b 581 662 649 652 616 662 b 477 637 545 662 510 653 l 475 635 l 477 634 b 503 627 488 632 495 631 b 545 556 532 612 545 584 b 491 480 545 524 526 491 b 465 474 481 476 473 474 b 379 563 417 474 379 516 b 389 602 379 576 382 588 b 541 691 409 641 479 681 b 582 694 555 692 568 694 b 865 462 714 694 834 598 b 873 392 871 440 873 416 b 865 317 873 367 871 341 b 639 84 839 194 748 101 b 612 83 630 83 620 83 b 511 116 577 83 543 94 b 504 120 509 119 506 120 b 504 120 504 120 504 120 b 469 59 504 120 488 93 l 432 -1 l 469 -61 b 504 -122 488 -94 504 -122 b 504 -122 504 -122 504 -122 b 511 -117 506 -122 509 -120 b 612 -84 543 -95 577 -84 b 665 -91 630 -84 647 -87 b 869 -338 771 -122 850 -216 b 873 -392 872 -356 873 -374 b 798 -595 873 -469 847 -539 b 581 -695 741 -662 660 -695 b 406 -626 517 -695 454 -671 b 381 -563 389 -607 381 -585 b 465 -477 381 -519 413 -477 b 545 -559 514 -477 545 -519 b 503 -628 545 -587 532 -613 b 477 -635 495 -632 488 -634 l 475 -637 l 477 -638 b 581 -663 510 -655 545 -663 b 671 -637 616 -663 649 -653 b 729 -391 711 -603 729 -534 b 728 -317 729 -367 728 -344 b 623 -117 722 -173 698 -124 b 611 -116 619 -116 615 -116 b 449 -308 528 -116 457 -198 b 432 -328 447 -323 443 -328 b 413 -303 421 -328 419 -326 b 314 -80 392 -215 357 -138 b 274 -37 302 -65 284 -45 l 268 -31 l 268 -367 l 268 -705 l 246 -705 l 225 -705 l 225 0 \"},\n\"vae\":{\"x_min\":-108.890625,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 863 b 0 864 -5 864 -2 864 b 12 859 4 864 9 863 b 19 843 16 856 16 853 b 102 631 34 768 65 689 l 107 621 l 107 616 l 107 616 b 89 596 107 605 99 596 b 78 601 85 596 83 598 b 47 614 69 606 55 612 b 19 621 39 617 21 621 b 19 621 19 621 19 621 b 19 619 19 621 19 620 b 20 383 20 616 20 585 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 93 -148 206 -40 179 -70 l 38 -199 l 23 -215 l 20 -217 l 20 -241 b 19 -267 20 -260 20 -266 b 19 -270 19 -269 19 -270 b 19 -270 19 -270 19 -270 b 47 -263 21 -270 39 -266 b 78 -249 55 -260 69 -255 b 89 -247 83 -247 85 -247 b 107 -265 99 -247 107 -254 l 107 -265 l 107 -270 l 102 -280 b 19 -492 65 -338 34 -417 b 0 -513 14 -508 10 -513 b -20 -488 -12 -513 -16 -508 b -103 -280 -38 -409 -66 -338 l -108 -270 l -108 -265 l -108 -265 b -91 -247 -108 -254 -100 -247 b -80 -249 -87 -247 -84 -247 b -49 -263 -70 -255 -57 -260 b -20 -270 -40 -266 -23 -270 b -20 -270 -20 -270 -20 -270 b -20 -267 -20 -270 -20 -269 b -21 174 -21 -266 -21 -208 b -20 619 -21 559 -21 616 b -20 621 -20 620 -20 621 b -20 621 -20 621 -20 621 b -49 614 -23 621 -40 617 b -80 601 -57 612 -70 606 b -91 596 -84 598 -87 596 b -108 616 -100 596 -108 605 l -108 616 l -108 621 l -103 631 b -20 839 -66 689 -38 760 b -8 863 -17 856 -14 859 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"vaf\":{\"x_min\":-209.609375,\"x_max\":208.25,\"ha\":213,\"o\":\"m -197 19 b 1 20 -194 19 -96 20 b 196 19 98 20 193 19 b 208 -1 204 15 208 6 b 202 -15 208 -5 206 -11 b 95 -22 197 -20 212 -22 b -1 -22 69 -22 38 -22 b -96 -22 -39 -22 -70 -22 b -204 -15 -213 -22 -198 -20 b -209 -1 -208 -11 -209 -5 b -197 19 -209 6 -205 15 m -12 -113 b -1 -113 -9 -113 -5 -113 b 55 -144 20 -113 43 -124 b 66 -181 62 -155 66 -169 b 27 -244 66 -208 53 -233 b 0 -251 19 -248 9 -251 b -57 -220 -21 -251 -43 -240 b -68 -181 -63 -208 -68 -195 b -12 -113 -68 -151 -46 -120 \"},\n\"vb0\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 205 b 219 205 213 205 216 205 b 239 183 228 205 231 204 b 421 -163 298 40 363 -83 b 438 -191 434 -180 438 -186 b 436 -197 438 -192 438 -195 b 424 -206 434 -204 431 -206 b 406 -201 420 -206 415 -205 b 216 -156 347 -172 281 -156 b 23 -205 148 -156 80 -173 b 14 -206 20 -206 17 -206 b 0 -191 6 -206 0 -201 b 6 -176 0 -187 1 -183 b 202 192 63 -104 142 45 b 212 205 205 199 208 202 m 264 48 l 249 81 l 243 94 l 242 91 b 89 -126 208 36 137 -66 b 81 -138 85 -133 81 -138 b 81 -138 81 -138 81 -138 b 81 -138 81 -138 81 -138 b 95 -133 81 -138 87 -136 b 280 -94 156 -108 221 -94 b 334 -98 299 -94 317 -95 b 343 -99 338 -99 343 -99 b 343 -99 343 -99 343 -99 b 338 -94 343 -99 341 -97 b 264 48 318 -58 287 1 \"},\n\"vb1\":{\"x_min\":78.9375,\"x_max\":485.921875,\"ha\":417,\"o\":\"m 362 378 b 378 380 367 380 372 380 b 472 348 415 380 453 367 b 485 315 481 338 485 327 b 462 273 485 298 477 281 b 439 267 454 269 446 267 b 398 290 424 267 409 274 b 344 319 385 309 364 319 b 281 269 315 319 289 301 b 279 262 280 266 279 262 b 276 256 279 260 277 258 b 274 249 276 254 274 251 b 238 127 273 248 257 192 b 201 4 217 61 201 5 b 166 -1 198 -1 200 -1 b 153 -1 163 -1 157 -1 b 141 -1 148 -1 144 -1 b 104 4 106 -1 107 -1 b 104 6 104 5 104 5 b 142 144 104 13 110 34 b 182 278 164 219 181 276 b 183 288 182 281 182 285 b 185 302 185 292 185 298 b 164 330 185 317 176 328 b 159 330 163 330 161 330 b 102 302 140 330 119 320 b 91 294 95 295 93 294 b 88 294 91 294 89 294 b 78 303 83 294 78 298 b 81 312 78 306 78 309 b 200 373 106 347 160 373 b 215 371 205 373 209 371 b 266 335 235 367 254 353 b 269 331 268 333 269 331 b 269 331 269 331 269 331 b 273 335 269 331 270 334 b 362 378 298 359 330 376 \"},\n\"vb2\":{\"x_min\":-80.3125,\"x_max\":78.9375,\"ha\":81,\"o\":\"m 23 191 b 32 192 27 192 29 192 b 78 145 57 192 78 172 b 78 140 78 142 78 141 b -10 -72 78 133 70 116 l -50 -165 b -70 -194 -63 -194 -63 -194 b -80 -184 -77 -194 -80 -192 b -76 -159 -80 -179 -78 -172 l -68 -116 b -12 159 -51 -31 -13 156 b 23 191 -6 176 6 188 \"},\n\"vb3\":{\"x_min\":0,\"x_max\":227.3125,\"ha\":232,\"o\":\"m 91 213 b 100 215 93 215 96 215 b 227 58 167 215 224 144 b 227 52 227 56 227 54 b 61 -201 227 -43 164 -138 b 29 -216 44 -212 36 -216 b 23 -210 27 -216 24 -213 b 21 -205 21 -208 21 -206 b 34 -192 21 -201 25 -197 b 122 -55 89 -161 122 -106 b 104 6 122 -33 117 -12 l 103 9 l 96 9 b 4 79 57 9 17 38 b 0 112 1 90 0 101 b 91 213 0 163 36 209 \"},\n\"vb4\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 80 86 -5 172 13 151 b 166 -1 127 37 166 -1 b 235 84 166 -1 197 37 b 311 173 306 173 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 152 -86 221 -1 190 -38 b 76 -176 81 -174 83 -173 b 70 -176 74 -176 73 -176 b 61 -174 66 -176 62 -174 b -27 -87 58 -173 38 -152 b -114 -1 -74 -38 -112 -1 b -182 -86 -114 -1 -145 -38 b -258 -176 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 \"},\n\"vb5\":{\"x_min\":-170.140625,\"x_max\":168.78125,\"ha\":172,\"o\":\"m -160 -1 b -122 -1 -159 -1 -149 -1 l -87 -1 l -84 -2 b -74 -15 -78 -4 -77 -6 b -20 -201 -73 -18 -49 -102 b 31 -383 8 -301 31 -383 b 85 -197 31 -383 55 -299 b 140 -9 114 -95 138 -11 b 153 0 141 -4 148 0 b 168 -9 159 0 166 -4 b 168 -12 168 -11 168 -11 b 92 -287 168 -20 159 -55 b 14 -555 50 -434 14 -555 b 0 -569 14 -562 6 -569 b -17 -553 -8 -569 -17 -560 b -93 -285 -17 -552 -51 -433 b -170 -16 -166 -36 -170 -20 b -170 -15 -170 -15 -170 -15 b -160 -1 -170 -8 -167 -4 \"},\n\"vb6\":{\"x_min\":0,\"x_max\":556.6875,\"ha\":568,\"o\":\"m 289 545 b 298 546 292 545 295 546 b 318 533 306 546 315 541 b 319 428 319 530 319 528 l 319 327 l 334 327 b 526 223 412 326 485 285 b 543 172 537 206 543 190 b 447 76 543 122 503 76 b 445 76 446 76 446 76 b 359 165 394 77 359 119 b 368 205 359 179 362 192 b 441 251 382 233 412 251 b 455 249 446 251 451 251 b 460 248 458 249 460 248 b 460 248 460 248 460 248 b 454 254 460 249 458 251 b 334 295 419 280 378 294 l 319 295 l 319 4 l 319 -287 l 321 -285 b 328 -285 322 -285 325 -285 b 524 -99 424 -277 507 -198 b 541 -79 526 -84 530 -79 b 556 -97 551 -79 556 -84 b 548 -133 556 -105 553 -117 b 334 -317 521 -233 434 -306 b 322 -319 329 -317 323 -317 l 319 -319 l 319 -424 b 319 -471 319 -444 319 -459 b 313 -541 319 -544 318 -535 b 298 -548 308 -545 303 -548 b 279 -534 289 -548 281 -542 b 277 -424 277 -531 277 -530 l 277 -317 l 273 -317 b 13 -95 153 -305 51 -217 b 0 2 4 -62 0 -29 b 182 295 0 126 66 238 b 274 324 210 309 249 320 l 277 324 l 277 427 b 279 533 277 528 277 530 b 289 545 281 538 285 542 m 277 2 b 277 291 277 161 277 291 b 268 288 277 291 273 290 b 144 1 179 265 144 184 b 276 -284 144 -199 175 -267 l 277 -285 l 277 2 \"},\n\"vb7\":{\"x_min\":-176.9375,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"vb8\":{\"x_min\":0,\"x_max\":175.578125,\"ha\":179,\"o\":\"m 72 231 b 87 233 77 233 81 233 b 175 142 137 233 175 191 b 164 102 175 130 171 116 b 87 54 149 70 118 54 b 24 80 63 54 42 62 b 0 142 6 98 0 120 b 72 231 0 184 27 224 \"},\n\"vb9\":{\"x_min\":-122.5,\"x_max\":121.140625,\"ha\":124,\"o\":\"m -16 145 b 0 147 -10 147 -5 147 b 121 -1 66 147 121 77 b 114 -49 121 -16 118 -33 b -1 -148 95 -112 47 -148 b -85 -106 -31 -148 -61 -134 b -122 -1 -110 -76 -122 -38 b -16 145 -122 68 -81 134 m 12 111 b 0 113 8 113 4 113 b -68 22 -29 113 -61 73 b -70 0 -69 15 -70 6 b -13 -113 -70 -49 -47 -98 b -1 -115 -9 -115 -5 -115 b 63 -40 24 -115 53 -83 b 68 -1 66 -27 68 -15 b 12 111 68 48 46 97 \"},\n\"vba\":{\"x_min\":-118.421875,\"x_max\":597.53125,\"ha\":381,\"o\":\"m 460 574 b 464 574 461 574 462 574 b 488 574 470 574 481 574 b 500 573 491 574 498 574 b 594 503 543 570 588 538 b 597 488 596 498 597 494 b 528 417 597 449 564 417 b 502 423 519 417 510 419 b 465 481 477 434 465 458 b 488 528 465 499 472 516 b 490 530 490 530 490 530 b 490 530 490 530 490 530 b 468 517 488 530 475 523 b 349 340 419 485 377 420 b 347 330 348 334 347 330 b 383 328 347 328 363 328 b 428 326 423 328 424 328 b 442 302 438 320 442 312 b 430 281 442 294 438 285 b 385 276 424 277 426 276 l 377 276 l 332 276 l 330 269 b 178 -117 303 126 250 -9 b 1 -249 129 -194 69 -237 b -20 -251 -6 -251 -13 -251 b -114 -187 -65 -251 -100 -227 b -118 -156 -117 -177 -118 -166 b -51 -84 -118 -116 -91 -84 b -31 -87 -46 -84 -39 -86 b 16 -152 0 -95 16 -124 b -12 -205 16 -173 8 -194 b -16 -208 -14 -206 -16 -208 b -14 -208 -16 -208 -14 -208 b -9 -206 -14 -208 -12 -208 b 74 -124 23 -197 54 -166 b 172 224 98 -79 125 22 b 185 276 178 252 183 274 b 185 276 185 276 185 276 b 141 276 185 276 181 276 b 91 280 96 276 96 276 b 77 302 83 285 77 294 b 91 326 77 312 83 320 b 148 328 95 328 96 328 l 198 330 l 202 341 b 460 574 249 473 351 566 \"},\n\"vbb\":{\"x_min\":0,\"x_max\":288.5625,\"ha\":294,\"o\":\"m 202 341 b 235 341 213 341 225 341 b 261 341 249 341 259 341 b 288 309 276 340 288 326 l 288 309 b 163 -320 288 305 166 -310 b 142 -341 160 -330 153 -337 b 83 -342 140 -342 111 -342 b 21 -341 54 -342 24 -342 b 0 -310 8 -337 0 -324 b 0 -310 0 -310 0 -310 b 123 316 0 -306 118 297 b 144 340 126 327 133 335 b 202 341 147 341 151 341 \"},\n\"vbc\":{\"x_min\":-155.171875,\"x_max\":153.8125,\"ha\":158,\"o\":\"m -8 24 b -1 26 -6 24 -4 26 b 21 12 8 26 17 20 b 27 -8 24 9 24 9 b 144 -303 50 -115 93 -227 b 153 -322 151 -315 152 -317 b 153 -330 153 -324 153 -327 b 129 -355 153 -344 142 -355 b 111 -351 123 -355 117 -353 b 0 -319 76 -330 38 -319 b -100 -344 -35 -319 -69 -327 b -112 -351 -104 -345 -110 -348 b -129 -355 -119 -355 -123 -355 b -155 -328 -144 -355 -155 -344 b -145 -303 -155 -322 -155 -319 b -28 -6 -95 -226 -53 -119 b -8 24 -24 13 -20 19 \"},\n\"vbd\":{\"x_min\":-390.640625,\"x_max\":389.28125,\"ha\":397,\"o\":\"m -378 -2 b -368 -1 -375 -1 -374 -1 b -349 -13 -360 -1 -353 -5 l -348 -16 l -348 -212 l -348 -408 l 0 -408 l 347 -408 l 347 -212 l 347 -16 l 348 -13 b 367 0 352 -5 360 0 b 387 -13 375 0 383 -5 l 389 -16 l 389 -288 l 389 -560 l 387 -564 b 377 -574 385 -569 381 -573 l 372 -577 l 0 -577 l -374 -577 l -378 -574 b -389 -564 -382 -573 -386 -569 l -390 -560 l -390 -288 l -390 -16 l -389 -13 b -378 -2 -386 -8 -382 -4 m -274 -2 b -266 -1 -272 -1 -270 -1 b -246 -13 -257 -1 -250 -5 l -245 -16 l -245 -109 l -245 -202 l 0 -202 l 243 -202 l 243 -109 l 245 -16 l 245 -13 b 265 0 249 -5 257 0 b 284 -13 272 0 280 -5 l 285 -16 l 285 -170 l 285 -324 l 284 -327 b 273 -338 281 -331 279 -335 l 269 -340 l 0 -340 l -270 -340 l -274 -338 b -285 -327 -280 -335 -283 -331 l -287 -324 l -287 -170 l -287 -16 l -285 -13 b -274 -2 -283 -8 -280 -4 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -58 -102 -62 -87 b -13 -9 -62 -44 -44 -16 \"},\n\"vbe\":{\"x_min\":-122.5,\"x_max\":121.140625,\"ha\":124,\"o\":\"m -16 145 b -1 147 -10 147 -5 147 b 119 20 58 147 111 93 b 121 0 119 13 121 6 b 32 -142 121 -66 84 -124 l 24 -144 l 24 -180 b 24 -187 24 -183 24 -184 b 19 -227 24 -222 24 -220 b 0 -237 14 -234 6 -237 b -20 -227 -8 -237 -16 -234 b -25 -187 -25 -220 -25 -222 b -25 -180 -25 -184 -25 -183 l -25 -144 l -34 -142 b -122 0 -85 -124 -122 -66 b -121 20 -122 6 -121 13 b -16 145 -114 84 -70 137 m 12 111 b 0 113 8 113 4 113 b -68 22 -29 113 -61 73 b -69 0 -69 15 -69 6 b -13 -113 -69 -49 -46 -98 b -1 -115 -9 -115 -5 -115 b 63 -40 24 -115 53 -83 b 68 -1 66 -27 68 -15 b 12 111 68 48 46 97 \"},\n\"vbf\":{\"x_min\":-53.078125,\"x_max\":513.140625,\"ha\":485,\"o\":\"m 185 383 b 196 384 187 383 191 384 b 277 334 230 384 259 365 b 288 301 281 324 288 306 b 288 297 288 298 288 297 b 294 302 289 297 291 299 b 394 370 323 338 367 367 b 404 371 398 370 401 371 b 510 272 453 371 498 328 b 513 237 513 262 513 251 b 507 172 513 217 511 192 b 326 -34 487 59 412 -26 b 314 -36 322 -36 318 -36 b 274 -24 298 -36 283 -31 l 265 -16 b 224 44 246 -1 232 20 b 223 49 224 47 223 49 b 223 49 223 49 223 49 b 149 -197 221 48 149 -194 b 149 -198 149 -197 149 -198 b 170 -210 149 -202 155 -205 b 187 -215 174 -210 175 -212 b 204 -231 201 -219 204 -222 b 197 -245 204 -240 202 -242 l 194 -248 l 76 -248 l -42 -248 l -46 -245 b -53 -231 -51 -242 -53 -240 b -35 -215 -53 -222 -49 -217 b -13 -210 -21 -212 -20 -212 b -6 -208 -10 -209 -8 -208 b 0 -206 -6 -208 -2 -206 b 25 -188 13 -201 21 -195 b 163 280 28 -183 163 276 b 166 291 163 283 164 287 b 167 302 167 295 167 299 b 155 324 167 315 161 324 b 155 324 155 324 155 324 b 65 230 125 322 85 280 b 53 215 61 217 58 215 b 51 215 53 215 51 215 b 42 224 46 215 42 217 b 57 263 42 231 47 244 b 140 360 77 305 104 337 b 152 370 144 365 149 369 b 185 383 157 376 172 381 m 374 306 b 366 308 371 308 368 308 b 300 273 348 308 321 294 b 284 254 288 262 287 259 b 280 242 283 249 281 245 b 257 169 279 240 270 213 l 236 98 l 236 93 b 251 48 238 77 243 61 b 279 27 258 37 272 27 b 281 27 279 27 280 27 b 291 31 281 27 287 30 b 396 170 334 52 378 109 b 406 247 402 197 406 224 b 401 277 406 259 405 270 b 374 306 397 290 383 303 \"},\n\"vc0\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m 156 273 b 163 274 159 273 161 274 b 183 262 171 274 179 269 b 185 158 185 259 185 259 l 185 56 l 231 112 b 284 174 277 172 279 172 b 289 174 285 174 288 174 b 299 173 294 174 298 173 b 462 11 303 172 338 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 374 -176 371 -176 b 280 -87 367 -173 345 -152 b 194 0 234 -38 194 0 b 189 -6 194 0 191 -2 l 185 -12 l 185 -147 b 185 -210 185 -173 185 -194 b 179 -292 185 -297 185 -287 b 164 -299 175 -297 170 -299 b 145 -287 156 -299 148 -295 b 144 -174 144 -284 144 -284 l 142 -63 l 100 -117 b 46 -176 57 -170 54 -176 b 42 -176 44 -176 43 -176 b -54 -87 32 -174 38 -180 b -140 0 -102 -38 -140 0 b -209 -86 -141 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -289 -176 b -300 -174 -295 -176 -299 -174 b -464 -12 -304 -173 -340 -137 l -476 0 l -504 -34 b -543 -77 -534 -73 -537 -76 b -549 -79 -545 -79 -547 -79 b -571 -58 -562 -79 -571 -69 b -568 -49 -571 -55 -570 -52 b -393 170 -566 -43 -398 165 b -379 174 -389 173 -383 174 b -370 173 -375 174 -372 174 b -281 86 -367 172 -347 151 b -196 0 -235 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 127 11 -32 172 16 123 l 138 -1 l 141 1 l 144 4 l 144 130 b 145 260 144 256 144 258 b 156 273 147 266 151 270 \"},\n\"vc1\":{\"x_min\":-525.390625,\"x_max\":524.03125,\"ha\":535,\"o\":\"m -42 1067 b 1 1068 -27 1068 -13 1068 b 524 534 285 1068 524 831 b 0 0 524 231 283 0 b -118 12 -38 0 -77 4 b -487 335 -284 51 -424 174 b -525 534 -513 402 -525 469 b -42 1067 -525 802 -325 1042 m 38 1038 b 0 1039 25 1039 12 1039 b -460 725 -198 1039 -386 914 l -461 721 l 0 721 l 460 721 l 458 725 b 38 1038 390 899 224 1022 m 472 685 l 470 692 l 0 692 l -470 692 l -473 685 b -496 535 -488 638 -496 587 b -472 377 -496 483 -488 428 l -470 374 l 0 374 l 470 374 l 470 377 b 495 535 487 428 495 483 b 472 685 495 587 488 638 m 458 344 l 460 345 l 0 345 l -461 345 l -460 344 b -402 238 -454 323 -424 269 b 0 27 -303 98 -152 27 b 401 238 151 27 302 98 b 458 344 423 269 453 323 \"},\n\"vc2\":{\"x_min\":0,\"x_max\":337.5625,\"ha\":344,\"o\":\"m 230 535 b 239 537 232 537 234 537 b 258 524 247 537 254 533 l 259 521 l 259 390 l 259 258 l 285 265 b 318 270 302 269 311 270 b 336 259 328 270 332 267 b 337 208 336 256 337 233 b 336 158 337 184 336 159 b 302 140 332 148 329 147 b 259 130 266 131 259 130 b 259 65 259 130 259 104 b 259 20 259 51 259 36 l 259 -88 l 285 -81 b 318 -76 302 -77 311 -76 b 332 -81 325 -76 328 -77 b 337 -123 336 -87 337 -86 l 337 -138 l 337 -154 b 332 -195 337 -191 336 -190 b 281 -210 328 -199 328 -199 b 262 -216 272 -213 264 -216 l 259 -216 l 259 -349 l 259 -483 l 258 -487 b 239 -499 254 -495 246 -499 b 220 -487 231 -499 223 -495 l 219 -483 l 217 -355 l 217 -227 l 216 -227 l 194 -233 l 152 -244 b 129 -249 140 -247 130 -249 b 127 -410 127 -249 127 -258 b 127 -576 127 -548 127 -573 b 126 -578 126 -577 126 -578 b 127 -580 126 -578 126 -580 b 133 -578 129 -580 130 -578 b 186 -557 152 -576 170 -569 b 197 -555 190 -556 194 -555 b 215 -573 206 -555 215 -562 l 215 -574 l 215 -580 l 209 -588 b 126 -802 172 -648 141 -727 b 107 -823 123 -817 118 -823 b 87 -798 95 -823 91 -817 b 5 -588 69 -718 40 -648 l 0 -580 l 0 -574 b 0 -573 0 -574 0 -574 b 16 -555 0 -562 6 -555 b 27 -557 20 -555 24 -556 b 81 -578 44 -569 62 -576 b 87 -580 84 -578 85 -580 b 88 -578 88 -580 88 -580 b 87 -576 88 -578 88 -577 b 87 -416 87 -573 87 -549 b 85 -260 87 -270 87 -260 b 85 -260 85 -260 85 -260 b 32 -273 74 -263 35 -273 b 13 -260 24 -273 16 -267 b 12 -209 12 -256 12 -256 l 12 -162 l 13 -158 b 74 -134 17 -148 17 -148 l 87 -131 l 87 -22 b 85 86 87 79 87 86 b 85 86 85 86 85 86 b 32 74 74 83 35 74 b 13 86 24 74 16 79 b 12 137 12 90 12 90 l 12 184 l 13 188 b 73 212 17 198 17 198 l 87 215 l 87 348 l 87 481 l 88 485 b 107 498 92 492 99 498 b 117 495 110 498 114 496 b 126 485 121 494 125 489 l 127 481 l 127 353 l 127 226 l 133 226 b 172 235 136 227 153 231 l 212 247 l 217 248 l 217 384 l 219 521 l 220 524 b 230 535 221 528 225 533 m 217 9 b 217 119 217 70 217 119 l 217 119 b 194 113 217 119 206 116 l 152 102 b 129 97 140 99 130 97 b 127 -12 127 97 127 91 l 127 -122 l 133 -120 b 172 -111 136 -119 153 -115 l 212 -101 l 217 -98 l 217 9 \"},\n\"vc3\":{\"x_min\":-10.890625,\"x_max\":299.4375,\"ha\":294,\"o\":\"m 136 460 b 142 462 137 462 140 462 b 166 449 152 462 161 456 b 171 428 168 446 168 445 b 288 131 194 322 238 209 b 298 115 295 120 296 117 b 299 106 298 112 299 109 b 273 81 299 91 287 81 b 255 86 268 81 261 83 b 155 116 225 104 183 116 l 152 116 l 149 108 b 141 83 148 102 144 91 b 134 48 137 69 134 58 b 149 9 134 34 140 24 b 153 -1 152 5 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 147 -11 b 122 2 138 -11 133 -6 b 95 61 104 20 95 38 b 107 108 95 74 99 90 b 108 113 107 111 108 112 b 107 113 108 113 108 113 b 102 113 106 113 104 113 b 31 86 76 108 53 98 b 14 80 24 81 20 80 b -10 106 0 80 -10 91 b 0 131 -10 115 -9 116 b 115 430 49 209 91 317 b 136 460 119 451 123 456 \"}\n},\n\"cssFontWeight\":\"normal\",\"ascender\":1903,\"underlinePosition\":-125,\"cssFontStyle\":\"normal\",\"boundingBox\":{\"yMin\":-2065.375,\"xMin\":-695.53125,\"yMax\":1901.578125,\"xMax\":1159.671875 },\n\"resolution\":1000,\"original_font_information\":{\"postscript_name\":\"Gonville-18\",\"version_string\":\"Version 0.1.8904 \",\"vendor_url\":\"\",\"full_font_name\":\"Gonville-18\",\"font_family_name\":\"Gonville-18\",\"copyright\":\"No copyright is claimed on this font file.\",\"description\":\"\",\"trademark\":\"\",\"designer\":\"\",\"designer_url\":\"\",\"unique_font_identifier\":\"FontForge 2.0 :Gonville-18 :17-3-2010\",\"license_url\":\"\",\"license_description\":\"\",\"manufacturer_name\":\"\",\"font_sub_family_name\":\"18\"},\n\"descender\":-2066,\"familyName\":\"Gonville-18\",\"lineHeight\":4093,\"underlineThickness\":50 \n};\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/fonts/vexflow_font.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Support for different rendering contexts: Canvas, Raphael\n\n/* global document: false */\n\nimport { CanvasContext } from './canvascontext';\nimport { RaphaelContext } from './raphaelcontext';\nimport { SVGContext } from './svgcontext';\nimport { Vex } from './vex';\n\nlet lastContext = null;\n\nexport class Renderer {\n  static get Backends() {\n    return {\n      CANVAS: 1,\n      RAPHAEL: 2,\n      SVG: 3,\n      VML: 4,\n    };\n  }\n\n  // End of line types\n  static get LineEndType() {\n    return {\n      NONE: 1, // No leg\n      UP: 2,   // Upward leg\n      DOWN: 3, // Downward leg\n    };\n  }\n\n  // Set this to true if you're using VexFlow inside a runtime\n  // that does not allow modifiying canvas objects. There is a small\n  // performance degradation due to the extra indirection.\n  static get USE_CANVAS_PROXY() {\n    return false;\n  }\n\n  static get lastContext() {\n    return lastContext;\n  }\n  static set lastContext(ctx) {\n    lastContext = ctx;\n  }\n\n  static buildContext(sel, backend, width, height, background) {\n    const renderer = new Renderer(sel, backend);\n    if (width && height) { renderer.resize(width, height); }\n\n    if (!background) background = '#FFF';\n    const ctx = renderer.getContext();\n    ctx.setBackgroundFillStyle(background);\n    Renderer.lastContext = ctx;\n    return ctx;\n  }\n\n  static getCanvasContext(sel, width, height, background) {\n    return Renderer.buildContext(sel, Renderer.Backends.CANVAS, width, height, background);\n  }\n\n  static getRaphaelContext(sel, width, height, background) {\n    return Renderer.buildContext(sel, Renderer.Backends.RAPHAEL, width, height, background);\n  }\n\n  static getSVGContext(sel, width, height, background) {\n    return Renderer.buildContext(sel, Renderer.Backends.SVG, width, height, background);\n  }\n\n  static bolsterCanvasContext(ctx) {\n    if (Renderer.USE_CANVAS_PROXY) {\n      return new CanvasContext(ctx);\n    }\n\n    const methodNames = [\n      'clear', 'setFont', 'setRawFont', 'setFillStyle', 'setBackgroundFillStyle',\n      'setStrokeStyle', 'setShadowColor', 'setShadowBlur', 'setLineWidth',\n      'setLineCap', 'setLineDash', 'openGroup', 'closeGroup', 'getGroup',\n    ];\n\n    ctx.vexFlowCanvasContext = ctx;\n\n    methodNames.forEach(methodName => {\n      ctx[methodName] = ctx[methodName] || CanvasContext.prototype[methodName];\n    });\n\n    return ctx;\n  }\n\n  // Draw a dashed line (horizontal, vertical or diagonal\n  // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n  // setting the second number to 0 draws a solid line.\n  static drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n    context.beginPath();\n\n    const dx = toX - fromX;\n    const dy = toY - fromY;\n    const angle = Math.atan2(dy, dx);\n    let x = fromX;\n    let y = fromY;\n    context.moveTo(fromX, fromY);\n    let idx = 0;\n    let draw = true;\n    while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n      const dashLength = dashPattern[idx++ % dashPattern.length];\n      const nx = x + (Math.cos(angle) * dashLength);\n      x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n      const ny = y + (Math.sin(angle) * dashLength);\n      y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n      if (draw) {\n        context.lineTo(x, y);\n      } else {\n        context.moveTo(x, y);\n      }\n      draw = !draw;\n    }\n\n    context.closePath();\n    context.stroke();\n  }\n\n  constructor(sel, backend) {\n    // Verify selector\n    this.sel = sel;\n    if (!this.sel) {\n      throw new Vex.RERR('BadArgument', 'Invalid selector for renderer.');\n    }\n\n    // Get element from selector\n    this.element = document.getElementById(sel);\n    if (!this.element) this.element = sel;\n\n    // Verify backend and create context\n    this.ctx = null;\n    this.paper = null;\n    this.backend = backend;\n    if (this.backend === Renderer.Backends.CANVAS) {\n      // Create context.\n      if (!this.element.getContext) {\n        throw new Vex.RERR('BadElement', `Can't get canvas context from element: ${sel}`);\n      }\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n    } else if (this.backend === Renderer.Backends.RAPHAEL) {\n      this.ctx = new RaphaelContext(this.element);\n    } else if (this.backend === Renderer.Backends.SVG) {\n      this.ctx = new SVGContext(this.element);\n    } else {\n      throw new Vex.RERR('InvalidBackend', `No support for backend: ${this.backend}`);\n    }\n  }\n\n  resize(width, height) {\n    if (this.backend === Renderer.Backends.CANVAS) {\n      if (!this.element.getContext) {\n        throw new Vex.RERR('BadElement', `Can't get canvas context from element: ${this.sel}`);\n      }\n      this.element.width = width;\n      this.element.height = height;\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n    } else {\n      this.ctx.resize(width, height);\n    }\n\n    return this;\n  }\n\n  getContext() { return this.ctx; }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/renderer.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// A rendering context for the Raphael backend.\n//\n// Copyright Mohit Cheppudira 2010\n\n/** @constructor */\nexport class CanvasContext {\n  static get WIDTH() {\n    return 600;\n  }\n  static get HEIGHT() {\n    return 400;\n  }\n\n  constructor(context) {\n    // Use a name that is unlikely to clash with a canvas context\n    // property\n    this.vexFlowCanvasContext = context;\n    if (!context.canvas) {\n      this.canvas = {\n        width: CanvasContext.WIDTH,\n        height: CanvasContext.HEIGHT,\n      };\n    } else {\n      this.canvas = context.canvas;\n    }\n  }\n\n  clear() {\n    this.vexFlowCanvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  // Containers not implemented\n  openGroup() {}\n  closeGroup() {}\n  add() {}\n\n  setFont(family, size, weight) {\n    this.vexFlowCanvasContext.font = (weight || '') + ' ' + size + 'pt ' + family;\n    return this;\n  }\n\n  setRawFont(font) {\n    this.vexFlowCanvasContext.font = font;\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.vexFlowCanvasContext.fillStyle = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_fillStyle = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.vexFlowCanvasContext.strokeStyle = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.vexFlowCanvasContext.shadowColor = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.vexFlowCanvasContext.shadowBlur = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.vexFlowCanvasContext.lineWidth = width;\n    return this;\n  }\n\n  setLineCap(cap_type) {\n    this.vexFlowCanvasContext.lineCap = cap_type;\n    return this;\n  }\n\n  // setLineDash: is the one native method in a canvas context\n  // that begins with set, therefore we don't bolster the method\n  // if it already exists (see renderer.bolsterCanvasContext).\n  // If it doesn't exist, we bolster it and assume it's looking for\n  // a ctx.lineDash method, as previous versions of VexFlow\n  // expected.\n  setLineDash(dash) {\n    this.vexFlowCanvasContext.lineDash = dash;\n    return this;\n  }\n\n  scale(x, y) {\n    return this.vexFlowCanvasContext.scale(parseFloat(x), parseFloat(y));\n  }\n\n  resize(width, height) {\n    return this.vexFlowCanvasContext.resize(\n        parseInt(width, 10), parseInt(height, 10));\n  }\n\n  rect(x, y, width, height) {\n    return this.vexFlowCanvasContext.rect(x, y, width, height);\n  }\n\n  fillRect(x, y, width, height) {\n    return this.vexFlowCanvasContext.fillRect(x, y, width, height);\n  }\n\n  clearRect(x, y, width, height) {\n    return this.vexFlowCanvasContext.clearRect(x, y, width, height);\n  }\n\n  beginPath() {\n    return this.vexFlowCanvasContext.beginPath();\n  }\n\n  moveTo(x, y) {\n    return this.vexFlowCanvasContext.moveTo(x, y);\n  }\n\n  lineTo(x, y) {\n    return this.vexFlowCanvasContext.lineTo(x, y);\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    return this.vexFlowCanvasContext.bezierCurveTo(x1, y1, x2, y2, x, y);\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    return this.vexFlowCanvasContext.quadraticCurveTo(x1, y1, x, y);\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    return this.vexFlowCanvasContext.arc(x, y, radius, startAngle, endAngle, antiClockwise);\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    return this.vexFlowCanvasContext.glow();\n  }\n\n  fill() {\n    return this.vexFlowCanvasContext.fill();\n  }\n\n  stroke() {\n    return this.vexFlowCanvasContext.stroke();\n  }\n\n  closePath() {\n    return this.vexFlowCanvasContext.closePath();\n  }\n\n  measureText(text) {\n    return this.vexFlowCanvasContext.measureText(text);\n  }\n\n  fillText(text, x, y) {\n    return this.vexFlowCanvasContext.fillText(text, x, y);\n  }\n\n  save() {\n    return this.vexFlowCanvasContext.save();\n  }\n\n  restore() {\n    return this.vexFlowCanvasContext.restore();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/canvascontext.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A rendering context for the Raphael backend.\n//\n// ## Warning: Deprecated for SVGContext\n// Except in instances where SVG support for IE < 9.0 is\n// needed, SVGContext is recommended.\n\nexport class RaphaelContext {\n  constructor(element) {\n    this.element = element;\n    this.paper = Raphael(element); // eslint-disable-line\n    this.path = '';\n    this.pen = { x: 0, y: 0 };\n    this.lineWidth = 1.0;\n    this.state = {\n      scale: { x: 1, y: 1 },\n      font_family: 'Arial',\n      font_size: 8,\n      font_weight: 800,\n    };\n\n    this.attributes = {\n      'stroke-width': 0.3,\n      'fill': 'black',\n      'stroke': 'black',\n      'font': '10pt Arial',\n    };\n\n    this.background_attributes = {\n      'stroke-width': 0,\n      'fill': 'white',\n      'stroke': 'white',\n      'font': '10pt Arial',\n    };\n\n    this.shadow_attributes = {\n      width: 0,\n      color: 'black',\n    };\n\n    this.state_stack = [];\n  }\n\n  // Containers not implemented\n  openGroup() {}\n  closeGroup() {}\n  add() {}\n\n  setFont(family, size, weight) {\n    this.state.font_family = family;\n    this.state.font_size = size;\n    this.state.font_weight = weight;\n    this.attributes.font = (this.state.font_weight || '') + ' ' +\n      (this.state.font_size * this.state.scale.x) + 'pt ' +\n      this.state.font_family;\n    return this;\n  }\n\n  setRawFont(font) {\n    this.attributes.font = font;\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.attributes.fill = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_attributes.fill = style;\n    this.background_attributes.stroke = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.attributes.stroke = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.shadow_attributes.color = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.shadow_attributes.width = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.attributes['stroke-width'] = width;\n    this.lineWidth = width;\n  }\n\n  // Empty because there is no equivalent in SVG\n  setLineDash() { return this; }\n  setLineCap() { return this; }\n\n  scale(x, y) {\n    this.state.scale = { x, y };\n    // The scale() method is deprecated as of Raphael.JS 2.0, and\n    // can no longer be used as an option in an Element.attr() call.\n    // It is preserved here for users running earlier versions of\n    // Raphael.JS, though it has no effect on the SVG output in\n    // Raphael 2 and higher.\n    this.attributes.transform = 'S' + x + ',' + y + ',0,0';\n    this.attributes.scale = x + ',' + y + ',0,0';\n    this.attributes.font = this.state.font_size * this.state.scale.x + 'pt ' +\n      this.state.font_family;\n    this.background_attributes.transform = 'S' + x + ',' + y + ',0,0';\n    this.background_attributes.font = this.state.font_size *\n      this.state.scale.x + 'pt ' +\n      this.state.font_family;\n    return this;\n  }\n\n  clear() { this.paper.clear(); }\n\n  resize(width, height) {\n    this.element.style.width = width;\n    this.paper.setSize(width, height);\n    return this;\n  }\n\n  // Sets the SVG `viewBox` property, which results in auto scaling images when its container\n  // is resized.\n  //\n  // Usage: `ctx.setViewBox(\"0 0 600 400\")`\n  setViewBox(viewBox) {\n    this.paper.canvas.setAttribute('viewBox', viewBox);\n  }\n\n  rect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5).\n      attr(this.attributes).\n      attr('fill', 'none').\n      attr('stroke-width', this.lineWidth);\n    return this;\n  }\n\n  fillRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5).attr(this.attributes);\n    return this;\n  }\n\n  clearRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5).\n      attr(this.background_attributes);\n    return this;\n  }\n\n  beginPath() {\n    this.path = '';\n    this.pen.x = 0;\n    this.pen.y = 0;\n    return this;\n  }\n\n  moveTo(x, y) {\n    this.path += 'M' + x + ',' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  lineTo(x, y) {\n    this.path += 'L' + x + ',' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this.path += 'C' +\n      x1 + ',' +\n      y1 + ',' +\n      x2 + ',' +\n      y2 + ',' +\n      x + ',' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    this.path += 'Q' +\n      x1 + ',' +\n      y1 + ',' +\n      x + ',' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    function normalizeAngle(angle) {\n      while (angle < 0) {\n        angle += Math.PI * 2;\n      }\n\n      while (angle > Math.PI * 2) {\n        angle -= Math.PI * 2;\n      }\n      return angle;\n    }\n\n    startAngle = normalizeAngle(startAngle);\n    endAngle = normalizeAngle(endAngle);\n\n    if (startAngle > endAngle) {\n      const tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n      antiClockwise = !antiClockwise;\n    }\n\n    const delta = endAngle - startAngle;\n\n    if (delta > Math.PI) {\n      this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n      this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n    } else {\n      this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n    }\n    return this;\n  }\n\n  arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n    const x1 = x + radius * Math.cos(startAngle);\n    const y1 = y + radius * Math.sin(startAngle);\n\n    const x2 = x + radius * Math.cos(endAngle);\n    const y2 = y + radius * Math.sin(endAngle);\n\n    let largeArcFlag = 0;\n    let sweepFlag = 0;\n    if (antiClockwise) {\n      sweepFlag = 1;\n      if (endAngle - startAngle < Math.PI) {\n        largeArcFlag = 1;\n      }\n    } else if (endAngle - startAngle > Math.PI) {\n      largeArcFlag = 1;\n    }\n\n    this.path += 'M' + x1 + ',' + y1 + ',A' +\n      radius + ',' + radius + ',0,' + largeArcFlag + ',' + sweepFlag + ',' +\n      x2 + ',' + y2 + 'M' + this.pen.x + ',' + this.pen.y;\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    const out = this.paper.set();\n    if (this.shadow_attributes.width > 0) {\n      const sa = this.shadow_attributes;\n      const num_paths = sa.width / 2;\n      for (let i = 1; i <= num_paths; i++) {\n        out.push(this.paper.path(this.path).attr({\n          stroke: sa.color,\n          'stroke-linejoin': 'round',\n          'stroke-linecap': 'round',\n          'stroke-width': +(sa.width / num_paths * i).toFixed(3),\n          opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n          // See note in this.scale(): In Raphael the scale() method\n          // is deprecated and removed as of Raphael 2.0 and replaced\n          // by the transform() method.  It is preserved here for\n          // users with earlier versions of Raphael, but has no effect\n          // on the output SVG in Raphael 2.0+.\n          transform: this.attributes.transform,\n          scale: this.attributes.scale,\n        }));\n      }\n    }\n    return out;\n  }\n\n  fill() {\n    const elem = this.paper.path(this.path).\n      attr(this.attributes).\n      attr('stroke-width', 0);\n    this.glow(elem);\n    return this;\n  }\n\n  stroke() {\n    // The first line of code below is, unfortunately, a bit of a hack:\n    // Raphael's transform() scaling does not scale the stroke-width, so\n    // in order to scale a stroke, we have to manually scale the\n    // stroke-width.\n    //\n    // This works well so long as the X & Y states for this.scale() are\n    // relatively similar.  However, if they are very different, we\n    // would expect horizontal and vertical lines to have different\n    // stroke-widths.\n    //\n    // In the future, if we want to support very divergent values for\n    // horizontal and vertical scaling, we may want to consider\n    // implementing SVG scaling with properties of the SVG viewBox &\n    // viewPort and removing it entirely from the Element.attr() calls.\n    // This would more closely parallel the approach taken in\n    // canvascontext.js as well.\n\n    const strokeWidth = this.lineWidth * (this.state.scale.x + this.state.scale.y) / 2;\n    const elem = this.paper.path(this.path).\n      attr(this.attributes).\n      attr('fill', 'none').\n      attr('stroke-width', strokeWidth);\n    this.glow(elem);\n    return this;\n  }\n\n  closePath() {\n    this.path += 'Z';\n    return this;\n  }\n\n  measureText(text) {\n    const txt = this.paper.text(0, 0, text).\n      attr(this.attributes).\n      attr('fill', 'none').\n      attr('stroke', 'none');\n    const bounds = txt.getBBox();\n    txt.remove();\n\n    return {\n      width: bounds.width,\n      height: bounds.height,\n    };\n  }\n\n  fillText(text, x, y) {\n    this.paper\n      .text(\n        x + (this.measureText(text).width / 2),\n        y - (this.state.font_size / (2.25 * this.state.scale.y)),\n        text\n      )\n      .attr(this.attributes);\n\n    return this;\n  }\n\n  save() {\n    // TODO(mmuthanna): State needs to be deep-copied.\n    this.state_stack.push({\n      state: {\n        font_family: this.state.font_family,\n      },\n      attributes: {\n        font: this.attributes.font,\n        fill: this.attributes.fill,\n        stroke: this.attributes.stroke,\n        'stroke-width': this.attributes['stroke-width'],\n      },\n      shadow_attributes: {\n        width: this.shadow_attributes.width,\n        color: this.shadow_attributes.color,\n      },\n    });\n    return this;\n  }\n\n  restore() {\n    // TODO(0xfe): State needs to be deep-restored.\n    const state = this.state_stack.pop();\n    this.state.font_family = state.state.font_family;\n    this.attributes.font = state.attributes.font;\n    this.attributes.fill = state.attributes.fill;\n    this.attributes.stroke = state.attributes.stroke;\n    this.attributes['stroke-width'] = state.attributes['stroke-width'];\n    this.shadow_attributes.width = state.shadow_attributes.width;\n    this.shadow_attributes.color = state.shadow_attributes.color;\n    return this;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/raphaelcontext.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Gregory Ristow (2015)\n\nimport { Vex } from './vex';\n\nexport class SVGContext {\n  constructor(element) {\n    // element is the parent DOM object\n    this.element = element;\n    // Create the SVG in the SVG namespace:\n    this.svgNS = 'http://www.w3.org/2000/svg';\n    const svg = this.create('svg');\n    // Add it to the canvas:\n    this.element.appendChild(svg);\n\n    // Point to it:\n    this.svg = svg;\n    this.groups = [this.svg]; // Create the group stack\n    this.parent = this.svg;\n\n    this.path = '';\n    this.pen = { x: 0, y: 0 };\n    this.lineWidth = 1.0;\n    this.state = {\n      scale: { x: 1, y: 1 },\n      'font-family': 'Arial',\n      'font-size': '8pt',\n      'font-weight': 'normal',\n    };\n\n    this.attributes = {\n      'stroke-width': 0.3,\n      'fill': 'black',\n      'stroke': 'black',\n      'stroke-dasharray': 'none',\n      'font-family': 'Arial',\n      'font-size': '10pt',\n      'font-weight': 'normal',\n      'font-style': 'normal',\n    };\n\n    this.background_attributes = {\n      'stroke-width': 0,\n      'fill': 'white',\n      'stroke': 'white',\n      'stroke-dasharray': 'none',\n      'font-family': 'Arial',\n      'font-size': '10pt',\n      'font-weight': 'normal',\n      'font-style': 'normal',\n    };\n\n    this.shadow_attributes = {\n      width: 0,\n      color: 'black',\n    };\n\n    this.state_stack = [];\n\n    // Test for Internet Explorer\n    this.iePolyfill();\n  }\n\n  create(svgElementType) {\n    return document.createElementNS(this.svgNS, svgElementType);\n  }\n\n  // Allow grouping elements in containers for interactivity.\n  openGroup(cls, id, attrs) {\n    const group = this.create('g');\n    this.groups.push(group);\n    this.parent.appendChild(group);\n    this.parent = group;\n    if (cls) group.setAttribute('class', Vex.Prefix(cls));\n    if (id) group.setAttribute('id', Vex.Prefix(id));\n\n    if (attrs && attrs.pointerBBox) {\n      group.setAttribute('pointer-events', 'bounding-box');\n    }\n    return group;\n  }\n\n  closeGroup() {\n    this.groups.pop();\n    this.parent = this.groups[this.groups.length - 1];\n  }\n\n  add(elem) {\n    this.parent.appendChild(elem);\n  }\n\n  // Tests if the browser is Internet Explorer; if it is,\n  // we do some tricks to improve text layout.  See the\n  // note at ieMeasureTextFix() for details.\n  iePolyfill() {\n    if (typeof(navigator) !== 'undefined') {\n      this.ie = (\n        /MSIE 9/i.test(navigator.userAgent) ||\n        /MSIE 10/i.test(navigator.userAgent) ||\n        /rv:11\\.0/i.test(navigator.userAgent) ||\n        /Trident/i.test(navigator.userAgent)\n      );\n    }\n  }\n\n  // ### Styling & State Methods:\n\n  setFont(family, size, weight) {\n    // Unlike canvas, in SVG italic is handled by font-style,\n    // not weight. So: we search the weight argument and\n    // apply bold and italic to weight and style respectively.\n    let bold = false;\n    let italic = false;\n    let style = 'normal';\n    // Weight might also be a number (200, 400, etc...) so we\n    // test its type to be sure we have access to String methods.\n    if (typeof weight === 'string') {\n        // look for \"italic\" in the weight:\n      if (weight.indexOf('italic') !== -1) {\n        weight = weight.replace(/italic/g, '');\n        italic = true;\n      }\n        // look for \"bold\" in weight\n      if (weight.indexOf('bold') !== -1) {\n        weight = weight.replace(/bold/g, '');\n        bold = true;\n      }\n        // remove any remaining spaces\n      weight = weight.replace(/ /g, '');\n    }\n    weight = bold ? 'bold' : weight;\n    weight = (typeof weight === 'undefined' || weight === '') ? 'normal' : weight;\n\n    style = italic ? 'italic' : style;\n\n    const fontAttributes = {\n      'font-family': family,\n      'font-size': size + 'pt',\n      'font-weight': weight,\n      'font-style': style,\n    };\n\n    // Store the font size so that if the browser is Internet\n    // Explorer we can fix its calculations of text width.\n    this.fontSize = Number(size);\n\n    Vex.Merge(this.attributes, fontAttributes);\n    Vex.Merge(this.state, fontAttributes);\n\n    return this;\n  }\n\n  setRawFont(font) {\n    font = font.trim();\n    // Assumes size first, splits on space -- which is presently\n    // how all existing modules are calling this.\n    const fontArray = font.split(' ');\n\n    this.attributes['font-family'] = fontArray[1];\n    this.state['font-family'] = fontArray[1];\n\n    this.attributes['font-size'] = fontArray[0];\n    this.state['font-size'] = fontArray[0];\n\n    // Saves fontSize for IE polyfill\n    this.fontSize = Number(fontArray[0].match(/\\d+/));\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.attributes.fill = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_attributes.fill = style;\n    this.background_attributes.stroke = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.attributes.stroke = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.shadow_attributes.color = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.shadow_attributes.width = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.attributes['stroke-width'] = width;\n    this.lineWidth = width;\n  }\n\n  // @param array {lineDash} as [dashInt, spaceInt, dashInt, spaceInt, etc...]\n  setLineDash(lineDash) {\n    if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n      lineDash = lineDash.join(', ');\n      this.attributes['stroke-dasharray'] = lineDash;\n      return this;\n    } else {\n      throw new Vex.RERR('ArgumentError', 'lineDash must be an array of integers.');\n    }\n  }\n\n  setLineCap(lineCap) {\n    this.attributes['stroke-linecap'] = lineCap;\n    return this;\n  }\n\n  // ### Sizing & Scaling Methods:\n\n  // TODO (GCR): See note at scale() -- seperate our internal\n  // conception of pixel-based width/height from the style.width\n  // and style.height properties eventually to allow users to\n  // apply responsive sizing attributes to the SVG.\n  resize(width, height) {\n    this.width = width;\n    this.height = height;\n    this.element.style.width = width;\n    const attributes = {\n      width,\n      height,\n    };\n    this.applyAttributes(this.svg, attributes);\n    return this;\n  }\n\n  scale(x, y) {\n    // uses viewBox to scale\n    // TODO (GCR): we may at some point want to distinguish the\n    // style.width / style.height properties that are applied to\n    // the SVG object from our internal conception of the SVG\n    // width/height.  This would allow us to create automatically\n    // scaling SVG's that filled their containers, for instance.\n    //\n    // As this isn't implemented in Canvas or Raphael contexts,\n    // I've left as is for now, but in using the viewBox to\n    // handle internal scaling, am trying to make it possible\n    // for us to eventually move in that direction.\n\n    this.state.scale = { x, y };\n    const visibleWidth = this.width / x;\n    const visibleHeight = this.height / y;\n    this.setViewBox(0, 0, visibleWidth, visibleHeight);\n\n    return this;\n  }\n\n  setViewBox(...args) {\n    // Override for \"x y w h\" style:\n    if (args.length === 1) {\n      const [viewBox] = args;\n      this.svg.setAttribute('viewBox', viewBox);\n    } else {\n      const [xMin, yMin, width, height] = args;\n      const viewBoxString = xMin + ' ' + yMin + ' ' + width + ' ' + height;\n      this.svg.setAttribute('viewBox', viewBoxString);\n    }\n  }\n\n  // ### Drawing helper methods:\n\n  applyAttributes(element, attributes) {\n    Object\n      .keys(attributes)\n      .forEach(propertyName =>\n        element.setAttributeNS(null, propertyName, attributes[propertyName]));\n\n    return element;\n  }\n\n  // ### Shape & Path Methods:\n\n  clear() {\n    // Clear the SVG by removing all inner children.\n\n    // (This approach is usually slightly more efficient\n    // than removing the old SVG & adding a new one to\n    // the container element, since it does not cause the\n    // container to resize twice.  Also, the resize\n    // triggered by removing the entire SVG can trigger\n    // a touchcancel event when the element resizes away\n    // from a touch point.)\n\n    while (this.svg.lastChild) {\n      this.svg.removeChild(this.svg.lastChild);\n    }\n\n    // Replace the viewbox attribute we just removed:\n    this.scale(this.state.scale.x, this.state.scale.y);\n  }\n\n  // ## Rectangles:\n\n  rect(x, y, width, height, attributes) {\n    // Avoid invalid negative height attribs by\n    // flipping the rectangle on its head:\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    // Create the rect & style it:\n    const rectangle = this.create('rect');\n    if (typeof attributes === 'undefined') {\n      attributes = {\n        fill: 'none',\n        'stroke-width': this.lineWidth,\n        stroke: 'black',\n      };\n    }\n\n    Vex.Merge(attributes, {\n      x,\n      y,\n      width,\n      height,\n    });\n\n    this.applyAttributes(rectangle, attributes);\n\n    this.add(rectangle);\n    return this;\n  }\n\n  fillRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    this.rect(x, y, width, height, this.attributes);\n    return this;\n  }\n\n  clearRect(x, y, width, height) {\n    // TODO(GCR): Improve implementation of this...\n    // Currently it draws a box of the background color, rather\n    // than creating alpha through lower z-levels.\n    //\n    // See the implementation of this in SVGKit:\n    // http://sourceforge.net/projects/svgkit/\n    // as a starting point.\n    //\n    // Adding a large number of transform paths (as we would\n    // have to do) could be a real performance hit.  Since\n    // tabNote seems to be the only module that makes use of this\n    // it may be worth creating a seperate tabStave that would\n    // draw lines around locations of tablature fingering.\n    //\n\n    this.rect(x, y, width, height, this.background_attributes);\n    return this;\n  }\n\n  // ## Paths:\n\n  beginPath() {\n    this.path = '';\n    this.pen.x = 0;\n    this.pen.y = 0;\n    return this;\n  }\n\n  moveTo(x, y) {\n    this.path += 'M' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  lineTo(x, y) {\n    this.path += 'L' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this.path += 'C' +\n      x1 + ' ' +\n      y1 + ',' +\n      x2 + ' ' +\n      y2 + ',' +\n      x + ' ' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    this.path += 'Q' +\n      x1 + ' ' +\n      y1 + ',' +\n      x + ' ' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    function normalizeAngle(angle) {\n      while (angle < 0) {\n        angle += Math.PI * 2;\n      }\n\n      while (angle > Math.PI * 2) {\n        angle -= Math.PI * 2;\n      }\n      return angle;\n    }\n\n    startAngle = normalizeAngle(startAngle);\n    endAngle = normalizeAngle(endAngle);\n\n    if (startAngle > endAngle) {\n      const tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n      antiClockwise = !antiClockwise;\n    }\n\n    const delta = endAngle - startAngle;\n\n    if (delta > Math.PI) {\n      this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n      this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n    } else {\n      this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n    }\n    return this;\n  }\n\n  arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n    const x1 = x + radius * Math.cos(startAngle);\n    const y1 = y + radius * Math.sin(startAngle);\n\n    const x2 = x + radius * Math.cos(endAngle);\n    const y2 = y + radius * Math.sin(endAngle);\n\n    let largeArcFlag = 0;\n    let sweepFlag = 0;\n    if (antiClockwise) {\n      sweepFlag = 1;\n      if (endAngle - startAngle < Math.PI) {\n        largeArcFlag = 1;\n      }\n    } else if (endAngle - startAngle > Math.PI) {\n      largeArcFlag = 1;\n    }\n\n    this.path += 'M' + x1 + ' ' + y1 + ' A' +\n      radius + ' ' + radius + ' 0 ' + largeArcFlag + ' ' + sweepFlag + ' ' +\n      x2 + ' ' + y2 + 'M' + this.pen.x + ' ' + this.pen.y;\n  }\n\n  closePath() {\n    this.path += 'Z';\n\n    return this;\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    // Calculate the width & paths of the glow:\n    if (this.shadow_attributes.width > 0) {\n      const sa = this.shadow_attributes;\n      const num_paths = sa.width / 2;\n      // Stroke at varying widths to create effect of gaussian blur:\n      for (let i = 1; i <= num_paths; i++) {\n        const attributes = {\n          stroke: sa.color,\n          'stroke-linejoin': 'round',\n          'stroke-linecap': 'round',\n          'stroke-width': +((sa.width * 0.4) / num_paths * i).toFixed(3),\n          opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n        };\n\n        const path = this.create('path');\n        attributes.d = this.path;\n        this.applyAttributes(path, attributes);\n        this.add(path);\n      }\n    }\n    return this;\n  }\n\n  fill(attributes) {\n    // If our current path is set to glow, make it glow\n    this.glow();\n\n    const path = this.create('path');\n    if (typeof attributes === 'undefined') {\n      attributes = {};\n      Vex.Merge(attributes, this.attributes);\n      attributes.stroke = 'none';\n    }\n\n    attributes.d = this.path;\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  stroke() {\n    // If our current path is set to glow, make it glow.\n    this.glow();\n\n    const path = this.create('path');\n    const attributes = {};\n    Vex.Merge(attributes, this.attributes);\n    attributes.fill = 'none';\n    attributes['stroke-width'] = this.lineWidth;\n    attributes.d = this.path;\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  // ## Text Methods:\n  measureText(text) {\n    const txt = this.create('text');\n    if (typeof(txt.getBBox) !== 'function') {\n      return { x: 0, y: 0, width: 0, height: 0 };\n    }\n\n    txt.textContent = text;\n    this.applyAttributes(txt, this.attributes);\n\n    // Temporarily add it to the document for measurement.\n    this.svg.appendChild(txt);\n\n    let bbox = txt.getBBox();\n    if (this.ie && text !== '' && this.attributes['font-style'] === 'italic') {\n      bbox = this.ieMeasureTextFix(bbox, text);\n    }\n\n    this.svg.removeChild(txt);\n    return bbox;\n  }\n\n  ieMeasureTextFix(bbox) {\n    // Internet Explorer over-pads text in italics,\n    // resulting in giant width estimates for measureText.\n    // To fix this, we use this formula, tested against\n    // ie 11:\n    // overestimate (in pixels) = FontSize(in pt) * 1.196 + 1.96\n    // And then subtract the overestimate from calculated width.\n\n    const fontSize = Number(this.fontSize);\n    const m = 1.196;\n    const b = 1.9598;\n    const widthCorrection = (m * fontSize) + b;\n    const width = bbox.width - widthCorrection;\n    const height = bbox.height - 1.5;\n\n    // Get non-protected copy:\n    const box = {\n      x: bbox.x,\n      y: bbox.y,\n      width,\n      height,\n    };\n\n    return box;\n  }\n\n  fillText(text, x, y) {\n    const attributes = {};\n    Vex.Merge(attributes, this.attributes);\n    attributes.stroke = 'none';\n    attributes.x = x;\n    attributes.y = y;\n\n    const txt = this.create('text');\n    txt.textContent = text;\n    this.applyAttributes(txt, attributes);\n    this.add(txt);\n  }\n\n  save() {\n    // TODO(mmuthanna): State needs to be deep-copied.\n    this.state_stack.push({\n      state: {\n        'font-family': this.state['font-family'],\n        'font-weight': this.state['font-weight'],\n        'font-style': this.state['font-style'],\n        'font-size': this.state['font-size'],\n      },\n      attributes: {\n        'font-family': this.attributes['font-family'],\n        'font-weight': this.attributes['font-weight'],\n        'font-style': this.attributes['font-style'],\n        'font-size': this.attributes['font-size'],\n        fill: this.attributes.fill,\n        stroke: this.attributes.stroke,\n        'stroke-width': this.attributes['stroke-width'],\n        'stroke-dasharray': this.attributes['stroke-dasharray'],\n      },\n      shadow_attributes: {\n        width: this.shadow_attributes.width,\n        color: this.shadow_attributes.color,\n      },\n    });\n    return this;\n  }\n\n  restore() {\n    // TODO(0xfe): State needs to be deep-restored.\n    const state = this.state_stack.pop();\n    this.state['font-family'] = state.state['font-family'];\n    this.state['font-weight'] = state.state['font-weight'];\n    this.state['font-style'] = state.state['font-style'];\n    this.state['font-size'] = state.state['font-size'];\n\n    this.attributes['font-family'] = state.attributes['font-family'];\n    this.attributes['font-weight'] = state.attributes['font-weight'];\n    this.attributes['font-style'] = state.attributes['font-style'];\n    this.attributes['font-size'] = state.attributes['font-size'];\n\n    this.attributes.fill = state.attributes.fill;\n    this.attributes.stroke = state.attributes.stroke;\n    this.attributes['stroke-width'] = state.attributes['stroke-width'];\n    this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n\n    this.shadow_attributes.width = state.shadow_attributes.width;\n    this.shadow_attributes.color = state.shadow_attributes.color;\n    return this;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/svgcontext.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the formatting and layout algorithms that are used\n// to position notes in a voice. The algorithm can align multiple voices both\n// within a stave, and across multiple staves.\n//\n// To do this, the formatter breaks up voices into a grid of rational-valued\n// `ticks`, to which each note is assigned. Then, minimum widths are assigned\n// to each tick based on the widths of the notes and modifiers in that tick. This\n// establishes the smallest amount of space required for each tick.\n//\n// Finally, the formatter distributes the left over space proportionally to\n// all the ticks, setting the `x` values of the notes in each tick.\n//\n// See `tests/formatter_tests.js` for usage examples. The helper functions included\n// here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n\nimport { Vex } from './vex';\nimport { Beam } from './beam';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\nimport { Voice } from './voice';\nimport { StaveConnector } from './staveconnector';\nimport { StaveNote } from './stavenote';\nimport { Note } from './note';\nimport { ModifierContext } from './modifiercontext';\nimport { TickContext } from './tickcontext';\n\n// To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\nfunction L(...args) { if (Formatter.DEBUG) Vex.L('Vex.Flow.Formatter', args); }\n\n// Helper function to locate the next non-rest note(s).\nfunction lookAhead(notes, restLine, i, compare) {\n  // If no valid next note group, nextRestLine is same as current.\n  let nextRestLine = restLine;\n\n  // Get the rest line for next valid non-rest note group.\n  for (i += 1; i < notes.length; i += 1) {\n    const note = notes[i];\n    if (!note.isRest() && !note.shouldIgnoreTicks()) {\n      nextRestLine = note.getLineForRest();\n      break;\n    }\n  }\n\n  // Locate the mid point between two lines.\n  if (compare && restLine !== nextRestLine) {\n    const top = Math.max(restLine, nextRestLine);\n    const bot = Math.min(restLine, nextRestLine);\n    nextRestLine = Vex.MidLine(top, bot);\n  }\n  return nextRestLine;\n}\n\n// Take an array of `voices` and place aligned tickables in the same context. Returns\n// a mapping from `tick` to `ContextType`, a list of `tick`s, and the resolution\n// multiplier.\n//\n// Params:\n// * `voices`: Array of `Voice` instances.\n// * `ContextType`: A context class (e.g., `ModifierContext`, `TickContext`)\n// * `addToContext`: Function to add tickable to context.\nfunction createContexts(voices, ContextType, addToContext) {\n  if (!voices || !voices.length) {\n    throw new Vex.RERR('BadArgument', 'No voices to format');\n  }\n\n  // Find out highest common multiple of resolution multipliers.\n  // The purpose of this is to find out a common denominator\n  // for all fractional tick values in all tickables of all voices,\n  // so that the values can be expanded and the numerator used\n  // as an integer tick value.\n  const totalTicks = voices[0].getTotalTicks();\n  const resolutionMultiplier = voices.reduce((resolutionMultiplier, voice) => {\n    if (!voice.getTotalTicks().equals(totalTicks)) {\n      throw new Vex.RERR(\n        'TickMismatch', 'Voices should have same total note duration in ticks.'\n       );\n    }\n\n    if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n      throw new Vex.RERR(\n        'IncompleteVoice', 'Voice does not have enough notes.'\n      );\n    }\n\n    return Math.max(\n      resolutionMultiplier,\n      Fraction.LCM(resolutionMultiplier, voice.getResolutionMultiplier())\n    );\n  }, 1);\n\n  // Initialize tick maps.\n  const tickToContextMap = {};\n  const tickList = [];\n  const contexts = [];\n\n  // For each voice, extract notes and create a context for every\n  // new tick that hasn't been seen before.\n  voices.forEach(voice => {\n    // Use resolution multiplier as denominator to expand ticks\n    // to suitable integer values, so that no additional expansion\n    // of fractional tick values is needed.\n    const ticksUsed = new Fraction(0, resolutionMultiplier);\n\n    voice.getTickables().forEach(tickable => {\n      const integerTicks = ticksUsed.numerator;\n\n      // If we have no tick context for this tick, create one.\n      if (!tickToContextMap[integerTicks]) {\n        const newContext = new ContextType();\n        contexts.push(newContext);\n        tickToContextMap[integerTicks] = newContext;\n      }\n\n      // Add this tickable to the TickContext.\n      addToContext(tickable, tickToContextMap[integerTicks]);\n\n      // Maintain a sorted list of tick contexts.\n      tickList.push(integerTicks);\n      ticksUsed.add(tickable.getTicks());\n    });\n  });\n\n  return {\n    map: tickToContextMap,\n    array: contexts,\n    list: Vex.SortAndUnique(tickList, (a, b) => a - b, (a, b) => a === b),\n    resolutionMultiplier,\n  };\n}\n\nexport class Formatter {\n  // Helper function to layout \"notes\" one after the other without\n  // regard for proportions. Useful for tests and debugging.\n  static SimpleFormat(notes, x = 0, { paddingBetween = 10 } = {}) {\n    notes.reduce((x, note) => {\n      note.addToModifierContext(new ModifierContext());\n      const tick = new TickContext().addTickable(note).preFormat();\n      const extra = tick.getExtraPx();\n      tick.setX(x + extra.left);\n\n      return x + tick.getWidth() + extra.right + paddingBetween;\n    }, x);\n  }\n\n  // Helper function to plot formatter debug info.\n  static plotDebugging(ctx, formatter, xPos, y1, y2) {\n    const x = xPos + Note.STAVEPADDING;\n    const contextGaps = formatter.contextGaps;\n    function stroke(x1, x2, color) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(1);\n      ctx.fillRect(x1, y1, x2 - x1, y2 - y1);\n    }\n\n    ctx.save();\n    ctx.setFont('Arial', 8, '');\n\n    contextGaps.gaps.forEach(gap => {\n      stroke(x + gap.x1, x + gap.x2, '#aaa');\n      // Vex.drawDot(ctx, xPos + gap.x1, yPos, 'blue');\n      ctx.fillText(Math.round(gap.x2 - gap.x1), x + gap.x1, y2 + 12);\n    });\n\n    ctx.fillText(Math.round(contextGaps.total) + 'px', x - 20, y2 + 12);\n    ctx.setFillStyle('red');\n\n    ctx.fillText('Loss: ' +\n      formatter.lossHistory.map(loss => Math.round(loss)), x - 20, y2 + 22);\n    ctx.restore();\n  }\n\n  // Helper function to format and draw a single voice. Returns a bounding\n  // box for the notation.\n  //\n  // Parameters:\n  // * `ctx` - The rendering context\n  // * `stave` - The stave to which to draw (`Stave` or `TabStave`)\n  // * `notes` - Array of `Note` instances (`StaveNote`, `TextNote`, `TabNote`, etc.)\n  // * `params` - One of below:\n  //    * Setting `autobeam` only `(context, stave, notes, true)` or\n  //      `(ctx, stave, notes, {autobeam: true})`\n  //    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n  //    * Setting both a struct is needed `(context, stave, notes, {\n  //      autobeam: true, align_rests: true})`\n  //\n  // `autobeam` automatically generates beams for the notes.\n  // `align_rests` aligns rests with nearby notes.\n  static FormatAndDraw(ctx, stave, notes, params) {\n    const options = {\n      auto_beam: false,\n      align_rests: false,\n    };\n\n    if (typeof params === 'object') {\n      Vex.Merge(options, params);\n    } else if (typeof params === 'boolean') {\n      options.auto_beam = params;\n    }\n\n    // Start by creating a voice and adding all the notes to it.\n    const voice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(notes);\n\n    // Then create beams, if requested.\n    const beams = options.auto_beam ? Beam.applyAndGetBeams(voice) : [];\n\n    // Instantiate a `Formatter` and format the notes.\n    new Formatter()\n      .joinVoices([voice], { align_rests: options.align_rests })\n      .formatToStave([voice], stave, { align_rests: options.align_rests, stave });\n\n    // Render the voice and beams to the stave.\n    voice.setStave(stave).draw(ctx, stave);\n    beams.forEach(beam => beam.setContext(ctx).draw());\n\n    // Return the bounding box of the voice.\n    return voice.getBoundingBox();\n  }\n\n  // Helper function to format and draw aligned tab and stave notes in two\n  // separate staves.\n  //\n  // Parameters:\n  // * `ctx` - The rendering context\n  // * `tabstave` - A `TabStave` instance on which to render `TabNote`s.\n  // * `stave` - A `Stave` instance on which to render `Note`s.\n  // * `notes` - Array of `Note` instances for the stave (`StaveNote`, `BarNote`, etc.)\n  // * `tabnotes` - Array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n  // * `autobeam` - Automatically generate beams.\n  // * `params` - A configuration object:\n  //    * `autobeam` automatically generates beams for the notes.\n  //    * `align_rests` aligns rests with nearby notes.\n  static FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autobeam, params) {\n    const opts = {\n      auto_beam: autobeam,\n      align_rests: false,\n    };\n\n    if (typeof params === 'object') {\n      Vex.Merge(opts, params);\n    } else if (typeof params === 'boolean') {\n      opts.auto_beam = params;\n    }\n\n    // Create a `4/4` voice for `notes`.\n    const notevoice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(notes);\n\n    // Create a `4/4` voice for `tabnotes`.\n    const tabvoice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(tabnotes);\n\n      // Then create beams, if requested.\n    const beams = opts.auto_beam ? Beam.applyAndGetBeams(notevoice) : [];\n\n    // Instantiate a `Formatter` and align tab and stave notes.\n    new Formatter()\n      .joinVoices([notevoice], { align_rests: opts.align_rests })\n      .joinVoices([tabvoice])\n      .formatToStave([notevoice, tabvoice], stave, { align_rests: opts.align_rests });\n\n    // Render voices and beams to staves.\n    notevoice.draw(ctx, stave);\n    tabvoice.draw(ctx, tabstave);\n    beams.forEach(beam => beam.setContext(ctx).draw());\n\n    // Draw a connector between tab and note staves.\n    new StaveConnector(stave, tabstave).setContext(ctx).draw();\n  }\n\n  // Auto position rests based on previous/next note positions.\n  //\n  // Params:\n  // * `notes`: An array of notes.\n  // * `alignAllNotes`: If set to false, only aligns non-beamed notes.\n  // * `alignTuplets`: If set to false, ignores tuplets.\n  static AlignRestsToNotes(notes, alignAllNotes, alignTuplets) {\n    notes.forEach((note, index) => {\n      if (note instanceof StaveNote && note.isRest()) {\n        if (note.tuplet && !alignTuplets) return;\n\n        // If activated rests not on default can be rendered as specified.\n        const position = note.getGlyph().position.toUpperCase();\n        if (position !== 'R/4' && position !== 'B/4') return;\n\n        if (alignAllNotes || note.beam != null) {\n          // Align rests with previous/next notes.\n          const props = note.getKeyProps()[0];\n          if (index === 0) {\n            props.line = lookAhead(notes, props.line, index, false);\n            note.setKeyLine(0, props.line);\n          } else if (index > 0 && index < notes.length) {\n            // If previous note is a rest, use its line number.\n            let restLine;\n            if (notes[index - 1].isRest()) {\n              restLine = notes[index - 1].getKeyProps()[0].line;\n              props.line = restLine;\n            } else {\n              restLine = notes[index - 1].getLineForRest();\n              // Get the rest line for next valid non-rest note group.\n              props.line = lookAhead(notes, restLine, index, true);\n            }\n            note.setKeyLine(0, props.line);\n          }\n        }\n      }\n    });\n\n    return this;\n  }\n\n  constructor() {\n    // Minimum width required to render all the notes in the voices.\n    this.minTotalWidth = 0;\n\n    // This is set to `true` after `minTotalWidth` is calculated.\n    this.hasMinTotalWidth = false;\n\n    // Total number of ticks in the voice.\n    this.totalTicks = new Fraction(0, 1);\n\n    // Arrays of tick and modifier contexts.\n    this.tickContexts = null;\n    this.modiferContexts = null;\n\n    // Gaps between contexts, for free movement of notes post\n    // formatting.\n    this.contextGaps = {\n      total: 0,\n      gaps: [],\n    };\n\n    this.voices = [];\n  }\n\n  // Find all the rests in each of the `voices` and align them\n  // to neighboring notes. If `alignAllNotes` is `false`, then only\n  // align non-beamed notes.\n  alignRests(voices, alignAllNotes) {\n    if (!voices || !voices.length) {\n      throw new Vex.RERR('BadArgument', 'No voices to format rests');\n    }\n\n    voices.forEach(voice =>\n      Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n  }\n\n  // Calculate the minimum width required to align and format `voices`.\n  preCalculateMinTotalWidth(voices) {\n    // Cache results.\n    if (this.hasMinTotalWidth) return this.minTotalWidth;\n\n    // Create tick contexts if not already created.\n    if (!this.tickContexts) {\n      if (!voices) {\n        throw new Vex.RERR(\n          'BadArgument', \"'voices' required to run preCalculateMinTotalWidth\"\n        );\n      }\n\n      this.createTickContexts(voices);\n    }\n\n    const { list: contextList, map: contextMap } = this.tickContexts;\n\n    // Go through each tick context and calculate total width.\n    this.minTotalWidth = contextList\n      .map(tick => {\n        const context = contextMap[tick];\n        context.preFormat();\n        return context.getWidth();\n      })\n      .reduce((a, b) => a + b, 0);\n\n    this.hasMinTotalWidth = true;\n\n    return this.minTotalWidth;\n  }\n\n  // Get minimum width required to render all voices. Either `format` or\n  // `preCalculateMinTotalWidth` must be called before this method.\n  getMinTotalWidth() {\n    if (!this.hasMinTotalWidth) {\n      throw new Vex.RERR(\n        'NoMinTotalWidth',\n        \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\"\n      );\n    }\n\n    return this.minTotalWidth;\n  }\n\n  // Create `ModifierContext`s for each tick in `voices`.\n  createModifierContexts(voices) {\n    const contexts = createContexts(\n      voices,\n      ModifierContext,\n      (tickable, context) => tickable.addToModifierContext(context)\n    );\n\n    this.modiferContexts = contexts;\n    return contexts;\n  }\n\n  // Create `TickContext`s for each tick in `voices`. Also calculate the\n  // total number of ticks in voices.\n  createTickContexts(voices) {\n    const contexts = createContexts(\n      voices,\n      TickContext,\n      (tickable, context) => context.addTickable(tickable)\n    );\n\n    contexts.array.forEach(context => {\n      context.tContexts = contexts.array;\n    });\n\n    this.totalTicks = voices[0].getTicksUsed().clone();\n    this.tickContexts = contexts;\n    return contexts;\n  }\n\n  // This is the core formatter logic. Format voices and justify them\n  // to `justifyWidth` pixels. `renderingContext` is required to justify elements\n  // that can't retreive widths without a canvas. This method sets the `x` positions\n  // of all the tickables/notes in the formatter.\n  preFormat(justifyWidth = 0, renderingContext, voices, stave) {\n    // Initialize context maps.\n    const contexts = this.tickContexts;\n    const { list: contextList, map: contextMap, resolutionMultiplier } = contexts;\n\n    // If voices and a stave were provided, set the Stave for each voice\n    // and preFormat to apply Y values to the notes;\n    if (voices && stave) {\n      voices.forEach(voice => voice.setStave(stave).preFormat());\n    }\n\n    // Now distribute the ticks to each tick context, and assign them their\n    // own X positions.\n    let x = 0;\n    let shift = 0;\n    const centerX = justifyWidth / 2;\n    this.minTotalWidth = 0;\n\n    // Pass 1: Give each note maximum width requested by context.\n    contextList.forEach((tick) => {\n      const context = contextMap[tick];\n      if (renderingContext) context.setContext(renderingContext);\n\n      // Make sure that all tickables in this context have calculated their\n      // space requirements.\n      context.preFormat();\n\n      const width = context.getWidth();\n      this.minTotalWidth += width;\n\n      const metrics = context.getMetrics();\n      x = x + shift + metrics.extraLeftPx;\n      context.setX(x);\n\n      // Calculate shift for the next tick.\n      shift = width - metrics.extraLeftPx;\n    });\n\n    this.minTotalWidth = x + shift;\n    this.hasMinTotalWidth = true;\n\n    // No justification needed. End formatting.\n    if (justifyWidth <= 0) return;\n\n    // Pass 2: Take leftover width, and distribute it to proportionately to\n    // all notes.\n    const remainingX = justifyWidth - this.minTotalWidth;\n    const leftoverPxPerTick = remainingX / (this.totalTicks.value() * resolutionMultiplier);\n    let spaceAccum = 0;\n\n    contextList.forEach((tick, index) => {\n      const prevTick = contextList[index - 1] || 0;\n      const context = contextMap[tick];\n      const tickSpace = (tick - prevTick) * leftoverPxPerTick;\n\n      spaceAccum += tickSpace;\n      context.setX(context.getX() + spaceAccum);\n\n      // Move center aligned tickables to middle\n      context\n        .getCenterAlignedTickables()\n        .forEach(tickable => { // eslint-disable-line\n          tickable.center_x_shift = centerX - context.getX();\n        });\n    });\n\n    // Just one context. Done formatting.\n    if (contextList.length === 1) return;\n\n    this.justifyWidth = justifyWidth;\n    this.lossHistory = [];\n    this.evaluate();\n  }\n\n  // Calculate the total cost of this formatting decision.\n  evaluate() {\n    const justifyWidth = this.justifyWidth;\n    // Calculate available slack per tick context. This works out how much freedom\n    // to move a context has in either direction, without affecting other notes.\n    this.contextGaps = { total: 0, gaps: [] };\n    this.tickContexts.list.forEach((tick, index) => {\n      if (index === 0) return;\n      const prevTick = this.tickContexts.list[index - 1];\n      const prevContext = this.tickContexts.map[prevTick];\n      const context = this.tickContexts.map[tick];\n      const prevMetrics = prevContext.getMetrics();\n\n      const insideRightEdge = prevContext.getX() + prevMetrics.width;\n      const insideLeftEdge = context.getX();\n      const gap = insideLeftEdge - insideRightEdge;\n      this.contextGaps.total += gap;\n      this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n\n      // Tell the tick contexts how much they can reposition themselves.\n      context.getFormatterMetrics().freedom.left = gap;\n      prevContext.getFormatterMetrics().freedom.right = gap;\n    });\n\n    // Calculate mean distance in each voice for each duration type, then calculate\n    // how far each note is from the mean.\n    const durationStats = this.durationStats = {};\n\n    function updateStats(duration, space) {\n      const stats = durationStats[duration];\n      if (stats === undefined) {\n        durationStats[duration] = { mean: space, count: 1 };\n      } else {\n        stats.count += 1;\n        stats.mean = (stats.mean + space) / 2;\n      }\n    }\n\n    this.voices.forEach(voice => {\n      voice.getTickables().forEach((note, i, notes) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getMetrics();\n        const formatterMetrics = note.getFormatterMetrics();\n        const leftNoteEdge = note.getX() + metrics.noteWidth +\n            metrics.modRightPx + metrics.extraRightPx;\n        let space = 0;\n\n        if (i < (notes.length - 1)) {\n          const rightNote = notes[i + 1];\n          const rightMetrics = rightNote.getMetrics();\n          const rightNoteEdge = rightNote.getX() -\n            rightMetrics.modLeftPx - rightMetrics.extraLeftPx;\n\n          space = rightNoteEdge - leftNoteEdge;\n          formatterMetrics.space.used = rightNote.getX() - note.getX();\n          rightNote.getFormatterMetrics().freedom.left = space;\n        } else {\n          space = justifyWidth - leftNoteEdge;\n          formatterMetrics.space.used = justifyWidth - note.getX();\n        }\n\n        formatterMetrics.freedom.right = space;\n        updateStats(duration, formatterMetrics.space.used);\n      });\n    });\n\n    // Calculate how much each note deviates from the mean. Loss function is square\n    // root of the sum of squared deviations.\n    let totalDeviation = 0;\n    this.voices.forEach(voice => {\n      voice.getTickables().forEach((note) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getFormatterMetrics();\n        metrics.iterations += 1;\n        metrics.space.deviation = metrics.space.used - durationStats[duration].mean;\n        metrics.duration = duration;\n        metrics.space.mean = durationStats[duration].mean;\n\n        totalDeviation += Math.pow(durationStats[duration].mean, 2);\n      });\n    });\n\n    this.totalCost = Math.sqrt(totalDeviation);\n    this.lossHistory.push(this.totalCost);\n    return this;\n  }\n\n  // Run a single iteration of rejustification. At a high level, this method calculates\n  // the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n  // attempt to reduce the cost. You can call this method multiple times until it finds\n  // and oscillates around a global minimum.\n  tune() {\n    const sum = (means) => means.reduce((a, b) => a + b);\n\n    // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n    // on adjacent tickcontexts.\n    function move(current, prev, next, shift) {\n      current.setX(current.getX() + shift);\n      current.getFormatterMetrics().freedom.left += shift;\n      current.getFormatterMetrics().freedom.right -= shift;\n\n      if (prev) prev.getFormatterMetrics().freedom.right += shift;\n      if (next) next.getFormatterMetrics().freedom.left -= shift;\n    }\n\n    let shift = 0;\n    this.tickContexts.list.forEach((tick, index, list) => {\n      const context = this.tickContexts.map[tick];\n      const prevContext = (index > 0) ? this.tickContexts.map[list[index - 1]] : null;\n      const nextContext = (index < list.length - 1) ? this.tickContexts.map[list[index + 1]] : null;\n\n      move(context, prevContext, nextContext, shift);\n\n      const cost = -sum(\n        context.getTickables().map(t => t.getFormatterMetrics().space.deviation));\n\n      if (cost > 0) {\n        shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n      } else if (cost < 0) {\n        if (nextContext) {\n          shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n        } else {\n          shift = 0;\n        }\n      }\n\n      const minShift = Math.min(5, Math.abs(shift));\n      shift = shift > 0 ? minShift : -minShift;\n    });\n\n    return this.evaluate();\n  }\n\n  // This is the top-level call for all formatting logic completed\n  // after `x` *and* `y` values have been computed for the notes\n  // in the voices.\n  postFormat() {\n    const postFormatContexts = (contexts) =>\n      contexts.list.forEach(tick => contexts.map[tick].postFormat());\n\n    postFormatContexts(this.modiferContexts);\n    postFormatContexts(this.tickContexts);\n\n    return this;\n  }\n\n  // Take all `voices` and create `ModifierContext`s out of them. This tells\n  // the formatters that the voices belong on a single stave.\n  joinVoices(voices) {\n    this.createModifierContexts(voices);\n    this.hasMinTotalWidth = false;\n    return this;\n  }\n\n  // Align rests in voices, justify the contexts, and position the notes\n  // so voices are aligned and ready to render onto the stave. This method\n  // mutates the `x` positions of all tickables in `voices`.\n  //\n  // Voices are full justified to fit in `justifyWidth` pixels.\n  //\n  // Set `options.context` to the rendering context. Set `options.align_rests`\n  // to true to enable rest alignment.\n  format(voices, justifyWidth, options) {\n    const opts = {\n      align_rests: false,\n      context: null,\n      stave: null,\n    };\n\n    Vex.Merge(opts, options);\n    this.voices = voices;\n    this.alignRests(voices, opts.align_rests);\n    this.createTickContexts(voices);\n    this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n\n    // Only postFormat if a stave was supplied for y value formatting\n    if (opts.stave) this.postFormat();\n\n    return this;\n  }\n\n  // This method is just like `format` except that the `justifyWidth` is inferred\n  // from the `stave`.\n  formatToStave(voices, stave, options) {\n    const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - 10;\n    L('Formatting voices to width: ', justifyWidth);\n    const opts = { context: stave.getContext() };\n    Vex.Merge(opts, options);\n    return this.format(voices, justifyWidth, opts);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/formatter.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `Beams` that span over a set of `StemmableNotes`.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tuplet } from './tuplet';\nimport { Stem } from './stem';\n\nfunction calculateStemDirection(notes) {\n  let lineSum = 0;\n  notes.forEach(note => {\n    if (note.keyProps) {\n      note.keyProps.forEach(keyProp => {\n        lineSum += (keyProp.line - 3);\n      });\n    }\n  });\n\n  if (lineSum >= 0) {\n    return Stem.DOWN;\n  }\n  return Stem.UP;\n}\n\nconst getStemSlope = (firstNote, lastNote) => {\n  const firstStemTipY = firstNote.getStemExtents().topY;\n  const firstStemX = firstNote.getStemX();\n  const lastStemTipY = lastNote.getStemExtents().topY;\n  const lastStemX = lastNote.getStemX();\n  return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n};\n\nexport class Beam extends Element {\n  // Gets the default beam groups for a provided time signature.\n  // Attempts to guess if the time signature is not found in table.\n  // Currently this is fairly naive.\n  static getDefaultBeamGroups(time_sig) {\n    if (!time_sig || time_sig === 'c') {\n      time_sig = '4/4';\n    }\n\n    const defaults = {\n      '1/2': ['1/2'],\n      '2/2': ['1/2'],\n      '3/2': ['1/2'],\n      '4/2': ['1/2'],\n\n      '1/4': ['1/4'],\n      '2/4': ['1/4'],\n      '3/4': ['1/4'],\n      '4/4': ['1/4'],\n\n      '1/8': ['1/8'],\n      '2/8': ['2/8'],\n      '3/8': ['3/8'],\n      '4/8': ['2/8'],\n\n      '1/16': ['1/16'],\n      '2/16': ['2/16'],\n      '3/16': ['3/16'],\n      '4/16': ['2/16'],\n    };\n\n    const groups = defaults[time_sig];\n\n    if (groups === undefined) {\n      // If no beam groups found, naively determine\n      // the beam groupings from the time signature\n      const beatTotal = parseInt(time_sig.split('/')[0], 10);\n      const beatValue = parseInt(time_sig.split('/')[1], 10);\n\n      const tripleMeter = beatTotal % 3 === 0;\n\n      if (tripleMeter) {\n        return [new Fraction(3, beatValue)];\n      } else if (beatValue > 4) {\n        return [new Fraction(2, beatValue)];\n      } else if (beatValue <= 4) {\n        return [new Fraction(1, beatValue)];\n      }\n    } else {\n      return groups.map(group => new Fraction().parse(group));\n    }\n\n    return [new Fraction(1, 4)];\n  }\n\n  // A helper function to automatically build basic beams for a voice. For more\n  // complex auto-beaming use `Beam.generateBeams()`.\n  //\n  // Parameters:\n  // * `voice` - The voice to generate the beams for\n  // * `stem_direction` - A stem direction to apply to the entire voice\n  // * `groups` - An array of `Fraction` representing beat groupings for the beam\n  static applyAndGetBeams(voice, stem_direction, groups) {\n    return Beam.generateBeams(voice.getTickables(), {\n      groups,\n      stem_direction,\n    });\n  }\n\n  // A helper function to autimatically build beams for a voice with\n  // configuration options.\n  //\n  // Example configuration object:\n  //\n  // ```\n  // config = {\n  //   groups: [new Vex.Flow.Fraction(2, 8)],\n  //   stem_direction: -1,\n  //   beam_rests: true,\n  //   beam_middle_only: true,\n  //   show_stemlets: false\n  // };\n  // ```\n  //\n  // Parameters:\n  // * `notes` - An array of notes to create the beams for\n  // * `config` - The configuration object\n  //    * `groups` - Array of `Fractions` that represent the beat structure to beam the notes\n  //    * `stem_direction` - Set to apply the same direction to all notes\n  //    * `beam_rests` - Set to `true` to include rests in the beams\n  //    * `beam_middle_only` - Set to `true` to only beam rests in the middle of the beat\n  //    * `show_stemlets` - Set to `true` to draw stemlets for rests\n  //    * `maintain_stem_directions` - Set to `true` to not apply new stem directions\n  //\n  static generateBeams(notes, config) {\n    if (!config) config = {};\n\n    if (!config.groups || !config.groups.length) {\n      config.groups = [new Fraction(2, 8)];\n    }\n\n    // Convert beam groups to tick amounts\n    const tickGroups = config.groups.map(group => {\n      if (!group.multiply) {\n        throw new Vex.RuntimeError('InvalidBeamGroups',\n          'The beam groups must be an array of Vex.Flow.Fractions');\n      }\n      return group.clone().multiply(Flow.RESOLUTION, 1);\n    });\n\n    const unprocessedNotes = notes;\n    let currentTickGroup = 0;\n    let noteGroups       = [];\n    let currentGroup     = [];\n\n    function getTotalTicks(vf_notes) {\n      return vf_notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n    }\n\n    function nextTickGroup() {\n      if (tickGroups.length - 1 > currentTickGroup) {\n        currentTickGroup += 1;\n      } else {\n        currentTickGroup = 0;\n      }\n    }\n\n    function createGroups() {\n      let nextGroup = [];\n\n      unprocessedNotes.forEach(unprocessedNote => {\n        nextGroup    = [];\n        if (unprocessedNote.shouldIgnoreTicks()) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          return; // Ignore untickables (like bar notes)\n        }\n\n        currentGroup.push(unprocessedNote);\n        const ticksPerGroup = tickGroups[currentTickGroup].clone();\n        const totalTicks = getTotalTicks(currentGroup);\n\n        // Double the amount of ticks in a group, if it's an unbeamable tuplet\n        const unbeamable = Flow.durationToNumber(unprocessedNote.duration) < 8;\n        if (unbeamable && unprocessedNote.tuplet) {\n          ticksPerGroup.numerator *= 2;\n        }\n\n        // If the note that was just added overflows the group tick total\n        if (totalTicks.greaterThan(ticksPerGroup)) {\n          // If the overflow note can be beamed, start the next group\n          // with it. Unbeamable notes leave the group overflowed.\n          if (!unbeamable) {\n            nextGroup.push(currentGroup.pop());\n          }\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        } else if (totalTicks.equals(ticksPerGroup)) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        }\n      });\n\n      // Adds any remainder notes\n      if (currentGroup.length > 0) {\n        noteGroups.push(currentGroup);\n      }\n    }\n\n    function getBeamGroups() {\n      return noteGroups.filter(group => {\n        if (group.length > 1) {\n          let beamable = true;\n          group.forEach(note => {\n            if (note.getIntrinsicTicks() >= Flow.durationToTicks('4')) {\n              beamable = false;\n            }\n          });\n          return beamable;\n        }\n        return false;\n      });\n    }\n\n    // Splits up groups by Rest\n    function sanitizeGroups() {\n      const sanitizedGroups = [];\n      noteGroups.forEach(group => {\n        let tempGroup = [];\n        group.forEach((note, index, group) => {\n          const isFirstOrLast = index === 0 || index === group.length - 1;\n          const prevNote = group[index - 1];\n\n          const breaksOnEachRest = !config.beam_rests && note.isRest();\n          const breaksOnFirstOrLastRest = (config.beam_rests &&\n            config.beam_middle_only && note.isRest() && isFirstOrLast);\n\n          let breakOnStemChange = false;\n          if (config.maintain_stem_directions && prevNote &&\n              !note.isRest() && !prevNote.isRest()) {\n            const prevDirection = prevNote.getStemDirection();\n            const currentDirection = note.getStemDirection();\n            breakOnStemChange = currentDirection !== prevDirection;\n          }\n\n          const isUnbeamableDuration = parseInt(note.duration, 10) < 8;\n\n          // Determine if the group should be broken at this note\n          const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest ||\n                            breakOnStemChange || isUnbeamableDuration;\n\n          if (shouldBreak) {\n            // Add current group\n            if (tempGroup.length > 0) {\n              sanitizedGroups.push(tempGroup);\n            }\n\n            // Start a new group. Include the current note if the group\n            // was broken up by stem direction, as that note needs to start\n            // the next group of notes\n            tempGroup = breakOnStemChange ? [note] : [];\n          } else {\n            // Add note to group\n            tempGroup.push(note);\n          }\n        });\n\n        // If there is a remaining group, add it as well\n        if (tempGroup.length > 0) {\n          sanitizedGroups.push(tempGroup);\n        }\n      });\n\n      noteGroups = sanitizedGroups;\n    }\n\n    function formatStems() {\n      noteGroups.forEach(group => {\n        let stemDirection;\n        if (config.maintain_stem_directions) {\n          const note = findFirstNote(group);\n          stemDirection = note ? note.getStemDirection() : Stem.UP;\n        } else {\n          if (config.stem_direction) {\n            stemDirection = config.stem_direction;\n          } else {\n            stemDirection = calculateStemDirection(group);\n          }\n        }\n        applyStemDirection(group, stemDirection);\n      });\n    }\n\n    function findFirstNote(group) {\n      for (let i = 0; i < group.length; i++) {\n        const note = group[i];\n        if (!note.isRest()) {\n          return note;\n        }\n      }\n\n      return false;\n    }\n\n    function applyStemDirection(group, direction) {\n      group.forEach(note => {\n        note.setStemDirection(direction);\n      });\n    }\n\n    // Get all of the tuplets in all of the note groups\n    function getTuplets() {\n      const uniqueTuplets = [];\n\n      // Go through all of the note groups and inspect for tuplets\n      noteGroups.forEach(group => {\n        let tuplet = null;\n        group.forEach(note => {\n          if (note.tuplet && (tuplet !== note.tuplet)) {\n            tuplet = note.tuplet;\n            uniqueTuplets.push(tuplet);\n          }\n        });\n      });\n      return uniqueTuplets;\n    }\n\n\n    // Using closures to store the variables throughout the various functions\n    // IMO Keeps it this process lot cleaner - but not super consistent with\n    // the rest of the API's style - Silverwolf90 (Cyril)\n    createGroups();\n    sanitizeGroups();\n    formatStems();\n\n    // Get the notes to be beamed\n    const beamedNoteGroups = getBeamGroups();\n\n    // Get the tuplets in order to format them accurately\n    const allTuplets = getTuplets();\n\n    // Create a Vex.Flow.Beam from each group of notes to be beamed\n    const beams = [];\n    beamedNoteGroups.forEach(group => {\n      const beam = new Beam(group);\n\n      if (config.show_stemlets) {\n        beam.render_options.show_stemlets = true;\n      }\n      if (config.secondary_breaks) {\n        beam.render_options.secondary_break_ticks = Flow.durationToTicks(config.secondary_breaks);\n      }\n      if (config.flat_beams === true) {\n        beam.render_options.flat_beams = true;\n        beam.render_options.flat_beam_offset = config.flat_beam_offset;\n      }\n      beams.push(beam);\n    });\n\n    // Reformat tuplets\n    allTuplets.forEach(tuplet => {\n      // Set the tuplet location based on the stem direction\n      const direction = tuplet.notes[0].stem_direction === Stem.DOWN ?\n        Tuplet.LOCATION_BOTTOM : Tuplet.LOCATION_TOP;\n      tuplet.setTupletLocation(direction);\n\n      // If any of the notes in the tuplet are not beamed, draw a bracket.\n      let bracketed = false;\n      for (let i = 0; i < tuplet.notes.length; i++) {\n        const note = tuplet.notes[i];\n        if (note.beam === null) {\n          bracketed = true;\n          break;\n        }\n      }\n      tuplet.setBracketed(bracketed);\n    });\n\n    return beams;\n  }\n\n  constructor(notes, auto_stem) {\n    super();\n    this.setAttribute('type', 'Beam');\n\n    if (!notes || notes === []) {\n      throw new Vex.RuntimeError('BadArguments', 'No notes provided for beam.');\n    }\n\n    if (notes.length === 1) {\n      throw new Vex.RuntimeError('BadArguments', 'Too few notes for beam.');\n    }\n\n    // Validate beam line, direction and ticks.\n    this.ticks = notes[0].getIntrinsicTicks();\n\n    if (this.ticks >= Flow.durationToTicks('4')) {\n      throw new Vex.RuntimeError('BadArguments',\n          'Beams can only be applied to notes shorter than a quarter note.');\n    }\n\n    let i; // shared iterator\n    let note;\n\n    this.stem_direction = Stem.UP;\n\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (note.hasStem()) {\n        this.stem_direction = note.getStemDirection();\n        break;\n      }\n    }\n\n    let stem_direction = this.stem_direction;\n    // Figure out optimal stem direction based on given notes\n    if (auto_stem && notes[0].getCategory() === 'stavenotes')  {\n      stem_direction = calculateStemDirection(notes);\n    } else if (auto_stem && notes[0].getCategory() === 'tabnotes') {\n      // Auto Stem TabNotes\n      const stem_weight = notes.reduce((memo, note) => memo + note.stem_direction, 0);\n\n      stem_direction = stem_weight > -1 ? Stem.UP : Stem.DOWN;\n    }\n\n    // Apply stem directions and attach beam to notes\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (auto_stem) {\n        note.setStemDirection(stem_direction);\n        this.stem_direction = stem_direction;\n      }\n      note.setBeam(this);\n    }\n\n    this.postFormatted = false;\n    this.notes = notes;\n    this.beam_count = this.getBeamCount();\n    this.break_on_indices = [];\n    this.render_options = {\n      beam_width: 5,\n      max_slope: 0.25,\n      min_slope: -0.25,\n      slope_iterations: 20,\n      slope_cost: 100,\n      show_stemlets: false,\n      stemlet_extension: 7,\n      partial_beam_length: 10,\n      flat_beams: false,\n      min_flat_beam_offset: 15,\n    };\n  }\n\n  // Get the notes in this beam\n  getNotes() { return this.notes; }\n\n  // Get the max number of beams in the set of notes\n  getBeamCount() {\n    const beamCounts =  this.notes.map(note => note.getGlyph().beam_count);\n\n    const maxBeamCount =  beamCounts.reduce((max, beamCount) => beamCount > max ? beamCount : max);\n\n    return maxBeamCount;\n  }\n\n  // Set which note `indices` to break the secondary beam at\n  breakSecondaryAt(indices) {\n    this.break_on_indices = indices;\n    return this;\n  }\n\n  // Return the y coordinate for linear function\n  getSlopeY(x, first_x_px, first_y_px, slope) {\n    return first_y_px + ((x - first_x_px) * slope);\n  }\n\n  // Calculate the best possible slope for the provided notes\n  calculateSlope() {\n    const {\n      notes,\n      stem_direction: stemDirection,\n      render_options: { max_slope, min_slope, slope_iterations, slope_cost },\n    } = this;\n\n    const firstNote = notes[0];\n    const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n    const increment = (max_slope - min_slope) / slope_iterations;\n    let minCost = Number.MAX_VALUE;\n    let bestSlope = 0;\n    let yShift = 0;\n\n    // iterate through slope values to find best weighted fit\n    for (let slope = min_slope; slope <= max_slope; slope += increment) {\n      let totalStemExtension = 0;\n      let yShiftTemp = 0;\n\n      // iterate through notes, calculating y shift and stem extension\n      for (let i = 1; i < notes.length; ++i) {\n        const note = notes[i];\n        const adjustedStemTipY = this.getSlopeY(\n          note.getStemX(),\n          firstNote.getStemX(),\n          firstNote.getStemExtents().topY,\n          slope\n        ) + yShiftTemp;\n\n        const stemTipY = note.getStemExtents().topY;\n        // beam needs to be shifted up to accommodate note\n        if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n          const diff = Math.abs(stemTipY - adjustedStemTipY);\n          yShiftTemp += diff * -stemDirection;\n          totalStemExtension += diff * i;\n        } else { // beam overshoots note, account for the difference\n          totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n        }\n      }\n\n      // most engraving books suggest aiming for a slope about half the angle of the\n      // difference between the first and last notes' stem length;\n      const idealSlope = initialSlope / 2;\n      const distanceFromIdeal = Math.abs(idealSlope - slope);\n\n      // This tries to align most beams to something closer to the idealSlope, but\n      // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n      const cost = slope_cost * distanceFromIdeal + Math.abs(totalStemExtension);\n\n      // update state when a more ideal slope is found\n      if (cost < minCost) {\n        minCost = cost;\n        bestSlope = slope;\n        yShift = yShiftTemp;\n      }\n    }\n\n    this.slope = bestSlope;\n    this.y_shift = yShift;\n  }\n\n  // Calculate a slope and y-shift for flat beams\n  calculateFlatSlope() {\n    const {\n      notes, stem_direction,\n      render_options: { beam_width, min_flat_beam_offset, flat_beam_offset },\n    } = this;\n\n    // If a flat beam offset has not yet been supplied or calculated,\n    // generate one based on the notes in this particular note group\n    let total = 0;\n    let extremeY = 0;  // Store the highest or lowest note here\n    let extremeBeamCount = 0;  // The beam count of the extreme note\n    let currentExtreme = 0;\n    for (let i = 0; i < notes.length; i++) {\n      // Total up all of the offsets so we can average them out later\n      const note = notes[i];\n      const stemTipY = note.getStemExtents().topY;\n      total += stemTipY;\n\n      // Store the highest (stems-up) or lowest (stems-down) note so the\n      //  offset can be adjusted in case the average isn't enough\n      if (stem_direction === Stem.DOWN && currentExtreme < stemTipY) {\n        currentExtreme = stemTipY;\n        extremeY = Math.max(...note.getYs());\n        extremeBeamCount = note.getBeamCount();\n      } else if (\n        stem_direction === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)\n      ) {\n        currentExtreme = stemTipY;\n        extremeY = Math.min(...note.getYs());\n        extremeBeamCount = note.getBeamCount();\n      }\n    }\n\n    // Average the offsets to try and come up with a reasonable one that\n    //  works for all of the notes in the beam group.\n    let offset = total / notes.length;\n\n    // In case the average isn't long enough, add or subtract some more\n    //  based on the highest or lowest note (again, based on the stem\n    //  direction). This also takes into account the added height due to\n    //  the width of the beams.\n    const beamWidth = beam_width * 1.5;\n    const extremeTest = min_flat_beam_offset + (extremeBeamCount * beamWidth);\n    const newOffset = extremeY + (extremeTest * -stem_direction);\n    if (stem_direction === Stem.DOWN && offset < newOffset) {\n      offset = extremeY + extremeTest;\n    } else if (stem_direction === Stem.UP && offset > newOffset) {\n      offset = extremeY - extremeTest;\n    }\n\n    if (!flat_beam_offset) {\n      // Set the offset for the group based on the calculations above.\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.DOWN && offset > flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.UP && offset < flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    }\n\n    // for flat beams, the slope and y_shift are simply 0\n    this.slope = 0;\n    this.y_shift = 0;\n  }\n\n  // Create new stems for the notes in the beam, so that each stem\n  // extends into the beams.\n  applyStemExtensions() {\n    const {\n      notes, slope, y_shift, stem_direction, beam_count,\n      render_options: {\n        show_stemlets,\n        flat_beam_offset,\n        flat_beams,\n        stemlet_extension,\n        beam_width,\n      },\n    } = this;\n\n    const firstNote = notes[0];\n    let firstStemTipY = firstNote.getStemExtents().topY;\n\n    // If rendering flat beams, and an offset exists, set the y-coordinat`e to\n    //  the offset so the stems all end at the beam offset.\n    if (flat_beams && flat_beam_offset) {\n      firstStemTipY = flat_beam_offset;\n    }\n    const firstStemX = firstNote.getStemX();\n\n    for (let i = 0; i < notes.length; ++i) {\n      const note = notes[i];\n      const stemX = note.getStemX();\n      const { topY: stemTipY } = note.getStemExtents();\n      const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + y_shift;\n      const preBeamExtension = note.getStem().getExtension();\n      const beamExtension = stem_direction === Stem.UP\n        ? stemTipY - beamedStemTipY\n        : beamedStemTipY - stemTipY;\n\n      note.stem.setExtension(preBeamExtension + beamExtension);\n      note.stem.renderHeightAdjustment = -Stem.WIDTH / 2;\n\n      if (note.isRest() && show_stemlets) {\n        const beamWidth = beam_width;\n        const totalBeamWidth = ((beam_count - 1) * beamWidth * 1.5) + beamWidth;\n        note.stem\n          .setVisibility(true)\n          .setStemlet(true, totalBeamWidth + stemlet_extension);\n      }\n    }\n  }\n\n  // Get the x coordinates for the beam lines of specific `duration`\n  getBeamLines(duration) {\n    const beam_lines = [];\n    let beam_started = false;\n    let current_beam = null;\n    const partial_beam_length = this.render_options.partial_beam_length;\n    let previous_should_break = false;\n    let tick_tally = 0;\n    for (let i = 0; i < this.notes.length; ++i) {\n      const note = this.notes[i];\n\n      // See if we need to break secondary beams on this note.\n      const ticks = note.ticks.value();\n      tick_tally += ticks;\n      let should_break = false;\n\n      // 8th note beams are always drawn.\n      if (parseInt(duration, 10) >= 8) {\n        // First, check to see if any indices were set up through breakSecondaryAt()\n        should_break = this.break_on_indices.indexOf(i) !== -1;\n\n        // If the secondary breaks were auto-configured in the render options,\n        //  handle that as well.\n        if (this.render_options.secondary_break_ticks && tick_tally >=\n            this.render_options.secondary_break_ticks) {\n          tick_tally = 0;\n          should_break = true;\n        }\n      }\n      const note_gets_beam = note.getIntrinsicTicks() < Flow.durationToTicks(duration);\n\n      const stem_x = note.getStemX() - (Stem.WIDTH / 2);\n\n      // Check to see if the next note in the group will get a beam at this\n      //  level. This will help to inform the partial beam logic below.\n      const next_note = this.notes[i + 1];\n      const beam_next = next_note && next_note.getIntrinsicTicks() < Flow.durationToTicks(duration);\n      if (note_gets_beam) {\n        // This note gets a beam at the current level\n        if (beam_started) {\n          // We're currently in the middle of a beam. Just continue it on to\n          //  the stem X of the current note.\n          current_beam = beam_lines[beam_lines.length - 1];\n          current_beam.end = stem_x;\n\n          // If a secondary beam break is set up, end the beam right now.\n          if (should_break) {\n            beam_started = false;\n            if (next_note && !beam_next && current_beam.end === null) {\n              // This note gets a beam,.but the next one does not. This means\n              //  we need a partial pointing right.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          }\n        } else {\n          // No beam started yet. Start a new one.\n          current_beam = { start: stem_x, end: null };\n          beam_started = true;\n          if (!beam_next) {\n            // The next note doesn't get a beam. Draw a partial.\n            if ((previous_should_break || i === 0) && next_note) {\n              // This is the first note (but not the last one), or it is\n              //  following a secondary break. Draw a partial to the right.\n              current_beam.end = current_beam.start + partial_beam_length;\n            } else {\n              // By default, draw a partial to the left.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          } else if (should_break) {\n            // This note should have a secondary break after it. Even though\n            //  we just started a beam, it needs to end immediately.\n            current_beam.end = current_beam.start - partial_beam_length;\n            beam_started = false;\n          }\n          beam_lines.push(current_beam);\n        }\n      } else {\n        // The current note does not get a beam.\n        beam_started = false;\n      }\n\n      // Store the secondary break flag to inform the partial beam logic in\n      //  the next iteration of the loop.\n      previous_should_break = should_break;\n    }\n\n    // Add a partial beam pointing left if this is the last note in the group\n    const last_beam = beam_lines[beam_lines.length - 1];\n    if (last_beam && last_beam.end === null) {\n      last_beam.end = last_beam.start - partial_beam_length;\n    }\n    return beam_lines;\n  }\n\n  // Render the stems for each notes\n  drawStems() {\n    this.notes.forEach(note => {\n      if (note.getStem()) {\n        note.getStem().setContext(this.context).draw();\n      }\n    }, this);\n  }\n\n  // Render the beam lines\n  drawBeamLines() {\n    this.checkContext();\n\n    const valid_beam_durations = ['4', '8', '16', '32', '64'];\n\n    const firstNote = this.notes[0];\n\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    let beamY = firstStemTipY;\n\n    // For flat beams, set the first and last Y to the offset, rather than\n    //  using the note's stem extents.\n    if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n      beamY = this.render_options.flat_beam_offset;\n    }\n\n    const firstStemX = firstNote.getStemX();\n    const beamThickness = this.render_options.beam_width * this.stem_direction;\n\n    // Draw the beams.\n    for (let i = 0; i < valid_beam_durations.length; ++i) {\n      const duration = valid_beam_durations[i];\n      const beamLines = this.getBeamLines(duration);\n\n      for (let j = 0; j < beamLines.length; ++j) {\n        const beam_line = beamLines[j];\n        const startBeamX = beam_line.start;\n\n        const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n        const lastBeamX = beam_line.end;\n        const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n\n        this.context.beginPath();\n        this.context.moveTo(startBeamX, startBeamY);\n        this.context.lineTo(startBeamX, startBeamY + beamThickness);\n        this.context.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n        this.context.lineTo(lastBeamX + 1, lastBeamY);\n        this.context.closePath();\n        this.context.fill();\n      }\n\n      beamY += beamThickness * 1.5;\n    }\n  }\n\n  // Pre-format the beam\n  preFormat() { return this; }\n\n  // Post-format the beam. This can only be called after\n  // the notes in the beam have both `x` and `y` values. ie: they've\n  // been formatted and have staves\n  postFormat() {\n    if (this.postFormatted) return;\n\n    // Calculate a smart slope if we're not forcing the beams to be flat.\n    if (this.notes[0].getCategory() === 'tabnotes' || this.render_options.flat_beams) {\n      this.calculateFlatSlope();\n    } else {\n      this.calculateSlope();\n    }\n    this.applyStemExtensions();\n\n    this.postFormatted = true;\n  }\n\n  // Render the beam to the canvas context\n  draw() {\n    this.checkContext();\n    this.setRendered();\n    if (this.unbeamable) return;\n\n    if (!this.postFormatted) {\n      this.postFormat();\n    }\n    this.drawStems();\n    this.drawBeamLines();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/beam.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\n/**\n * ## Description\n *\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same voice. If they are of different rhythmic\n * values, then options.num_notes must be set.\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n *   notes, etc... any class that inherits stemmableNote at some\n *   point in its prototype chain.\n * @param options: object {\n *\n *   num_notes: fit this many notes into...\n *   notes_occupied: ...the space of this many notes\n *\n *       Together, these two properties make up the tuplet ratio\n *     in the form of num_notes : notes_occupied.\n *       num_notes defaults to the number of notes passed in, so\n *     it is important that if you omit this property, all of\n *     the notes passed should be of the same note value.\n *       notes_occupied defaults to 2 -- so you should almost\n *     certainly pass this parameter for anything other than\n *     a basic triplet.\n *\n *   location:\n *     default 1, which is above the notes: ┌─── 3 ───┐\n *      -1 is below the notes └─── 3 ───┘\n *\n *   bracketed: boolean, draw a bracket around the tuplet number\n *     when true: ┌─── 3 ───┐   when false: 3\n *     defaults to true if notes are not beamed, false otherwise\n *\n *   ratioed: boolean\n *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n *     defaults to true if the difference between num_notes and\n *     notes_occupied is greater than 1.\n *\n *   y_offset: int, default 0\n *     manually offset a tuplet, for instance to avoid collisions\n *     with articulations, etc...\n * }\n */\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\n\nexport class Tuplet extends Element {\n  static get LOCATION_TOP() {\n    return 1;\n  }\n  static get LOCATION_BOTTOM() {\n    return -1;\n  }\n  static get NESTING_OFFSET() {\n    return 15;\n  }\n\n  constructor(notes, options) {\n    super();\n    this.setAttribute('type', 'Tuplet');\n    if (!notes || !notes.length) {\n      throw new Vex.RuntimeError('BadArguments', 'No notes provided for tuplet.');\n    }\n\n    if (notes.length === 1) {\n      throw new Vex.RuntimeError('BadArguments', 'Too few notes for tuplet.');\n    }\n\n    this.options = Vex.Merge({}, options);\n    this.notes = notes;\n    this.num_notes = 'num_notes' in this.options ?\n      this.options.num_notes : notes.length;\n\n    // We accept beats_occupied, but warn that it's deprecated:\n    // the preferred property name is now notes_occupied.\n    if (this.options.beats_occupied) {\n      this.beatsOccupiedDeprecationWarning();\n    }\n    this.notes_occupied = this.options.notes_occupied ||\n      this.options.beats_occupied ||\n      2;\n    if ('bracketed' in this.options) {\n      this.bracketed = this.options.bracketed;\n    } else {\n      this.bracketed =\n        notes.some(note => note.beam === null);\n    }\n\n    this.ratioed = 'ratioed' in this.options ?\n      this.options.ratioed :\n      (Math.abs(this.notes_occupied - this.num_notes) > 1);\n    this.point = 28;\n    this.y_pos = 16;\n    this.x_pos = 100;\n    this.width = 200;\n    this.location = this.options.location || Tuplet.LOCATION_TOP;\n\n    Formatter.AlignRestsToNotes(notes, true, true);\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  attach() {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.setTuplet(this);\n    }\n  }\n\n  detach() {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.resetTuplet(this);\n    }\n  }\n\n  /**\n   * Set whether or not the bracket is drawn.\n   */\n  setBracketed(bracketed) {\n    this.bracketed = !!bracketed;\n    return this;\n  }\n\n  /**\n   * Set whether or not the ratio is shown.\n   */\n  setRatioed(ratioed) {\n    this.ratioed = !!ratioed;\n    return this;\n  }\n\n  /**\n   * Set the tuplet to be displayed either on the top or bottom of the stave\n   */\n  setTupletLocation(location) {\n    if (!location) {\n      location = Tuplet.LOCATION_TOP;\n    } else if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n      throw new Vex.RERR('BadArgument', 'Invalid tuplet location: ' + location);\n    }\n\n    this.location = location;\n    return this;\n  }\n\n  getNotes() {\n    return this.notes;\n  }\n\n  getNoteCount() {\n    return this.num_notes;\n  }\n\n  beatsOccupiedDeprecationWarning() {\n    const msg = [\n      'beats_occupied has been deprecated as an ',\n      'option for tuplets. Please use notes_occupied ',\n      'instead. Calls to getBeatsOccupied and ',\n      'setBeatsOccupied should now be routed to ',\n      'getNotesOccupied and setNotesOccupied instead',\n    ].join('');\n\n    if (console && console.warn) { // eslint-disable-line no-console\n      console.warn(msg); // eslint-disable-line no-console\n    } else if (console) {\n      console.log(msg); // eslint-disable-line no-console\n    }\n  }\n\n  getBeatsOccupied() {\n    this.beatsOccupiedDeprecationWarning();\n    return this.getNotesOccupied();\n  }\n\n  setBeatsOccupied(beats) {\n    this.beatsOccupiedDeprecationWarning();\n    return this.setNotesOccupied(beats);\n  }\n\n  getNotesOccupied() {\n    return this.notes_occupied;\n  }\n\n  setNotesOccupied(notes) {\n    this.detach();\n    this.notes_occupied = notes;\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  resolveGlyphs() {\n    this.num_glyphs = [];\n    let n = this.num_notes;\n    while (n >= 1) {\n      this.num_glyphs.push(new Glyph('v' + (n % 10), this.point));\n      n = parseInt(n / 10, 10);\n    }\n\n    this.denom_glyphs = [];\n    n = this.notes_occupied;\n    while (n >= 1) {\n      this.denom_glyphs.push(new Glyph('v' + (n % 10), this.point));\n      n = parseInt(n / 10, 10);\n    }\n  }\n\n  // determine how many tuplets are nested within this tuplet\n  // on the same side (above/below), to calculate a y\n  // offset for this tuplet:\n  getNestedTupletCount() {\n    const location = this.location;\n    const first_note = this.notes[0];\n    let maxTupletCount = countTuplets(first_note, location);\n    let minTupletCount = countTuplets(first_note, location);\n\n    // Count the tuplets that are on the same side (above/below)\n    // as this tuplet:\n    function countTuplets(note, location) {\n      return note.tupletStack.filter(tuplet => tuplet.location === location).length;\n    }\n\n    this.notes.forEach(note => {\n      const tupletCount = countTuplets(note, location);\n      maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n      minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n    });\n\n    return maxTupletCount - minTupletCount;\n  }\n\n  // determine the y position of the tuplet:\n  getYPosition() {\n    // offset the tuplet for any nested tuplets between\n    // it and the notes:\n    const nested_tuplet_y_offset =\n      this.getNestedTupletCount() *\n      Tuplet.NESTING_OFFSET *\n      -this.location;\n\n    // offset the tuplet for any manual y_offset:\n    const y_offset = this.options.y_offset || 0;\n\n    // now iterate through the notes and find our highest\n    // or lowest locations, to form a base y_pos\n    const first_note = this.notes[0];\n    let y_pos;\n    if (this.location === Tuplet.LOCATION_TOP) {\n      y_pos = first_note.getStave().getYForLine(0) - 15;\n      // y_pos = first_note.getStemExtents().topY - 10;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        const top_y = this.notes[i].getStemDirection() === Stem.UP\n          ? this.notes[i].getStemExtents().topY - 10\n          : this.notes[i].getStemExtents().baseY - 20;\n\n        if (top_y < y_pos) {\n          y_pos = top_y;\n        }\n      }\n    } else {\n      y_pos = first_note.getStave().getYForLine(4) + 20;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        const bottom_y = this.notes[i].getStemDirection() === Stem.UP\n          ? this.notes[i].getStemExtents().baseY + 20\n          : this.notes[i].getStemExtents().topY + 10;\n        if (bottom_y > y_pos) {\n          y_pos = bottom_y;\n        }\n      }\n    }\n\n    return y_pos + nested_tuplet_y_offset + y_offset;\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    // determine x value of left bound of tuplet\n    const first_note = this.notes[0];\n    const last_note = this.notes[this.notes.length - 1];\n\n    if (!this.bracketed) {\n      this.x_pos = first_note.getStemX();\n      this.width = last_note.getStemX() - this.x_pos;\n    } else {\n      this.x_pos = first_note.getTieLeftX() - 5;\n      this.width = last_note.getTieRightX() - this.x_pos + 5;\n    }\n\n    // determine y value for tuplet\n    this.y_pos = this.getYPosition();\n\n    const addGlyphWidth = (width, glyph) => width + glyph.getMetrics().width;\n\n    // calculate total width of tuplet notation\n    let width = this.num_glyphs.reduce(addGlyphWidth, 0);\n    if (this.ratioed) {\n      width = this.denom_glyphs.reduce(addGlyphWidth, width);\n      width += this.point * 0.32;\n    }\n\n    const notation_center_x = this.x_pos + (this.width / 2);\n    const notation_start_x = notation_center_x - (width / 2);\n\n    // draw bracket if the tuplet is not beamed\n    if (this.bracketed) {\n      const line_width = this.width / 2 - width / 2 - 5;\n\n      // only draw the bracket if it has positive length\n      if (line_width > 0) {\n        this.context.fillRect(this.x_pos, this.y_pos, line_width, 1);\n        this.context.fillRect(\n          this.x_pos + this.width / 2 + width / 2 + 5,\n          this.y_pos,\n          line_width,\n          1\n        );\n        this.context.fillRect(\n          this.x_pos,\n          this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM),\n          1,\n          this.location * 10\n        );\n        this.context.fillRect(\n          this.x_pos + this.width,\n          this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM),\n          1,\n          this.location * 10\n        );\n      }\n    }\n\n    // draw numerator glyphs\n    let x_offset = 0;\n    this.num_glyphs.forEach(glyph => {\n      glyph.render(this.context, notation_start_x + x_offset, this.y_pos + (this.point / 3) - 2);\n      x_offset += glyph.getMetrics().width;\n    });\n\n    // display colon and denominator if the ratio is to be shown\n    if (this.ratioed) {\n      const colon_x = notation_start_x + x_offset + this.point * 0.16;\n      const colon_radius = this.point * 0.06;\n      this.context.beginPath();\n      this.context.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, true);\n      this.context.closePath();\n      this.context.fill();\n      this.context.beginPath();\n      this.context.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, true);\n      this.context.closePath();\n      this.context.fill();\n      x_offset += this.point * 0.32;\n      this.denom_glyphs.forEach(glyph => {\n        glyph.render(this.context, notation_start_x + x_offset, this.y_pos + (this.point / 3) - 2);\n        x_offset += glyph.getMetrics().width;\n      });\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tuplet.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\n\n// To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`.\nfunction L(...args) { if (Stem.DEBUG) Vex.L('Vex.Flow.Stem', args); }\n\nexport class Stem extends Element {\n  static get CATEGORY() { return 'stem'; }\n\n  // Stem directions\n  static get UP() {\n    return 1;\n  }\n  static get DOWN() {\n    return -1;\n  }\n\n  // Theme\n  static get WIDTH() {\n    return Flow.STEM_WIDTH;\n  }\n  static get HEIGHT() {\n    return Flow.STEM_HEIGHT;\n  }\n\n  constructor(options = {}) {\n    super();\n    this.setAttribute('type', 'Stem');\n\n    // Default notehead x bounds\n    this.x_begin = options.x_begin || 0;\n    this.x_end = options.x_end || 0;\n\n    // Y bounds for top/bottom most notehead\n    this.y_top = options.y_top || 0;\n    this.y_bottom = options.y_bottom || 0;\n\n    // Stem top extension\n    this.stem_extension = options.stem_extension || 0;\n\n    // Direction of the stem\n    this.stem_direction = options.stem_direction || 0;\n\n    // Flag to override all draw calls\n    this.hide = options.hide || false;\n\n    this.isStemlet = options.isStemlet || false;\n    this.stemletHeight = options.stemletHeight || 0;\n\n    // Use to adjust the rendered height without affecting\n    // the results of `.getExtents()`\n    this.renderHeightAdjustment = 0;\n  }\n\n  // Set the x bounds for the default notehead\n  setNoteHeadXBounds(x_begin, x_end) {\n    this.x_begin = x_begin;\n    this.x_end = x_end;\n    return this;\n  }\n\n  // Set the direction of the stem in relation to the noteheads\n  setDirection(direction) { this.stem_direction = direction; }\n\n  // Set the extension for the stem, generally for flags or beams\n  setExtension(ext) { this.stem_extension = ext; }\n  getExtension() { return this.stem_extension; }\n\n  // The the y bounds for the top and bottom noteheads\n  setYBounds(y_top, y_bottom) {\n    this.y_top = y_top;\n    this.y_bottom = y_bottom;\n  }\n\n  // The category of the object\n  getCategory() { return Stem.CATEGORY; }\n\n  // Gets the entire height for the stem\n  getHeight() {\n    return ((this.y_bottom - this.y_top) * this.stem_direction) +\n           ((Stem.HEIGHT + this.stem_extension) * this.stem_direction);\n  }\n  getBoundingBox() {\n    throw new Vex.RERR('NotImplemented', 'getBoundingBox() not implemented.');\n  }\n\n  // Get the y coordinates for the very base of the stem to the top of\n  // the extension\n  getExtents() {\n    const isStemUp = this.stem_direction === Stem.UP;\n    const ys = [this.y_top, this.y_bottom];\n    const stemHeight = Stem.HEIGHT + this.stem_extension;\n    const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n    const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n    const stemTipY = innerMostNoteheadY + (stemHeight * -this.stem_direction);\n\n    return { topY: stemTipY, baseY: outerMostNoteheadY };\n  }\n\n  // set the draw style of a stem:\n  setStyle(style) { this.style = style; return this; }\n  getStyle() { return this.style; }\n\n  setVisibility(isVisible) {\n    this.hide = !isVisible;\n    return this;\n  }\n\n  setStemlet(isStemlet, stemletHeight) {\n    this.isStemlet = isStemlet;\n    this.stemletHeight = stemletHeight;\n    return this;\n  }\n\n  // Apply current style to Canvas `context`\n  applyStyle(context) {\n    const style = this.getStyle();\n    if (style) {\n      if (style.shadowColor) context.setShadowColor(style.shadowColor);\n      if (style.shadowBlur) context.setShadowBlur(style.shadowBlur);\n      if (style.strokeStyle) context.setStrokeStyle(style.strokeStyle);\n    }\n    return this;\n  }\n\n  // Render the stem onto the canvas\n  draw() {\n    this.setRendered();\n    if (this.hide) return;\n    const ctx = this.checkContext();\n\n    let stem_x;\n    let stem_y;\n    const stem_direction = this.stem_direction;\n\n    if (stem_direction === Stem.DOWN) {\n      // Down stems are rendered to the left of the head.\n      stem_x = this.x_begin;\n      stem_y = this.y_top;\n    } else {\n      // Up stems are rendered to the right of the head.\n      stem_x = this.x_end;\n      stem_y = this.y_bottom;\n    }\n\n    const stemHeight = this.getHeight();\n\n    L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n\n    // The offset from the stem's base which is required fo satisfy the stemlet height\n    const stemletYOffset = this.isStemlet\n      ? stemHeight - this.stemletHeight * this.stem_direction\n      : 0;\n\n    // Draw the stem\n    ctx.save();\n    this.applyStyle(ctx);\n    ctx.beginPath();\n    ctx.setLineWidth(Stem.WIDTH);\n    ctx.moveTo(stem_x, stem_y - stemletYOffset);\n    ctx.lineTo(stem_x, stem_y - stemHeight - (this.renderHeightAdjustment * stem_direction));\n    ctx.stroke();\n    ctx.restore();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/stem.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the main Voice class. It's mainly a container\n// object to group `Tickables` for formatting.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\n\nexport class Voice extends Element {\n  // Modes allow the addition of ticks in three different ways:\n  //\n  // STRICT: This is the default. Ticks must fill the voice.\n  // SOFT:   Ticks can be added without restrictions.\n  // FULL:   Ticks do not need to fill the voice, but can't exceed the maximum\n  //         tick length.\n  static get Mode() {\n    return {\n      STRICT: 1,\n      SOFT: 2,\n      FULL: 3,\n    };\n  }\n\n  constructor(time) {\n    super();\n    this.setAttribute('type', 'Voice');\n\n    // Time signature shortcut: \"4/4\", \"3/8\", etc.\n    if (typeof(time) === 'string') {\n      const match = time.match(/(\\d+)\\/(\\d+)/);\n      if (match) {\n        time = {\n          num_beats: match[1],\n          beat_value: match[2],\n          resolution: Flow.RESOLUTION,\n        };\n      }\n    }\n\n    // Default time sig is 4/4\n    this.time = Vex.Merge({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }, time);\n\n    // Recalculate total ticks.\n    this.totalTicks = new Fraction(\n      this.time.num_beats * (this.time.resolution / this.time.beat_value), 1);\n\n    this.resolutionMultiplier = 1;\n\n    // Set defaults\n    this.tickables = [];\n    this.ticksUsed = new Fraction(0, 1);\n    this.smallestTickCount = this.totalTicks.clone();\n    this.largestTickWidth = 0;\n    this.stave = null;\n    // Do we care about strictly timed notes\n    this.mode = Voice.Mode.STRICT;\n\n    // This must belong to a VoiceGroup\n    this.voiceGroup = null;\n  }\n\n  // Get the total ticks in the voice\n  getTotalTicks() { return this.totalTicks; }\n\n  // Get the total ticks used in the voice by all the tickables\n  getTicksUsed() { return this.ticksUsed; }\n\n  // Get the largest width of all the tickables\n  getLargestTickWidth() { return this.largestTickWidth; }\n\n  // Get the tick count for the shortest tickable\n  getSmallestTickCount() { return this.smallestTickCount; }\n\n  // Get the tickables in the voice\n  getTickables() { return this.tickables; }\n\n  // Get/set the voice mode, use a value from `Voice.Mode`\n  getMode() { return this.mode; }\n  setMode(mode) { this.mode = mode; return this; }\n\n  // Get the resolution multiplier for the voice\n  getResolutionMultiplier() { return this.resolutionMultiplier; }\n\n  // Get the actual tick resolution for the voice\n  getActualResolution() { return this.resolutionMultiplier * this.time.resolution; }\n\n  // Set the voice's stave\n  setStave(stave) {\n    this.stave = stave;\n    this.boundingBox = null; // Reset bounding box so we can reformat\n    return this;\n  }\n\n  // Get the bounding box for the voice\n  getBoundingBox() {\n    let stave;\n    let boundingBox;\n    let bb;\n    let i;\n\n    if (!this.boundingBox) {\n      if (!this.stave) throw new Vex.RERR('NoStave', \"Can't get bounding box without stave.\");\n      stave = this.stave;\n      boundingBox = null;\n\n      for (i = 0; i < this.tickables.length; ++i) {\n        this.tickables[i].setStave(stave);\n\n        bb = this.tickables[i].getBoundingBox();\n        if (!bb) continue;\n\n        boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n      }\n\n      this.boundingBox = boundingBox;\n    }\n    return this.boundingBox;\n  }\n\n  // Every tickable must be associated with a voiceGroup. This allows formatters\n  // and preformatters to associate them with the right modifierContexts.\n  getVoiceGroup() {\n    if (!this.voiceGroup) {\n      throw new Vex.RERR('NoVoiceGroup', 'No voice group for voice.');\n    }\n\n    return this.voiceGroup;\n  }\n\n  // Set the voice group\n  setVoiceGroup(g) { this.voiceGroup = g; return this; }\n\n  // Set the voice mode to strict or soft\n  setStrict(strict) {\n    this.mode = strict ? Voice.Mode.STRICT : Voice.Mode.SOFT;\n    return this;\n  }\n\n  // Determine if the voice is complete according to the voice mode\n  isComplete() {\n    if (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) {\n      return this.ticksUsed.equals(this.totalTicks);\n    } else {\n      return true;\n    }\n  }\n\n  // Add a tickable to the voice\n  addTickable(tickable) {\n    if (!tickable.shouldIgnoreTicks()) {\n      const ticks = tickable.getTicks();\n\n      // Update the total ticks for this line.\n      this.ticksUsed.add(ticks);\n\n      if (\n        (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) &&\n        this.ticksUsed.greaterThan(this.totalTicks)\n      ) {\n        this.totalTicks.subtract(ticks);\n        throw new Vex.RERR('BadArgument', 'Too many ticks.');\n      }\n\n      // Track the smallest tickable for formatting.\n      if (ticks.lessThan(this.smallestTickCount)) {\n        this.smallestTickCount = ticks.clone();\n      }\n\n      this.resolutionMultiplier = this.ticksUsed.denominator;\n\n      // Expand total ticks using denominator from ticks used.\n      this.totalTicks.add(0, this.ticksUsed.denominator);\n    }\n\n    // Add the tickable to the line.\n    this.tickables.push(tickable);\n    tickable.setVoice(this);\n    return this;\n  }\n\n  // Add an array of tickables to the voice.\n  addTickables(tickables) {\n    for (let i = 0; i < tickables.length; ++i) {\n      this.addTickable(tickables[i]);\n    }\n\n    return this;\n  }\n\n  // Preformats the voice by applying the voice's stave to each note.\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    this.tickables.forEach((tickable) => {\n      if (!tickable.getStave()) {\n        tickable.setStave(this.stave);\n      }\n    });\n\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Render the voice onto the canvas `context` and an optional `stave`.\n  // If `stave` is omitted, it is expected that the notes have staves\n  // already set.\n  draw(context = this.context, stave = this.stave) {\n    this.setRendered();\n    let boundingBox = null;\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n\n      // Set the stave if provided\n      if (stave) tickable.setStave(stave);\n\n      if (!tickable.getStave()) {\n        throw new Vex.RuntimeError(\n          'MissingStave', 'The voice cannot draw tickables without staves.'\n        );\n      }\n\n      if (i === 0) boundingBox = tickable.getBoundingBox();\n\n      if (i > 0 && boundingBox) {\n        const tickable_bb = tickable.getBoundingBox();\n        if (tickable_bb) boundingBox.mergeWith(tickable_bb);\n      }\n\n      tickable.setContext(context);\n      tickable.draw();\n    }\n\n    this.boundingBox = boundingBox;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/voice.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Glyph } from './glyph';\n\nfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n  if (\n    type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n    type !== StaveConnector.type.BOLD_DOUBLE_RIGHT\n  ) {\n    throw new Vex.RERR(\n      'InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.'\n    );\n  }\n\n  let x_shift = 3;\n  let variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n  const thickLineOffset = 2; // For aesthetics\n\n  if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n    x_shift = -5; // Flips the side of the thin line\n    variableWidth = 3;\n  }\n\n  // Thin line\n  ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n  // Thick line\n  ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\n\nexport class StaveConnector extends Element {\n  // SINGLE_LEFT and SINGLE are the same value for compatibility\n  // with older versions of vexflow which didn't have right sided\n  // stave connectors\n  static get type() {\n    return {\n      SINGLE_RIGHT: 0,\n      SINGLE_LEFT: 1,\n      SINGLE: 1,\n      DOUBLE: 2,\n      BRACE: 3,\n      BRACKET: 4,\n      BOLD_DOUBLE_LEFT: 5,\n      BOLD_DOUBLE_RIGHT: 6,\n      THIN_DOUBLE: 7,\n      NONE: 8,\n    };\n  }\n\n  static get typeString() {\n    return {\n      singleRight: StaveConnector.type.SINGLE_RIGHT,\n      singleLeft: StaveConnector.type.SINGLE_LEFT,\n      single: StaveConnector.type.SINGLE,\n      double: StaveConnector.type.DOUBLE,\n      brace: StaveConnector.type.BRACE,\n      bracket: StaveConnector.type.BRACKET,\n      boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n      boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n      thinDouble: StaveConnector.type.THIN_DOUBLE,\n      none: StaveConnector.type.NONE,\n    };\n  }\n\n  constructor(top_stave, bottom_stave) {\n    super();\n    this.setAttribute('type', 'StaveConnector');\n\n    this.thickness = Flow.STAVE_LINE_THICKNESS;\n    this.width = 3;\n    this.top_stave = top_stave;\n    this.bottom_stave = bottom_stave;\n    this.type = StaveConnector.type.DOUBLE;\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    };\n    // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n    // 2. Offset BRACE type not to overlap with another StaveConnector\n    this.x_shift = 0;\n    this.texts = [];\n  }\n\n  setType(type) {\n    type = typeof(type) === 'string'\n      ? StaveConnector.typeString[type]\n      : type;\n\n    if (type >= StaveConnector.type.SINGLE_RIGHT && type <= StaveConnector.type.NONE) {\n      this.type = type;\n    }\n    return this;\n  }\n\n  setText(text, options) {\n    this.texts.push({\n      content: text,\n      options: Vex.Merge({ shift_x: 0, shift_y: 0 }, options),\n    });\n    return this;\n  }\n\n  setFont(font) {\n    Vex.Merge(this.font, font);\n  }\n\n  setXShift(x_shift) {\n    if (typeof x_shift !== 'number') {\n      throw Vex.RERR('InvalidType', 'x_shift must be a Number');\n    }\n\n    this.x_shift = x_shift;\n    return this;\n  }\n\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    let topY = this.top_stave.getYForLine(0);\n    let botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) +\n      this.thickness;\n    let width = this.width;\n    let topX = this.top_stave.getX();\n\n    const isRightSidedConnector = (\n      this.type === StaveConnector.type.SINGLE_RIGHT ||\n      this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n      this.type === StaveConnector.type.THIN_DOUBLE\n    );\n\n    if (isRightSidedConnector) {\n      topX = this.top_stave.getX() + this.top_stave.width;\n    }\n\n    let attachment_height = botY - topY;\n    switch (this.type) {\n      case StaveConnector.type.SINGLE:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_LEFT:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_RIGHT:\n        width = 1;\n        break;\n      case StaveConnector.type.DOUBLE:\n        topX -= (this.width + 2);\n        break;\n      case StaveConnector.type.BRACE: {\n        width = 12;\n        // May need additional code to draw brace\n        const x1 = this.top_stave.getX() - 2 + this.x_shift;\n        const y1 = topY;\n        const x3 = x1;\n        const y3 = botY;\n        const x2 = x1 - width;\n        const y2 = y1 + attachment_height / 2.0;\n        const cpx1 = x2 - (0.90 * width);\n        const cpy1 = y1 + (0.2 * attachment_height);\n        const cpx2 = x1 + (1.10 * width);\n        const cpy2 = y2 - (0.135 * attachment_height);\n        const cpx3 = cpx2;\n        const cpy3 = y2 + (0.135 * attachment_height);\n        const cpx4 = cpx1;\n        const cpy4 = y3 - (0.2 * attachment_height);\n        const cpx5 = x2 - width;\n        const cpy5 = cpy4;\n        const cpx6 = x1 + (0.40 * width);\n        const cpy6 = y2 + (0.135 * attachment_height);\n        const cpx7 = cpx6;\n        const cpy7 = y2 - (0.135 * attachment_height);\n        const cpx8 = cpx5;\n        const cpy8 = cpy1;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n        ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n        ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n        ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n        ctx.fill();\n        ctx.stroke();\n        break;\n      } case StaveConnector.type.BRACKET:\n        topY -= 4;\n        botY += 4;\n        attachment_height = botY - topY;\n        Glyph.renderGlyph(ctx, topX - 5, topY - 3, 40, 'v1b', true);\n        Glyph.renderGlyph(ctx, topX - 5, botY + 3, 40, 'v10', true);\n        topX -= (this.width + 2);\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_LEFT:\n        drawBoldDoubleLine(ctx, this.type, topX + this.x_shift, topY, botY);\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n        drawBoldDoubleLine(ctx, this.type, topX, topY, botY);\n        break;\n      case StaveConnector.type.THIN_DOUBLE:\n        width = 1;\n        break;\n      case StaveConnector.type.NONE:\n        break;\n      default:\n        throw new Vex.RERR(\n          'InvalidType', `The provided StaveConnector.type (${this.type}) is invalid`\n        );\n    }\n\n    if (\n      this.type !== StaveConnector.type.BRACE &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n      this.type !== StaveConnector.type.NONE\n    ) {\n      ctx.fillRect(topX, topY, width, attachment_height);\n    }\n\n    // If the connector is a thin double barline, draw the paralell line\n    if (this.type === StaveConnector.type.THIN_DOUBLE) {\n      ctx.fillRect(topX - 3, topY, width, attachment_height);\n    }\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    // Add stave connector text\n    for (let i = 0; i < this.texts.length; i++) {\n      const text = this.texts[i];\n      const text_width = ctx.measureText('' + text.content).width;\n      const x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n      const y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 +\n        text.options.shift_y;\n\n      ctx.fillText('' + text.content, x, y + 4);\n    }\n    ctx.restore();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/staveconnector.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// *Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.*\n//\n// See `tests/stavenote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { BoundingBox } from './boundingbox';\nimport { Stem } from './stem';\nimport { NoteHead } from './notehead';\nimport { StemmableNote } from './stemmablenote';\nimport { Modifier } from './modifier';\nimport { Dot } from './dot';\n\n// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\nfunction L(...args) { if (StaveNote.DEBUG) Vex.L('Vex.Flow.StaveNote', args); }\n\nconst getStemAdjustment = (note) => Stem.WIDTH / (2 * -note.getStemDirection());\n\nconst isInnerNoteIndex = (note, index) =>\n  index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\n\n// Helper methods for rest positioning in ModifierContext.\nfunction shiftRestVertical(rest, note, dir) {\n  const delta = (note.isrest ? 0.0 : 1.0) * dir;\n\n  rest.line += delta;\n  rest.maxLine += delta;\n  rest.minLine += delta;\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) + (delta));\n}\n\n// Called from formatNotes :: center a rest between two notes\nfunction centerRest(rest, noteU, noteL) {\n  const delta = rest.line - Vex.MidLine(noteU.minLine, noteL.maxLine);\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n  rest.line -= delta;\n  rest.maxLine -= delta;\n  rest.minLine -= delta;\n}\n\nexport class StaveNote extends StemmableNote {\n  static get CATEGORY() { return 'stavenotes'; }\n  static get STEM_UP() { return Stem.UP; }\n  static get STEM_DOWN() { return Stem.DOWN; }\n  static get DEFAULT_LEDGER_LINE_OFFSET() { return 3; }\n\n  // ## Static Methods\n  //\n  // Format notes inside a ModifierContext.\n  static format(notes, state) {\n    if (!notes || notes.length < 2) return false;\n\n    if (notes[0].getStave() != null) return StaveNote.formatByY(notes, state);\n\n    const notesList = [];\n\n    for (let i = 0; i < notes.length; i++) {\n      const props = notes[i].getKeyProps();\n      const line = props[0].line;\n      let minL = props[props.length - 1].line;\n      const stemDirection = notes[i].getStemDirection();\n      const stemMax = notes[i].getStemLength() / 10;\n      const stemMin = notes[i].getStemMinumumLength() / 10;\n\n      let maxL;\n      if (notes[i].isRest()) {\n        maxL = line + notes[i].glyph.line_above;\n        minL = line - notes[i].glyph.line_below;\n      } else {\n        maxL = stemDirection === 1\n          ? props[props.length - 1].line + stemMax\n          : props[props.length - 1].line;\n\n        minL = stemDirection === 1\n          ? props[0].line\n          : props[0].line - stemMax;\n      }\n\n      notesList.push({\n        line: props[0].line, // note/rest base line\n        maxLine: maxL, // note/rest upper bounds line\n        minLine: minL, // note/rest lower bounds line\n        isrest: notes[i].isRest(),\n        stemDirection,\n        stemMax, // Maximum (default) note stem length;\n        stemMin, // minimum note stem length\n        voice_shift: notes[i].getVoiceShiftWidth(),\n        is_displaced: notes[i].isDisplaced(), // note manually displaced\n        note: notes[i],\n      });\n    }\n\n    const voices = notesList.length;\n\n    let noteU = notesList[0];\n    const noteM = voices > 2 ? notesList[1] : null;\n    let noteL = voices > 2 ? notesList[2] : notesList[1];\n\n    // for two voice backward compatibility, ensure upper voice is stems up\n    // for three voices, the voices must be in order (upper, middle, lower)\n    if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n      noteU = notesList[1];\n      noteL = notesList[0];\n    }\n\n    const voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n    let xShift = 0;\n    let stemDelta;\n\n    // Test for two voice note intersection\n    if (voices === 2) {\n      const lineSpacing = noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n      // if top voice is a middle voice, check stem intersection with lower voice\n      if (noteU.stemDirection === noteL.stemDirection &&\n          noteU.minLine <= noteL.maxLine) {\n        if (!noteU.isrest) {\n          stemDelta = Math.abs(noteU.line - (noteL.maxLine + 0.5));\n          stemDelta = Math.max(stemDelta, noteU.stemMin);\n          noteU.minLine = noteU.line - stemDelta;\n          noteU.note.setStemLength(stemDelta * 10);\n        }\n      }\n      if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n        if (noteU.isrest) {\n          // shift rest up\n          shiftRestVertical(noteU, noteL, 1);\n        } else if (noteL.isrest) {\n          // shift rest down\n          shiftRestVertical(noteL, noteU, -1);\n        } else {\n          xShift = voiceXShift;\n          if (noteU.stemDirection === noteL.stemDirection) {\n            // upper voice is middle voice, so shift it right\n            noteU.note.setXShift(xShift + 3);\n          } else {\n            // shift lower voice right\n            noteL.note.setXShift(xShift);\n          }\n        }\n      }\n\n      // format complete\n      return true;\n    }\n\n    // Check middle voice stem intersection with lower voice\n    if (noteM !== null && noteM.minLine < noteL.maxLine + 0.5) {\n      if (!noteM.isrest) {\n        stemDelta = Math.abs(noteM.line - (noteL.maxLine + 0.5));\n        stemDelta = Math.max(stemDelta, noteM.stemMin);\n        noteM.minLine = noteM.line - stemDelta;\n        noteM.note.setStemLength(stemDelta * 10);\n      }\n    }\n\n    // For three voices, test if rests can be repositioned\n    //\n    // Special case 1 :: middle voice rest between two notes\n    //\n    if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n      if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n        const restHeight = noteM.maxLine - noteM.minLine;\n        const space = noteU.minLine - noteL.maxLine;\n        if (restHeight < space) {\n           // center middle voice rest between the upper and lower voices\n          centerRest(noteM, noteU, noteL);\n        } else {\n          xShift = voiceXShift + 3;    // shift middle rest right\n          noteM.note.setXShift(xShift);\n        }\n         // format complete\n        return true;\n      }\n    }\n\n    // Special case 2 :: all voices are rests\n    if (noteU.isrest && noteM.isrest && noteL.isrest) {\n      // Shift upper voice rest up\n      shiftRestVertical(noteU, noteM, 1);\n      // Shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n      // format complete\n      return true;\n    }\n\n    // Test if any other rests can be repositioned\n    if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n      // Shift middle voice rest up\n      shiftRestVertical(noteM, noteL, 1);\n    }\n    if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n      // Shift middle voice rest down\n      shiftRestVertical(noteM, noteU, -1);\n    }\n    if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n      // shift upper voice rest up;\n      shiftRestVertical(noteU, noteM, 1);\n    }\n    if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n      // shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n    }\n\n    // If middle voice intersects upper or lower voice\n    if ((!noteU.isrest && !noteM.isrest && noteU.minLine <= noteM.maxLine + 0.5) ||\n        (!noteM.isrest && !noteL.isrest && noteM.minLine <= noteL.maxLine)) {\n      xShift = voiceXShift + 3;      // shift middle note right\n      noteM.note.setXShift(xShift);\n    }\n\n    return true;\n  }\n\n  static formatByY(notes, state) {\n    // NOTE: this function does not support more than two voices per stave\n    // use with care.\n    let hasStave = true;\n\n    for (let i = 0; i < notes.length; i++) {\n      hasStave = hasStave && notes[i].getStave() != null;\n    }\n\n    if (!hasStave) {\n      throw new Vex.RERR(\n        'Stave Missing',\n        'All notes must have a stave - Vex.Flow.ModifierContext.formatMultiVoice!'\n      );\n    }\n\n    let xShift = 0;\n\n    for (let i = 0; i < notes.length - 1; i++) {\n      let topNote = notes[i];\n      let bottomNote = notes[i + 1];\n\n      if (topNote.getStemDirection() === Stem.DOWN) {\n        topNote = notes[i + 1];\n        bottomNote = notes[i];\n      }\n\n      const topKeys = topNote.getKeyProps();\n      const bottomKeys = bottomNote.getKeyProps();\n\n      const HALF_NOTEHEAD_HEIGHT = 0.5;\n\n      // `keyProps` and `stave.getYForLine` have different notions of a `line`\n      // so we have to convert the keyProps value by subtracting 5.\n      // See https://github.com/0xfe/vexflow/wiki/Development-Gotchas\n      //\n      // We also extend the y for each note by a half notehead because the\n      // notehead's origin is centered\n      const topNotBottomY = topNote\n        .getStave()\n        .getYForLine(5 - topKeys[0].line + HALF_NOTEHEAD_HEIGHT);\n\n      const bottomNoteTopY = bottomNote\n        .getStave()\n        .getYForLine(5 - bottomKeys[bottomKeys.length - 1].line - HALF_NOTEHEAD_HEIGHT);\n\n      const areNotesColliding = bottomNoteTopY - topNotBottomY < 0;\n\n      if (areNotesColliding) {\n        xShift = topNote.getVoiceShiftWidth();\n        bottomNote.setXShift(xShift);\n      }\n    }\n\n    state.right_shift += xShift;\n  }\n\n  static postFormat(notes) {\n    if (!notes) return false;\n\n    notes.forEach(note => note.postFormat());\n\n    return true;\n  }\n\n  constructor(noteStruct) {\n    super(noteStruct);\n    this.setAttribute('type', 'StaveNote');\n\n    this.keys = noteStruct.keys;\n    this.clef = noteStruct.clef;\n    this.octave_shift = noteStruct.octave_shift;\n    this.beam = null;\n\n    // Pull note rendering properties\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `Invalid note initialization data (No glyph found): ${JSON.stringify(noteStruct)}`\n      );\n    }\n\n    // if true, displace note to right\n    this.displaced = false;\n    this.dot_shiftY = 0;\n    // per-pitch properties\n    this.keyProps = [];\n    // for displaced ledger lines\n    this.use_default_head_x = false;\n\n    // Drawing\n    this.note_heads = [];\n    this.modifiers = [];\n\n    Vex.Merge(this.render_options, {\n      // font size for note heads and rests\n      glyph_font_scale: noteStruct.glyph_font_scale || Flow.DEFAULT_NOTATION_FONT_SCALE,\n      // number of stroke px to the left and right of head\n      stroke_px: noteStruct.stroke_px || StaveNote.DEFAULT_LEDGER_LINE_OFFSET,\n    });\n\n    this.calculateKeyProps();\n    this.buildStem();\n\n    // Set the stem direction\n    if (noteStruct.auto_stem) {\n      this.autoStem();\n    } else {\n      this.setStemDirection(noteStruct.stem_direction);\n    }\n    this.reset();\n    this.buildFlag();\n    this.calcExtraPx();\n  }\n\n  reset() {\n    super.reset();\n    this.buildNoteHeads();\n    if (this.stave) {\n      this.note_heads.forEach(head => head.setStave(this.stave));\n    }\n  }\n\n  getCategory() { return StaveNote.CATEGORY; }\n\n  // Builds a `Stem` for the note\n  buildStem() {\n    const glyph = this.getGlyph();\n    const yExtend = glyph.code_head === 'v95' || glyph.code_head === 'v3e' ? -4 : 0;\n\n    this.setStem(new Stem({\n      yExtend,\n      hide: !!this.isRest(),\n    }));\n  }\n\n  // Builds a `NoteHead` for each key in the note\n  buildNoteHeads() {\n    this.note_heads = [];\n    const stemDirection = this.getStemDirection();\n    const keys = this.getKeys();\n\n    let lastLine = null;\n    let lineDiff = null;\n    let displaced = false;\n\n    // Draw notes from bottom to top.\n\n    // For down-stem notes, we draw from top to bottom.\n    let start;\n    let end;\n    let step;\n    if (stemDirection === Stem.UP) {\n      start = 0;\n      end = keys.length;\n      step = 1;\n    } else if (stemDirection === Stem.DOWN) {\n      start = keys.length - 1;\n      end = -1;\n      step = -1;\n    }\n\n    for (let i = start; i !== end; i += step) {\n      const noteProps = this.keyProps[i];\n      const line = noteProps.line;\n\n      // Keep track of last line with a note head, so that consecutive heads\n      // are correctly displaced.\n      if (lastLine === null) {\n        lastLine = line;\n      } else {\n        lineDiff = Math.abs(lastLine - line);\n        if (lineDiff === 0 || lineDiff === 0.5) {\n          displaced = !displaced;\n        } else {\n          displaced = false;\n          this.use_default_head_x = true;\n        }\n      }\n      lastLine = line;\n\n      const notehead = new NoteHead({\n        duration: this.duration,\n        note_type: this.noteType,\n        displaced,\n        stem_direction: stemDirection,\n        custom_glyph_code: noteProps.code,\n        glyph_font_scale: this.render_options.glyph_font_scale,\n        x_shift: noteProps.shift_right,\n        line: noteProps.line,\n      });\n\n      this.note_heads[i] = notehead;\n    }\n  }\n\n  // Automatically sets the stem direction based on the keys in the note\n  autoStem() {\n    // Figure out optimal stem direction based on given notes\n    this.minLine = this.keyProps[0].line;\n    this.maxLine = this.keyProps[this.keyProps.length - 1].line;\n\n    const MIDDLE_LINE = 3;\n    const decider = (this.minLine + this.maxLine) / 2;\n    const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n\n    this.setStemDirection(stemDirection);\n  }\n\n  // Calculates and stores the properties for each key in the note\n  calculateKeyProps() {\n    let lastLine = null;\n    for (let i = 0; i < this.keys.length; ++i) {\n      const key = this.keys[i];\n\n      // All rests use the same position on the line.\n      // if (this.glyph.rest) key = this.glyph.position;\n      if (this.glyph.rest) this.glyph.position = key;\n\n      const options = { octave_shift: this.octave_shift || 0 };\n      const props = Flow.keyProperties(key, this.clef, options);\n\n      if (!props) {\n        throw new Vex.RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n      }\n\n      // Override line placement for default rests\n      if (props.key === 'R') {\n        if (this.duration === '1' || this.duration === 'w') {\n          props.line = 4;\n        } else {\n          props.line = 3;\n        }\n      }\n\n      // Calculate displacement of this note\n      const line = props.line;\n      if (lastLine === null) {\n        lastLine = line;\n      } else {\n        if (Math.abs(lastLine - line) === 0.5) {\n          this.displaced = true;\n          props.displaced = true;\n\n          // Have to mark the previous note as\n          // displaced as well, for modifier placement\n          if (this.keyProps.length > 0) {\n            this.keyProps[i - 1].displaced = true;\n          }\n        }\n      }\n\n      lastLine = line;\n      this.keyProps.push(props);\n    }\n\n    // Sort the notes from lowest line to highest line\n    lastLine = -Infinity;\n    this.keyProps.forEach(key => {\n      if (key.line < lastLine) {\n        Vex.W(\n          'Unsorted keys in note will be sorted. ' +\n          'See https://github.com/0xfe/vexflow/issues/104 for details.'\n        );\n      }\n      lastLine = key.line;\n    });\n    this.keyProps.sort((a, b) => a.line - b.line);\n  }\n\n  // Get the `BoundingBox` for the entire note\n  getBoundingBox() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n\n    const { width: w, modLeftPx, extraLeftPx } = this.getMetrics();\n    const x = this.getAbsoluteX() - modLeftPx - extraLeftPx;\n\n    let minY = 0;\n    let maxY = 0;\n    const halfLineSpacing = this.getStave().getSpacingBetweenLines() / 2;\n    const lineSpacing = halfLineSpacing * 2;\n\n    if (this.isRest()) {\n      const y = this.ys[0];\n      const frac = Flow.durationToFraction(this.duration);\n      if (frac.equals(1) || frac.equals(2)) {\n        minY = y - halfLineSpacing;\n        maxY = y + halfLineSpacing;\n      } else {\n        minY = y - (this.glyph.line_above * lineSpacing);\n        maxY = y + (this.glyph.line_below * lineSpacing);\n      }\n    } else if (this.glyph.stem) {\n      const ys = this.getStemExtents();\n      ys.baseY += halfLineSpacing * this.stem_direction;\n      minY = Math.min(ys.topY, ys.baseY);\n      maxY = Math.max(ys.topY, ys.baseY);\n    } else {\n      minY = null;\n      maxY = null;\n\n      for (let i = 0; i < this.ys.length; ++i) {\n        const yy = this.ys[i];\n        if (i === 0) {\n          minY = yy;\n          maxY = yy;\n        } else {\n          minY = Math.min(yy, minY);\n          maxY = Math.max(yy, maxY);\n        }\n      }\n      minY -= halfLineSpacing;\n      maxY += halfLineSpacing;\n    }\n\n    return new BoundingBox(x, minY, w, maxY - minY);\n  }\n\n  // Gets the line number of the top or bottom note in the chord.\n  // If `isTopNote` is `true` then get the top note\n  getLineNumber(isTopNote) {\n    if (!this.keyProps.length) {\n      throw new Vex.RERR(\n        'NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\"\n      );\n    }\n\n    let resultLine = this.keyProps[0].line;\n\n    // No precondition assumed for sortedness of keyProps array\n    for (let i = 0; i < this.keyProps.length; i++) {\n      const thisLine = this.keyProps[i].line;\n      if (isTopNote) {\n        if (thisLine > resultLine) resultLine = thisLine;\n      } else {\n        if (thisLine < resultLine) resultLine = thisLine;\n      }\n    }\n\n    return resultLine;\n  }\n\n  // Determine if current note is a rest\n  isRest() { return this.glyph.rest; }\n\n  // Determine if the current note is a chord\n  isChord() { return !this.isRest() && this.keys.length > 1; }\n\n  // Determine if the `StaveNote` has a stem\n  hasStem() { return this.glyph.stem; }\n\n  hasFlag() {\n    return super.hasFlag() && !this.isRest();\n  }\n\n  getStemX() {\n    if (this.noteType === 'r') {\n      return this.getCenterGlyphX();\n    } else {\n      // We adjust the origin of the stem because we want the stem left-aligned\n      // with the notehead if stemmed-down, and right-aligned if stemmed-up\n      return super.getStemX() + getStemAdjustment(this);\n    }\n  }\n\n  // Get the `y` coordinate for text placed on the top/bottom of a\n  // note at a desired `text_line`\n  getYForTopText(textLine) {\n    const extents = this.getStemExtents();\n    return Math.min(\n      this.stave.getYForTopText(textLine),\n      extents.topY - (this.render_options.annotation_spacing * (textLine + 1))\n    );\n  }\n  getYForBottomText(textLine) {\n    const extents = this.getStemExtents();\n    return Math.max(\n      this.stave.getYForTopText(textLine),\n      extents.baseY + (this.render_options.annotation_spacing * (textLine))\n    );\n  }\n\n  // Sets the current note to the provided `stave`. This applies\n  // `y` values to the `NoteHeads`.\n  setStave(stave) {\n    super.setStave(stave);\n\n    const ys = this.note_heads.map(notehead => {\n      notehead.setStave(stave);\n      return notehead.getY();\n    });\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      const { y_top, y_bottom } = this.getNoteHeadBounds();\n      this.stem.setYBounds(y_top, y_bottom);\n    }\n\n    return this;\n  }\n\n  // Get the pitches in the note\n  getKeys() { return this.keys; }\n\n  // Get the properties for all the keys in the note\n  getKeyProps() {\n    return this.keyProps;\n  }\n\n  // Check if note is shifted to the right\n  isDisplaced() {\n    return this.displaced;\n  }\n\n  // Sets whether shift note to the right. `displaced` is a `boolean`\n  setNoteDisplaced(displaced) {\n    this.displaced = displaced;\n    return this;\n  }\n\n  // Get the starting `x` coordinate for a `StaveTie`\n  getTieRightX() {\n    let tieStartX = this.getAbsoluteX();\n    tieStartX += this.getGlyphWidth() + this.x_shift + this.extraRightPx;\n    if (this.modifierContext) tieStartX += this.modifierContext.getExtraRightPx();\n    return tieStartX;\n  }\n\n  // Get the ending `x` coordinate for a `StaveTie`\n  getTieLeftX() {\n    let tieEndX = this.getAbsoluteX();\n    tieEndX += this.x_shift - this.extraLeftPx;\n    return tieEndX;\n  }\n\n  // Get the stave line on which to place a rest\n  getLineForRest() {\n    let restLine = this.keyProps[0].line;\n    if (this.keyProps.length > 1) {\n      const lastLine  = this.keyProps[this.keyProps.length - 1].line;\n      const top = Math.max(restLine, lastLine);\n      const bot = Math.min(restLine, lastLine);\n      restLine = Vex.MidLine(top, bot);\n    }\n\n    return restLine;\n  }\n\n  // Get the default `x` and `y` coordinates for the provided `position`\n  // and key `index`\n  getModifierStartXY(position, index) {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n    let x = 0;\n    if (position === LEFT) {\n      // extra_left_px\n      // FIXME: What are these magic numbers?\n      x = -1 * 2;\n    } else if (position === RIGHT) {\n      // extra_right_px\n       // FIXME: What is this magical +2?\n      x = this.getGlyphWidth() + this.x_shift + 2;\n\n      if (this.stem_direction === Stem.UP && this.hasFlag() && isInnerNoteIndex(this, index)) {\n        x += this.flag.getMetrics().width;\n      }\n    } else if (position === BELOW || position === ABOVE) {\n      x = this.getGlyphWidth() / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Sets the style of the complete StaveNote, including all keys\n  // and the stem.\n  setStyle(style) {\n    this.note_heads.forEach(notehead => notehead.setStyle(style));\n    this.stem.setStyle(style);\n  }\n\n  // Sets the notehead at `index` to the provided coloring `style`.\n  //\n  // `style` is an `object` with the following properties: `shadowColor`,\n  // `shadowBlur`, `fillStyle`, `strokeStyle`\n  setKeyStyle(index, style) {\n    this.note_heads[index].setStyle(style);\n    return this;\n  }\n\n  setKeyLine(index, line) {\n    this.keyProps[index].line = line;\n    this.note_heads[index].setLine(line);\n    return this;\n  }\n\n  getKeyLine(index) {\n    return this.keyProps[index].line;\n  }\n\n  // Add self to modifier context. `mContext` is the `ModifierContext`\n  // to be added to.\n  addToModifierContext(mContext) {\n    this.setModifierContext(mContext);\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addModifier(this.modifiers[i]);\n    }\n    this.modifierContext.addModifier(this);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Generic function to add modifiers to a note\n  //\n  // Parameters:\n  // * `index`: The index of the key that we're modifying\n  // * `modifier`: The modifier to add\n  addModifier(index, modifier) {\n    modifier.setNote(this);\n    modifier.setIndex(index);\n    this.modifiers.push(modifier);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Helper function to add an accidental to a key\n  addAccidental(index, accidental) {\n    return this.addModifier(index, accidental);\n  }\n\n  // Helper function to add an articulation to a key\n  addArticulation(index, articulation) {\n    return this.addModifier(index, articulation);\n  }\n\n  // Helper function to add an annotation to a key\n  addAnnotation(index, annotation) {\n    return this.addModifier(index, annotation);\n  }\n\n  // Helper function to add a dot on a specific key\n  addDot(index) {\n    const dot = new Dot();\n    dot.setDotShiftY(this.glyph.dot_shiftY);\n    this.dots++;\n    return this.addModifier(index, dot);\n  }\n\n  // Convenience method to add dot to all keys in note\n  addDotToAll() {\n    for (let i = 0; i < this.keys.length; ++i) {\n      this.addDot(i);\n    }\n    return this;\n  }\n\n  // Get all accidentals in the `ModifierContext`\n  getAccidentals() {\n    return this.modifierContext.getModifiers('accidentals');\n  }\n\n  // Get all dots in the `ModifierContext`\n  getDots() {\n    return this.modifierContext.getModifiers('dots');\n  }\n\n  // Get the width of the note if it is displaced. Used for `Voice`\n  // formatting\n  getVoiceShiftWidth() {\n    // TODO: may need to accomodate for dot here.\n    return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n  }\n\n  // Calculates and sets the extra pixels to the left or right\n  // if the note is displaced.\n  calcExtraPx() {\n    this.setExtraLeftPx(\n      this.displaced && this.stem_direction === Stem.DOWN\n        ? this.getGlyphWidth()\n        : 0\n    );\n\n    // For upstems with flags, the extra space is unnecessary, since it's taken\n    // up by the flag.\n    this.setExtraRightPx(\n      !this.hasFlag() && this.displaced && this.stem_direction === Stem.UP\n        ? this.getGlyphWidth()\n        : 0\n    );\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return;\n    if (this.modifierContext) this.modifierContext.preFormat();\n\n    let width = this.getGlyphWidth() + this.extraLeftPx + this.extraRightPx;\n\n    // For upward flagged notes, the width of the flag needs to be added\n    if (this.glyph.flag && this.beam === null && this.stem_direction === Stem.UP) {\n      width += this.getGlyphWidth();\n    }\n\n    this.setWidth(width);\n    this.setPreFormatted(true);\n  }\n\n  // Gets the staff line and y value for the highest and lowest noteheads\n  getNoteHeadBounds() {\n    // Top and bottom Y values for stem.\n    let yTop = null;\n    let yBottom = null;\n\n    let highestLine = this.stave.getNumLines();\n    let lowestLine = 1;\n\n    this.note_heads.forEach(notehead => {\n      const line = notehead.getLine();\n      const y = notehead.getY();\n\n      if (yTop === null || y < yTop)  {\n        yTop = y;\n      }\n\n      if (yBottom === null || y > yBottom) {\n        yBottom = y;\n      }\n\n      highestLine = line > highestLine ? line : highestLine;\n      lowestLine = line < lowestLine ? line : lowestLine;\n    }, this);\n\n    return {\n      y_top: yTop,\n      y_bottom: yBottom,\n      highest_line: highestLine,\n      lowest_line: lowestLine,\n    };\n  }\n\n  // Get the starting `x` coordinate for the noteheads\n  getNoteHeadBeginX() {\n    return this.getAbsoluteX() + this.x_shift;\n  }\n\n  // Get the ending `x` coordinate for the noteheads\n  getNoteHeadEndX() {\n    const xBegin = this.getNoteHeadBeginX();\n    return xBegin + this.getGlyphWidth();\n  }\n\n  // Draw the ledger lines between the stave and the highest/lowest keys\n  drawLedgerLines() {\n    const {\n      note_heads, stave, use_default_head_x, x_shift, glyph,\n      render_options: { stroke_px },\n      context: ctx,\n    } = this;\n\n    if (this.isRest()) return;\n    if (!ctx) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const { highest_line, lowest_line } = this.getNoteHeadBounds();\n    let headX = note_heads[0].getAbsoluteX();\n\n    const drawLedgerLine = (y) => {\n      if (use_default_head_x === true)  {\n        headX = this.getAbsoluteX() + x_shift;\n      }\n      const x = headX - stroke_px;\n      const length = ((headX + glyph.getWidth()) - headX) + (stroke_px * 2);\n\n      ctx.fillRect(x, y, length, 1);\n    };\n\n    for (let line = 6; line <= highest_line; ++line) {\n      drawLedgerLine(stave.getYForNote(line));\n    }\n\n    for (let line = 0; line >= lowest_line; --line) {\n      drawLedgerLine(stave.getYForNote(line));\n    }\n  }\n\n  // Draw all key modifiers\n  drawModifiers() {\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const ctx = this.context;\n    ctx.openGroup('modifiers');\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const modifier = this.modifiers[i];\n      const notehead = this.note_heads[modifier.getIndex()];\n      const noteheadStyle = notehead.getStyle();\n      if (noteheadStyle) {\n        ctx.save();\n        notehead.applyStyle(ctx);\n      }\n      modifier.setContext(ctx);\n      modifier.draw();\n      if (noteheadStyle) {\n        ctx.restore();\n      }\n    }\n    ctx.closeGroup();\n  }\n\n  // Draw the flag for the note\n  drawFlag() {\n    const { stem, beam, context: ctx } = this;\n\n    if (!ctx) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const shouldRenderFlag = beam === null;\n    const glyph = this.getGlyph();\n\n    if (glyph.flag && shouldRenderFlag) {\n      const { y_top, y_bottom } = this.getNoteHeadBounds();\n      const noteStemHeight = stem.getHeight();\n      const flagX = this.getStemX();\n      // FIXME: What's with the magic +/- 2\n      const flagY = this.getStemDirection() === Stem.DOWN\n          // Down stems have flags on the left\n          ? y_top - noteStemHeight + 2\n          // Up stems have flags on the eft.\n          : y_bottom - noteStemHeight - 2;\n\n      // Draw the Flag\n      ctx.openGroup('flag', null, { pointerBBox: true });\n      this.flag.render(ctx, flagX, flagY);\n      ctx.closeGroup();\n    }\n  }\n\n  // Draw the NoteHeads\n  drawNoteHeads() {\n    this.note_heads.forEach(notehead => {\n      this.context.openGroup('notehead', null, { pointerBBox: true });\n      notehead.setContext(this.context).draw();\n      this.context.closeGroup();\n    });\n  }\n\n  // Render the stem onto the canvas\n  drawStem(stemStruct) {\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    if (stemStruct) {\n      this.setStem(new Stem(stemStruct));\n    }\n\n    this.context.openGroup('stem', null, { pointerBBox: true });\n    this.stem.setContext(this.context).draw();\n    this.context.closeGroup();\n  }\n\n  // Draws all the `StaveNote` parts. This is the main drawing method.\n  draw() {\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    const xBegin = this.getNoteHeadBeginX();\n    const shouldRenderStem = this.hasStem() && !this.beam;\n\n    // Format note head x positions\n    this.note_heads.forEach(notehead => notehead.setX(xBegin));\n\n    // Format stem x positions\n    const stemX = this.getStemX();\n    this.stem.setNoteHeadXBounds(stemX, stemX);\n\n    L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n\n    // Draw each part of the note\n    this.drawLedgerLines();\n\n    this.setAttribute('el', this.context.openGroup('stavenote', this.getAttribute('id')));\n    this.context.openGroup('note', null, { pointerBBox: true });\n    if (shouldRenderStem) this.drawStem();\n    this.drawNoteHeads();\n    this.drawFlag();\n    this.context.closeGroup();\n    this.drawModifiers();\n    this.context.closeGroup();\n    this.setRendered();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/stavenote.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `NoteHeads`. `NoteHeads` are typically not manipulated\n// directly, but used internally in `StaveNote`.\n//\n// See `tests/notehead_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`.\nfunction L(...args) { if (NoteHead.DEBUG) Vex.L('Vex.Flow.NoteHead', args); }\n\n// Draw slashnote head manually. No glyph exists for this.\n//\n// Parameters:\n// * `ctx`: the Canvas context\n// * `duration`: the duration of the note. ex: \"4\"\n// * `x`: the x coordinate to draw at\n// * `y`: the y coordinate to draw at\n// * `stem_direction`: the direction of the stem\nfunction drawSlashNoteHead(ctx, duration, x, y, stem_direction, staveSpace) {\n  const width = Flow.SLASH_NOTEHEAD_WIDTH;\n  ctx.save();\n  ctx.setLineWidth(Flow.STEM_WIDTH);\n\n  let fill = false;\n\n  if (Flow.durationToNumber(duration) > 2) {\n    fill = true;\n  }\n\n  if (!fill) x -= (Flow.STEM_WIDTH / 2) * stem_direction;\n\n  ctx.beginPath();\n  ctx.moveTo(x, y + staveSpace);\n  ctx.lineTo(x, y + 1);\n  ctx.lineTo(x + width, y - staveSpace);\n  ctx.lineTo(x + width, y);\n  ctx.lineTo(x, y + staveSpace);\n  ctx.closePath();\n\n  if (fill) {\n    ctx.fill();\n  } else {\n    ctx.stroke();\n  }\n\n  if (Flow.durationToFraction(duration).equals(0.5)) {\n    const breve_lines = [-3, -1, width + 1, width + 3];\n    for (let i = 0; i < breve_lines.length; i++) {\n      ctx.beginPath();\n      ctx.moveTo(x + breve_lines[i], y - 10);\n      ctx.lineTo(x + breve_lines[i], y + 11);\n      ctx.stroke();\n    }\n  }\n\n  ctx.restore();\n}\n\nexport class NoteHead extends Note {\n  static get CATEGORY() { return 'notehead'; }\n\n  constructor(head_options) {\n    super(head_options);\n    this.setAttribute('type', 'NoteHead');\n\n    this.index = head_options.index;\n    this.x = head_options.x || 0;\n    this.y = head_options.y || 0;\n    this.note_type = head_options.note_type;\n    this.duration = head_options.duration;\n    this.displaced = head_options.displaced || false;\n    this.stem_direction = head_options.stem_direction || StaveNote.STEM_UP;\n    this.line = head_options.line;\n\n    // Get glyph code based on duration and note type. This could be\n    // regular notes, rests, or other custom codes.\n    this.glyph = Flow.durationToGlyph(this.duration, this.note_type);\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `No glyph found for duration '${this.duration}' and type '${this.note_type}'`);\n    }\n\n    this.glyph_code = this.glyph.code_head;\n    this.x_shift = head_options.x_shift;\n    if (head_options.custom_glyph_code) {\n      this.custom_glyph = true;\n      this.glyph_code = head_options.custom_glyph_code;\n    }\n\n    this.style = head_options.style;\n    this.slashed = head_options.slashed;\n\n    Vex.Merge(this.render_options, {\n      // font size for note heads\n      glyph_font_scale: head_options.glyph_font_scale || Flow.DEFAULT_NOTATION_FONT_SCALE,\n      // number of stroke px to the left and right of head\n      stroke_px: 3,\n    });\n\n    this.setWidth(this.glyph.getWidth(this.render_options.glyph_font_scale));\n  }\n\n  getCategory() { return NoteHead.CATEGORY; }\n\n  // Get the width of the notehead\n  getWidth() { return this.width; }\n\n  // Determine if the notehead is displaced\n  isDisplaced() { return this.displaced === true; }\n\n  // Get/set the notehead's style\n  //\n  // `style` is an `object` with the following properties: `shadowColor`,\n  // `shadowBlur`, `fillStyle`, `strokeStyle`\n  getStyle() { return this.style; }\n  setStyle(style) { this.style = style; return this; }\n\n  // Get the glyph data\n  getGlyph() { return this.glyph; }\n\n  // Set the X coordinate\n  setX(x) { this.x = x; return this; }\n\n  // get/set the Y coordinate\n  getY() { return this.y; }\n  setY(y) { this.y = y;  return this; }\n\n  // Get/set the stave line the notehead is placed on\n  getLine() { return this.line; }\n  setLine(line) { this.line = line; return this; }\n\n  // Get the canvas `x` coordinate position of the notehead.\n  getAbsoluteX() {\n    // If the note has not been preformatted, then get the static x value\n    // Otherwise, it's been formatted and we should use it's x value relative\n    // to its tick context\n    const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n\n    // For a more natural displaced notehead, we adjust the displacement amount\n    // by half the stem width in order to maintain a slight overlap with the stem\n    const displacementStemAdjustment = (Stem.WIDTH / 2);\n\n    return x + (this.displaced\n      ? (this.width - displacementStemAdjustment) * this.stem_direction\n      : 0\n    );\n  }\n\n  // Get the `BoundingBox` for the `NoteHead`\n  getBoundingBox() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n\n    const spacing = this.stave.getSpacingBetweenLines();\n    const half_spacing = spacing / 2;\n    const min_y = this.y - half_spacing;\n\n    return new Flow.BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n  }\n\n  // Apply current style to Canvas `context`\n  applyStyle(context) {\n    const style = this.getStyle();\n    if (style.shadowColor) context.setShadowColor(style.shadowColor);\n    if (style.shadowBlur) context.setShadowBlur(style.shadowBlur);\n    if (style.fillStyle) context.setFillStyle(style.fillStyle);\n    if (style.strokeStyle) context.setStrokeStyle(style.strokeStyle);\n    return this;\n  }\n\n  // Set notehead to a provided `stave`\n  setStave(stave) {\n    const line = this.getLine();\n\n    this.stave = stave;\n    this.setY(stave.getYForNote(line));\n    this.context = this.stave.context;\n    return this;\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    const width = this.getWidth() + this.extraLeftPx + this.extraRightPx;\n\n    this.setWidth(width);\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  // Draw the notehead\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const ctx = this.context;\n    const head_x = this.getAbsoluteX();\n    const y = this.y;\n\n    L(\"Drawing note head '\", this.note_type, this.duration, \"' at\", head_x, y);\n\n    // Begin and end positions for head.\n    const stem_direction = this.stem_direction;\n    const glyph_font_scale = this.render_options.glyph_font_scale;\n    const line = this.line;\n\n    // If note above/below the staff, draw the small staff\n    if (line <= 0 || line >= 6) {\n      let line_y = y;\n      const floor = Math.floor(line);\n      if (line < 0 && floor - line === -0.5) {\n        line_y -= 5;\n      } else if (line > 6 &&  floor - line === -0.5) {\n        line_y += 5;\n      }\n\n      if (this.note_type !== 'r') {\n        ctx.fillRect(\n          head_x - this.render_options.stroke_px,\n          line_y,\n          this.getWidth() + (this.render_options.stroke_px * 2),\n          1\n        );\n      }\n    }\n\n    if (this.note_type === 's') {\n      const staveSpace = this.stave.getSpacingBetweenLines();\n      drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n    } else {\n      if (this.style) {\n        ctx.save();\n        this.applyStyle(ctx);\n        Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code);\n        ctx.restore();\n      } else {\n        Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code);\n      }\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/notehead.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements an abstract interface for notes and chords that\n// are rendered on a stave. Notes have some common properties: All of them\n// have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n//\n// Some notes have stems, heads, dots, etc. Most notational elements that\n// surround a note are called *modifiers*, and every note has an associated\n// array of them. All notes also have a rendering context and belong to a stave.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Tickable } from './tickable';\n\nexport class Note extends Tickable {\n  static get CATEGORY() { return 'note'; }\n  static get STAVEPADDING() { return 12; }\n\n  // Debug helper. Displays various note metrics for the given\n  // note.\n  static plotMetrics(ctx, note, yPos) {\n    const metrics = note.getMetrics();\n    const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.extraLeftPx;\n    const xPre1 = note.getAbsoluteX() - metrics.extraLeftPx;\n    const xAbs = note.getAbsoluteX();\n    const xPost1 = note.getAbsoluteX() + metrics.noteWidth;\n    const xPost2 = note.getAbsoluteX() + metrics.noteWidth + metrics.extraRightPx;\n    const xEnd = note.getAbsoluteX()\n      + metrics.noteWidth\n      + metrics.extraRightPx\n      + metrics.modRightPx;\n    const xFreedomRight = xEnd + note.getFormatterMetrics().freedom.right;\n\n    const xWidth = xEnd - xStart;\n    ctx.save();\n    ctx.setFont('Arial', 8, '');\n    ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n\n    const y = (yPos + 7);\n    function stroke(x1, x2, color, yy = y) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(3);\n      ctx.moveTo(x1 + note.getXShift(), yy);\n      ctx.lineTo(x2 + note.getXShift(), yy);\n      ctx.stroke();\n    }\n\n    stroke(xStart, xPre1, 'red');\n    stroke(xPre1, xAbs, '#999');\n    stroke(xAbs, xPost1, 'green');\n    stroke(xPost1, xPost2, '#999');\n    stroke(xPost2, xEnd, 'red');\n    stroke(xEnd, xFreedomRight, '#DD0');\n    stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n    Vex.drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n\n    const formatterMetrics = note.getFormatterMetrics();\n    if (formatterMetrics.iterations > 0) {\n      const spaceDeviation = formatterMetrics.space.deviation;\n      const prefix = spaceDeviation >= 0 ? '+' : '';\n      ctx.setFillStyle('red');\n      ctx.fillText(prefix + Math.round(spaceDeviation),\n        xAbs + note.getXShift(), yPos - 10);\n    }\n    ctx.restore();\n  }\n\n  // Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n  // positioning and layout.\n  // To create a new note you need to provide a `note_struct`, which consists\n  // of the following fields:\n  //\n  // `type`: The note type (e.g., `r` for rest, `s` for slash notes, etc.)\n  // `dots`: The number of dots, which affects the duration.\n  // `duration`: The time length (e.g., `q` for quarter, `h` for half, `8` for eighth etc.)\n  //\n  // The range of values for these parameters are available in `src/tables.js`.\n  constructor(note_struct) {\n    super();\n    this.setAttribute('type', 'Note');\n\n    if (!note_struct) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Note must have valid initialization data to identify duration and type.'\n      );\n    }\n\n    // Parse `note_struct` and get note properties.\n    const initData = Flow.parseNoteData(note_struct);\n    if (!initData) {\n      throw new Vex.RuntimeError(\n        'BadArguments', `Invalid note initialization object: ${JSON.stringify(note_struct)}`\n      );\n    }\n\n    // Set note properties from parameters.\n    this.duration = initData.duration;\n    this.dots = initData.dots;\n    this.noteType = initData.type;\n\n    if (note_struct.duration_override) {\n      // Custom duration\n      this.setDuration(note_struct.duration_override);\n    } else {\n      // Default duration\n      this.setIntrinsicTicks(initData.ticks);\n    }\n\n    this.modifiers = [];\n\n    // Get the glyph code for this note from the font.\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (this.positions && (typeof(this.positions) !== 'object' || !this.positions.length)) {\n      throw new Vex.RuntimeError('BadArguments', 'Note keys must be array type.');\n    }\n\n    // Note to play for audio players.\n    this.playNote = null;\n\n    // Positioning contexts used by the Formatter.\n    this.tickContext = null;    // The current tick context.\n    this.modifierContext = null;\n    this.ignore_ticks = false;\n\n    // Positioning variables\n    this.width = 0;             // Width in pixels calculated after preFormat\n    this.extraLeftPx = 0;       // Extra room on left for offset note head\n    this.extraRightPx = 0;      // Extra room on right for offset note head\n    this.x_shift = 0;           // X shift from tick context X\n    this.left_modPx = 0;        // Max width of left modifiers\n    this.right_modPx = 0;       // Max width of right modifiers\n    this.voice = null;          // The voice that this note is in\n    this.preFormatted = false;  // Is this note preFormatted?\n    this.ys = [];               // list of y coordinates for each note\n                                // we need to hold on to these for ties and beams.\n\n    if (note_struct.align_center) {\n      this.setCenterAlignment(note_struct.align_center);\n    }\n\n    // The render surface.\n    this.stave = null;\n    this.render_options = {\n      annotation_spacing: 5,\n      stave_padding: Note.STAVEPADDING,\n    };\n  }\n\n  // Get and set the play note, which is arbitrary data that can be used by an\n  // audio player.\n  getPlayNote() { return this.playNote; }\n  setPlayNote(note) { this.playNote = note; return this; }\n\n  // Don't play notes by default, call them rests. This is also used by things like\n  // beams and dots for positioning.\n  isRest() { return false; }\n\n  // TODO(0xfe): Why is this method here?\n  addStroke(index, stroke) {\n    stroke.setNote(this);\n    stroke.setIndex(index);\n    this.modifiers.push(stroke);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Get and set the target stave.\n  getStave() { return this.stave; }\n  setStave(stave) {\n    this.stave = stave;\n    this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n    this.context = this.stave.context;\n    return this;\n  }\n\n  // `Note` is not really a modifier, but is used in\n  // a `ModifierContext`.\n  getCategory() { return Note.CATEGORY; }\n\n  // Set the rendering context for the note.\n  setContext(context) { this.context = context; return this; }\n\n  // Get and set spacing to the left and right of the notes.\n  getExtraLeftPx() { return this.extraLeftPx; }\n  getExtraRightPx() { return this.extraRightPx; }\n  setExtraLeftPx(x) { this.extraLeftPx = x; return this; }\n  setExtraRightPx(x) { this.extraRightPx = x; return this; }\n\n  // Returns true if this note has no duration (e.g., bar notes, spacers, etc.)\n  shouldIgnoreTicks() { return this.ignore_ticks; }\n\n  // Get the stave line number for the note.\n  getLineNumber() { return 0; }\n\n  // Get the stave line number for rest.\n  getLineForRest() { return 0; }\n\n  // Get the glyph associated with this note.\n  getGlyph() { return this.glyph; }\n\n  getGlyphWidth() {\n    return this.glyph.getWidth(this.render_options.glyph_font_scale);\n  }\n\n  // Set and get Y positions for this note. Each Y value is associated with\n  // an individual pitch/key within the note/chord.\n  setYs(ys) { this.ys = ys; return this; }\n  getYs() {\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-values calculated for this note.');\n    }\n\n    return this.ys;\n  }\n\n  // Get the Y position of the space above the stave onto which text can\n  // be rendered.\n  getYForTopText(text_line) {\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', 'No stave attached to this note.');\n    }\n\n    return this.stave.getYForTopText(text_line);\n  }\n\n  // Get a `BoundingBox` for this note.\n  getBoundingBox() { return null; }\n\n  // Returns the voice that this note belongs in.\n  getVoice() {\n    if (!this.voice) throw new Vex.RERR('NoVoice', 'Note has no voice.');\n    return this.voice;\n  }\n\n  // Attach this note to `voice`.\n  setVoice(voice) {\n    this.voice = voice;\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Get and set the `TickContext` for this note.\n  getTickContext() { return this.tickContext; }\n  setTickContext(tc) {\n    this.tickContext = tc;\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Accessors for the note type.\n  getDuration() { return this.duration; }\n  isDotted() { return (this.dots > 0); }\n  hasStem() { return false; }\n  getDots() { return this.dots; }\n  getNoteType() { return this.noteType; }\n  setBeam() { return this; } // ignore parameters\n\n  // Attach this note to a modifier context.\n  setModifierContext(mc) { this.modifierContext = mc; return this; }\n\n  // Attach a modifier to this note.\n  addModifier(modifier, index = 0) {\n    modifier.setNote(this);\n    modifier.setIndex(index);\n    this.modifiers.push(modifier);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Get the coordinates for where modifiers begin.\n  getModifierStartXY() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    return {\n      x: this.getAbsoluteX(),\n      y: this.ys[0],\n    };\n  }\n\n  // Get bounds and metrics for this note.\n  //\n  // Returns a struct with fields:\n  // `width`: The total width of the note (including modifiers.)\n  // `noteWidth`: The width of the note head only.\n  // `left_shift`: The horizontal displacement of the note.\n  // `modLeftPx`: Start `X` for left modifiers.\n  // `modRightPx`: Start `X` for right modifiers.\n  // `extraLeftPx`: Extra space on left of note.\n  // `extraRightPx`: Extra space on right of note.\n  getMetrics() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n    }\n\n    let modLeftPx = 0;\n    let modRightPx = 0;\n    if (this.modifierContext != null) {\n      modLeftPx = this.modifierContext.state.left_shift;\n      modRightPx = this.modifierContext.state.right_shift;\n    }\n\n    const width = this.getWidth();\n    return {\n      width,\n      noteWidth: width - modLeftPx - modRightPx - this.extraLeftPx - this.extraRightPx,\n      left_shift: this.x_shift, // TODO(0xfe): Make style consistent\n\n      // Modifiers, accidentals etc.\n      modLeftPx,\n      modRightPx,\n\n      // Displaced note head on left or right.\n      extraLeftPx: this.extraLeftPx,\n      extraRightPx: this.extraRightPx,\n    };\n  }\n\n  // Get and set width of note. Used by the formatter for positioning.\n  setWidth(width) { this.width = width; }\n  getWidth() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n    }\n\n    return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n  }\n\n  // Displace note by `x` pixels. Used by the formatter.\n  setXShift(x) { this.x_shift = x; return this; }\n  getXShift() { return this.x_shift; }\n\n  // Get `X` position of this tick context.\n  getX() {\n    if (!this.tickContext) {\n      throw new Vex.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n    }\n\n    return this.tickContext.getX() + this.x_shift;\n  }\n\n  // Get the absolute `X` position of this note's tick context. This\n  // excludes x_shift, so you'll need to factor it in if you're\n  // looking for the post-formatted x-position.\n  getAbsoluteX() {\n    if (!this.tickContext) {\n      throw new Vex.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n    }\n\n    // Position note to left edge of tick context.\n    let x = this.tickContext.getX();\n    if (this.stave) {\n      x += this.stave.getNoteStartX() + this.render_options.stave_padding;\n    }\n\n    if (this.isCenterAligned()) {\n      x += this.getCenterXShift();\n    }\n\n    return x;\n  }\n  setPreFormatted(value) {\n    this.preFormatted = value;\n\n    // Maintain the width of left and right modifiers in pixels.\n    if (this.preFormatted) {\n      const extra = this.tickContext.getExtraPx();\n      this.left_modPx = Math.max(this.left_modPx, extra.left);\n      this.right_modPx = Math.max(this.right_modPx, extra.right);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/note.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// The tickable interface. Tickables are things that sit on a score and\n// have a duration, i.e., they occupy space in the musical rendering dimension.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\n\nexport class Tickable extends Element {\n  constructor() {\n    super();\n    this.setAttribute('type', 'Tickable');\n\n    // These properties represent the duration of\n    // this tickable element.\n    this.ticks = new Fraction(0, 1);\n    this.intrinsicTicks = 0;\n    this.tickMultiplier = new Fraction(1, 1);\n\n    this.width = 0;\n    this.x_shift = 0; // Shift from tick context\n    this.voice = null;\n    this.tickContext = null;\n    this.modifierContext = null;\n    this.modifiers = [];\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.tuplet = null;\n    this.tupletStack = [];\n\n    this.align_center = false;\n    this.center_x_shift = 0; // Shift from tick context if center aligned\n\n    // This flag tells the formatter to ignore this tickable during\n    // formatting and justification. It is set by tickables such as BarNote.\n    this.ignore_ticks = false;\n\n    // This is a space for an external formatting class or function to maintain\n    // metrics.\n    this.formatterMetrics = {\n      // The freedom of a tickable is the distance it can move without colliding\n      // with neighboring elements. A formatter can set these values during its\n      // formatting pass, which a different formatter can then use to fine tune.\n      freedom: { left: 0, right: 0 },\n\n      // The simplified rational duration of this tick as a string. It can be\n      // used as an index to a map or hashtable.\n      duration: '',\n\n      // The number of formatting iterations undergone.\n      iterations: 0,\n\n      // The space in pixels allocated by this formatter, along with the mean space\n      // for tickables of this duration, and the deviation from the mean.\n      space: {\n        used: 0,\n        mean: 0,\n        deviation: 0,\n      },\n    };\n  }\n\n  reset() { return this; }\n  getTicks() { return this.ticks; }\n  shouldIgnoreTicks() { return this.ignore_ticks; }\n  getWidth() { return this.width; }\n\n  getFormatterMetrics() { return this.formatterMetrics; }\n\n  setXShift(x) { this.x_shift = x; }\n  getCenterXShift() {\n    if (this.isCenterAligned()) {\n      return this.center_x_shift;\n    }\n\n    return 0;\n  }\n  isCenterAligned() { return this.align_center; }\n  setCenterAlignment(align_center) {\n    this.align_center = align_center;\n    return this;\n  }\n\n  // Every tickable must be associated with a voice. This allows formatters\n  // and preFormatter to associate them with the right modifierContexts.\n  getVoice() {\n    if (!this.voice) throw new Vex.RERR('NoVoice', 'Tickable has no voice.');\n    return this.voice;\n  }\n  setVoice(voice) { this.voice = voice; }\n  getTuplet() { return this.tuplet; }\n\n  /*\n   * resetTuplet\n   * @param tuplet -- the specific tuplet to reset\n   *   if this is not provided, all tuplets are reset.\n   * @returns this\n   *\n   * Removes any prior tuplets from the tick calculation and\n   * resets the intrinsic tick value to\n   */\n  resetTuplet(tuplet) {\n    let noteCount;\n    let notesOccupied;\n    if (tuplet) {\n      const i = this.tupletStack.indexOf(tuplet);\n      if (i !== -1) {\n        this.tupletStack.splice(i, 1);\n        noteCount = tuplet.getNoteCount();\n        notesOccupied = tuplet.getNotesOccupied();\n\n        // Revert old multiplier by inverting numerator & denom.:\n        this.applyTickMultiplier(noteCount, notesOccupied);\n      }\n      return this;\n    }\n\n    while (this.tupletStack.length) {\n      tuplet = this.tupletStack.pop();\n      noteCount = tuplet.getNoteCount();\n      notesOccupied = tuplet.getNotesOccupied();\n\n      // Revert old multiplier by inverting numerator & denom.:\n      this.applyTickMultiplier(noteCount, notesOccupied);\n    }\n    return this;\n  }\n\n  setTuplet(tuplet) {\n    // Attach to new tuplet\n\n    if (tuplet) {\n      this.tupletStack.push(tuplet);\n\n      const noteCount = tuplet.getNoteCount();\n      const notesOccupied = tuplet.getNotesOccupied();\n\n      this.applyTickMultiplier(notesOccupied, noteCount);\n    }\n\n    this.tuplet = tuplet;\n\n    return this;\n  }\n\n  /** optional, if tickable has modifiers **/\n  addToModifierContext(mc) {\n    this.modifierContext = mc;\n    // Add modifiers to modifier context (if any)\n    this.preFormatted = false;\n  }\n\n  /** optional, if tickable has modifiers **/\n  addModifier(mod) {\n    this.modifiers.push(mod);\n    this.preFormatted = false;\n    return this;\n  }\n  setTickContext(tc) {\n    this.tickContext = tc;\n    this.preFormatted = false;\n  }\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.width = 0;\n    if (this.modifierContext) {\n      this.modifierContext.preFormat();\n      this.width += this.modifierContext.getWidth();\n    }\n  }\n  postFormat() {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n  getIntrinsicTicks() {\n    return this.intrinsicTicks;\n  }\n  setIntrinsicTicks(intrinsicTicks) {\n    this.intrinsicTicks = intrinsicTicks;\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n  getTickMultiplier() {\n    return this.tickMultiplier;\n  }\n  applyTickMultiplier(numerator, denominator) {\n    this.tickMultiplier.multiply(numerator, denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n  setDuration(duration) {\n    const ticks = duration.numerator * (Flow.RESOLUTION / duration.denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(ticks);\n    this.intrinsicTicks = this.ticks.value();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tickable.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Stem } from './stem';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\n\nexport class StemmableNote extends Note {\n  constructor(note_struct) {\n    super(note_struct);\n    this.setAttribute('type', 'StemmableNote');\n\n    this.stem = null;\n    this.stemExtensionOverride = null;\n    this.beam = null;\n  }\n\n  // Get and set the note's `Stem`\n  getStem() { return this.stem; }\n  setStem(stem) { this.stem = stem; return this; }\n\n  // Builds and sets a new stem\n  buildStem() {\n    const stem = new Stem();\n    this.setStem(stem);\n    return this;\n  }\n\n  buildFlag() {\n    const { glyph, beam } = this;\n    const shouldRenderFlag = beam === null;\n\n    if (glyph && glyph.flag && shouldRenderFlag) {\n      const flagCode = this.getStemDirection() === Stem.DOWN\n        ? glyph.code_flag_downstem\n        : glyph.code_flag_upstem;\n\n      this.flag = new Glyph(flagCode, this.render_options.glyph_font_scale);\n    }\n  }\n\n  // Get the full length of stem\n  getStemLength() {\n    return Stem.HEIGHT + this.getStemExtension();\n  }\n\n  // Get the number of beams for this duration\n  getBeamCount() {\n    const glyph = this.getGlyph();\n\n    if (glyph) {\n      return glyph.beam_count;\n    } else {\n      return 0;\n    }\n  }\n\n  // Get the minimum length of stem\n  getStemMinumumLength() {\n    const frac = Flow.durationToFraction(this.duration);\n    let length = frac.value() <= 1 ? 0 : 20;\n    // if note is flagged, cannot shorten beam\n    switch (this.duration) {\n      case '8':\n        if (this.beam == null) length = 35;\n        break;\n      case '16':\n        length = this.beam == null ? 35 : 25;\n        break;\n      case '32':\n        length = this.beam == null ? 45 : 35;\n        break;\n      case '64':\n        length = this.beam == null ? 50 : 40;\n        break;\n      case '128':\n        length = this.beam == null ? 55 : 45;\n        break;\n      default:\n        break;\n    }\n    return length;\n  }\n\n  // Get/set the direction of the stem\n  getStemDirection() { return this.stem_direction; }\n  setStemDirection(direction) {\n    if (!direction) direction = Stem.UP;\n    if (direction !== Stem.UP && direction !== Stem.DOWN) {\n      throw new Vex.RERR('BadArgument', `Invalid stem direction: ${direction}`);\n    }\n\n    this.stem_direction = direction;\n    if (this.stem) {\n      this.stem.setDirection(direction);\n      this.stem.setExtension(this.getStemExtension());\n    }\n\n    this.reset();\n    if (this.flag) {\n      this.buildFlag();\n    }\n\n    this.beam = null;\n    if (this.preFormatted) {\n      this.preFormat();\n    }\n    return this;\n  }\n\n  // Get the `x` coordinate of the stem\n  getStemX() {\n    const x_begin = this.getAbsoluteX() + this.x_shift;\n    const x_end = this.getAbsoluteX() + this.x_shift + this.getGlyphWidth();\n    const stem_x = this.stem_direction === Stem.DOWN ? x_begin : x_end;\n    return stem_x;\n  }\n\n  // Get the `x` coordinate for the center of the glyph.\n  // Used for `TabNote` stems and stemlets over rests\n  getCenterGlyphX() {\n    return this.getAbsoluteX() + this.x_shift + (this.getGlyphWidth() / 2);\n  }\n\n  // Get the stem extension for the current duration\n  getStemExtension() {\n    const glyph = this.getGlyph();\n\n    if (this.stemExtensionOverride != null) {\n      return this.stemExtensionOverride;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.stem_up_extension\n        : glyph.stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Set the stem length to a specific. Will override the default length.\n  setStemLength(height) {\n    this.stemExtensionOverride = (height - Stem.HEIGHT);\n    return this;\n  }\n\n  // Get the top and bottom `y` values of the stem.\n  getStemExtents() {\n    return this.stem.getExtents();\n  }\n\n  // Sets the current note's beam\n  setBeam(beam) { this.beam = beam; return this; }\n\n  // Get the `y` value for the top/bottom modifiers at a specific `textLine`\n  getYForTopText(textLine) {\n    const extents = this.getStemExtents();\n    if (this.hasStem()) {\n      return Math.min(\n        this.stave.getYForTopText(textLine),\n        extents.topY - (this.render_options.annotation_spacing * (textLine + 1))\n      );\n    } else {\n      return this.stave.getYForTopText(textLine);\n    }\n  }\n\n  getYForBottomText(textLine) {\n    const extents = this.getStemExtents();\n    if (this.hasStem()) {\n      return Math.max(\n        this.stave.getYForTopText(textLine),\n        extents.baseY + (this.render_options.annotation_spacing * (textLine))\n      );\n    } else {\n      return this.stave.getYForBottomText(textLine);\n    }\n  }\n\n  hasFlag() {\n    return Flow.durationToGlyph(this.duration).flag && !this.beam;\n  }\n\n  // Post format the note\n  postFormat() {\n    if (this.beam) this.beam.postFormat();\n\n    this.postFormatted = true;\n\n    return this;\n  }\n\n  // Render the stem onto the canvas\n  drawStem(stem_struct) {\n    this.checkContext();\n    this.setRendered();\n\n    this.setStem(new Stem(stem_struct));\n    this.stem.setContext(this.context).draw();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/stemmablenote.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// `Modifier` is an abstract interface for notational elements that modify\n// a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n//\n// For a `Modifier` instance to be positioned correctly, it must be part of\n// a `ModifierContext`. All modifiers in the same context are rendered relative to\n// one another.\n//\n// Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n// in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n// `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\n// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n// function L(...args) { if (Modifier.DEBUG) Vex.L('Vex.Flow.Modifier', args); }\n\nexport class Modifier extends Element {\n  static get CATEGORY() { return 'none'; }\n\n  // Modifiers can be positioned almost anywhere, relative to a note.\n  static get Position() {\n    return {\n      LEFT: 1,\n      RIGHT: 2,\n      ABOVE: 3,\n      BELOW: 4,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      above: Modifier.Position.ABOVE,\n      below: Modifier.Position.BELOW,\n      left: Modifier.Position.LEFT,\n      right: Modifier.Position.RIGHT,\n    };\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'Modifier');\n\n    this.width = 0;\n\n    // Modifiers are attached to a note and an index. An index is a\n    // specific head in a chord.\n    this.note = null;\n    this.index = null;\n\n    // The `text_line` is reserved space above or below a stave.\n    this.text_line = 0;\n    this.position = Modifier.Position.LEFT;\n    this.modifier_context = null;\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.spacingFromNextModifier = 0;\n  }\n\n  // Every modifier has a category. The `ModifierContext` uses this to determine\n  // the type and order of the modifiers.\n  getCategory() { return Modifier.CATEGORY; }\n\n  // Get and set modifier widths.\n  getWidth() { return this.width; }\n  setWidth(width) { this.width = width; return this; }\n\n  // Get and set attached note (`StaveNote`, `TabNote`, etc.)\n  getNote() { return this.note; }\n  setNote(note) { this.note = note; return this; }\n\n  // Get and set note index, which is a specific note in a chord.\n  getIndex() { return this.index; }\n  setIndex(index) { this.index = index; return this; }\n\n  // Every modifier must be part of a `ModifierContext`.\n  getModifierContext() { return this.modifier_context; }\n  setModifierContext(c) { this.modifier_context = c; return this; }\n\n  // Get and set articulation position.\n  getPosition() { return this.position; }\n  setPosition(position) {\n    this.position = typeof(position) === 'string'\n     ? Modifier.PositionString[position]\n      : position;\n    return this;\n  }\n\n  // Set the `text_line` for the modifier.\n  setTextLine(line) { this.text_line = line; return this; }\n\n  // Shift modifier down `y` pixels. Negative values shift up.\n  setYShift(y) { this.y_shift = y; return this; }\n\n  setSpacingFromNextModifier(x) {\n    this.spacingFromNextModifier = x;\n  }\n\n  getSpacingFromNextModifier() { return this.spacingFromNextModifier; }\n\n  // Shift modifier `x` pixels in the direction of the modifier. Negative values\n  // shift reverse.\n  setXShift(x) {\n    this.x_shift = 0;\n    if (this.position === Modifier.Position.LEFT) {\n      this.x_shift -= x;\n    } else {\n      this.x_shift += x;\n    }\n  }\n  getXShift() { return this.x_shift; }\n\n  // Render the modifier onto the canvas.\n  draw() {\n    this.checkContext();\n    throw new Vex.RERR('MethodNotImplemented', 'draw() not implemented for this modifier.');\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modifier.js\n **/","// VexFlow - Music Engraving for HTML5\r\n// Copyright Mohit Muthanna 2010\r\n//\r\n// This class implements dot modifiers for notes.\r\n\r\nimport { Vex } from './vex';\r\nimport { Modifier } from './modifier';\r\n\r\nexport class Dot extends Modifier {\r\n  static get CATEGORY() { return 'dots'; }\r\n\r\n  // Arrange dots inside a ModifierContext.\r\n  static format(dots, state) {\r\n    const right_shift = state.right_shift;\r\n    const dot_spacing = 1;\r\n\r\n    if (!dots || dots.length === 0) return false;\r\n\r\n    const dot_list = [];\r\n    for (let i = 0; i < dots.length; ++i) {\r\n      const dot = dots[i];\r\n      const note = dot.getNote();\r\n\r\n      let props;\r\n      let shift;\r\n      // Only StaveNote has .getKeyProps()\r\n      if (typeof note.getKeyProps === 'function') {\r\n        props = note.getKeyProps()[dot.getIndex()];\r\n        shift = (props.displaced ? note.getExtraRightPx() : 0);\r\n      } else { // Else it's a TabNote\r\n        props = { line: 0.5 }; // Shim key props for dot placement\r\n        shift = 0;\r\n      }\r\n\r\n      dot_list.push({ line: props.line, shift, note, dot });\r\n    }\r\n\r\n    // Sort dots by line number.\r\n    dot_list.sort((a, b) => b.line - a.line);\r\n\r\n    let dot_shift = right_shift;\r\n    let x_width = 0;\r\n    let last_line = null;\r\n    let last_note = null;\r\n    let prev_dotted_space = null;\r\n    let half_shiftY = 0;\r\n\r\n    for (let i = 0; i < dot_list.length; ++i) {\r\n      const { dot, note, shift, line } = dot_list[i];\r\n\r\n      // Reset the position of the dot every line.\r\n      if (line !== last_line || note !== last_note) {\r\n        dot_shift = shift;\r\n      }\r\n\r\n      if (!note.isRest() && line !== last_line) {\r\n        if (Math.abs(line % 1) === 0.5) {\r\n          // note is on a space, so no dot shift\r\n          half_shiftY = 0;\r\n        } else if (!note.isRest()) {\r\n          // note is on a line, so shift dot to space above the line\r\n          half_shiftY = 0.5;\r\n          if (last_note != null &&\r\n              !last_note.isRest() && last_line - line === 0.5) {\r\n            // previous note on a space, so shift dot to space below the line\r\n            half_shiftY = -0.5;\r\n          } else if (line + half_shiftY === prev_dotted_space) {\r\n            // previous space is dotted, so shift dot to space below the line\r\n            half_shiftY = -0.5;\r\n          }\r\n        }\r\n      }\r\n\r\n      // convert half_shiftY to a multiplier for dots.draw()\r\n      dot.dot_shiftY = -half_shiftY;\r\n      prev_dotted_space = line + half_shiftY;\r\n\r\n      dot.setXShift(dot_shift);\r\n      dot_shift += dot.getWidth() + dot_spacing; // spacing\r\n      x_width = (dot_shift > x_width) ? dot_shift : x_width;\r\n      last_line = line;\r\n      last_note = note;\r\n    }\r\n\r\n    // Update state.\r\n    state.right_shift += x_width;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @constructor\r\n   */\r\n  constructor() {\r\n    super();\r\n    this.setAttribute('type', 'Dot');\r\n\r\n    this.note = null;\r\n    this.index = null;\r\n    this.position = Modifier.Position.RIGHT;\r\n\r\n    this.radius = 2;\r\n    this.setWidth(5);\r\n    this.dot_shiftY = 0;\r\n  }\r\n\r\n  getCategory() { return Dot.CATEGORY; }\r\n\r\n  setNote(note) {\r\n    this.note = note;\r\n\r\n    if (this.note.getCategory() === 'gracenotes') {\r\n      this.radius *= 0.50;\r\n      this.setWidth(3);\r\n    }\r\n  }\r\n\r\n  setDotShiftY(y) { this.dot_shiftY = y; return this; }\r\n\r\n  draw() {\r\n    this.checkContext();\r\n    this.setRendered();\r\n\r\n    if (!this.note || this.index === null) {\r\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw dot without a note and index.\");\r\n    }\r\n\r\n    const lineSpace = this.note.stave.options.spacing_between_lines_px;\r\n\r\n    const start = this.note.getModifierStartXY(this.position, this.index);\r\n\r\n    // Set the starting y coordinate to the base of the stem for TabNotes\r\n    if (this.note.getCategory() === 'tabnotes') {\r\n      start.y = this.note.getStemExtents().baseY;\r\n    }\r\n\r\n    const x = (start.x + this.x_shift) + this.width - this.radius;\r\n    const y = start.y + this.y_shift + (this.dot_shiftY * lineSpace);\r\n    const ctx = this.context;\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\r\n    ctx.fill();\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/dot.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements various types of modifiers to notes (e.g. bends,\n// fingering positions etc.)\n\nimport { Vex } from './vex';\nimport { StaveNote } from './stavenote';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { Accidental } from './accidental';\nimport { NoteSubGroup } from './notesubgroup';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { Stroke } from './strokes';\nimport { StringNumber } from './stringnumber';\nimport { Articulation } from './articulation';\nimport { Ornament } from './ornament';\nimport { Annotation } from './annotation';\nimport { Bend } from './bend';\nimport { Vibrato } from './vibrato';\n\n// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\nfunction L(...args) { if (ModifierContext.DEBUG) Vex.L('Vex.Flow.ModifierContext', args); }\n\nexport class ModifierContext {\n  constructor() {\n    // Current modifiers\n    this.modifiers = {};\n\n    // Formatting data.\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.width = 0;\n    this.spacing = 0;\n    this.state = {\n      left_shift: 0,\n      right_shift: 0,\n      text_line: 0,\n      top_text_line: 0,\n    };\n\n    // Add new modifiers to this array. The ordering is significant -- lower\n    // modifiers are formatted and rendered before higher ones.\n    this.PREFORMAT = [\n      StaveNote,\n      Dot,\n      FretHandFinger,\n      Accidental,\n      GraceNoteGroup,\n      NoteSubGroup,\n      Stroke,\n      StringNumber,\n      Articulation,\n      Ornament,\n      Annotation,\n      Bend,\n      Vibrato,\n    ];\n\n    // If post-formatting is required for an element, add it to this array.\n    this.POSTFORMAT = [StaveNote];\n  }\n\n  addModifier(modifier) {\n    const type = modifier.getCategory();\n    if (!this.modifiers[type]) this.modifiers[type] = [];\n    this.modifiers[type].push(modifier);\n    modifier.setModifierContext(this);\n    this.preFormatted = false;\n    return this;\n  }\n\n  getModifiers(type) { return this.modifiers[type]; }\n  getWidth() { return this.width; }\n  getExtraLeftPx() { return this.state.left_shift; }\n  getExtraRightPx() { return this.state.right_shift; }\n  getState() { return this.state; }\n\n  getMetrics() {\n    if (!this.formatted) {\n      throw new Vex.RERR('UnformattedModifier', 'Unformatted modifier has no metrics.');\n    }\n\n    return {\n      width: this.state.left_shift + this.state.right_shift + this.spacing,\n      spacing: this.spacing,\n      extra_left_px: this.state.left_shift,\n      extra_right_px: this.state.right_shift,\n    };\n  }\n\n  preFormat() {\n    if (this.preFormatted) return;\n    this.PREFORMAT.forEach((modifier) => {\n      L('Preformatting ModifierContext: ', modifier.CATEGORY);\n      modifier.format(this.getModifiers(modifier.CATEGORY), this.state, this);\n    });\n\n    // Update width of this modifier context\n    this.width = this.state.left_shift + this.state.right_shift;\n    this.preFormatted = true;\n  }\n\n  postFormat() {\n    if (this.postFormatted) return;\n    this.POSTFORMAT.forEach((modifier) => {\n      L('Postformatting ModifierContext: ', modifier.CATEGORY);\n      modifier.postFormat(this.getModifiers(modifier.CATEGORY), this);\n    });\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modifiercontext.js\n **/","// VexFlow - Music Engraving for HTML5\r\n// Copyright Mohit Muthanna 2010\r\n// Author Larry Kuhns 2013\r\n// Class to draws string numbers into the notation.\r\n\r\nimport { Vex } from './vex';\r\nimport { Modifier } from './modifier';\r\n\r\n/**\r\n * @constructor\r\n */\r\nexport class FretHandFinger extends Modifier {\r\n  static get CATEGORY() { return 'frethandfinger'; }\r\n\r\n  // Arrange fingerings inside a ModifierContext.\r\n  static format(nums, state) {\r\n    const { left_shift, right_shift } = state;\r\n    const num_spacing = 1;\r\n\r\n    if (!nums || nums.length === 0) return false;\r\n\r\n    const nums_list = [];\r\n    let prev_note = null;\r\n    let shiftLeft = 0;\r\n    let shiftRight = 0;\r\n\r\n    for (let i = 0; i < nums.length; ++i) {\r\n      const num = nums[i];\r\n      const note = num.getNote();\r\n      const pos = num.getPosition();\r\n      const props = note.getKeyProps()[num.getIndex()];\r\n      if (note !== prev_note) {\r\n        for (let n = 0; n < note.keys.length; ++n) {\r\n          const props_tmp = note.getKeyProps()[n];\r\n          if (left_shift === 0) {\r\n            shiftLeft = props_tmp.displaced ? note.getExtraLeftPx() : shiftLeft;\r\n          }\r\n          if (right_shift === 0) {\r\n            shiftRight = props_tmp.displaced ? note.getExtraRightPx() : shiftRight;\r\n          }\r\n        }\r\n        prev_note = note;\r\n      }\r\n\r\n      nums_list.push({\r\n        note,\r\n        num,\r\n        pos,\r\n        line: props.line,\r\n        shiftL: shiftLeft,\r\n        shiftR: shiftRight,\r\n      });\r\n    }\r\n\r\n    // Sort fingernumbers by line number.\r\n    nums_list.sort((a, b) => b.line - a.line);\r\n\r\n    let numShiftL = 0;\r\n    let numShiftR = 0;\r\n    let xWidthL = 0;\r\n    let xWidthR = 0;\r\n    let lastLine = null;\r\n    let lastNote = null;\r\n\r\n    for (let i = 0; i < nums_list.length; ++i) {\r\n      let num_shift = 0;\r\n      const { note, pos, num, line, shiftL, shiftR } = nums_list[i];\r\n\r\n      // Reset the position of the string number every line.\r\n      if (line !== lastLine || note !== lastNote) {\r\n        numShiftL = left_shift + shiftL;\r\n        numShiftR = right_shift + shiftR;\r\n      }\r\n\r\n      const numWidth = num.getWidth() + num_spacing;\r\n      if (pos === Modifier.Position.LEFT) {\r\n        num.setXShift(left_shift + numShiftL);\r\n        num_shift = left_shift + numWidth; // spacing\r\n        xWidthL = num_shift > xWidthL ? num_shift : xWidthL;\r\n      } else if (pos === Modifier.Position.RIGHT) {\r\n        num.setXShift(numShiftR);\r\n        num_shift = shiftRight + numWidth; // spacing\r\n        xWidthR = num_shift > xWidthR ? num_shift : xWidthR;\r\n      }\r\n      lastLine = line;\r\n      lastNote = note;\r\n    }\r\n\r\n    state.left_shift += xWidthL;\r\n    state.right_shift += xWidthR;\r\n\r\n    return true;\r\n  }\r\n\r\n  constructor(number) {\r\n    super();\r\n    this.setAttribute('type', 'FretHandFinger');\r\n\r\n    this.note = null;\r\n    this.index = null;\r\n    this.finger = number;\r\n    this.width = 7;\r\n    this.position = Modifier.Position.LEFT;  // Default position above stem or note head\r\n    this.x_shift = 0;\r\n    this.y_shift = 0;\r\n    this.x_offset = 0;       // Horizontal offset from default\r\n    this.y_offset = 0;       // Vertical offset from default\r\n    this.font = {\r\n      family: 'sans-serif',\r\n      size: 9,\r\n      weight: 'bold',\r\n    };\r\n  }\r\n  getCategory() { return FretHandFinger.CATEGORY; }\r\n  setFretHandFinger(number) { this.finger = number; return this; }\r\n  setOffsetX(x) { this.x_offset = x; return this; }\r\n  setOffsetY(y) { this.y_offset = y; return this; }\r\n\r\n  draw() {\r\n    this.checkContext();\r\n\r\n    if (!this.note || this.index == null) {\r\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\r\n    }\r\n\r\n    this.setRendered();\r\n    const ctx = this.context;\r\n    const start = this.note.getModifierStartXY(this.position, this.index);\r\n    let dot_x = start.x + this.x_shift + this.x_offset;\r\n    let dot_y = start.y + this.y_shift + this.y_offset + 5;\r\n\r\n    switch (this.position) {\r\n      case Modifier.Position.ABOVE:\r\n        dot_x -= 4;\r\n        dot_y -= 12;\r\n        break;\r\n      case Modifier.Position.BELOW:\r\n        dot_x -= 2;\r\n        dot_y += 10;\r\n        break;\r\n      case Modifier.Position.LEFT:\r\n        dot_x -= this.width;\r\n        break;\r\n      case Modifier.Position.RIGHT:\r\n        dot_x += 1;\r\n        break;\r\n      default:\r\n        throw new Vex.RERR('InvalidPostion', `The position ${this.position} does not exist`);\r\n    }\r\n\r\n    ctx.save();\r\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\r\n    ctx.fillText('' + this.finger, dot_x, dot_y);\r\n    ctx.restore();\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/frethandfinger.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// @author Greg Ristow (modifications)\n//\n// ## Description\n//\n// This file implements accidentals as modifiers that can be attached to\n// notes. Support is included for both western and microtonal accidentals.\n//\n// See `tests/accidental_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Fraction } from './fraction';\nimport { Flow } from './tables';\nimport { Music } from './music';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`.\nfunction L(...args) { if (Accidental.DEBUG) Vex.L('Vex.Flow.Accidental', args); }\n\nconst getGlyphWidth = glyph => glyph.getMetrics().width;\n\n// An `Accidental` inherits from `Modifier`, and is formatted within a\n// `ModifierContext`.\nexport class Accidental extends Modifier {\n  static get CATEGORY() { return 'accidentals'; }\n\n  // Arrange accidentals inside a ModifierContext.\n  static format(accidentals, state) {\n    const noteheadAccidentalPadding = 1;\n    const leftShift = state.left_shift + noteheadAccidentalPadding;\n    const accidentalSpacing = 3;\n\n    // If there are no accidentals, we needn't format their positions\n    if (!accidentals || accidentals.length === 0) return;\n\n    const accList = [];\n    let prevNote = null;\n    let shiftL = 0;\n\n    // First determine the accidentals' Y positions from the note.keys\n    let propsTemp;\n    for (let i = 0; i < accidentals.length; ++i) {\n      const acc = accidentals[i];\n      const note = acc.getNote();\n      const stave = note.getStave();\n      const props = note.getKeyProps()[acc.getIndex()];\n      if (note !== prevNote) {\n         // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          propsTemp = note.getKeyProps()[n];\n          shiftL = propsTemp.displaced ? note.getExtraLeftPx() : shiftL;\n        }\n        prevNote = note;\n      }\n      if (stave !== null) {\n        const lineSpace = stave.options.spacing_between_lines_px;\n        const y = stave.getYForLine(props.line);\n        const accLine = Math.round(y / lineSpace * 2) / 2;\n        accList.push({ y, line: accLine, shift: shiftL, acc, lineSpace });\n      } else {\n        accList.push({ line: props.line, shift: shiftL, acc });\n      }\n    }\n\n    // Sort accidentals by line number.\n    accList.sort((a, b) => b.line - a.line);\n\n    // FIXME: Confusing name. Each object in this array has a property called `line`.\n    // So if this is a list of lines, you end up with: `line.line` which is very awkward.\n    const lineList = [];\n\n    // amount by which all accidentals must be shifted right or left for\n    // stem flipping, notehead shifting concerns.\n    let accShift = 0;\n    let previousLine = null;\n\n    // Create an array of unique line numbers (lineList) from accList\n    for (let i = 0; i < accList.length; i++) {\n      const acc = accList[i];\n\n      // if this is the first line, or a new line, add a lineList\n      if (previousLine === null || previousLine !== acc.line) {\n        lineList.push({\n          line: acc.line,\n          flatLine: true,\n          dblSharpLine: true,\n          numAcc: 0,\n          width: 0,\n        });\n      }\n      // if this accidental is not a flat, the accidental needs 3.0 lines lower\n      // clearance instead of 2.5 lines for b or bb.\n      // FIXME: Naming could use work. acc.acc is very awkward\n      if (acc.acc.type !== 'b' && acc.acc.type !== 'bb') {\n        lineList[lineList.length - 1].flatLine = false;\n      }\n\n      // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n      if (acc.acc.type !== '##') {\n        lineList[lineList.length - 1].dblSharpLine = false;\n      }\n\n      // Track how many accidentals are on this line:\n      lineList[lineList.length - 1].numAcc++;\n\n      // Track the total x_offset needed for this line which will be needed\n      // for formatting lines w/ multiple accidentals:\n\n      // width = accidental width + universal spacing between accidentals\n      lineList[lineList.length - 1].width += acc.acc.getWidth() + accidentalSpacing;\n\n      // if this accShift is larger, use it to keep first column accidentals in the same line\n      accShift = acc.shift > accShift ? acc.shift : accShift;\n\n      previousLine = acc.line;\n    }\n\n    // ### Place Accidentals in Columns\n    //\n    // Default to a classic triangular layout (middle accidental farthest left),\n    // but follow exceptions as outlined in G. Read's _Music Notation_ and\n    // Elaine Gould's _Behind Bars_.\n    //\n    // Additionally, this implements different vertical collision rules for\n    // flats (only need 2.5 lines clearance below) and double sharps (only\n    // need 2.5 lines of clearance above or below).\n    //\n    // Classic layouts and exception patterns are found in the 'tables.js'\n    // in 'Vex.Flow.accidentalColumnsTable'\n    //\n    // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n    // using as few columns as possible for the verticle structure.\n    //\n    // TODO (?): Allow column to be specified for an accidental at run-time?\n\n    let totalColumns = 0;\n\n    // establish the boundaries for a group of notes with clashing accidentals:\n    for (let i = 0; i < lineList.length; i++) {\n      let noFurtherConflicts = false;\n      const groupStart = i;\n      let groupEnd = i;\n\n      while (groupEnd + 1 < lineList.length && !noFurtherConflicts) {\n        // if this note conflicts with the next:\n        if (this.checkCollision(lineList[groupEnd], lineList[groupEnd + 1])) {\n        // include the next note in the group:\n          groupEnd++;\n        } else {\n          noFurtherConflicts = true;\n        }\n      }\n\n      // Gets an a line from the `lineList`, relative to the current group\n      const getGroupLine = (index) => lineList[groupStart + index];\n      const getGroupLines = (indexes) => indexes.map(getGroupLine);\n      const lineDifference = (indexA, indexB) => {\n        const [a, b] = getGroupLines([indexA, indexB]).map(item => item.line);\n        return a - b;\n      };\n\n      const notColliding = (...indexPairs) =>\n        indexPairs\n          .map(getGroupLines)\n          .every(lines => !this.checkCollision(...lines));\n\n      // Set columns for the lines in this group:\n      const groupLength = groupEnd - groupStart + 1;\n\n      // Set the accidental column for each line of the group\n      let endCase = this.checkCollision(lineList[groupStart], lineList[groupEnd]) ? 'a' : 'b';\n\n      switch (groupLength) {\n        case 3:\n          if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n            endCase = 'second_on_bottom';\n          }\n          break;\n        case 4:\n          if (notColliding([0, 2], [1, 3])) {\n            endCase = 'spaced_out_tetrachord';\n          }\n          break;\n        case 5:\n          if (endCase === 'b' && notColliding([1, 3])) {\n            endCase = 'spaced_out_pentachord';\n            if (notColliding([0, 2], [2, 4])) {\n              endCase = 'very_spaced_out_pentachord';\n            }\n          }\n          break;\n        case 6:\n          if (notColliding([0, 3], [1, 4], [2, 5])) {\n            endCase = 'spaced_out_hexachord';\n          }\n          if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n            endCase = 'very_spaced_out_hexachord';\n          }\n          break;\n        default:\n          break;\n      }\n\n      let groupMember;\n      let column;\n      // If the group contains more than seven members, use ascending parallel lines\n      // of accidentals, using as few columns as possible while avoiding collisions.\n      if (groupLength >= 7) {\n        // First, determine how many columns to use:\n        let patternLength = 2;\n        let collisionDetected = true;\n        while (collisionDetected === true) {\n          collisionDetected = false;\n          for (let line = 0; line + patternLength < lineList.length; line++) {\n            if (this.checkCollision(lineList[line], lineList[line + patternLength])) {\n              collisionDetected = true;\n              patternLength++;\n              break;\n            }\n          }\n        }\n        // Then, assign a column to each line of accidentals\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = ((groupMember - i) % patternLength) + 1;\n          lineList[groupMember].column = column;\n          totalColumns = (totalColumns > column) ? totalColumns : column;\n        }\n\n      // Otherwise, if the group contains fewer than seven members, use the layouts from\n      // the accidentalsColumnsTable housed in tables.js.\n      } else {\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = Flow.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n          lineList[groupMember].column = column;\n          totalColumns = (totalColumns > column) ? totalColumns : column;\n        }\n      }\n\n      // Increment i to the last note that was set, so that if a lower set of notes\n      // does not conflict at all with this group, it can have its own classic shape.\n      i = groupEnd;\n    }\n\n    // ### Convert Columns to x_offsets\n    //\n    // This keeps columns aligned, even if they have different accidentals within them\n    // which sometimes results in a larger x_offset than is an accidental might need\n    // to preserve the symmetry of the accidental shape.\n    //\n    // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n    // music with complex chord clusters.\n    //\n    // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n    // parallel columns.\n\n    // track each column's max width, which will be used as initial shift of later columns:\n    const columnWidths = [];\n    const columnXOffsets = [];\n    for (let i = 0; i <= totalColumns; i++) {\n      columnWidths[i] = 0;\n      columnXOffsets[i] = 0;\n    }\n\n    columnWidths[0] = accShift + leftShift;\n    columnXOffsets[0] = accShift + leftShift;\n\n    // Fill columnWidths with widest needed x-space;\n    // this is what keeps the columns parallel.\n    lineList.forEach(line => {\n      if (line.width > columnWidths[line.column]) columnWidths[line.column] = line.width;\n    });\n\n    for (let i = 1; i < columnWidths.length; i++) {\n      // this column's offset = this column's width + previous column's offset\n      columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n    }\n\n    const totalShift = columnXOffsets[columnXOffsets.length - 1];\n    // Set the xShift for each accidental according to column offsets:\n    let accCount = 0;\n    lineList.forEach(line => {\n      let lineWidth = 0;\n      const lastAccOnLine = accCount + line.numAcc;\n      // handle all of the accidentals on a given line:\n      for (accCount; accCount < lastAccOnLine; accCount++) {\n        const xShift = (columnXOffsets[line.column - 1] + lineWidth);\n        accList[accCount].acc.setXShift(xShift);\n        // keep track of the width of accidentals we've added so far, so that when\n        // we loop, we add space for them.\n        lineWidth += accList[accCount].acc.getWidth() + accidentalSpacing;\n        L('Line, accCount, shift: ', line.line, accCount, xShift);\n      }\n    });\n\n    // update the overall layout with the full width of the accidental shapes:\n    state.left_shift += totalShift;\n  }\n\n  // Helper function to determine whether two lines of accidentals collide vertically\n  static checkCollision(line1, line2) {\n    let clearance = line2.line - line1.line;\n    let clearanceRequired = 3;\n    // But less clearance is required for certain accidentals: b, bb and ##.\n    if (clearance > 0) { // then line 2 is on top\n      clearanceRequired = (line2.flatLine || line2.dblSharpLine) ? 2.5 : 3.0;\n      if (line1.dblSharpLine) clearance -= 0.5;\n    } else { // line 1 is on top\n      clearanceRequired = (line1.flatLine || line1.dblSharpLine) ? 2.5 : 3.0;\n      if (line2.dblSharpLine) clearance -= 0.5;\n    }\n    const collision = Math.abs(clearance) < clearanceRequired;\n    L('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n    return collision;\n  }\n\n  // Use this method to automatically apply accidentals to a set of `voices`.\n  // The accidentals will be remembered between all the voices provided.\n  // Optionally, you can also provide an initial `keySignature`.\n  static applyAccidentals(voices, keySignature) {\n    const tickPositions = [];\n    const tickNoteMap = {};\n\n    // Sort the tickables in each voice by their tick position in the voice\n    voices.forEach(voice => {\n      const tickPosition = new Fraction(0, 1);\n      const notes = voice.getTickables();\n      notes.forEach(note => {\n        const notesAtPosition = tickNoteMap[tickPosition.value()];\n\n        if (!notesAtPosition) {\n          tickPositions.push(tickPosition.value());\n          tickNoteMap[tickPosition.value()] = [note];\n        } else {\n          notesAtPosition.push(note);\n        }\n\n        tickPosition.add(note.getTicks());\n      });\n    });\n\n    const music = new Music();\n\n    // Default key signature is C major\n    if (!keySignature) keySignature = 'C';\n\n    // Get the scale map, which represents the current state of each pitch\n    const scaleMap = music.createScaleMap(keySignature);\n\n    tickPositions.forEach(tick => {\n      const notes = tickNoteMap[tick];\n\n      // Array to store all pitches that modified accidental states\n      // at this tick position\n      const modifiedPitches = [];\n\n      notes.forEach(note => {\n        if (note.isRest()) return;\n\n        // Go through each key and determine if an accidental should be\n        // applied\n        note.keys.forEach((keyString, keyIndex) => {\n          const key = music.getNoteParts(keyString.split('/')[0]);\n\n          // Force a natural for every key without an accidental\n          const accidentalString = key.accidental || 'n';\n          const pitch = key.root + accidentalString;\n\n          // Determine if the current pitch has the same accidental\n          // as the scale state\n          const sameAccidental = scaleMap[key.root] === pitch;\n\n          // Determine if an identical pitch in the chord already\n          // modified the accidental state\n          const previouslyModified = modifiedPitches.indexOf(pitch) > -1;\n\n            // Add the accidental to the StaveNote\n          if (!sameAccidental || (sameAccidental && previouslyModified)) {\n            // Modify the scale map so that the root pitch has an\n            // updated state\n            scaleMap[key.root] = pitch;\n\n            // Create the accidental\n            const accidental = new Accidental(accidentalString);\n\n            // Attach the accidental to the StaveNote\n            note.addAccidental(keyIndex, accidental);\n\n            // Add the pitch to list of pitches that modified accidentals\n            modifiedPitches.push(pitch);\n          }\n        });\n      });\n    });\n  }\n\n  // Create accidental. `type` can be a value from the\n  // `Vex.Flow.accidentalCodes.accidentals` table in `tables.js`. For\n  // example: `#`, `##`, `b`, `n`, etc.\n  constructor(type = null) {\n    super();\n    this.setAttribute('type', 'Accidental');\n\n    L('New accidental: ', type);\n\n    this.note = null;\n    // The `index` points to a specific note in a chord.\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.LEFT;\n\n    this.render_options = {\n      // Font size for glyphs\n      font_scale: 38,\n\n      // Length of stroke across heads above or below the stave.\n      stroke_px: 3,\n\n      // Padding between accidental and parentheses on each side\n      parenLeftPadding: 2,\n      parenRightPadding: 2,\n    };\n\n    this.accidental = Flow.accidentalCodes(this.type);\n    if (!this.accidental) {\n      throw new Vex.RERR('ArgumentError', `Unknown accidental type: ${type}`);\n    }\n\n    // Cautionary accidentals have parentheses around them\n    this.cautionary = false;\n    this.parenLeft = null;\n    this.parenRight = null;\n\n    this.reset();\n  }\n\n  reset() {\n    const fontScale = this.render_options.font_scale;\n    this.glyph = new Glyph(this.accidental.code, fontScale);\n    this.glyph.setOriginX(1.0);\n\n    if (this.cautionary) {\n      this.parenLeft = new Glyph(Flow.accidentalCodes('{').code, fontScale);\n      this.parenRight = new Glyph(Flow.accidentalCodes('}').code, fontScale);\n      this.parenLeft.setOriginX(1.0);\n      this.parenRight.setOriginX(1.0);\n    }\n  }\n\n  getCategory() { return Accidental.CATEGORY; }\n\n  getWidth() {\n    const parenWidth = this.cautionary\n      ? (\n        getGlyphWidth(this.parenLeft) +\n        getGlyphWidth(this.parenRight) +\n        this.render_options.parenLeftPadding +\n        this.render_options.parenRightPadding\n      )\n      : 0;\n\n    return getGlyphWidth(this.glyph) + parenWidth;\n  }\n\n  // Attach this accidental to `note`, which must be a `StaveNote`.\n  setNote(note) {\n    if (!note) {\n      throw new Vex.RERR('ArgumentError', `Bad note value: ${note}`);\n    }\n\n    this.note = note;\n\n    // Accidentals attached to grace notes are rendered smaller.\n    if (this.note.getCategory() === 'gracenotes') {\n      this.render_options.font_scale = 25;\n      this.reset();\n    }\n  }\n\n  // If called, draws parenthesis around accidental.\n  setAsCautionary() {\n    this.cautionary = true;\n    this.render_options.font_scale = 28;\n    this.reset();\n    return this;\n  }\n\n  // Render accidental onto canvas.\n  draw() {\n    const {\n      context,\n      type, position, note, index, cautionary,\n      x_shift, y_shift,\n      glyph, parenLeft, parenRight,\n      render_options: { parenLeftPadding, parenRightPadding },\n    } = this;\n\n    this.checkContext();\n\n    if (!(note && (index != null))) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw accidental without a note and index.\");\n    }\n\n    // Figure out the start `x` and `y` coordinates for note and index.\n    const start = note.getModifierStartXY(position, index);\n    let accX = start.x + x_shift;\n    const accY = start.y + y_shift;\n    L('Rendering: ', type, accX, accY);\n\n    if (!cautionary) {\n      glyph.render(context, accX, accY);\n    } else {\n      // Render the accidental in parentheses.\n      parenRight.render(context, accX, accY);\n      accX -= getGlyphWidth(parenRight);\n      accX -= parenRightPadding;\n      accX -= this.accidental.parenRightPaddingAdjustment;\n      glyph.render(context, accX, accY);\n      accX -= getGlyphWidth(glyph);\n      accX -= parenLeftPadding;\n      parenLeft.render(context, accX, accY);\n    }\n\n    this.setRendered();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/accidental.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements some standard music theory routines.\n\nimport { Vex } from './vex';\n\nexport class Music {\n  static get NUM_TONES() {\n    return 12;\n  }\n\n  static get roots() {\n    return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n  }\n\n  static get root_values() {\n    return [0, 2, 4, 5, 7, 9, 11];\n  }\n\n  static get root_indices() {\n    return {\n      'c': 0,\n      'd': 1,\n      'e': 2,\n      'f': 3,\n      'g': 4,\n      'a': 5,\n      'b': 6,\n    };\n  }\n\n  static get canonical_notes() {\n    return [\n      'c', 'c#', 'd', 'd#',\n      'e', 'f', 'f#', 'g',\n      'g#', 'a', 'a#', 'b',\n    ];\n  }\n\n  static get diatonic_intervals() {\n    return [\n      'unison', 'm2', 'M2', 'm3', 'M3',\n      'p4', 'dim5', 'p5', 'm6', 'M6',\n      'b7', 'M7', 'octave',\n    ];\n  }\n\n  static get diatonic_accidentals() {\n    return {\n      'unison': { note: 0, accidental: 0 },\n      'm2': { note: 1, accidental: -1 },\n      'M2': { note: 1, accidental: 0 },\n      'm3': { note: 2, accidental: -1 },\n      'M3': { note: 2, accidental: 0 },\n      'p4': { note: 3, accidental: 0 },\n      'dim5': { note: 4, accidental: -1 },\n      'p5': { note: 4, accidental: 0 },\n      'm6': { note: 5, accidental: -1 },\n      'M6': { note: 5, accidental: 0 },\n      'b7': { note: 6, accidental: -1 },\n      'M7': { note: 6, accidental: 0 },\n      'octave': { note: 7, accidental: 0 },\n    };\n  }\n\n  static get intervals() {\n    return {\n      'u': 0, 'unison': 0,\n      'm2': 1, 'b2': 1, 'min2': 1, 'S': 1, 'H': 1,\n      '2': 2, 'M2': 2, 'maj2': 2, 'T': 2, 'W': 2,\n      'm3': 3, 'b3': 3, 'min3': 3,\n      'M3': 4, '3': 4, 'maj3': 4,\n      '4': 5, 'p4': 5,\n      '#4': 6, 'b5': 6, 'aug4': 6, 'dim5': 6,\n      '5': 7, 'p5': 7,\n      '#5': 8, 'b6': 8, 'aug5': 8,\n      '6': 9, 'M6': 9, 'maj6': 9,\n      'b7': 10, 'm7': 10, 'min7': 10, 'dom7': 10,\n      'M7': 11, 'maj7': 11,\n      '8': 12, 'octave': 12,\n    };\n  }\n\n  static get scales() {\n    return {\n      major: [2, 2, 1, 2, 2, 2, 1],\n      dorian: [2, 1, 2, 2, 2, 1, 2],\n      mixolydian: [2, 2, 1, 2, 2, 1, 2],\n      minor: [2, 1, 2, 2, 1, 2, 2],\n    };\n  }\n\n  static get scaleTypes() {\n    return {\n      'M': Music.scales.major,\n      'm': Music.scales.minor,\n    };\n  }\n\n  static get accidentals() {\n    return ['bb', 'b', 'n', '#', '##'];\n  }\n\n  static get noteValues() {\n    return {\n      'c': { root_index: 0, int_val: 0 },\n      'cn': { root_index: 0, int_val: 0 },\n      'c#': { root_index: 0, int_val: 1 },\n      'c##': { root_index: 0, int_val: 2 },\n      'cb': { root_index: 0, int_val: 11 },\n      'cbb': { root_index: 0, int_val: 10 },\n      'd': { root_index: 1, int_val: 2 },\n      'dn': { root_index: 1, int_val: 2 },\n      'd#': { root_index: 1, int_val: 3 },\n      'd##': { root_index: 1, int_val: 4 },\n      'db': { root_index: 1, int_val: 1 },\n      'dbb': { root_index: 1, int_val: 0 },\n      'e': { root_index: 2, int_val: 4 },\n      'en': { root_index: 2, int_val: 4 },\n      'e#': { root_index: 2, int_val: 5 },\n      'e##': { root_index: 2, int_val: 6 },\n      'eb': { root_index: 2, int_val: 3 },\n      'ebb': { root_index: 2, int_val: 2 },\n      'f': { root_index: 3, int_val: 5 },\n      'fn': { root_index: 3, int_val: 5 },\n      'f#': { root_index: 3, int_val: 6 },\n      'f##': { root_index: 3, int_val: 7 },\n      'fb': { root_index: 3, int_val: 4 },\n      'fbb': { root_index: 3, int_val: 3 },\n      'g': { root_index: 4, int_val: 7 },\n      'gn': { root_index: 4, int_val: 7 },\n      'g#': { root_index: 4, int_val: 8 },\n      'g##': { root_index: 4, int_val: 9 },\n      'gb': { root_index: 4, int_val: 6 },\n      'gbb': { root_index: 4, int_val: 5 },\n      'a': { root_index: 5, int_val: 9 },\n      'an': { root_index: 5, int_val: 9 },\n      'a#': { root_index: 5, int_val: 10 },\n      'a##': { root_index: 5, int_val: 11 },\n      'ab': { root_index: 5, int_val: 8 },\n      'abb': { root_index: 5, int_val: 7 },\n      'b': { root_index: 6, int_val: 11 },\n      'bn': { root_index: 6, int_val: 11 },\n      'b#': { root_index: 6, int_val: 0 },\n      'b##': { root_index: 6, int_val: 1 },\n      'bb': { root_index: 6, int_val: 10 },\n      'bbb': { root_index: 6, int_val: 9 },\n    };\n  }\n\n  isValidNoteValue(note) {\n    if (note == null || note < 0 || note >= Music.NUM_TONES) {\n      return false;\n    }\n    return true;\n  }\n\n  isValidIntervalValue(interval) {\n    return this.isValidNoteValue(interval);\n  }\n\n  getNoteParts(noteString) {\n    if (!noteString || noteString.length < 1) {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    if (noteString.length > 3) {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    const note = noteString.toLowerCase();\n\n    const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n    const match = regex.exec(note);\n\n    if (match != null) {\n      const root = match[1];\n      const accidental = match[2];\n\n      return {\n        root,\n        accidental,\n      };\n    } else {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n  }\n\n  getKeyParts(keyString) {\n    if (!keyString || keyString.length < 1) {\n      throw new Vex.RERR('BadArguments', 'Invalid key: ' + keyString);\n    }\n\n    const key = keyString.toLowerCase();\n\n    // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n    const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n    const match = regex.exec(key);\n\n    if (match != null) {\n      const root = match[1];\n      const accidental = match[2];\n      let type = match[3];\n\n      // Unspecified type implies major\n      if (!type) type = 'M';\n\n      return {\n        root,\n        accidental,\n        type,\n      };\n    } else {\n      throw new Vex.RERR('BadArguments', `Invalid key: ${keyString}`);\n    }\n  }\n\n  getNoteValue(noteString) {\n    const value = Music.noteValues[noteString];\n    if (value == null) {\n      throw new Vex.RERR('BadArguments', `Invalid note name: ${noteString}`);\n    }\n\n    return value.int_val;\n  }\n\n  getIntervalValue(intervalString) {\n    const value = Music.intervals[intervalString];\n    if (value == null) {\n      throw new Vex.RERR('BadArguments', 'Invalid interval name: ${intervalString}');\n    }\n\n    return value;\n  }\n\n  getCanonicalNoteName(noteValue) {\n    if (!this.isValidNoteValue(noteValue)) {\n      throw new Vex.RERR('BadArguments', `Invalid note value: ${noteValue}`);\n    }\n\n    return Music.canonical_notes[noteValue];\n  }\n\n  getCanonicalIntervalName(intervalValue) {\n    if (!this.isValidIntervalValue(intervalValue)) {\n      throw new Vex.RERR('BadArguments', `Invalid interval value: ${intervalValue}`);\n    }\n\n    return Music.diatonic_intervals[intervalValue];\n  }\n\n  /* Given a note, interval, and interval direction, product the\n   * relative note.\n   */\n  getRelativeNoteValue(noteValue, intervalValue, direction) {\n    if (direction == null) direction = 1;\n\n    if (direction !== 1 && direction !== -1) {\n      throw new Vex.RERR('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    let sum = (noteValue + (direction * intervalValue)) % Music.NUM_TONES;\n    if (sum < 0) sum += Music.NUM_TONES;\n\n    return sum;\n  }\n\n  getRelativeNoteName(root, noteValue) {\n    const parts = this.getNoteParts(root);\n    const rootValue = this.getNoteValue(parts.root);\n    let interval = noteValue - rootValue;\n\n    if (Math.abs(interval) > Music.NUM_TONES - 3) {\n      let multiplier = 1;\n      if (interval > 0) multiplier = -1;\n\n      // Possibly wrap around. (Add +1 for modulo operator)\n      const reverse_interval = (((noteValue + 1) + (rootValue + 1)) %\n        Music.NUM_TONES) * multiplier;\n\n      if (Math.abs(reverse_interval) > 2) {\n        throw new Vex.RERR('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n      } else {\n        interval = reverse_interval;\n      }\n    }\n\n    if (Math.abs(interval) > 2) {\n      throw new Vex.RERR('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n    }\n\n    let relativeNoteName = parts.root;\n    if (interval > 0) {\n      for (let i = 1; i <= interval; ++i) {\n        relativeNoteName += '#';\n      }\n    } else if (interval < 0) {\n      for (let i = -1; i >= interval; --i) {\n        relativeNoteName += 'b';\n      }\n    }\n\n    return relativeNoteName;\n  }\n\n  /* Return scale tones, given intervals. Each successive interval is\n   * relative to the previous one, e.g., Major Scale:\n   *\n   *   TTSTTTS = [2,2,1,2,2,2,1]\n   *\n   * When used with key = 0, returns C scale (which is isomorphic to\n   * interval list).\n   */\n  getScaleTones(key, intervals) {\n    const tones = [key];\n\n    let nextNote = key;\n    for (let i = 0; i < intervals.length; i += 1) {\n      nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n      if (nextNote !== key) tones.push(nextNote);\n    }\n\n    return tones;\n  }\n\n  /* Returns the interval of a note, given a diatonic scale.\n   *\n   * E.g., Given the scale C, and the note E, returns M3\n   */\n  getIntervalBetween(note1, note2, direction) {\n    if (direction == null) direction = 1;\n\n    if (direction !== 1 && direction !== -1) {\n      throw new Vex.RERR('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n      throw new Vex.RERR('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n    }\n\n    let difference = direction === 1\n      ? note2 - note1\n      : note1 - note2;\n\n    if (difference < 0) difference += Music.NUM_TONES;\n\n    return difference;\n  }\n\n  // Create a scale map that represents the pitch state for a\n  // `keySignature`. For example, passing a `G` to `keySignature` would\n  // return a scale map with every note naturalized except for `F` which\n  // has an `F#` state.\n  createScaleMap(keySignature) {\n    const keySigParts = this.getKeyParts(keySignature);\n    const scaleName = Music.scaleTypes[keySigParts.type];\n\n    let keySigString = keySigParts.root;\n    if (keySigParts.accidental) keySigString += keySigParts.accidental;\n\n    if (!scaleName) throw new Vex.RERR('BadArguments', 'Unsupported key type: ' + keySignature);\n\n    const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n    const noteLocation = Music.root_indices[keySigParts.root];\n\n    const scaleMap = {};\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n      let noteName = this.getRelativeNoteName(rootName, scale[i]);\n\n      if (noteName.length === 1) {\n        noteName += 'n';\n      }\n\n      scaleMap[rootName] = noteName;\n    }\n\n    return scaleMap;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/music.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2016\n//\n// ## Description\n//\n// This file implements `NoteSubGroup` which is used to format and\n// render notes as a `Modifier`\n// ex) ClefNote, TimeSigNote and BarNote.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Formatter } from './formatter';\nimport { Voice } from './voice';\n\nexport class NoteSubGroup extends Modifier {\n  static get CATEGORY() { return 'notesubgroup'; }\n\n  // Arrange groups inside a `ModifierContext`\n  static format(groups, state) {\n    if (!groups || groups.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < groups.length; ++i) {\n      const group = groups[i];\n      group.preFormat();\n      width += group.getWidth();\n    }\n\n    state.left_shift += width;\n    return true;\n  }\n\n  constructor(subNotes) {\n    super();\n    this.setAttribute('type', 'NoteSubGroup');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.LEFT;\n    this.subNotes = subNotes;\n    this.subNotes.forEach(subNote => { subNote.ignore_ticks = false; });\n    this.width = 0;\n    this.preFormatted = false;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }).setStrict(false);\n\n    this.voice.addTickables(this.subNotes);\n\n    return this;\n  }\n\n  getCategory() { return NoteSubGroup.CATEGORY; }\n\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  setNote(note) {\n    this.note = note;\n  }\n  setWidth(width) {\n    this.width = width;\n  }\n  getWidth() {\n    return this.width;\n  }\n\n  draw() {\n    this.checkContext();\n\n    const note = this.getNote();\n\n    if (!(note && (this.index !== null))) {\n      throw new Vex.RuntimeError('NoAttachedNote',\n        \"Can't draw notes without a parent note and parent note index.\");\n    }\n\n    this.setRendered();\n    const alignSubNotesWithNote = (subNotes, note) => {\n      // Shift over the tick contexts of each note\n      const tickContext = note.getTickContext();\n      const extraPx = tickContext.getExtraPx();\n      const x = tickContext.getX() - extraPx.left - extraPx.extraLeft +\n        this.getSpacingFromNextModifier();\n\n      subNotes.forEach(subNote => {\n        const tick_context = subNote.getTickContext();\n        const x_offset = tick_context.getX();\n        subNote.setStave(note.stave);\n        tick_context.setX(x + x_offset);\n      });\n    };\n\n    alignSubNotesWithNote(this.subNotes, note, this.width);\n\n    // Draw notes\n    this.subNotes.forEach(subNote => subNote.setContext(this.context).draw());\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/notesubgroup.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Formatter } from './formatter';\nimport { Voice } from './voice';\nimport { Beam } from './beam';\nimport { StaveTie } from './stavetie';\nimport { TabTie } from './tabtie';\nimport { StaveNote } from './stavenote';\n\n// To enable logging for this class. Set `Vex.Flow.GraceNoteGroup.DEBUG` to `true`.\nfunction L(...args) { if (GraceNoteGroup.DEBUG) Vex.L('Vex.Flow.GraceNoteGroup', args); }\n\nexport class GraceNoteGroup extends Modifier {\n  static get CATEGORY() { return 'gracenotegroups'; }\n\n  // Arrange groups inside a `ModifierContext`\n  static format(gracenote_groups, state) {\n    const group_spacing_stave = 4;\n    const group_spacing_tab = 0;\n\n    if (!gracenote_groups || gracenote_groups.length === 0) return false;\n\n    const group_list = [];\n    let prev_note = null;\n    let shiftL = 0;\n\n    for (let i = 0; i < gracenote_groups.length; ++i) {\n      const gracenote_group = gracenote_groups[i];\n      const note = gracenote_group.getNote();\n      const is_stavenote = (note.getCategory() === StaveNote.CATEGORY);\n      const spacing = (is_stavenote ?  group_spacing_stave : group_spacing_tab);\n\n      if (is_stavenote && note !== prev_note) {\n         // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          const props_tmp = note.getKeyProps()[n];\n          shiftL = (props_tmp.displaced ? note.getExtraLeftPx() : shiftL);\n        }\n        prev_note = note;\n      }\n\n      group_list.push({ shift: shiftL, gracenote_group, spacing });\n    }\n\n    // If first note left shift in case it is displaced\n    let group_shift = group_list[0].shift;\n    let formatWidth;\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      gracenote_group.preFormat();\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      group_shift = Math.max(formatWidth, group_shift);\n    }\n\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      gracenote_group.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift));\n    }\n\n    state.left_shift += group_shift;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // `GraceNoteGroup` inherits from `Modifier` and is placed inside a\n  // `ModifierContext`.\n  constructor(grace_notes, show_slur) {\n    super();\n    this.setAttribute('type', 'GraceNoteGroup');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.LEFT;\n    this.grace_notes = grace_notes;\n    this.width = 0;\n\n    this.preFormatted = false;\n\n    this.show_slur = show_slur;\n    this.slur = null;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }).setStrict(false);\n\n    this.render_options = {\n      slur_y_shift: 0,\n    };\n\n    this.voice.addTickables(this.grace_notes);\n\n    return this;\n  }\n\n  getCategory() { return GraceNoteGroup.CATEGORY; }\n\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  beamNotes() {\n    if (this.grace_notes.length > 1) {\n      const beam = new Beam(this.grace_notes);\n\n      beam.render_options.beam_width = 3;\n      beam.render_options.partial_beam_length = 4;\n\n      this.beam = beam;\n    }\n\n    return this;\n  }\n\n  setNote(note) {\n    this.note = note;\n  }\n  setWidth(width) {\n    this.width = width;\n  }\n  getWidth() {\n    return this.width;\n  }\n  draw() {\n    this.checkContext();\n\n    const note = this.getNote();\n\n    L('Drawing grace note group for:', note);\n\n    if (!(note && (this.index !== null))) {\n      throw new Vex.RuntimeError('NoAttachedNote',\n        \"Can't draw grace note without a parent note and parent note index.\");\n    }\n\n    this.setRendered();\n    const that = this;\n    function alignGraceNotesWithNote(grace_notes, note) {\n      // Shift over the tick contexts of each note\n      // So that th aligned with the note\n      const tickContext = note.getTickContext();\n      const extraPx = tickContext.getExtraPx();\n      const x = tickContext.getX()\n        - extraPx.left\n        - extraPx.extraLeft\n        + that.getSpacingFromNextModifier();\n\n      grace_notes.forEach(graceNote => {\n        const tick_context = graceNote.getTickContext();\n        const x_offset = tick_context.getX();\n        graceNote.setStave(note.stave);\n        tick_context.setX(x + x_offset);\n      });\n    }\n\n    alignGraceNotesWithNote(this.grace_notes, note, this.width);\n\n    // Draw notes\n    this.grace_notes.forEach(graceNote => {\n      graceNote.setContext(this.context).draw();\n    });\n\n    // Draw beam\n    if (this.beam) {\n      this.beam.setContext(this.context).draw();\n    }\n\n    if (this.show_slur) {\n      // Create and draw slur\n      const is_stavenote = (this.getNote().getCategory() === StaveNote.CATEGORY);\n      const TieClass = (is_stavenote ? StaveTie : TabTie);\n\n      this.slur = new TieClass({\n        last_note: this.grace_notes[0],\n        first_note: note,\n        first_indices: [0],\n        last_indices: [0],\n      });\n\n      this.slur.render_options.cp2 = 12;\n      this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n      this.slur.setContext(this.context).draw();\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/gracenotegroup.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\nexport class StaveTie extends Element {\n  constructor(notes, text) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveTie');\n    this.notes = notes;\n    this.context = null;\n    this.text = text;\n    this.direction = null;\n\n    this.render_options = {\n      cp1: 8,      // Curve control point 1\n      cp2: 12,      // Curve control point 2\n      text_shift_x: 0,\n      first_x_shift: 0,\n      last_x_shift: 0,\n      y_shift: 7,\n      tie_spacing: 0,\n      font: { family: 'Arial', size: 10, style: '' },\n    };\n\n    this.font = this.render_options.font;\n    this.setNotes(notes);\n  }\n\n  setFont(font) { this.font = font; return this; }\n  setDirection(direction) { this.direction = direction; return this; }\n\n  /**\n   * Set the notes to attach this tie to.\n   *\n   * @param {!Object} notes The notes to tie up.\n   */\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Tie needs to have either first_note or last_note set.'\n      );\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new Vex.RuntimeError('BadArguments', 'Tied notes must have similar index sizes');\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial() {\n    return (!this.first_note || !this.last_note);\n  }\n\n  renderTie(params) {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.context;\n    let cp1 = this.render_options.cp1;\n    let cp2 = this.render_options.cp2;\n\n    if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n      cp1 = 2; cp2 = 8;\n    }\n\n    const first_x_shift = this.render_options.first_x_shift;\n    const last_x_shift = this.render_options.last_x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    for (let i = 0; i < this.first_indices.length; ++i) {\n      const cp_x = ((params.last_x_px + last_x_shift) +\n          (params.first_x_px + first_x_shift)) / 2;\n      const first_y_px = params.first_ys[this.first_indices[i]] + y_shift;\n      const last_y_px = params.last_ys[this.last_indices[i]] + y_shift;\n\n      if (isNaN(first_y_px) || isNaN(last_y_px)) {\n        throw new Vex.RERR('BadArguments', 'Bad indices for tie rendering.');\n      }\n\n      const top_cp_y = ((first_y_px + last_y_px) / 2) + (cp1 * params.direction);\n      const bottom_cp_y = ((first_y_px + last_y_px) / 2) + (cp2 * params.direction);\n\n      ctx.beginPath();\n      ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n      ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n      ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n      ctx.closePath();\n      ctx.fill();\n    }\n  }\n\n  renderText(first_x_px, last_x_px) {\n    if (!this.text) return;\n    let center_x = (first_x_px + last_x_px) / 2;\n    center_x -= this.context.measureText(this.text).width / 2;\n\n    this.context.save();\n    this.context.setFont(this.font.family, this.font.size, this.font.style);\n    this.context.fillText(\n      this.text,\n      center_x + this.render_options.text_shift_x,\n      (this.first_note || this.last_note).getStave().getYForTopText() - 1\n    );\n    this.context.restore();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n\n    let first_x_px;\n    let last_x_px;\n    let first_ys;\n    let last_ys;\n    let stem_direction;\n    if (first_note) {\n      first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n      stem_direction = first_note.getStemDirection();\n      first_ys = first_note.getYs();\n    } else {\n      first_x_px = last_note.getStave().getTieStartX();\n      first_ys = last_note.getYs();\n      this.first_indices = this.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n      stem_direction = last_note.getStemDirection();\n      last_ys = last_note.getYs();\n    } else {\n      last_x_px = first_note.getStave().getTieEndX();\n      last_ys = first_note.getYs();\n      this.last_indices = this.first_indices;\n    }\n\n    if (this.direction) {\n      stem_direction = this.direction;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: stem_direction,\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/stavetie.js\n **/","// / [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { StaveTie } from './stavetie';\n\nexport class TabTie extends StaveTie {\n  static createHammeron(notes) {\n    return new TabTie(notes, 'H');\n  }\n\n  static createPulloff(notes) {\n    return new TabTie(notes, 'P');\n  }\n\n  constructor(notes, text) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super(notes, text);\n    this.setAttribute('type', 'TabTie');\n\n    this.render_options.cp1 = 9;\n    this.render_options.cp2 = 11;\n    this.render_options.y_shift = 3;\n\n    this.setNotes(notes);\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n    let first_x_px;\n    let last_x_px;\n    let first_ys;\n    let last_ys;\n\n    if (first_note) {\n      first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n      first_ys = first_note.getYs();\n    } else {\n      first_x_px = last_note.getStave().getTieStartX();\n      first_ys = last_note.getYs();\n      this.first_indices = this.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n      last_ys = last_note.getYs();\n    } else {\n      last_x_px = first_note.getStave().getTieEndX();\n      last_ys = first_note.getYs();\n      this.last_indices = this.first_indices;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: -1, // Tab tie's are always face up.\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tabtie.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\r\n// Author: Larry Kuhns\r\n//\r\n// ## Description\r\n// This file implements the `Stroke` class which renders chord strokes\r\n// that can be arpeggiated, brushed, rasquedo, etc.\r\n\r\nimport { Vex } from './vex';\r\nimport { Modifier } from './modifier';\r\nimport { StaveNote } from './stavenote';\r\nimport { Glyph } from './glyph';\r\n\r\nexport class Stroke extends Modifier {\r\n  static get CATEGORY() { return 'strokes'; }\r\n  static get Type() {\r\n    return {\r\n      BRUSH_DOWN: 1,\r\n      BRUSH_UP: 2,\r\n      ROLL_DOWN: 3,        // Arpegiated chord\r\n      ROLL_UP: 4,          // Arpegiated chord\r\n      RASQUEDO_DOWN: 5,\r\n      RASQUEDO_UP: 6,\r\n    };\r\n  }\r\n\r\n  // Arrange strokes inside `ModifierContext`\r\n  static format(strokes, state) {\r\n    const left_shift = state.left_shift;\r\n    const stroke_spacing = 0;\r\n\r\n    if (!strokes || strokes.length === 0) return this;\r\n\r\n    const strokeList = strokes.map((stroke) => {\r\n      const note = stroke.getNote();\r\n      if (note instanceof StaveNote) {\r\n        const { line, displaced } = note.getKeyProps()[stroke.getIndex()];\r\n        const shift = displaced ? note.getExtraLeftPx() : 0;\r\n        return { line, shift, stroke };\r\n      } else {\r\n        const { str: string } = note.getPositions()[stroke.getIndex()];\r\n        return { line: string, shift: 0, stroke };\r\n      }\r\n    });\r\n\r\n    const strokeShift = left_shift;\r\n\r\n    // There can only be one stroke .. if more than one, they overlay each other\r\n    const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\r\n      stroke.setXShift(strokeShift + shift);\r\n      return Math.max(stroke.getWidth() + stroke_spacing, xShift);\r\n    }, 0);\r\n\r\n    state.left_shift += xShift;\r\n    return true;\r\n  }\r\n\r\n  constructor(type, options) {\r\n    super();\r\n    this.setAttribute('type', 'Stroke');\r\n\r\n    this.note = null;\r\n    this.options = Vex.Merge({}, options);\r\n\r\n    // multi voice - span stroke across all voices if true\r\n    this.all_voices = 'all_voices' in this.options ? this.options.all_voices : true;\r\n\r\n    // multi voice - end note of stroke, set in draw()\r\n    this.note_end = null;\r\n    this.index = null;\r\n    this.type = type;\r\n    this.position = Modifier.Position.LEFT;\r\n\r\n    this.render_options = {\r\n      font_scale: 38,\r\n      stroke_px: 3,\r\n      stroke_spacing: 10,\r\n    };\r\n\r\n    this.font = {\r\n      family: 'serif',\r\n      size: 10,\r\n      weight: 'bold italic',\r\n    };\r\n\r\n    this.setXShift(0);\r\n    this.setWidth(10);\r\n  }\r\n\r\n  getCategory() { return Stroke.CATEGORY; }\r\n  getPosition() { return this.position; }\r\n  addEndNote(note) { this.note_end = note; return this; }\r\n\r\n  draw() {\r\n    this.checkContext();\r\n    this.setRendered();\r\n\r\n    if (!(this.note && (this.index != null))) {\r\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw stroke without a note and index.\");\r\n    }\r\n\r\n    const start = this.note.getModifierStartXY(this.position, this.index);\r\n    let ys = this.note.getYs();\r\n    let topY = start.y;\r\n    let botY = start.y;\r\n    const x = start.x - 5;\r\n    const line_space = this.note.stave.options.spacing_between_lines_px;\r\n\r\n    const notes = this.getModifierContext().getModifiers(this.note.getCategory());\r\n    for (let i = 0; i < notes.length; i++) {\r\n      ys = notes[i].getYs();\r\n      for (let n = 0; n < ys.length; n++) {\r\n        if (this.note === notes[i] || this.all_voices) {\r\n          topY = Vex.Min(topY, ys[n]);\r\n          botY = Vex.Max(botY, ys[n]);\r\n        }\r\n      }\r\n    }\r\n\r\n    let arrow;\r\n    let arrow_shift_x;\r\n    let arrow_y;\r\n    let text_shift_x;\r\n    let text_y;\r\n    switch (this.type) {\r\n      case Stroke.Type.BRUSH_DOWN:\r\n        arrow = 'vc3';\r\n        arrow_shift_x = -3;\r\n        arrow_y = topY - (line_space / 2) + 10;\r\n        botY += (line_space / 2);\r\n        break;\r\n      case Stroke.Type.BRUSH_UP:\r\n        arrow = 'v11';\r\n        arrow_shift_x = 0.5;\r\n        arrow_y = botY + (line_space / 2);\r\n        topY -= (line_space / 2);\r\n        break;\r\n      case Stroke.Type.ROLL_DOWN:\r\n      case Stroke.Type.RASQUEDO_DOWN:\r\n        arrow = 'vc3';\r\n        arrow_shift_x = -3;\r\n        text_shift_x = this.x_shift + arrow_shift_x - 2;\r\n        if (this.note instanceof StaveNote) {\r\n          topY += 1.5 * line_space;\r\n          if ((botY - topY) % 2 !== 0) {\r\n            botY += 0.5 * line_space;\r\n          } else {\r\n            botY += line_space;\r\n          }\r\n          arrow_y = topY - line_space;\r\n          text_y = botY + line_space + 2;\r\n        } else {\r\n          topY += 1.5 * line_space;\r\n          botY += line_space;\r\n          arrow_y = topY - 0.75 * line_space;\r\n          text_y = botY + 0.25 * line_space;\r\n        }\r\n        break;\r\n      case Stroke.Type.ROLL_UP:\r\n      case Stroke.Type.RASQUEDO_UP:\r\n        arrow = 'v52';\r\n        arrow_shift_x = -4;\r\n        text_shift_x = this.x_shift + arrow_shift_x - 1;\r\n        if (this.note instanceof StaveNote) {\r\n          arrow_y = line_space / 2;\r\n          topY += 0.5 * line_space;\r\n          if ((botY - topY) % 2 === 0) {\r\n            botY += line_space / 2;\r\n          }\r\n          arrow_y = botY + 0.5 * line_space;\r\n          text_y = topY - 1.25 * line_space;\r\n        } else {\r\n          topY += 0.25 * line_space;\r\n          botY += 0.5 * line_space;\r\n          arrow_y = botY + 0.25 * line_space;\r\n          text_y = topY - line_space;\r\n        }\r\n        break;\r\n      default:\r\n        throw new Vex.RERR('InvalidType', `The stroke type ${this.type} does not exist`);\r\n    }\r\n\r\n    // Draw the stroke\r\n    if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\r\n      this.context.fillRect(x + this.x_shift, topY, 1, botY - topY);\r\n    } else {\r\n      if (this.note instanceof StaveNote) {\r\n        for (let i = topY; i <= botY; i += line_space) {\r\n          Glyph.renderGlyph(\r\n            this.context,\r\n            x + this.x_shift - 4,\r\n            i,\r\n            this.render_options.font_scale,\r\n            'va3'\r\n          );\r\n        }\r\n      } else {\r\n        let i;\r\n        for (i = topY; i <= botY; i += 10) {\r\n          Glyph.renderGlyph(\r\n            this.context,\r\n            x + this.x_shift - 4,\r\n            i,\r\n            this.render_options.font_scale,\r\n            'va3'\r\n          );\r\n        }\r\n        if (this.type === Stroke.Type.RASQUEDO_DOWN) {\r\n          text_y = i + 0.25 * line_space;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Draw the arrow head\r\n    Glyph.renderGlyph(\r\n      this.context,\r\n      x + this.x_shift + arrow_shift_x,\r\n      arrow_y,\r\n      this.render_options.font_scale,\r\n      arrow\r\n    );\r\n\r\n    // Draw the rasquedo \"R\"\r\n    if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\r\n      this.context.save();\r\n      this.context.setFont(this.font.family, this.font.size, this.font.weight);\r\n      this.context.fillText('R', x + text_shift_x, text_y);\r\n      this.context.restore();\r\n    }\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/strokes.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\r\n// Author: Larry Kuhns\r\n//\r\n// ## Description\r\n// This file implements the `StringNumber` class which renders string\r\n// number annotations beside notes.\r\n\r\nimport { Vex } from './vex';\r\nimport { Modifier } from './modifier';\r\nimport { Renderer } from './renderer';\r\nimport { StaveNote } from './stavenote';\r\n\r\nexport class StringNumber extends Modifier {\r\n  static get CATEGORY() { return 'stringnumber'; }\r\n\r\n  // ## Static Methods\r\n  // Arrange string numbers inside a `ModifierContext`\r\n  static format(nums, state) {\r\n    const left_shift = state.left_shift;\r\n    const right_shift = state.right_shift;\r\n    const num_spacing = 1;\r\n\r\n    if (!nums || nums.length === 0) return this;\r\n\r\n    const nums_list = [];\r\n    let prev_note = null;\r\n    let shift_left = 0;\r\n    let shift_right = 0;\r\n\r\n    let i;\r\n    let num;\r\n    let note;\r\n    let pos;\r\n    let props_tmp;\r\n    for (i = 0; i < nums.length; ++i) {\r\n      num = nums[i];\r\n      note = num.getNote();\r\n\r\n      for (i = 0; i < nums.length; ++i) {\r\n        num = nums[i];\r\n        note = num.getNote();\r\n        pos = num.getPosition();\r\n        const props = note.getKeyProps()[num.getIndex()];\r\n\r\n        if (note !== prev_note) {\r\n          for (let n = 0; n < note.keys.length; ++n) {\r\n            props_tmp = note.getKeyProps()[n];\r\n            if (left_shift === 0) {\r\n              shift_left = props_tmp.displaced ? note.getExtraLeftPx() : shift_left;\r\n            }\r\n            if (right_shift === 0) {\r\n              shift_right = props_tmp.displaced ? note.getExtraRightPx() : shift_right;\r\n            }\r\n          }\r\n          prev_note = note;\r\n        }\r\n\r\n        nums_list.push({\r\n          pos,\r\n          note,\r\n          num,\r\n          line: props.line,\r\n          shiftL: shift_left,\r\n          shiftR: shift_right,\r\n        });\r\n      }\r\n    }\r\n\r\n    // Sort string numbers by line number.\r\n    nums_list.sort((a, b) => b.line - a.line);\r\n\r\n    // TODO: This variable never gets assigned to anything. Is that a bug or can this be removed?\r\n    let num_shiftL = 0; // eslint-disable-line\r\n    let num_shiftR = 0;\r\n    let x_widthL = 0;\r\n    let x_widthR = 0;\r\n    let last_line = null;\r\n    let last_note = null;\r\n    for (i = 0; i < nums_list.length; ++i) {\r\n      let num_shift = 0;\r\n      note = nums_list[i].note;\r\n      pos = nums_list[i].pos;\r\n      num = nums_list[i].num;\r\n      const line = nums_list[i].line;\r\n      const shiftL = nums_list[i].shiftL;\r\n      const shiftR = nums_list[i].shiftR;\r\n\r\n      // Reset the position of the string number every line.\r\n      if (line !== last_line || note !== last_note) {\r\n        num_shiftL = left_shift + shiftL;\r\n        num_shiftR = right_shift + shiftR;\r\n      }\r\n\r\n      const num_width = num.getWidth() + num_spacing;\r\n      if (pos === Modifier.Position.LEFT) {\r\n        num.setXShift(left_shift);\r\n        num_shift = shift_left + num_width; // spacing\r\n        x_widthL = (num_shift > x_widthL) ? num_shift : x_widthL;\r\n      } else if (pos === Modifier.Position.RIGHT) {\r\n        num.setXShift(num_shiftR);\r\n        num_shift += num_width; // spacing\r\n        x_widthR = (num_shift > x_widthR) ? num_shift : x_widthR;\r\n      }\r\n      last_line = line;\r\n      last_note = note;\r\n    }\r\n\r\n    state.left_shift += x_widthL;\r\n    state.right_shift += x_widthR;\r\n    return true;\r\n  }\r\n\r\n  constructor(number) {\r\n    super();\r\n    this.setAttribute('type', 'StringNumber');\r\n\r\n    this.note = null;\r\n    this.last_note = null;\r\n    this.index = null;\r\n    this.string_number = number;\r\n    this.setWidth(20); // ???\r\n    this.position = Modifier.Position.ABOVE; // Default position above stem or note head\r\n    this.x_shift = 0;\r\n    this.y_shift = 0;\r\n    this.x_offset = 0; // Horizontal offset from default\r\n    this.y_offset = 0; // Vertical offset from default\r\n    this.dashed = true; // true - draw dashed extension  false - no extension\r\n    this.leg = Renderer.LineEndType.NONE;   // draw upward/downward leg at the of extension line\r\n    this.radius = 8;\r\n    this.font = {\r\n      family: 'sans-serif',\r\n      size: 10,\r\n      weight: 'bold',\r\n    };\r\n  }\r\n  getCategory() { return StringNumber.CATEGORY; }\r\n  getNote() { return this.note; }\r\n  setNote(note) { this.note = note; return this; }\r\n  getIndex() { return this.index; }\r\n  setIndex(index) { this.index = index; return this; }\r\n\r\n  setLineEndType(leg) {\r\n    if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\r\n      this.leg = leg;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  getPosition() { return this.position; }\r\n  setPosition(position) {\r\n    if (position >= Modifier.Position.LEFT && position <= Modifier.Position.BELOW) {\r\n      this.position = position;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  setStringNumber(number) { this.string_number = number; return this; }\r\n  setOffsetX(x) { this.x_offset = x; return this; }\r\n  setOffsetY(y) { this.y_offset = y; return this; }\r\n  setLastNote(note) { this.last_note = note; return this; }\r\n  setDashed(dashed) { this.dashed = dashed; return this; }\r\n\r\n  draw() {\r\n    const ctx = this.checkContext();\r\n    if (!(this.note && (this.index != null))) {\r\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\r\n    }\r\n    this.setRendered();\r\n\r\n    const line_space = this.note.stave.options.spacing_between_lines_px;\r\n\r\n    const start = this.note.getModifierStartXY(this.position, this.index);\r\n    let dot_x = (start.x + this.x_shift + this.x_offset);\r\n    let dot_y = start.y + this.y_shift + this.y_offset;\r\n\r\n    switch (this.position) {\r\n      case Modifier.Position.ABOVE:\r\n      case Modifier.Position.BELOW: {\r\n        const stem_ext = this.note.getStemExtents();\r\n        let top = stem_ext.topY;\r\n        let bottom = stem_ext.baseY + 2;\r\n\r\n        if (this.note.stem_direction === StaveNote.STEM_DOWN) {\r\n          top = stem_ext.baseY;\r\n          bottom = stem_ext.topY - 2;\r\n        }\r\n\r\n        if (this.position === Modifier.Position.ABOVE) {\r\n          dot_y = this.note.hasStem()\r\n            ? top - (line_space * 1.75)\r\n            : start.y - (line_space * 1.75);\r\n        } else {\r\n          dot_y = this.note.hasStem()\r\n            ? bottom + (line_space * 1.5)\r\n            : start.y + (line_space * 1.75);\r\n        }\r\n\r\n        dot_y += this.y_shift + this.y_offset;\r\n\r\n        break;\r\n      } case Modifier.Position.LEFT:\r\n        dot_x -= (this.radius / 2) + 5;\r\n        break;\r\n      case Modifier.Position.RIGHT:\r\n        dot_x += (this.radius / 2) + 6;\r\n        break;\r\n      default:\r\n        throw new Vex.RERR(\r\n          'InvalidPosition', `The position ${this.position} is invalid`\r\n        );\r\n    }\r\n\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\r\n    ctx.lineWidth = 1.5;\r\n    ctx.stroke();\r\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\r\n    const x = dot_x - ctx.measureText(this.string_number).width / 2;\r\n    ctx.fillText('' + this.string_number, x, dot_y + 4.5);\r\n\r\n    if (this.last_note != null) {\r\n      const end = this.last_note.getStemX() - this.note.getX() + 5;\r\n      ctx.strokeStyle = '#000000';\r\n      ctx.lineCap = 'round';\r\n      ctx.lineWidth = 0.6;\r\n      if (this.dashed) {\r\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\r\n      } else {\r\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\r\n      }\r\n\r\n      let len;\r\n      let pattern;\r\n      switch (this.leg) {\r\n        case Renderer.LineEndType.UP:\r\n          len = -10;\r\n          pattern = this.dashed ? [3, 3] : [3, 0];\r\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\r\n          break;\r\n        case Renderer.LineEndType.DOWN:\r\n          len = 10;\r\n          pattern = this.dashed ? [3, 3] : [3, 0];\r\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    ctx.restore();\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/stringnumber.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns.\n//\n// ## Description\n//\n// This file implements articulations and accents as modifiers that can be\n// attached to notes. The complete list of articulations is available in\n// `tables.js` under `Vex.Flow.articulationCodes`.\n//\n// See `tests/articulation_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\n\n// To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`.\nfunction L(...args) { if (Articulation.DEBUG) Vex.L('Vex.Flow.Articulation', args); }\n\nconst { ABOVE, BELOW } = Modifier.Position;\n\nconst roundToNearestHalf = (mathFn, value) => mathFn(value / 0.5) * 0.5;\n\n// This includes both staff and ledger lines\nconst isWithinLines = (line, position) => position === ABOVE ? line <= 5 : line >= 1;\n\nconst getRoundingFunction = (line, position) => {\n  if (isWithinLines(line, position)) {\n    if (position === ABOVE) {\n      return Math.ceil;\n    } else {\n      return Math.floor;\n    }\n  } else {\n    return Math.round;\n  }\n};\n\nconst snapLineToStaff = (canSitBetweenLines, line, position, offsetDirection) => {\n  // Initially, snap to nearest staff line or space\n  const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n  const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n  const onStaffLine = snappedLine % 1 === 0;\n\n  if (canSnapToStaffSpace && onStaffLine) {\n    const HALF_STAFF_SPACE = 0.5;\n    return snappedLine + (HALF_STAFF_SPACE * -offsetDirection);\n  } else {\n    return snappedLine;\n  }\n};\n\nconst getTopY = (note, textLine) => {\n  const stave = note.getStave();\n  const stemDirection = note.getStemDirection();\n  const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n\n  if (note.getCategory() === 'stavenotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return stemBaseY;\n      }\n    } else {\n      return Math.min(...note.getYs());\n    }\n  } else if (note.getCategory() === 'tabnotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return stave.getYForTopText(textLine);\n      }\n    } else {\n      return stave.getYForTopText(textLine);\n    }\n  } else {\n    throw new Vex.RERR(\n      'UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes'\n    );\n  }\n};\n\nconst getBottomY = (note, textLine) => {\n  const stave = note.getStave();\n  const stemDirection = note.getStemDirection();\n  const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n\n  if (note.getCategory() === 'stavenotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemBaseY;\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return Math.max(...note.getYs());\n    }\n  } else if (note.getCategory() === 'tabnotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stave.getYForBottomText(textLine);\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return stave.getYForBottomText(textLine);\n    }\n  } else {\n    throw new Vex.RERR(\n      'UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes'\n    );\n  }\n};\n\n// Gets the initial offset of the articulation from the y value of the starting position.\n// This is required because the top/bottom text positions already have spacing applied to\n// provide a \"visually pleasent\" default position. However the y values provided from\n// the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n// normalizes this asymmetry.\nconst getInitialOffset = (note, position) => {\n  const isOnStemTip = (\n    (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n    (position === BELOW && note.getStemDirection() === Stem.DOWN)\n  );\n\n  if (note.getCategory() === 'stavenotes') {\n    if (note.hasStem() && isOnStemTip) {\n      return 0.5;\n    } else {\n      // this amount is larger than the stem-tip offset because we start from\n      // the center of the notehead\n      return 1;\n    }\n  } else {\n    if (note.hasStem() && isOnStemTip) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n};\n\nexport class Articulation extends Modifier {\n  static get CATEGORY() { return 'articulations'; }\n  static get INITIAL_OFFSET() { return -0.5; }\n\n  // FIXME:\n  // Most of the complex formatting logic (ie: snapping to space) is\n  // actually done in .render(). But that logic belongs in this method.\n  //\n  // Unfortunately, this isn't possible because, by this point, stem lengths\n  // have not yet been finalized. Finalized stem lengths are required to determine the\n  // initial position of any stem-side articulation.\n  //\n  // This indicates that all objects should have their stave set before being\n  // formatted. It can't be an optional if you want accurate vertical positioning.\n  // Consistently positioned articulations that play nice with other modifiers\n  // won't be possible until we stop relying on render-time formatting.\n  //\n  // Ideally, when this function has completed, the vertical articulation positions\n  // should be ready to render without further adjustment. But the current state\n  // is far from this ideal.\n  static format(articulations, state) {\n    if (!articulations || articulations.length === 0) return false;\n\n    const isAbove = artic => artic.getPosition() === ABOVE;\n    const isBelow = artic => artic.getPosition() === BELOW;\n    const margin = 0.5;\n    const getIncrement = (articulation, line, position) =>\n      roundToNearestHalf(\n        getRoundingFunction(line, position),\n        (articulation.glyph.getMetrics().height / 10) + margin\n      );\n\n    articulations\n      .filter(isAbove)\n      .forEach(articulation => {\n        articulation.setTextLine(state.top_text_line);\n        state.top_text_line += getIncrement(articulation, state.top_text_line, ABOVE);\n      });\n\n    articulations\n      .filter(isBelow)\n      .forEach(articulation => {\n        articulation.setTextLine(state.text_line);\n        state.text_line += getIncrement(articulation, state.text_line, BELOW);\n      });\n\n    const width = articulations\n      .map(articulation => articulation.getWidth())\n      .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  static easyScoreHook({ articulations }, note, builder) {\n    if (!articulations) return;\n\n    const articNameToCode = {\n      staccato: 'a.',\n      tenuto: 'a-',\n    };\n\n    articulations\n      .split(',')\n      .map(articString => articString.trim().split('.'))\n      .map(([name, position]) => {\n        const artic = { type: articNameToCode[name] };\n        if (position) artic.position = Modifier.PositionString[position];\n        return builder.getFactory().Articulation(artic);\n      })\n      .map(artic => note.addModifier(0, artic));\n  }\n\n  // Create a new articulation of type `type`, which is an entry in\n  // `Vex.Flow.articulationCodes` in `tables.js`.\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Articulation');\n\n    this.note = null;\n    this.index = null;\n    this.type = type;\n    this.position = BELOW;\n    this.render_options = {\n      font_scale: 38,\n    };\n\n    this.articulation = Flow.articulationCodes(this.type);\n    if (!this.articulation) {\n      throw new Vex.RERR('ArgumentError', `Articulation not found: ${this.type}`);\n    }\n\n    this.glyph = new Glyph(this.articulation.code, this.render_options.font_scale);\n\n    this.setWidth(this.glyph.getMetrics().width);\n  }\n\n  getCategory() { return Articulation.CATEGORY; }\n\n  // Render articulation in position next to note.\n  draw() {\n    const {\n      note, index, position, glyph,\n      articulation: { between_lines: canSitBetweenLines },\n      text_line: textLine,\n      context: ctx,\n    } = this;\n\n    this.checkContext();\n\n    if (!note || index == null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Articulation without a note and index.\");\n    }\n\n    this.setRendered();\n\n    const stave = note.getStave();\n    const staffSpace = stave.getSpacingBetweenLines();\n    const isTab = note.getCategory() === 'tabnotes';\n\n    // Articulations are centered over/under the note head.\n    const { x } = note.getModifierStartXY(position, index);\n    const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n\n    const initialOffset = getInitialOffset(note, position);\n\n    let y = {\n      [ABOVE]: () => {\n        glyph.setOrigin(0.5, 1);\n        const y = getTopY(note, textLine) - ((textLine + initialOffset) * staffSpace);\n        return shouldSitOutsideStaff\n          ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y)\n          : y;\n      },\n      [BELOW]: () => {\n        glyph.setOrigin(0.5, 0);\n        const y = getBottomY(note, textLine) + ((textLine + initialOffset) * staffSpace);\n        return shouldSitOutsideStaff\n          ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y)\n          : y;\n      },\n    }[position]();\n\n    if (!isTab) {\n      const offsetDirection = position === ABOVE ? -1 : +1;\n      const noteLine = isTab ? note.positions[index].str : note.getKeyProps()[index].line;\n      const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n      const articLine = distanceFromNote + noteLine;\n      const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n\n      if (isWithinLines(snappedLine, position)) glyph.setOrigin(0.5, 0.5);\n\n      y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection;\n    }\n\n    L(`Rendering articulation at (x: ${x}, y: ${y})`);\n\n    glyph.render(ctx, x, y);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/articulation.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements ornaments as modifiers that can be\n// attached to notes. The complete list of ornaments is available in\n// `tables.js` under `Vex.Flow.ornamentCodes`.\n//\n// See `tests/ornament_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { TickContext } from './tickcontext';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`.\nfunction L(...args) { if (Ornament.DEBUG) Vex.L('Vex.Flow.Ornament', args); }\n\nexport class Ornament extends Modifier {\n  static get CATEGORY() { return 'ornaments'; }\n\n  // ## Static Methods\n  // Arrange ornaments inside `ModifierContext`\n  static format(ornaments, state) {\n    if (!ornaments || ornaments.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < ornaments.length; ++i) {\n      const ornament = ornaments[i];\n      const increment = 2;\n\n      width = Math.max(ornament.getWidth(), width);\n\n      if (ornament.getPosition() === Modifier.Position.ABOVE) {\n        ornament.setTextLine(state.top_text_line);\n        state.top_text_line += increment;\n      } else {\n        ornament.setTextLine(state.text_line);\n        state.text_line += increment;\n      }\n    }\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  // Create a new ornament of type `type`, which is an entry in\n  // `Vex.Flow.ornamentCodes` in `tables.js`.\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Ornament');\n\n    this.note = null;\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.ABOVE;\n    this.delayed = false;\n\n    this.accidentalUpper = null;\n    this.accidentalLower = null;\n\n    this.render_options = {\n      font_scale: 38,\n      accidentalLowerPadding: 3,\n      accidentalUpperPadding: 3,\n    };\n\n    this.ornament = Flow.ornamentCodes(this.type);\n    if (!this.ornament) {\n      throw new Vex.RERR('ArgumentError', `Ornament not found: '${this.type}'`);\n    }\n\n    this.glyph = new Glyph(this.ornament.code, this.render_options.font_scale);\n    this.glyph.setOrigin(0.5, 1.0); // FIXME: SMuFL won't require a vertical origin shift\n  }\n\n  getCategory() { return Ornament.CATEGORY; }\n\n  // Set whether the ornament is to be delayed\n  setDelayed(delayed) { this.delayed = delayed; return this; }\n\n  // Set the upper accidental for the ornament\n  setUpperAccidental(accid) {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalUpper = new Glyph(Flow.accidentalCodes(accid).code, scale);\n    this.accidentalUpper.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  // Set the lower accidental for the ornament\n  setLowerAccidental(accid) {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalLower = new Glyph(Flow.accidentalCodes(accid).code, scale);\n    this.accidentalLower.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  // Render ornament in position next to note.\n  draw() {\n    this.checkContext();\n\n    if (!this.note || this.index == null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Ornament without a note and index.\");\n    }\n\n    this.setRendered();\n\n    const ctx = this.context;\n    const stemDir = this.note.getStemDirection();\n    const stave = this.note.getStave();\n\n    // Get stem extents\n    const stemExtents = this.note.getStem().getExtents();\n    let y = stemDir === StaveNote.STEM_DOWN ? stemExtents.baseY : stemExtents.topY;\n\n    // TabNotes don't have stems attached to them. Tab stems are rendered\n    // outside the stave.\n    if (this.note.getCategory() === 'tabnotes') {\n      if (this.note.hasStem()) {\n        if (stemDir === StaveNote.STEM_DOWN) {\n          y = stave.getYForTopText(this.text_line);\n        }\n      } else { // Without a stem\n        y = stave.getYForTopText(this.text_line);\n      }\n    }\n\n    const isPlacedOnNoteheadSide = stemDir === StaveNote.STEM_DOWN;\n    const spacing = stave.getSpacingBetweenLines();\n    let lineSpacing = 1;\n\n    // Beamed stems are longer than quarter note stems, adjust accordingly\n    if (!isPlacedOnNoteheadSide && this.note.beam) {\n      lineSpacing += 0.5;\n    }\n\n    const totalSpacing = spacing * (this.text_line + lineSpacing);\n    const glyphYBetweenLines = y - totalSpacing;\n\n    // Get initial coordinates for the modifier position\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let glyphX = start.x;\n    let glyphY = Math.min(stave.getYForTopText(this.text_line), glyphYBetweenLines);\n    glyphY += this.y_shift;\n\n    // Ajdust x position if ornament is delayed\n    if (this.delayed) {\n      glyphX += this.glyph.getMetrics().width;\n      const nextContext = TickContext.getNextContext(this.note.getTickContext());\n      if (nextContext) {\n        glyphX += (nextContext.getX() - glyphX) * 0.5;\n      } else {\n        glyphX += (stave.x + stave.width - glyphX) * 0.5;\n      }\n    }\n\n    L('Rendering ornament: ', this.ornament, glyphX, glyphY);\n\n    if (this.accidentalLower) {\n      this.accidentalLower.render(ctx, glyphX, glyphY);\n      glyphY -= this.accidentalLower.getMetrics().height;\n      glyphY -= this.render_options.accidentalLowerPadding;\n    }\n\n    this.glyph.render(ctx, glyphX, glyphY);\n    glyphY -= this.glyph.getMetrics().height;\n\n    if (this.accidentalUpper) {\n      glyphY -= this.render_options.accidentalUpperPadding;\n      this.accidentalUpper.render(ctx, glyphX, glyphY);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ornament.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\n\nimport { Vex } from './vex';\nimport { Tickable } from './tickable';\nimport { Fraction } from './fraction';\n\nexport class TickContext extends Tickable {\n  static getNextContext(tContext) {\n    const contexts = tContext.tContexts;\n    const index = contexts.indexOf(tContext);\n\n    return contexts[index + 1];\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'TickContext');\n    this.currentTick = new Fraction(0, 1);\n    this.maxTicks = new Fraction(0, 1);\n    this.minTicks = null;\n    this.padding = 3;     // padding on each side (width += padding * 2)\n    this.x = 0;\n    this.tickables = [];   // Notes, tabs, chords, lyrics.\n    this.notePx = 0;       // width of widest note in this context\n    this.extraLeftPx = 0;  // Extra left pixels for modifers & displace notes\n    this.extraRightPx = 0; // Extra right pixels for modifers & displace notes\n    this.tContexts = [];   // Parent array of tick contexts\n  }\n\n  getX() { return this.x; }\n  setX(x) { this.x = x; return this; }\n  getWidth() { return this.width + (this.padding * 2); }\n  setPadding(padding) { this.padding = padding; return this; }\n  getMaxTicks() { return this.maxTicks; }\n  getMinTicks() { return this.minTicks; }\n  getTickables() { return this.tickables; }\n\n  getCenterAlignedTickables() {\n    return this.tickables.filter(tickable => tickable.isCenterAligned());\n  }\n\n  // Get widths context, note and left/right modifiers for formatting\n  getMetrics() {\n    return { width: this.width, notePx: this.notePx,\n             extraLeftPx: this.extraLeftPx, extraRightPx: this.extraRightPx };\n  }\n\n  getCurrentTick() { return this.currentTick; }\n  setCurrentTick(tick) {\n    this.currentTick = tick;\n    this.preFormatted = false;\n  }\n\n  // ### DEPRECATED ###\n  // Get left & right pixels used for modifiers. THIS METHOD IS DEPRECATED. Use\n  // the getMetrics() method instead!\n  getExtraPx() {\n    let left_shift = 0;\n    let right_shift = 0;\n    let extraLeftPx = 0;\n    let extraRightPx = 0;\n    for (let i = 0; i < this.tickables.length; i++) {\n      extraLeftPx = Math.max(this.tickables[i].extraLeftPx || 0, extraLeftPx);\n      extraRightPx = Math.max(this.tickables[i].extraRightPx || 0, extraRightPx);\n      const mContext = this.tickables[i].modifierContext;\n      if (mContext && mContext != null) {\n        left_shift = Math.max(left_shift, mContext.state.left_shift);\n        right_shift = Math.max(right_shift, mContext.state.right_shift);\n      }\n    }\n    return {\n      left: left_shift,\n      right: right_shift,\n      extraLeft: extraLeftPx,\n      extraRight: extraRightPx,\n    };\n  }\n\n  addTickable(tickable) {\n    if (!tickable) {\n      throw new Vex.RERR('BadArgument', 'Invalid tickable added.');\n    }\n\n    if (!tickable.shouldIgnoreTicks()) {\n      this.ignore_ticks = false;\n\n      const ticks = tickable.getTicks();\n\n      if (ticks.greaterThan(this.maxTicks)) {\n        this.maxTicks = ticks.clone();\n      }\n\n      if (this.minTicks == null) {\n        this.minTicks = ticks.clone();\n      } else if (ticks.lessThan(this.minTicks)) {\n        this.minTicks = ticks.clone();\n      }\n    }\n\n    tickable.setTickContext(this);\n    this.tickables.push(tickable);\n    this.preFormatted = false;\n    return this;\n  }\n\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n      tickable.preFormat();\n      const metrics = tickable.getMetrics();\n\n      // Maintain max extra pixels from all tickables in the context\n      this.extraLeftPx = Math.max(this.extraLeftPx, metrics.extraLeftPx + metrics.modLeftPx);\n      this.extraRightPx = Math.max(this.extraRightPx, metrics.extraRightPx + metrics.modRightPx);\n\n      // Maintain the widest note for all tickables in the context\n      this.notePx = Math.max(this.notePx, metrics.noteWidth);\n\n      // Recalculate the tick context total width\n      this.width = this.notePx + this.extraLeftPx + this.extraRightPx;\n    }\n\n    return this;\n  }\n\n  postFormat() {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tickcontext.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements text annotations as modifiers that can be attached to\n// notes.\n//\n// See `tests/annotation_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\n\n// To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`.\nfunction L(...args) { if (Annotation.DEBUG) Vex.L('Vex.Flow.Annotation', args); }\n\nexport class Annotation extends Modifier {\n  static get CATEGORY() { return 'annotations'; }\n\n  // Text annotations can be positioned and justified relative to the note.\n  static get Justify() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n      CENTER_STEM: 4,\n    };\n  }\n\n  static get JustifyString() {\n    return {\n      left: Annotation.Justify.LEFT,\n      right: Annotation.Justify.RIGHT,\n      center: Annotation.Justify.CENTER,\n      centerStem: Annotation.Justify.CENTER_STEM,\n    };\n  }\n\n  static get VerticalJustify() {\n    return {\n      TOP: 1,\n      CENTER: 2,\n      BOTTOM: 3,\n      CENTER_STEM: 4,\n    };\n  }\n\n  static get VerticalJustifyString() {\n    return {\n      above: Annotation.VerticalJustify.TOP,\n      top: Annotation.VerticalJustify.TOP,\n      below: Annotation.VerticalJustify.BOTTOM,\n      bottom: Annotation.VerticalJustify.BOTTOM,\n      center: Annotation.VerticalJustify.CENTER,\n      centerStem: Annotation.VerticalJustify.CENTER_STEM,\n    };\n  }\n\n  // Arrange annotations within a `ModifierContext`\n  static format(annotations, state) {\n    if (!annotations || annotations.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < annotations.length; ++i) {\n      const annotation = annotations[i];\n      width = Math.max(annotation.getWidth(), width);\n      if (annotation.getPosition() === Modifier.Position.ABOVE) {\n        annotation.setTextLine(state.top_text_line);\n        state.top_text_line++;\n      } else {\n        annotation.setTextLine(state.text_line);\n        state.text_line++;\n      }\n    }\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // Annotations inherit from `Modifier` and is positioned correctly when\n  // in a `ModifierContext`.\n  // Create a new `Annotation` with the string `text`.\n  constructor(text) {\n    super();\n    this.setAttribute('type', 'Annotation');\n\n    this.note = null;\n    this.index = null;\n    this.text = text;\n    this.justification = Annotation.Justify.CENTER;\n    this.vert_justification = Annotation.VerticalJustify.TOP;\n    this.font = {\n      family: 'Arial',\n      size: 10,\n      weight: '',\n    };\n\n    // The default width is calculated from the text.\n    this.setWidth(Flow.textWidth(text));\n  }\n\n  getCategory() { return Annotation.CATEGORY; }\n\n  // Set font family, size, and weight. E.g., `Arial`, `10pt`, `Bold`.\n  setFont(family, size, weight) {\n    this.font = { family, size, weight };\n    return this;\n  }\n\n  // Set vertical position of text (above or below stave). `just` must be\n  // a value in `Annotation.VerticalJustify`.\n  setVerticalJustification(just) {\n    this.vert_justification = typeof(just) === 'string'\n      ? Annotation.VerticalJustifyString[just]\n      : just;\n    return this;\n  }\n\n  // Get and set horizontal justification. `justification` is a value in\n  // `Annotation.Justify`.\n  getJustification() { return this.justification; }\n  setJustification(just) {\n    this.justification = typeof(just) === 'string'\n      ? Annotation.JustifyString[just]\n      : just;\n    return this;\n  }\n\n  // Render text beside the note.\n  draw() {\n    this.checkContext();\n\n    if (!this.note) {\n      throw new Vex.RERR(\n        'NoNoteForAnnotation', \"Can't draw text annotation without an attached note.\"\n      );\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(Modifier.Position.ABOVE,\n        this.index);\n\n    // We're changing context parameters. Save current state.\n    this.context.save();\n    this.context.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = this.context.measureText(this.text).width;\n\n    // Estimate text height to be the same as the width of an 'm'.\n    //\n    // This is a hack to work around the inability to measure text height\n    // in HTML5 Canvas (and SVG).\n    const text_height = this.context.measureText('m').width;\n    let x;\n    let y;\n\n    if (this.justification === Annotation.Justify.LEFT) {\n      x = start.x;\n    } else if (this.justification === Annotation.Justify.RIGHT) {\n      x = start.x - text_width;\n    } else if (this.justification === Annotation.Justify.CENTER) {\n      x = start.x - text_width / 2;\n    } else /* CENTER_STEM */ {\n      x = this.note.getStemX() - text_width / 2;\n    }\n\n    let stem_ext;\n    let spacing;\n    const has_stem = this.note.hasStem();\n    const stave = this.note.getStave();\n\n    // The position of the text varies based on whether or not the note\n    // has a stem.\n    if (has_stem) {\n      stem_ext = this.note.getStem().getExtents();\n      spacing = stave.getSpacingBetweenLines();\n    }\n\n    if (this.vert_justification === Annotation.VerticalJustify.BOTTOM) {\n      // HACK: We need to compensate for the text's height since its origin\n      // is bottom-right.\n      y = stave.getYForBottomText(this.text_line + Flow.TEXT_HEIGHT_OFFSET_HACK);\n      if (has_stem) {\n        const stem_base = (this.note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY);\n        y = Math.max(y, stem_base + (spacing * (this.text_line + 2)));\n      }\n    } else if (this.vert_justification === Annotation.VerticalJustify.CENTER) {\n      const yt = this.note.getYForTopText(this.text_line) - 1;\n      const yb = stave.getYForBottomText(this.text_line);\n      y = yt + (yb - yt) / 2 + text_height / 2;\n    } else if (this.vert_justification === Annotation.VerticalJustify.TOP) {\n      y = Math.min(stave.getYForTopText(this.text_line), this.note.getYs()[0] - 10);\n      if (has_stem) {\n        y = Math.min(y, (stem_ext.topY - 5) - (spacing * this.text_line));\n      }\n    } else /* CENTER_STEM */{\n      const extents = this.note.getStemExtents();\n      y = extents.topY + (extents.baseY - extents.topY) / 2 +\n        text_height / 2;\n    }\n\n    L('Rendering annotation: ', this.text, x, y);\n    this.context.fillText(this.text, x, y);\n    this.context.restore();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/annotation.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements tablature bends.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\n/**\n   @param text Text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n   @param release If true, render a release. (DEPRECATED)\n   @param phrase If set, ignore \"text\" and \"release\", and use the more\n                 sophisticated phrase specified.\n\n   Example of a phrase:\n\n     [{\n       type: UP,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: DOWN,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: UP,\n       text: \"half\"\n       width: 8;\n     },\n     {\n       type: UP,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: DOWN,\n       text: \"1 1/2\"\n       width: 8;\n     }]\n */\nexport class Bend extends Modifier {\n  static get CATEGORY() { return 'bends'; }\n\n  static get UP() {\n    return 0;\n  }\n  static get DOWN() {\n    return 1;\n  }\n\n  // ## Static Methods\n  // Arrange bends in `ModifierContext`\n  static format(bends, state) {\n    if (!bends || bends.length === 0) return false;\n\n    let last_width = 0;\n    // Bends are always on top.\n    const text_line = state.top_text_line;\n\n    // Format Bends\n    for (let i = 0; i < bends.length; ++i) {\n      const bend = bends[i];\n      bend.setXShift(last_width);\n      last_width = bend.getWidth();\n      bend.setTextLine(text_line);\n    }\n\n    state.right_shift += last_width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  // ## Prototype Methods\n  constructor(text, release, phrase) {\n    super();\n    this.setAttribute('type', 'Bend');\n\n    this.text = text;\n    this.x_shift = 0;\n    this.release = release || false;\n    this.font = '10pt Arial';\n    this.render_options = {\n      line_width: 1.5,\n      line_style: '#777777',\n      bend_width: 8,\n      release_width: 8,\n    };\n\n    if (phrase) {\n      this.phrase = phrase;\n    } else {\n      // Backward compatibility\n      this.phrase = [{ type: Bend.UP, text: this.text }];\n      if (this.release) this.phrase.push({ type: Bend.DOWN, text: '' });\n    }\n\n    this.updateWidth();\n  }\n\n  getCategory() { return Bend.CATEGORY; }\n\n  setXShift(value) {\n    this.x_shift = value;\n    this.updateWidth();\n  }\n  setFont(font) { this.font = font; return this; }\n  getText() { return this.text; }\n  updateWidth() {\n    const that = this;\n\n    function measure_text(text) {\n      let text_width;\n      if (that.context) {\n        text_width = that.context.measureText(text).width;\n      } else {\n        text_width = Flow.textWidth(text);\n      }\n\n      return text_width;\n    }\n\n    let total_width = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if ('width' in bend) {\n        total_width += bend.width;\n      } else {\n        const additional_width = (bend.type === Bend.UP) ?\n          this.render_options.bend_width : this.render_options.release_width;\n\n        bend.width = Vex.Max(additional_width, measure_text(bend.text)) + 3;\n        bend.draw_width = bend.width / 2;\n        total_width += bend.width;\n      }\n    }\n\n    this.setWidth(total_width + this.x_shift);\n    return this;\n  }\n  draw() {\n    this.checkContext();\n    if (!(this.note && (this.index != null))) {\n      throw new Vex.RERR('NoNoteForBend', \"Can't draw bend without a note or index.\");\n    }\n\n    this.setRendered();\n\n    const start = this.note.getModifierStartXY(Modifier.Position.RIGHT,\n        this.index);\n    start.x += 3;\n    start.y += 0.5;\n    const x_shift = this.x_shift;\n\n    const ctx = this.context;\n    const bend_height = this.note.getStave().getYForTopText(this.text_line) + 3;\n    const annotation_y = this.note.getStave().getYForTopText(this.text_line) - 1;\n    const that = this;\n\n    function renderBend(x, y, width, height) {\n      const cp_x = x + width;\n      const cp_y = y;\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(that.render_options.line_width);\n      ctx.setStrokeStyle(that.render_options.line_style);\n      ctx.setFillStyle(that.render_options.line_style);\n      ctx.moveTo(x, y);\n      ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    function renderRelease(x, y, width, height) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(that.render_options.line_width);\n      ctx.setStrokeStyle(that.render_options.line_style);\n      ctx.setFillStyle(that.render_options.line_style);\n      ctx.moveTo(x, height);\n      ctx.quadraticCurveTo(\n          x + width, height,\n          x + width, y);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    function renderArrowHead(x, y, direction) {\n      const width = 4;\n      const dir = direction || 1;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x - width, y + width * dir);\n      ctx.lineTo(x + width, y + width * dir);\n      ctx.closePath();\n      ctx.fill();\n    }\n\n    function renderText(x, text) {\n      ctx.save();\n      ctx.setRawFont(that.font);\n      const render_x = x - (ctx.measureText(text).width / 2);\n      ctx.fillText(text, render_x, annotation_y);\n      ctx.restore();\n    }\n\n    let last_bend = null;\n    let last_drawn_width = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if (i === 0) bend.draw_width += x_shift;\n\n      last_drawn_width = bend.draw_width +\n        (last_bend ? last_bend.draw_width : 0) -\n        (i === 1 ? x_shift : 0);\n      if (bend.type === Bend.UP) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderArrowHead(start.x, bend_height);\n        }\n\n        renderBend(start.x, start.y, last_drawn_width, bend_height);\n      }\n\n      if (bend.type === Bend.DOWN) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (last_bend && last_bend.type === Bend.DOWN) {\n          renderArrowHead(start.x, start.y, -1);\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (last_bend === null) {\n          last_drawn_width = bend.draw_width;\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n      }\n\n      renderText(start.x + last_drawn_width, bend.text);\n      last_bend = bend;\n      last_bend.x = start.x;\n\n      start.x += last_drawn_width;\n    }\n\n    // Final arrowhead and text\n    if (last_bend.type === Bend.UP) {\n      renderArrowHead(last_bend.x + last_drawn_width, bend_height);\n    } else if (last_bend.type === Bend.DOWN) {\n      renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/bend.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements vibratos.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Bend } from './bend';\n\nexport class Vibrato extends Modifier {\n  static get CATEGORY() { return 'vibratos'; }\n\n  // ## Static Methods\n  // Arrange vibratos inside a `ModifierContext`.\n  static format(vibratos, state, context) {\n    if (!vibratos || vibratos.length === 0) return false;\n\n    // Vibratos are always on top.\n    let text_line = state.top_text_line;\n    let width = 0;\n    let shift = state.right_shift - 7;\n\n    // If there's a bend, drop the text line\n    const bends = context.getModifiers(Bend.CATEGORY);\n    if (bends && bends.length > 0) {\n      text_line--;\n    }\n\n    // Format Vibratos\n    for (let i = 0; i < vibratos.length; ++i) {\n      const vibrato = vibratos[i];\n      vibrato.setXShift(shift);\n      vibrato.setTextLine(text_line);\n      width += vibrato.getWidth();\n      shift += width;\n    }\n\n    state.right_shift += width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  // ## Prototype Methods\n  constructor() {\n    super();\n    this.setAttribute('type', 'Vibrato');\n\n    this.position = Modifier.Position.RIGHT;\n    this.render_options = {\n      harsh: false,\n      vibrato_width: 20,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n\n    this.setVibratoWidth(this.render_options.vibrato_width);\n  }\n  getCategory() { return Vibrato.CATEGORY; }\n  setHarsh(harsh) { this.render_options.harsh = harsh; return this; }\n  setVibratoWidth(width) {\n    this.render_options.vibrato_width = width;\n    this.setWidth(width);\n    return this;\n  }\n\n  draw() {\n    const ctx = this.checkContext();\n\n    if (!this.note) {\n      throw new Vex.RERR('NoNoteForVibrato', \"Can't draw vibrato without an attached note.\");\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n\n    const vx = start.x + this.x_shift;\n    const vy = this.note.getYForTopText(this.text_line) + 2;\n\n    Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n  }\n\n  // Static rendering method that can be called from\n  // other classes (e.g. VibratoBracket)\n  static renderVibrato(ctx, x, y, opts) {\n    const { harsh, vibrato_width, wave_width, wave_girth, wave_height } = opts;\n    const num_waves = vibrato_width / wave_width;\n\n    ctx.beginPath();\n\n    let i;\n    if (harsh) {\n      ctx.moveTo(x, y + wave_girth + 1);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x + wave_width, y - (wave_height / 2));\n        x += wave_width;\n        ctx.lineTo(x + wave_width, y + (wave_height / 2));\n        x += wave_width;\n      }\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x - wave_width, (y - (wave_height / 2)) + wave_girth + 1);\n        x -= wave_width;\n        ctx.lineTo(x - wave_width, (y + (wave_height / 2)) + wave_girth + 1);\n        x -= wave_width;\n      }\n      ctx.fill();\n    } else {\n      ctx.moveTo(x, y + wave_girth);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(x + (wave_width / 2), y - (wave_height / 2), x + wave_width, y);\n        x += wave_width;\n        ctx.quadraticCurveTo(x + (wave_width / 2), y + (wave_height / 2), x + wave_width, y);\n        x += wave_width;\n      }\n\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(\n          x - (wave_width / 2),\n          (y + (wave_height / 2)) + wave_girth,\n          x - wave_width, y + wave_girth);\n        x -= wave_width;\n        ctx.quadraticCurveTo(\n          x - (wave_width / 2),\n          (y - (wave_height / 2)) + wave_girth,\n          x - wave_width, y + wave_girth);\n        x -= wave_width;\n      }\n      ctx.fill();\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vibrato.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Barline } from './stavebarline';\nimport { StaveModifier } from './stavemodifier';\nimport { Repetition } from './staverepetition';\nimport { StaveSection } from './stavesection';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { BoundingBox } from './boundingbox';\nimport { Clef } from './clef';\nimport { KeySignature } from './keysignature';\nimport { TimeSignature } from './timesignature';\nimport { Volta } from './stavevolta';\n\nexport class Stave extends Element {\n  constructor(x, y, width, options) {\n    super();\n    this.setAttribute('type', 'Stave');\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.formatted = false;\n    this.start_x = x + 5;\n    this.end_x = x + width;\n    this.modifiers = [];  // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n    this.measure = 0;\n    this.clef = 'treble';\n    this.font = {\n      family: 'sans-serif',\n      size: 8,\n      weight: '',\n    };\n    this.options = {\n      vertical_bar_width: 10,       // Width around vertical bar end-marker\n      glyph_spacing_px: 10,\n      num_lines: 5,\n      fill_style: '#999999',\n      left_bar: true,               // draw vertical bar on left\n      right_bar: true,               // draw vertical bar on right\n      spacing_between_lines_px: 10, // in pixels\n      space_above_staff_ln: 4,      // in staff lines\n      space_below_staff_ln: 4,      // in staff lines\n      top_text_position: 1,          // in staff lines\n    };\n    this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n    Vex.Merge(this.options, options);\n\n    this.resetLines();\n\n    const BARTYPE = Barline.type;\n    // beg bar\n    this.addModifier(new Barline(this.options.left_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n    // end bar\n    this.addEndModifier(new Barline(this.options.right_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n  }\n\n  space(spacing) { return this.options.spacing_between_lines_px * spacing; }\n\n  resetLines() {\n    this.options.line_config = [];\n    for (let i = 0; i < this.options.num_lines; i++) {\n      this.options.line_config.push({ visible: true });\n    }\n    this.height = (this.options.num_lines + this.options.space_above_staff_ln) *\n       this.options.spacing_between_lines_px;\n    this.options.bottom_text_position = this.options.num_lines;\n  }\n\n  getOptions() { return this.options; }\n\n  setNoteStartX(x) {\n    if (!this.formatted) this.format();\n\n    this.start_x = x;\n    return this;\n  }\n  getNoteStartX() {\n    if (!this.formatted) this.format();\n\n    return this.start_x;\n  }\n\n  getNoteEndX() {\n    if (!this.formatted) this.format();\n\n    return this.end_x;\n  }\n  getTieStartX() { return this.start_x; }\n  getTieEndX() { return this.x + this.width; }\n  getX() { return this.x; }\n  getNumLines() { return this.options.num_lines; }\n  setNumLines(lines) {\n    this.options.num_lines = parseInt(lines, 10);\n    this.resetLines();\n    return this;\n  }\n  setY(y) { this.y = y; return this; }\n\n  getTopLineTopY() {\n    return this.getYForLine(0) - (Flow.STAVE_LINE_THICKNESS / 2);\n  }\n  getBottomLineBottomY() {\n    return this.getYForLine(this.getNumLines() - 1) + (Flow.STAVE_LINE_THICKNESS / 2);\n  }\n\n  setX(x) {\n    const shift = x - this.x;\n    this.formatted = false;\n    this.x = x;\n    this.start_x += shift;\n    this.end_x += shift;\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const mod = this.modifiers[i];\n      if (mod.x !== undefined) {\n        mod.x += shift;\n      }\n    }\n    return this;\n  }\n\n  setWidth(width) {\n    this.formatted = false;\n    this.width = width;\n    this.end_x = this.x + width;\n\n    // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n    // this.modifiers[1].setX(this.end_x);\n    return this;\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  setMeasure(measure) { this.measure = measure; return this; }\n\n  /**\n   * Gets the pixels to shift from the beginning of the stave\n   * following the modifier at the provided index\n   * @param  {Number} index The index from which to determine the shift\n   * @return {Number}       The amount of pixels shifted\n   */\n  getModifierXShift(index = 0) {\n    if (typeof index !== 'number') {\n      throw new Vex.RERR('InvalidIndex', 'Must be of number type');\n    }\n\n    if (!this.formatted) this.format();\n\n    if (this.getModifiers(StaveModifier.Position.BEGIN).length === 1) {\n      return 0;\n    }\n\n    let start_x = this.start_x - this.x;\n    const begBarline = this.modifiers[0];\n    if (begBarline.getType() === Barline.type.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n      start_x -= begBarline.getWidth();\n    }\n\n    return start_x;\n  }\n\n  // Coda & Segno Symbol functions\n  setRepetitionTypeLeft(type, y) {\n    this.modifiers.push(new Repetition(type, this.x, y));\n    return this;\n  }\n\n  setRepetitionTypeRight(type, y) {\n    this.modifiers.push(new Repetition(type, this.x, y));\n    return this;\n  }\n\n  // Volta functions\n  setVoltaType(type, number_t, y) {\n    this.modifiers.push(new Volta(type, number_t, this.x, y));\n    return this;\n  }\n\n  // Section functions\n  setSection(section, y) {\n    this.modifiers.push(new StaveSection(section, this.x, y));\n    return this;\n  }\n\n  // Tempo functions\n  setTempo(tempo, y) {\n    this.modifiers.push(new StaveTempo(tempo, this.x, y));\n    return this;\n  }\n\n  // Text functions\n  setText(text, position, options) {\n    this.modifiers.push(new StaveText(text, position, options));\n    return this;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  getSpacingBetweenLines() {\n    return this.options.spacing_between_lines_px;\n  }\n\n  getBoundingBox() {\n    return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n  }\n\n  getBottomY() {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const score_bottom = this.getYForLine(options.num_lines) +\n       (options.space_below_staff_ln * spacing);\n\n    return score_bottom;\n  }\n\n  getBottomLineY() {\n    return this.getYForLine(this.options.num_lines);\n  }\n\n  // This returns the y for the *center* of a staff line\n  getYForLine(line) {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n\n    const y = this.y + (line * spacing) + (headroom * spacing);\n\n    return y;\n  }\n\n  getLineForY(y) {\n    // Does the reverse of getYForLine - somewhat dumb and just calls\n    // getYForLine until the right value is reaches\n\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    return ((y - this.y) / spacing) - headroom;\n  }\n\n  getYForTopText(line) {\n    const l = line || 0;\n    return this.getYForLine(-l - this.options.top_text_position);\n  }\n\n  getYForBottomText(line) {\n    const l = line || 0;\n    return this.getYForLine(this.options.bottom_text_position + l);\n  }\n\n  getYForNote(line) {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    const y = this.y + (headroom * spacing) + (5 * spacing) - (line * spacing);\n\n    return y;\n  }\n\n  getYForGlyphs() {\n    return this.getYForLine(3);\n  }\n\n  addModifier(modifier, position) {\n    if (position !== undefined) {\n      modifier.setPosition(position);\n    }\n\n    modifier.setStave(this);\n    this.formatted = false;\n    this.modifiers.push(modifier);\n    return this;\n  }\n\n  addEndModifier(modifier) {\n    this.addModifier(modifier, StaveModifier.Position.END);\n    return this;\n  }\n\n  // Bar Line functions\n  setBegBarType(type) {\n    // Only valid bar types at beginning of stave is none, single or begin repeat\n    const { SINGLE, REPEAT_BEGIN, NONE } = Barline.type;\n    if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n      this.modifiers[0].setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setEndBarType(type) {\n    // Repeat end not valid at end of stave\n    if (type !== Barline.type.REPEAT_BEGIN) {\n      this.modifiers[1].setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setClef(clefSpec, size, annotation, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    this.clef = clefSpec;\n    const clefs = this.getModifiers(position, Clef.CATEGORY);\n    if (clefs.length === 0) {\n      this.addClef(clefSpec, size, annotation, position);\n    } else {\n      clefs[0].setType(clefSpec, size, annotation);\n    }\n\n    return this;\n  }\n\n  setEndClef(clefSpec, size, annotation) {\n    this.setClef(clefSpec, size, annotation, StaveModifier.Position.END);\n    return this;\n  }\n\n  setKeySignature(keySpec, cancelKeySpec, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    const keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n    if (keySignatures.length === 0) {\n      this.addKeySignature(keySpec, cancelKeySpec, position);\n    } else {\n      keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n    }\n\n    return this;\n  }\n\n  setEndKeySignature(keySpec, cancelKeySpec) {\n    this.setKeySignature(keySpec, cancelKeySpec, StaveModifier.Position.END);\n    return this;\n  }\n\n  setTimeSignature(timeSpec, customPadding, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n    if (timeSignatures.length === 0) {\n      this.addTimeSignature(timeSpec, customPadding, position);\n    } else {\n      timeSignatures[0].setTimeSig(timeSpec);\n    }\n\n    return this;\n  }\n\n  setEndTimeSignature(timeSpec, customPadding) {\n    this.setTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n    return this;\n  }\n\n  addKeySignature(keySpec, cancelKeySpec, position) {\n    this.addModifier(new KeySignature(keySpec, cancelKeySpec), position);\n    return this;\n  }\n\n  addClef(clef, size, annotation, position) {\n    if (position === undefined || position === StaveModifier.Position.BEGIN) {\n      this.clef = clef;\n    }\n\n    this.addModifier(new Clef(clef, size, annotation), position);\n    return this;\n  }\n\n  addEndClef(clef, size, annotation) {\n    this.addClef(clef, size, annotation, StaveModifier.Position.END);\n    return this;\n  }\n\n  addTimeSignature(timeSpec, customPadding, position) {\n    this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n    return this;\n  }\n\n  addEndTimeSignature(timeSpec, customPadding) {\n    this.addTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n    return this;\n  }\n\n  // Deprecated\n  addTrebleGlyph() {\n    this.addClef('treble');\n    return this;\n  }\n\n  getModifiers(position, category) {\n    if (position === undefined) return this.modifiers;\n\n    return this.modifiers.filter(modifier =>\n      position === modifier.getPosition() &&\n      (category === undefined || category === modifier.getCategory())\n    );\n  }\n\n  sortByCategory(items, order) {\n    for (let i = items.length - 1; i >= 0; i--) {\n      for (let j = 0; j < i; j++) {\n        if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n          const temp = items[j];\n          items[j] = items[j + 1];\n          items[j + 1] = temp;\n        }\n      }\n    }\n  }\n\n  format() {\n    const begBarline = this.modifiers[0];\n    const endBarline = this.modifiers[1];\n\n    const begModifiers = this.getModifiers(StaveModifier.Position.BEGIN);\n    const endModifiers = this.getModifiers(StaveModifier.Position.END);\n\n    this.sortByCategory(begModifiers, {\n      barlines: 0, clefs: 1, keysignatures: 2, timesignatures: 3,\n    });\n\n    this.sortByCategory(endModifiers, {\n      timesignatures: 0, keysignatures: 1, barlines: 2, clefs: 3,\n    });\n\n    if (begModifiers.length > 1 &&\n        begBarline.getType() === Barline.type.REPEAT_BEGIN) {\n      begModifiers.push(begModifiers.splice(0, 1)[0]);\n      begModifiers.splice(0, 0, new Barline(Barline.type.SINGLE));\n    }\n\n    if (endModifiers.indexOf(endBarline) > 0) {\n      endModifiers.splice(0, 0, new Barline(Barline.type.NONE));\n    }\n\n    let width;\n    let padding;\n    let modifier;\n    let offset = 0;\n    let x = this.x;\n    for (let i = 0; i < begModifiers.length; i++) {\n      modifier = begModifiers[i];\n      padding = modifier.getPadding(i + offset);\n      width = modifier.getWidth();\n\n      x += padding;\n      modifier.setX(x);\n      x += width;\n\n      if (padding + width === 0) offset--;\n    }\n\n    this.start_x = x;\n    x = this.x + this.width;\n\n    for (let i = 0; i < endModifiers.length; i++) {\n      modifier = endModifiers[i];\n      x -= modifier.getPadding(i);\n      if (i !== 0) {\n        x -= modifier.getWidth();\n      }\n\n      modifier.setX(x);\n\n      if (i === 0) {\n        x -= modifier.getWidth();\n      }\n    }\n\n    this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n    this.formatted = true;\n  }\n\n  /**\n   * All drawing functions below need the context to be set.\n   */\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    if (!this.formatted) this.format();\n\n    const num_lines = this.options.num_lines;\n    const width = this.width;\n    const x = this.x;\n    let y;\n\n    // Render lines\n    for (let line = 0; line < num_lines; line++) {\n      y = this.getYForLine(line);\n\n      this.context.save();\n      this.context.setFillStyle(this.options.fill_style);\n      this.context.setStrokeStyle(this.options.fill_style);\n      this.context.setLineWidth(Flow.STAVE_LINE_THICKNESS);\n      if (this.options.line_config[line].visible) {\n        this.context.beginPath();\n        this.context.moveTo(x, y);\n        this.context.lineTo(x + width, y);\n        this.context.stroke();\n      }\n      this.context.restore();\n    }\n\n    // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n    for (let i = 0; i < this.modifiers.length; i++) {\n      // Only draw modifier if it has a draw function\n      if (typeof this.modifiers[i].draw === 'function') {\n        this.modifiers[i].draw(this, this.getModifierXShift(i));\n      }\n    }\n\n    // Render measure numbers\n    if (this.measure > 0) {\n      this.context.save();\n      this.context.setFont(this.font.family, this.font.size, this.font.weight);\n      const text_width = this.context.measureText('' + this.measure).width;\n      y = this.getYForTopText(0) + 3;\n      this.context.fillText('' + this.measure, this.x - text_width / 2, y);\n      this.context.restore();\n    }\n\n    return this;\n  }\n\n  // Draw Simple barlines for backward compatability\n  // Do not delete - draws the beginning bar of the stave\n  drawVertical(x, isDouble) {\n    this.drawVerticalFixed(this.x + x, isDouble);\n  }\n\n  drawVerticalFixed(x, isDouble) {\n    this.checkContext();\n\n    const top_line = this.getYForLine(0);\n    const bottom_line = this.getYForLine(this.options.num_lines - 1);\n    if (isDouble) {\n      this.context.fillRect(x - 3, top_line, 1, bottom_line - top_line + 1);\n    }\n    this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n  }\n\n  drawVerticalBar(x) {\n    this.drawVerticalBarFixed(this.x + x, false);\n  }\n\n  drawVerticalBarFixed(x) {\n    this.checkContext();\n\n    const top_line = this.getYForLine(0);\n    const bottom_line = this.getYForLine(this.options.num_lines - 1);\n    this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n  }\n\n  /**\n   * Get the current configuration for the Stave.\n   * @return {Array} An array of configuration objects.\n   */\n  getConfigForLines() {\n    return this.options.line_config;\n  }\n\n  /**\n   * Configure properties of the lines in the Stave\n   * @param line_number The index of the line to configure.\n   * @param line_config An configuration object for the specified line.\n   * @throws Vex.RERR \"StaveConfigError\" When the specified line number is out of\n   *   range of the number of lines specified in the constructor.\n   */\n  setConfigForLine(line_number, line_config) {\n    if (line_number >= this.options.num_lines || line_number < 0) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        'The line number must be within the range of the number of lines in the Stave.'\n      );\n    }\n\n    if (line_config.visible === undefined) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        \"The line configuration object is missing the 'visible' property.\"\n      );\n    }\n\n    if (typeof(line_config.visible) !== 'boolean') {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        \"The line configuration objects 'visible' property must be true or false.\"\n      );\n    }\n\n    this.options.line_config[line_number] = line_config;\n\n    return this;\n  }\n\n  /**\n   * Set the staff line configuration array for all of the lines at once.\n   * @param lines_configuration An array of line configuration objects.  These objects\n   *   are of the same format as the single one passed in to setLineConfiguration().\n   *   The caller can set null for any line config entry if it is desired that the default be used\n   * @throws Vex.RERR \"StaveConfigError\" When the lines_configuration array does not have\n   *   exactly the same number of elements as the num_lines configuration object set in\n   *   the constructor.\n   */\n  setConfigForLines(lines_configuration) {\n    if (lines_configuration.length !== this.options.num_lines) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        'The length of the lines configuration array must match the number of lines in the Stave'\n      );\n    }\n\n    // Make sure the defaults are present in case an incomplete set of\n    //  configuration options were supplied.\n    for (const line_config in lines_configuration) {\n      // Allow 'null' to be used if the caller just wants the default for a particular node.\n      if (!lines_configuration[line_config]) {\n        lines_configuration[line_config] = this.options.line_config[line_config];\n      }\n      Vex.Merge(this.options.line_config[line_config], lines_configuration[line_config]);\n    }\n\n    this.options.line_config = lines_configuration;\n\n    return this;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/stave.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author Larry Kuhns 2011\n\nimport { Flow } from './tables';\nimport { StaveModifier } from './stavemodifier';\n\nexport class Barline extends StaveModifier {\n  static get CATEGORY() { return 'barlines'; }\n  static get type() {\n    return {\n      SINGLE: 1,\n      DOUBLE: 2,\n      END: 3,\n      REPEAT_BEGIN: 4,\n      REPEAT_END: 5,\n      REPEAT_BOTH: 6,\n      NONE: 7,\n    };\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Barline');\n    this.thickness = Flow.STAVE_LINE_THICKNESS;\n\n    const TYPE = Barline.type;\n    this.widths = {};\n    this.widths[TYPE.SINGLE] = 5;\n    this.widths[TYPE.DOUBLE] = 5;\n    this.widths[TYPE.END] = 5;\n    this.widths[TYPE.REPEAT_BEGIN] = 5;\n    this.widths[TYPE.REPEAT_END] = 5;\n    this.widths[TYPE.REPEAT_BOTH] = 5;\n    this.widths[TYPE.NONE] = 5;\n\n    this.paddings = {};\n    this.paddings[TYPE.SINGLE] = 0;\n    this.paddings[TYPE.DOUBLE] = 0;\n    this.paddings[TYPE.END] = 0;\n    this.paddings[TYPE.REPEAT_BEGIN] = 15;\n    this.paddings[TYPE.REPEAT_END] = 15;\n    this.paddings[TYPE.REPEAT_BOTH] = 15;\n    this.paddings[TYPE.NONE] = 0;\n\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setType(type);\n  }\n  getCategory() { return Barline.CATEGORY; }\n  getType() { return this.type; }\n  setType(type) {\n    this.type = type;\n    this.setWidth(this.widths[this.type]);\n    this.setPadding(this.paddings[this.type]);\n    return this;\n  }\n\n  // Draw barlines\n  draw(stave) {\n    stave.checkContext();\n    this.setRendered();\n\n    switch (this.type) {\n      case Barline.type.SINGLE:\n        this.drawVerticalBar(stave, this.x, false);\n        break;\n      case Barline.type.DOUBLE:\n        this.drawVerticalBar(stave, this.x, true);\n        break;\n      case Barline.type.END:\n        this.drawVerticalEndBar(stave, this.x);\n        break;\n      case Barline.type.REPEAT_BEGIN:\n        // If the barline is shifted over (in front of clef/time/key)\n        // Draw vertical bar at the beginning.\n        this.drawRepeatBar(stave, this.x, true);\n        if (stave.getX() !== this.x) {\n          this.drawVerticalBar(stave, stave.getX());\n        }\n\n        break;\n      case Barline.type.REPEAT_END:\n        this.drawRepeatBar(stave, this.x, false);\n        break;\n      case Barline.type.REPEAT_BOTH:\n        this.drawRepeatBar(stave, this.x, false);\n        this.drawRepeatBar(stave, this.x, true);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n  }\n\n  drawVerticalBar(stave, x, double_bar) {\n    stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    if (double_bar) {\n      stave.context.fillRect(x - 3, topY, 1, botY - topY);\n    }\n    stave.context.fillRect(x, topY, 1, botY - topY);\n  }\n\n  drawVerticalEndBar(stave, x) {\n    stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    stave.context.fillRect(x - 5, topY, 1, botY - topY);\n    stave.context.fillRect(x - 2, topY, 3, botY - topY);\n  }\n\n  drawRepeatBar(stave, x, begin) {\n    stave.checkContext();\n\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    let x_shift = 3;\n\n    if (!begin) {\n      x_shift = -5;\n    }\n\n    stave.context.fillRect(x + x_shift, topY, 1, botY - topY);\n    stave.context.fillRect(x - 2, topY, 3, botY - topY);\n\n    const dot_radius = 2;\n\n    // Shift dots left or right\n    if (begin) {\n      x_shift += 4;\n    } else {\n      x_shift -= 4;\n    }\n\n    const dot_x = (x + x_shift) + (dot_radius / 2);\n\n    // calculate the y offset based on number of stave lines\n    let y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n    y_offset = (y_offset / 2) - (stave.getSpacingBetweenLines() / 2);\n    let dot_y = topY + y_offset + (dot_radius / 2);\n\n    // draw the top repeat dot\n    stave.context.beginPath();\n    stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    stave.context.fill();\n\n    // draw the bottom repeat dot\n    dot_y += stave.getSpacingBetweenLines();\n    stave.context.beginPath();\n    stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    stave.context.fill();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/stavebarline.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A base class for stave modifiers (e.g. clefs, key signatures)\n\nimport { Element } from './element';\n\nexport class StaveModifier extends Element {\n  static get Position() {\n    return {\n      LEFT: 1,\n      RIGHT: 2,\n      ABOVE: 3,\n      BELOW: 4,\n      BEGIN: 5,\n      END: 6,\n    };\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'StaveModifier');\n\n    this.padding = 10;\n    this.position = StaveModifier.Position.ABOVE;\n  }\n\n  getPosition() { return this.position; }\n  setPosition(position) { this.position = position; return this; }\n  getStave() { return this.stave; }\n  setStave(stave) { this.stave = stave; return this; }\n  getWidth() { return this.width; }\n  setWidth(width) { this.width = width; return this; }\n  getX() { return this.x; }\n  setX(x) { this.x = x; return this; }\n  getCategory() { return ''; }\n  makeSpacer(padding) {\n    // TODO(0xfe): Return an instance of type `Spacer` based on `GhostNote`\n    // instead of this hack.\n\n    return {\n      getContext() { return true; },\n      setStave() {},\n      renderToStave() {},\n      getMetrics() {\n        return { width: padding };\n      },\n    };\n  }\n  placeGlyphOnLine(glyph, stave, line) {\n    glyph.setYShift(stave.getYForLine(line) - stave.getYForGlyphs());\n  }\n  getPadding(index) {\n    return (index !== undefined && index < 2 ? 0 : this.padding);\n  }\n  setPadding(padding) { this.padding = padding; return this; }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/stavemodifier.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class Repetition extends StaveModifier {\n  static get CATEGORY() { return 'repetitions'; }\n  static get type() {\n    return {\n      NONE: 1,         // no coda or segno\n      CODA_LEFT: 2,    // coda at beginning of stave\n      CODA_RIGHT: 3,   // coda at end of stave\n      SEGNO_LEFT: 4,   // segno at beginning of stave\n      SEGNO_RIGHT: 5,  // segno at end of stave\n      DC: 6,           // D.C. at end of stave\n      DC_AL_CODA: 7,   // D.C. al coda at end of stave\n      DC_AL_FINE: 8,   // D.C. al Fine end of stave\n      DS: 9,           // D.S. at end of stave\n      DS_AL_CODA: 10,  // D.S. al coda at end of stave\n      DS_AL_FINE: 11,  // D.S. al Fine at end of stave\n      FINE: 12,        // Fine at end of stave\n    };\n  }\n\n  constructor(type, x, y_shift) {\n    super();\n    this.setAttribute('type', 'Repetition');\n\n    this.symbol_type = type;\n    this.x = x;\n    this.x_shift = 0;\n    this.y_shift = y_shift;\n    this.font = {\n      family: 'times',\n      size: 12,\n      weight: 'bold italic',\n    };\n  }\n\n  getCategory() { return Repetition.CATEGORY; }\n  setShiftX(x) { this.x_shift = x; return this; }\n  setShiftY(y) { this.y_shift = y; return this; }\n\n  draw(stave, x) {\n    this.setRendered();\n\n    switch (this.symbol_type) {\n      case Repetition.type.CODA_RIGHT:\n        this.drawCodaFixed(stave, x + stave.width);\n        break;\n      case Repetition.type.CODA_LEFT:\n        this.drawSymbolText(stave, x, 'Coda', true);\n        break;\n      case Repetition.type.SEGNO_LEFT:\n        this.drawSignoFixed(stave, x);\n        break;\n      case Repetition.type.SEGNO_RIGHT:\n        this.drawSignoFixed(stave, x + stave.width);\n        break;\n      case Repetition.type.DC:\n        this.drawSymbolText(stave, x, 'D.C.', false);\n        break;\n      case Repetition.type.DC_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.C. al', true);\n        break;\n      case Repetition.type.DC_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n        break;\n      case Repetition.type.DS:\n        this.drawSymbolText(stave, x, 'D.S.', false);\n        break;\n      case Repetition.type.DS_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.S. al', true);\n        break;\n      case Repetition.type.DS_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n        break;\n      case Repetition.type.FINE:\n        this.drawSymbolText(stave, x, 'Fine', false);\n        break;\n      default:\n        break;\n    }\n\n    return this;\n  }\n\n  drawCodaFixed(stave, x) {\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 40, 'v4d', true);\n    return this;\n  }\n\n  drawSignoFixed(stave, x) {\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 30, 'v8c', true);\n    return this;\n  }\n\n  drawSymbolText(stave, x, text, draw_coda) {\n    const ctx = stave.checkContext();\n\n    ctx.save();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      // Default to right symbol\n    let text_x = 0 + this.x_shift;\n    let symbol_x = x + this.x_shift;\n    if (this.symbol_type === Repetition.type.CODA_LEFT) {\n        // Offset Coda text to right of stave beginning\n      text_x = this.x + stave.options.vertical_bar_width;\n      symbol_x = text_x + ctx.measureText(text).width + 12;\n    } else {\n        // Offset Signo text to left stave end\n      symbol_x = this.x + x + stave.width - 5 + this.x_shift;\n      text_x = symbol_x - + ctx.measureText(text).width - 12;\n    }\n\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    if (draw_coda) {\n      Glyph.renderGlyph(ctx, symbol_x, y, 40, 'v4d', true);\n    }\n\n    ctx.fillText(text, text_x, y + 5);\n    ctx.restore();\n\n    return this;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/staverepetition.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\n\nexport class StaveSection extends StaveModifier {\n  static get CATEGORY() { return 'stavesection'; }\n\n  constructor(section, x, shift_y) {\n    super();\n    this.setAttribute('type', 'StaveSection');\n\n    this.setWidth(16);\n    this.section = section;\n    this.x = x;\n    this.shift_x = 0;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'sans-serif',\n      size: 12,\n      weight: 'bold',\n    };\n  }\n\n  getCategory() { return StaveSection.CATEGORY; }\n  setStaveSection(section) { this.section = section; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n  draw(stave, shift_x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.section).width;\n    let width = text_width + 6;  // add left & right padding\n    if (width < 18) width = 18;\n    const height = 20;\n      //  Seems to be a good default y\n    const y = stave.getYForTopText(3) + this.shift_y;\n    let x = this.x + shift_x;\n    ctx.beginPath();\n    ctx.lineWidth = 2;\n    ctx.rect(x, y, width, height);\n    ctx.stroke();\n    x += (width - text_width) / 2;\n    ctx.fillText('' + this.section, x, y + 16);\n    ctx.restore();\n    return this;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/stavesection.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Radosaw Eichler 2012\n\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class StaveTempo extends StaveModifier {\n  static get CATEGORY() { return 'stavetempo'; }\n\n  constructor(tempo, x, shift_y) {\n    super();\n    this.setAttribute('type', 'StaveTempo');\n\n    this.tempo = tempo;\n    this.position = Modifier.Position.ABOVE;\n    this.x = x;\n    this.shift_x = 10;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'times',\n      size: 14,\n      weight: 'bold',\n    };\n    this.render_options = {\n      glyph_font_scale: 30,  // font size for note\n    };\n  }\n  getCategory() { return StaveTempo.CATEGORY; }\n  setTempo(tempo) { this.tempo = tempo; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n\n  draw(stave, shift_x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    const options = this.render_options;\n    // FIXME: What does the '38' mean? Why 38? Is that supposed to\n    // be the default font size for standard notation?\n    const scale = options.glyph_font_scale / 38;\n    const name = this.tempo.name;\n    const duration = this.tempo.duration;\n    const dots = this.tempo.dots;\n    const bpm = this.tempo.bpm;\n    const font = this.font;\n    let x = this.x + this.shift_x + shift_x;\n    const y = stave.getYForTopText(1) + this.shift_y;\n\n    ctx.save();\n\n    if (name) {\n      ctx.setFont(font.family, font.size, font.weight);\n      ctx.fillText(name, x, y);\n      x += ctx.measureText(name).width;\n    }\n\n    if (duration && bpm) {\n      ctx.setFont(font.family, font.size, 'normal');\n\n      if (name) {\n        x += ctx.measureText(' ').width;\n        ctx.fillText('(', x, y);\n        x += ctx.measureText('(').width;\n      }\n\n      const code = Flow.durationToGlyph(duration);\n\n      x += 3 * scale;\n      Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, code.code_head);\n      x += code.getWidth() * scale;\n\n      // Draw stem and flags\n      if (code.stem) {\n        let stem_height = 30;\n\n        if (code.beam_count) stem_height += 3 * (code.beam_count - 1);\n\n        stem_height *= scale;\n\n        const y_top = y - stem_height;\n        ctx.fillRect(x - scale, y_top, scale, stem_height);\n\n        if (code.flag) {\n          Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale, code.code_flag_upstem);\n\n          if (!dots) x += 6 * scale;\n        }\n      }\n\n      // Draw dot\n      for (let i = 0; i < dots; i++) {\n        x += 6 * scale;\n        ctx.beginPath();\n        ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n        ctx.fill();\n      }\n\n      ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n    }\n\n    ctx.restore();\n    return this;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/stavetempo.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { Vex } from './vex';\nimport { StaveModifier } from './stavemodifier';\nimport { TextNote } from './textnote';\n\nexport class StaveText extends StaveModifier {\n  static get CATEGORY() { return 'stavetext'; }\n\n  constructor(text, position, options) {\n    super();\n    this.setAttribute('type', 'StaveText');\n\n    this.setWidth(16);\n    this.text = text;\n    this.position = position;\n    this.options = {\n      shift_x: 0,\n      shift_y: 0,\n      justification: TextNote.Justification.CENTER,\n    };\n    Vex.Merge(this.options, options);\n\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    };\n  }\n\n  getCategory() { return StaveText.CATEGORY; }\n  setStaveText(text) { this.text = text; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n\n  setFont(font) {\n    Vex.Merge(this.font, font);\n  }\n\n  setText(text) {\n    this.text = text;\n  }\n\n  draw(stave) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.text).width;\n\n    let x;\n    let y;\n    const Position = StaveModifier.Position;\n    const Justification = TextNote.Justification;\n    switch (this.position) {\n      case Position.LEFT:\n      case Position.RIGHT:\n        y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n        if (this.position === Position.LEFT) {\n          x = stave.getX() - text_width - 24 + this.options.shift_x;\n        } else {\n          x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n        }\n        break;\n      case Position.ABOVE:\n      case Position.BELOW:\n        x = stave.getX() + this.options.shift_x;\n        if (this.options.justification === Justification.CENTER) {\n          x += stave.getWidth() / 2 - text_width / 2;\n        } else if (this.options.justification === Justification.RIGHT) {\n          x += stave.getWidth() - text_width;\n        }\n\n        if (this.position === Position.ABOVE) {\n          y = stave.getYForTopText(2) + this.options.shift_y;\n        } else {\n          y = stave.getYForBottomText(2) + this.options.shift_y;\n        }\n        break;\n      default:\n        throw new Vex.RERR('InvalidPosition', 'Value Must be in Modifier.Position.');\n    }\n\n    ctx.fillText('' + this.text, x, y + 4);\n    ctx.restore();\n    return this;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/stavetext.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `TextNote` is a notation element that is positioned in time. Generally\n// meant for objects that sit above/below the staff and inline with each other.\n// Examples of this would be such as dynamics, lyrics, chord changes, etc.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Note } from './note';\nimport { Glyph } from './glyph';\n\nexport class TextNote extends Note {\n  static get Justification() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n    };\n  }\n\n  // Glyph data\n  static get GLYPHS() {\n    return {\n      'segno': {\n        code: 'v8c',\n        point: 40,\n        x_shift: 0,\n        y_shift: -10,\n        // width: 10 // optional\n      },\n      'tr': {\n        code: 'v1f',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'mordent_upper': {\n        code: 'v1e',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'mordent_lower': {\n        code: 'v45',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'f': {\n        code: 'vba',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'p': {\n        code: 'vbf',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'm': {\n        code: 'v62',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      's': {\n        code: 'v4a',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'z': {\n        code: 'v80',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'coda': {\n        code: 'v4d',\n        point: 40,\n        x_shift: 0,\n        y_shift: -8,\n        // width: 10 // optional\n      },\n      'pedal_open': {\n        code: 'v36',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'pedal_close': {\n        code: 'v5d',\n        point: 40,\n        x_shift: 0,\n        y_shift: 3,\n      },\n      'caesura_straight': {\n        code: 'v34',\n        point: 40,\n        x_shift: 0,\n        y_shift: 2,\n      },\n      'caesura_curved': {\n        code: 'v4b',\n        point: 40,\n        x_shift: 0,\n        y_shift: 2,\n      },\n      'breath': {\n        code: 'v6c',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'tick': {\n        code: 'v6f',\n        point: 50,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'turn': {\n        code: 'v72',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'turn_inverted': {\n        code: 'v33',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n\n      // DEPRECATED - please use \"mordent_upper\" or \"mordent_lower\"\n      'mordent': {\n        code: 'v1e',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n    };\n  }\n\n  constructor(text_struct) {\n    super(text_struct);\n    this.setAttribute('type', 'TextNote');\n\n    // Note properties\n    this.text = text_struct.text;\n    this.superscript = text_struct.superscript;\n    this.subscript = text_struct.subscript;\n    this.glyph_type = text_struct.glyph;\n    this.glyph = null;\n    this.font = {\n      family: 'Arial',\n      size: 12,\n      weight: '',\n    };\n\n    // Set font\n    if (text_struct.font) this.font = text_struct.font;\n\n    // Determine and set initial note width. Note that the text width is\n    // an approximation and isn't very accurate. The only way to accurately\n    // measure the length of text is with `canvasmeasureText()`\n    if (this.glyph_type) {\n      const struct = TextNote.GLYPHS[this.glyph_type];\n      if (!struct) throw new Vex.RERR('Invalid glyph type: ' + this.glyph_type);\n\n      this.glyph = new Glyph(struct.code, struct.point, { cache: false });\n\n      if (struct.width) {\n        this.setWidth(struct.width);\n      } else {\n        this.setWidth(this.glyph.getMetrics().width);\n      }\n\n      this.glyph_struct = struct;\n    } else {\n      this.setWidth(Flow.textWidth(this.text));\n    }\n    this.line = text_struct.line || 0;\n    this.smooth = text_struct.smooth || false;\n    this.ignore_ticks = text_struct.ignore_ticks || false;\n    this.justification = TextNote.Justification.LEFT;\n  }\n\n  // Set the horizontal justification of the TextNote\n  setJustification(just) {\n    this.justification = just;\n    return this;\n  }\n\n  // Set the Stave line on which the note should be placed\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    this.checkContext();\n\n    if (this.preFormatted) return;\n\n    if (this.smooth) {\n      this.setWidth(0);\n    } else {\n      if (this.glyph) {\n        // Width already set.\n      } else {\n        this.setWidth(this.context.measureText(this.text).width);\n      }\n    }\n\n    if (this.justification === TextNote.Justification.CENTER) {\n      this.extraLeftPx = this.width / 2;\n    } else if (this.justification === TextNote.Justification.RIGHT) {\n      this.extraLeftPx = this.width;\n    }\n\n    this.setPreFormatted(true);\n  }\n\n  // Renders the TextNote\n  draw() {\n    this.checkContext();\n\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n\n    this.setRendered();\n    const ctx = this.context;\n    let x = this.getAbsoluteX();\n    if (this.justification === TextNote.Justification.CENTER) {\n      x -= this.getWidth() / 2;\n    } else if (this.justification === TextNote.Justification.RIGHT) {\n      x -= this.getWidth();\n    }\n\n    let y;\n    if (this.glyph) {\n      y = this.stave.getYForLine(this.line + -3);\n      this.glyph.render(\n        this.context,\n        x + this.glyph_struct.x_shift,\n        y + this.glyph_struct.y_shift\n      );\n    } else {\n      y = this.stave.getYForLine(this.line + -3);\n      ctx.save();\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.text, x, y);\n\n      // Width of the letter M gives us the approximate height of the text\n      const height = ctx.measureText('M').width;\n      // Get accurate width of text\n      const width = ctx.measureText(this.text).width;\n\n      // Write superscript\n      if (this.superscript) {\n        ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n        ctx.fillText(this.superscript, x + width + 2, y - (height / 2.2));\n      }\n\n      // Write subscript\n      if (this.subscript) {\n        ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n        ctx.fillText(this.subscript, x + width + 2, y + (height / 2.2) - 1);\n      }\n\n      ctx.restore();\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/textnote.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n// Co-author: Benjamin W. Bohl\n//\n// ## Description\n//\n// This file implements various types of clefs that can be rendered on a stave.\n//\n// See `tests/clef_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`.\nfunction L(...args) { if (Clef.DEBUG) Vex.L('Vex.Flow.Clef', args); }\n\nexport class Clef extends StaveModifier {\n  static get CATEGORY() { return 'clefs'; }\n\n  // Every clef name is associated with a glyph code from the font file\n  // and a default stave line number.\n  static get types() {\n    return {\n      'treble': {\n        code: 'v83',\n        line: 3,\n      },\n      'bass': {\n        code: 'v79',\n        line: 1,\n      },\n      'alto': {\n        code: 'vad',\n        line: 2,\n      },\n      'tenor': {\n        code: 'vad',\n        line: 1,\n      },\n      'percussion': {\n        code: 'v59',\n        line: 2,\n      },\n      'soprano': {\n        code: 'vad',\n        line: 4,\n      },\n      'mezzo-soprano': {\n        code: 'vad',\n        line: 3,\n      },\n      'baritone-c': {\n        code: 'vad',\n        line: 0,\n      },\n      'baritone-f': {\n        code: 'v79',\n        line: 2,\n      },\n      'subbass': {\n        code: 'v79',\n        line: 0,\n      },\n      'french': {\n        code: 'v83',\n        line: 4,\n      },\n      'tab': {\n        code: 'v2f',\n      },\n    };\n  }\n\n  // Sizes affect the point-size of the clef.\n  static get sizes() {\n    return {\n      'default': 40,\n      'small': 32,\n    };\n  }\n\n  // Annotations attach to clefs -- such as \"8\" for octave up or down.\n  static get annotations() {\n    return {\n      '8va': {\n        code: 'v8',\n        sizes: {\n          'default': {\n            point: 20,\n            attachments: {\n              'treble': {\n                line: -1.2,\n                x_shift: 11,\n              },\n            },\n          },\n          'small': {\n            point: 18,\n            attachments: {\n              'treble': {\n                line: -0.4,\n                x_shift: 8,\n              },\n            },\n          },\n        },\n      },\n      '8vb': {\n        code: 'v8',\n        sizes: {\n          'default': {\n            point: 20,\n            attachments: {\n              'treble': {\n                line: 6.3,\n                x_shift: 10,\n              },\n              'bass': {\n                line: 4,\n                x_shift: 1,\n              },\n            },\n          },\n          'small': {\n            point: 18,\n            attachments: {\n              'treble': {\n                line: 5.8,\n                x_shift: 6,\n              },\n              'bass': {\n                line: 3.5,\n                x_shift: 0.5,\n              },\n            },\n          },\n        },\n      },\n    };\n  }\n\n  // Create a new clef. The parameter `clef` must be a key from\n  // `Clef.types`.\n  constructor(type, size, annotation) {\n    super();\n    this.setAttribute('type', 'Clef');\n\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setType(type, size, annotation);\n    this.setWidth(this.glyph.getMetrics().width);\n    L('Creating clef:', type);\n  }\n\n  getCategory() { return Clef.CATEGORY; }\n\n  setType(type, size, annotation) {\n    this.type = type;\n    this.clef = Clef.types[type];\n    if (size === undefined) {\n      this.size = 'default';\n    } else {\n      this.size = size;\n    }\n    this.clef.point = Clef.sizes[this.size];\n    this.glyph = new Glyph(this.clef.code, this.clef.point);\n\n    // If an annotation, such as 8va, is specified, add it to the Clef object.\n    if (annotation !== undefined) {\n      const anno_dict = Clef.annotations[annotation];\n      this.annotation = {\n        code: anno_dict.code,\n        point: anno_dict.sizes[this.size].point,\n        line: anno_dict.sizes[this.size].attachments[this.type].line,\n        x_shift: anno_dict.sizes[this.size].attachments[this.type].x_shift,\n      };\n\n      this.attachment = new Glyph(this.annotation.code, this.annotation.point);\n      this.attachment.metrics.x_max = 0;\n      this.attachment.setXShift(this.annotation.x_shift);\n    } else {\n      this.annotation = undefined;\n    }\n\n    return this;\n  }\n\n  getWidth() {\n    if (this.type === 'tab' && !this.stave) {\n      throw new Vex.RERR('ClefError', \"Can't get width without stave.\");\n    }\n\n    return this.width;\n  }\n\n  setStave(stave) {\n    this.stave = stave;\n\n    if (this.type !== 'tab') return this;\n\n    let glyphScale;\n    let glyphOffset;\n    const numLines = this.stave.getOptions().num_lines;\n    switch (numLines) {\n      case 8:\n        glyphScale = 55;\n        glyphOffset = 14;\n        break;\n      case 7:\n        glyphScale = 47;\n        glyphOffset = 8;\n        break;\n      case 6:\n        glyphScale = 40;\n        glyphOffset = 1;\n        break;\n      case 5:\n        glyphScale = 30;\n        glyphOffset = -6;\n        break;\n      case 4:\n        glyphScale = 23;\n        glyphOffset = -12;\n        break;\n      default:\n        throw new Vex.RERR('ClefError', `Invalid number of lines: ${numLines}`);\n    }\n\n    this.glyph.setPoint(glyphScale);\n    this.glyph.setYShift(glyphOffset);\n\n    return this;\n  }\n\n  draw() {\n    if (!this.x) throw new Vex.RERR('ClefError', \"Can't draw clef without x.\");\n    if (!this.stave) throw new Vex.RERR('ClefError', \"Can't draw clef without stave.\");\n    this.setRendered();\n\n    this.glyph.setStave(this.stave);\n    this.glyph.setContext(this.stave.context);\n    if (this.clef.line !== undefined) {\n      this.placeGlyphOnLine(this.glyph, this.stave, this.clef.line);\n    }\n\n    this.glyph.renderToStave(this.x);\n\n    if (this.annotation !== undefined) {\n      this.placeGlyphOnLine(this.attachment, this.stave, this.annotation.line);\n      this.attachment.setStave(this.stave);\n      this.attachment.setContext(this.stave.context);\n      this.attachment.renderToStave(this.x);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/clef.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class KeySignature extends StaveModifier {\n  static get CATEGORY() { return 'keysignatures'; }\n\n  // Space between natural and following accidental depending\n  // on vertical position\n  static get accidentalSpacing() {\n    return {\n      '#': {\n        above: 6,\n        below: 4,\n      },\n      'b': {\n        above: 4,\n        below: 7,\n      },\n      'n': {\n        above: 4,\n        below: 1,\n      },\n      '##': {\n        above: 6,\n        below: 4,\n      },\n      'bb': {\n        above: 4,\n        below: 7,\n      },\n      'db': {\n        above: 4,\n        below: 7,\n      },\n      'd': {\n        above: 4,\n        below: 7,\n      },\n      'bbs': {\n        above: 4,\n        below: 7,\n      },\n      '++': {\n        above: 6,\n        below: 4,\n      },\n      '+': {\n        above: 6,\n        below: 4,\n      },\n      '+-': {\n        above: 6,\n        below: 4,\n      },\n      '++-': {\n        above: 6,\n        below: 4,\n      },\n      'bs': {\n        above: 4,\n        below: 10,\n      },\n      'bss': {\n        above: 4,\n        below: 10,\n      },\n    };\n  }\n\n  // Create a new Key Signature based on a `key_spec`\n  constructor(keySpec, cancelKeySpec, alterKeySpec) {\n    super();\n    this.setAttribute('type', 'KeySignature');\n\n    this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.glyphFontScale = 38; // TODO(0xFE): Should this match StaveNote?\n    this.glyphs = [];\n    this.xPositions = []; // relative to this.x\n    this.paddingForced = false;\n  }\n\n  getCategory() { return KeySignature.CATEGORY; }\n\n  // Add an accidental glyph to the `KeySignature` instance which represents\n  // the provided `acc`. If `nextAcc` is also provided, the appropriate\n  // spacing will be included in the glyph's position\n  convertToGlyph(acc, nextAcc) {\n    const accGlyphData = Flow.accidentalCodes(acc.type);\n    const glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n\n    // Determine spacing between current accidental and the next accidental\n    let extraWidth = 1;\n    if (acc.type === 'n' && nextAcc) {\n      const spacing = KeySignature.accidentalSpacing[nextAcc.type];\n      if (spacing) {\n        const isAbove = nextAcc.line >= acc.line;\n        extraWidth = isAbove ? spacing.above : spacing.below;\n      }\n    }\n\n    // Place the glyph on the stave\n    this.placeGlyphOnLine(glyph, this.stave, acc.line);\n    this.glyphs.push(glyph);\n\n    const xPosition = this.xPositions[this.xPositions.length - 1];\n    const glyphWidth = glyph.getMetrics().width + extraWidth;\n    // Store the next accidental's x position\n    this.xPositions.push(xPosition + glyphWidth);\n    // Expand size of key signature\n    this.width += glyphWidth;\n  }\n\n  // Cancel out a key signature provided in the `spec` parameter. This will\n  // place appropriate natural accidentals before the key signature.\n  cancelKey(spec) {\n    this.formatted = false;\n    this.cancelKeySpec = spec;\n\n    return this;\n  }\n\n  convertToCancelAccList(spec) {\n    // Get the accidental list for the cancelled key signature\n    const cancel_accList = Flow.keySignature(spec);\n\n    // If the cancelled key has a different accidental type, ie: # vs b\n    const different_types = this.accList.length > 0\n      && cancel_accList.length > 0\n      && cancel_accList[0].type !== this.accList[0].type;\n\n    // Determine how many naturals needed to add\n    const naturals = different_types\n      ? cancel_accList.length\n      : cancel_accList.length - this.accList.length;\n\n    // Return if no naturals needed\n    if (naturals < 1) return;\n\n    // Get the line position for each natural\n    const cancelled = [];\n    for (let i = 0; i < naturals; i++) {\n      let index = i;\n      if (!different_types) {\n        index = cancel_accList.length - naturals + i;\n      }\n\n      const acc = cancel_accList[index];\n      cancelled.push({ type: 'n', line: acc.line });\n    }\n\n    // Combine naturals with main accidental list for the key signature\n    this.accList = cancelled.concat(this.accList);\n  }\n\n  // Deprecated\n  addToStave(stave) {\n    this.paddingForced = true;\n    stave.addModifier(this);\n\n    return this;\n  }\n\n  // Apply the accidental staff line placement based on the `clef` and\n  // the  accidental `type` for the key signature ('# or 'b').\n  convertAccLines(clef, type) {\n    let offset = 0.0; // if clef === \"treble\"\n    let customLines; // when clef doesn't follow treble key sig shape\n\n    switch (clef) {\n      // Treble & Subbass both have offsets of 0, so are not included.\n      case 'soprano':\n        if (type === '#') customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n        else offset = -1;\n        break;\n      case 'mezzo-soprano':\n        if (type === 'b') customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n        else offset = 1.5;\n        break;\n      case 'alto':\n        offset = 0.5;\n        break;\n      case 'tenor':\n        if (type === '#') customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n        else offset = -0.5;\n        break;\n      case 'baritone-f':\n      case 'baritone-c':\n        if (type === 'b') customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n        else offset = 2;\n        break;\n      case 'bass':\n      case 'french':\n        offset = 1;\n        break;\n      default:\n        break;\n    }\n\n    // If there's a special case, assign those lines/spaces:\n    let i;\n    if (typeof customLines !== 'undefined') {\n      for (i = 0; i < this.accList.length; ++i) {\n        this.accList[i].line = customLines[i];\n      }\n    } else if (offset !== 0) {\n      for (i = 0; i < this.accList.length; ++i) {\n        this.accList[i].line += offset;\n      }\n    }\n  }\n\n  getPadding(index) {\n    if (!this.formatted) this.format();\n\n    return (\n      this.glyphs.length === 0 || (!this.paddingForced && index < 2) ?\n        0 : this.padding\n    );\n  }\n\n  getWidth() {\n    if (!this.formatted) this.format();\n\n    return this.width;\n  }\n\n  setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n    this.formatted = false;\n    this.keySpec = keySpec;\n    this.cancelKeySpec = cancelKeySpec;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  // Alter the accidentals of a key spec one by one.\n  // Each alteration is a new accidental that replaces the\n  // original accidental (or the canceled one).\n  alterKey(alterKeySpec) {\n    this.formatted = false;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  convertToAlterAccList(alterKeySpec) {\n    const max = Math.min(alterKeySpec.length, this.accList.length);\n    for (let i = 0; i < max; ++i) {\n      if (alterKeySpec[i]) {\n        this.accList[i].type = alterKeySpec[i];\n      }\n    }\n  }\n\n  format() {\n    if (!this.stave) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n    }\n\n    this.width = 0;\n    this.glyphs = [];\n    this.xPositions = [0]; // initialize with initial x position\n    this.accList = Flow.keySignature(this.keySpec);\n    if (this.cancelKeySpec) {\n      this.convertToCancelAccList(this.cancelKeySpec);\n    }\n    const firstAccidentalType = this.accList.length > 0 ? this.accList[0].type : null;\n    if (this.alterKeySpec) {\n      this.convertToAlterAccList(this.alterKeySpec);\n    }\n\n    if (this.accList.length > 0) {\n      this.convertAccLines(this.stave.clef, firstAccidentalType);\n      for (let i = 0; i < this.accList.length; ++i) {\n        this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n      }\n    }\n\n    this.formatted = true;\n  }\n\n  draw() {\n    if (!this.x) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n    }\n\n    if (!this.formatted) this.format();\n    this.setRendered();\n\n    for (let i = 0; i < this.glyphs.length; i++) {\n      const glyph = this.glyphs[i];\n      const x = this.x + this.xPositions[i];\n      glyph.setStave(this.stave);\n      glyph.setContext(this.stave.context);\n      glyph.renderToStave(x);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/keysignature.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\n\nimport { Vex } from './vex';\nimport { Glyph } from './glyph';\nimport { StaveModifier } from './stavemodifier';\n\nconst assertIsValidFraction = (timeSpec) => {\n  const numbers = timeSpec.split('/').filter(number => number !== '');\n\n  if (numbers.length !== 2) {\n    throw new Vex.RERR(\n      'BadTimeSignature',\n      `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`\n    );\n  }\n\n  numbers.forEach(number => {\n    if (isNaN(Number(number))) {\n      throw new Vex.RERR(\n        'BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain two valid numbers.`\n      );\n    }\n  });\n};\n\nexport class TimeSignature extends StaveModifier {\n  static get CATEGORY() { return 'timesignatures'; }\n\n  static get glyphs() {\n    return {\n      'C': {\n        code: 'v41',\n        point: 40,\n        line: 2,\n      },\n      'C|': {\n        code: 'vb6',\n        point: 40,\n        line: 2,\n      },\n    };\n  }\n\n  constructor(timeSpec = null, customPadding = 15) {\n    super();\n    this.setAttribute('type', 'TimeSignature');\n\n    if (timeSpec === null) return;\n\n    const padding = customPadding;\n\n    this.point = 40;\n    this.topLine = 2;\n    this.bottomLine = 4;\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setTimeSig(timeSpec);\n    this.setWidth(this.timeSig.glyph.getMetrics().width);\n    this.setPadding(padding);\n  }\n\n  getCategory() { return TimeSignature.CATEGORY; }\n\n  parseTimeSpec(timeSpec) {\n    if (timeSpec === 'C' || timeSpec === 'C|') {\n      const { line, code, point } = TimeSignature.glyphs[timeSpec];\n      return {\n        line,\n        num: false,\n        glyph: new Glyph(code, point),\n      };\n    }\n\n    assertIsValidFraction(timeSpec);\n\n    const [topDigits, botDigits] = timeSpec\n      .split('/')\n      .map(number => number.split(''));\n\n    return {\n      num: true,\n      glyph: this.makeTimeSignatureGlyph(topDigits, botDigits),\n    };\n  }\n\n  makeTimeSignatureGlyph(topDigits, botDigits) {\n    const glyph = new Glyph('v0', this.point);\n    glyph.topGlyphs = [];\n    glyph.botGlyphs = [];\n\n    let topWidth = 0;\n    for (let i = 0; i < topDigits.length; ++i) {\n      const num = topDigits[i];\n      const topGlyph = new Glyph('v' + num, this.point);\n\n      glyph.topGlyphs.push(topGlyph);\n      topWidth += topGlyph.getMetrics().width;\n    }\n\n    let botWidth = 0;\n    for (let i = 0; i < botDigits.length; ++i) {\n      const num = botDigits[i];\n      const botGlyph = new Glyph('v' + num, this.point);\n\n      glyph.botGlyphs.push(botGlyph);\n      botWidth += botGlyph.getMetrics().width;\n    }\n\n    const width = topWidth > botWidth ? topWidth : botWidth;\n    const xMin = glyph.getMetrics().x_min;\n\n    glyph.getMetrics = () => ({\n      x_min: xMin,\n      x_max: xMin + width,\n      width,\n    });\n\n    const topStartX = (width - topWidth) / 2.0;\n    const botStartX = (width - botWidth) / 2.0;\n\n    const that = this;\n    glyph.renderToStave = function renderToStave(x) {\n      let start_x = x + topStartX;\n      for (let i = 0; i < this.topGlyphs.length; ++i) {\n        const glyph = this.topGlyphs[i];\n        Glyph.renderOutline(\n          this.context,\n          glyph.metrics.outline,\n          glyph.scale,\n          start_x + glyph.x_shift,\n          this.stave.getYForLine(that.topLine) + 1\n        );\n        start_x += glyph.getMetrics().width;\n      }\n\n      start_x = x + botStartX;\n      for (let i = 0; i < this.botGlyphs.length; ++i) {\n        const glyph = this.botGlyphs[i];\n        that.placeGlyphOnLine(glyph, this.stave, glyph.line);\n        Glyph.renderOutline(\n          this.context,\n          glyph.metrics.outline,\n          glyph.scale,\n          start_x + glyph.x_shift,\n          this.stave.getYForLine(that.bottomLine) + 1\n        );\n        start_x += glyph.getMetrics().width;\n      }\n    };\n\n    return glyph;\n  }\n\n  getTimeSig() {\n    return this.timeSig;\n  }\n\n  setTimeSig(timeSpec) {\n    this.timeSig = this.parseTimeSpec(timeSpec);\n    return this;\n  }\n\n  draw() {\n    if (!this.x) {\n      throw new Vex.RERR('TimeSignatureError', \"Can't draw time signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new Vex.RERR('TimeSignatureError', \"Can't draw time signature without stave.\");\n    }\n\n    this.setRendered();\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setContext(this.stave.context);\n    this.placeGlyphOnLine(this.timeSig.glyph, this.stave, this.timeSig.line);\n    this.timeSig.glyph.renderToStave(this.x);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/timesignature.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\n\nexport class Volta extends StaveModifier {\n  static get CATEGORY() { return 'voltas'; }\n  static get type() {\n    return {\n      NONE: 1,\n      BEGIN: 2,\n      MID: 3,\n      END: 4,\n      BEGIN_END: 5,\n    };\n  }\n\n  constructor(type, number, x, y_shift) {\n    super();\n    this.setAttribute('type', 'Volta');\n    this.volta = type;\n    this.x = x;\n    this.y_shift = y_shift;\n    this.number = number;\n    this.font = {\n      family: 'sans-serif',\n      size: 9,\n      weight: 'bold',\n    };\n  }\n\n  getCategory() { return Volta.CATEGORY; }\n  setShiftY(y) { this.y_shift = y; return this; }\n\n  draw(stave, x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    let width = stave.width;\n    const top_y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    const vert_height = 1.5 * stave.options.spacing_between_lines_px;\n    switch (this.volta) {\n      case Volta.type.BEGIN:\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        break;\n      case Volta.type.END:\n        width -= 5;\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      case Volta.type.BEGIN_END:\n        width -= 3;\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      default:\n        break;\n    }\n      // If the beginning of a volta, draw measure number\n    if (this.volta === Volta.type.BEGIN || this.volta === Volta.type.BEGIN_END) {\n      ctx.save();\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n      ctx.restore();\n    }\n\n    ctx.fillRect(this.x + x, top_y, width, 1);\n    return this;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/stavevolta.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Stave } from './stave';\n\nexport class TabStave extends Stave {\n  constructor(x, y, width, options) {\n    const tab_options = {\n      spacing_between_lines_px: 13,\n      num_lines: 6,\n      top_text_position: 1,\n    };\n\n    Vex.Merge(tab_options, options);\n    super(x, y, width, tab_options);\n    this.setAttribute('type', 'TabStave');\n  }\n\n  getYForGlyphs() {\n    return this.getYForLine(2.5);\n  }\n\n  // Deprecated\n  addTabGlyph() {\n    this.addClef('tab');\n    return this;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tabstave.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.js` for usage examples\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Dot } from './dot';\nimport { Glyph } from './glyph';\n\n// Gets the unused strings grouped together if consecutive.\n//\n// Parameters:\n// * num_lines - The number of lines\n// * strings_used - An array of numbers representing which strings have fret positions\nfunction getUnusedStringGroups(num_lines, strings_used) {\n  const stem_through = [];\n  let group = [];\n  for (let string = 1; string <= num_lines; string++) {\n    const is_used = strings_used.indexOf(string) > -1;\n\n    if (!is_used) {\n      group.push(string);\n    } else {\n      stem_through.push(group);\n      group = [];\n    }\n  }\n  if (group.length > 0) stem_through.push(group);\n\n  return stem_through;\n}\n\n// Gets groups of points that outline the partial stem lines\n// between fret positions\n//\n// Parameters:\n// * stem_Y - The `y` coordinate the stem is located on\n// * unused_strings - An array of groups of unused strings\n// * stave - The stave to use for reference\n// * stem_direction - The direction of the stem\nfunction getPartialStemLines(stem_y, unused_strings, stave, stem_direction) {\n  const up_stem = stem_direction !== 1;\n  const down_stem = stem_direction !== -1;\n\n  const line_spacing = stave.getSpacingBetweenLines();\n  const total_lines = stave.getNumLines();\n\n  const stem_lines = [];\n\n  unused_strings.forEach(strings => {\n    const containsLastString = strings.indexOf(total_lines) > -1;\n    const containsFirstString =  strings.indexOf(1) > -1;\n\n    if ((up_stem && containsFirstString) ||\n       (down_stem && containsLastString)) {\n      return;\n    }\n\n    // If there's only one string in the group, push a duplicate value.\n    // We do this because we need 2 strings to convert into upper/lower y\n    // values.\n    if (strings.length === 1) {\n      strings.push(strings[0]);\n    }\n\n    const line_ys = [];\n    // Iterate through each group string and store it's y position\n    strings.forEach((string, index, strings) => {\n      const isTopBound = string === 1;\n      const isBottomBound = string === total_lines;\n\n      // Get the y value for the appropriate staff line,\n      // we adjust for a 0 index array, since string numbers are index 1\n      let y = stave.getYForLine(string - 1);\n\n      // Unless the string is the first or last, add padding to each side\n      // of the line\n      if (index === 0 && !isTopBound) {\n        y -= line_spacing / 2 - 1;\n      } else if (index === strings.length - 1 && !isBottomBound) {\n        y += line_spacing / 2 - 1;\n      }\n\n      // Store the y value\n      line_ys.push(y);\n\n      // Store a subsequent y value connecting this group to the main\n      // stem above/below the stave if it's the top/bottom string\n      if (stem_direction === 1 && isTopBound) {\n        line_ys.push(stem_y - 2);\n      } else if (stem_direction === -1 && isBottomBound) {\n        line_ys.push(stem_y + 2);\n      }\n    });\n\n    // Add the sorted y values to the\n    stem_lines.push(line_ys.sort((a, b) => a - b));\n  });\n\n  return stem_lines;\n}\n\nexport class TabNote extends StemmableNote {\n  static get CATEGORY() { return 'tabnotes'; }\n\n  // Initialize the TabNote with a `tab_struct` full of properties\n  // and whether to `draw_stem` when rendering the note\n  constructor(tab_struct, draw_stem) {\n    super(tab_struct);\n    this.setAttribute('type', 'TabNote');\n\n    this.ghost = false; // Renders parenthesis around notes\n    // Note properties\n    //\n    // The fret positions in the note. An array of `{ str: X, fret: X }`\n    this.positions = tab_struct.positions;\n\n    // Render Options\n    Vex.Merge(this.render_options, {\n      // font size for note heads and rests\n      glyph_font_scale: Flow.DEFAULT_TABLATURE_FONT_SCALE,\n      // Flag to draw a stem\n      draw_stem,\n      // Flag to draw dot modifiers\n      draw_dots: draw_stem,\n      // Flag to extend the main stem through the stave and fret positions\n      draw_stem_through_stave: false,\n      // vertical shift from stave line\n      y_shift: 0,\n      // normal glyph scale\n      scale: 1.0,\n      // default tablature font\n      font: '10pt Arial',\n    });\n\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `Invalid note initialization data (No glyph found): ${JSON.stringify(tab_struct)}`\n      );\n    }\n\n    this.buildStem();\n\n    if (tab_struct.stem_direction) {\n      this.setStemDirection(tab_struct.stem_direction);\n    } else {\n      this.setStemDirection(Stem.UP);\n    }\n\n    // Renders parenthesis around notes\n    this.ghost = false;\n    this.updateWidth();\n  }\n\n  // The ModifierContext category\n  getCategory() { return TabNote.CATEGORY; }\n\n  // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n  // Often used for indicating frets that are being bent to\n  setGhost(ghost) {\n    this.ghost = ghost;\n    this.updateWidth();\n    return this;\n  }\n\n  // Determine if the note has a stem\n  hasStem() { return this.render_options.draw_stem; }\n\n  // Get the default stem extension for the note\n  getStemExtension() {\n    const glyph = this.getGlyph();\n\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.tabnote_stem_up_extension\n        : glyph.tabnote_stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Add a dot to the note\n  addDot() {\n    const dot = new Dot();\n    this.dots += 1;\n    return this.addModifier(dot, 0);\n  }\n\n  // Calculate and store the width of the note\n  updateWidth() {\n    this.glyphs = [];\n    this.width = 0;\n    for (let i = 0; i < this.positions.length; ++i) {\n      let fret = this.positions[i].fret;\n      if (this.ghost) fret = '(' + fret + ')';\n      const glyph = Flow.tabToGlyph(fret, this.render_options.scale);\n      this.glyphs.push(glyph);\n      this.width = Math.max(glyph.getWidth(), this.width);\n    }\n    // For some reason we associate a notehead glyph with a TabNote, and this\n    // glyph is used for certain width calculations. Of course, this is totally\n    // incorrect since a notehead is a poor approximation for the dimensions of\n    // a fret number which can have multiple digits. As a result, we must\n    // overwrite getWidth() to return the correct width\n    this.glyph.getWidth = () => this.width;\n  }\n\n  // Set the `stave` to the note\n  setStave(stave) {\n    super.setStave(stave);\n    this.context = stave.context;\n\n    // Calculate the fret number width based on font used\n    let i;\n    if (this.context) {\n      const ctx = this.context;\n      this.width = 0;\n      for (i = 0; i < this.glyphs.length; ++i) {\n        const glyph = this.glyphs[i];\n        const text = '' + glyph.text;\n        if (text.toUpperCase() !== 'X') {\n          ctx.save();\n          ctx.setRawFont(this.render_options.font);\n          glyph.width = ctx.measureText(text).width;\n          ctx.restore();\n          glyph.getWidth = () => glyph.width;\n        }\n        this.width = Math.max(glyph.getWidth(), this.width);\n      }\n      this.glyph.getWidth = () => this.width;\n    }\n\n    // we subtract 1 from `line` because getYForLine expects a 0-based index,\n    // while the position.str is a 1-based index\n    const ys = this.positions.map(({ str: line }) => stave.getYForLine(line - 1));\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      this.stem.setYBounds(this.getStemY(), this.getStemY());\n    }\n\n    return this;\n  }\n\n  // Get the fret positions for the note\n  getPositions() { return this.positions; }\n\n  // Add self to the provided modifier context `mc`\n  addToModifierContext(mc) {\n    this.setModifierContext(mc);\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addModifier(this.modifiers[i]);\n    }\n    this.modifierContext.addModifier(this);\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Get the `x` coordinate to the right of the note\n  getTieRightX() {\n    let tieStartX = this.getAbsoluteX();\n    const note_glyph_width = this.glyph.getWidth();\n    tieStartX += note_glyph_width / 2;\n    tieStartX += (-this.width / 2) + this.width + 2;\n\n    return tieStartX;\n  }\n\n  // Get the `x` coordinate to the left of the note\n  getTieLeftX() {\n    let tieEndX = this.getAbsoluteX();\n    const note_glyph_width = this.glyph.getWidth();\n    tieEndX += note_glyph_width / 2;\n    tieEndX -= (this.width / 2) + 2;\n\n    return tieEndX;\n  }\n\n  // Get the default `x` and `y` coordinates for a modifier at a specific\n  // `position` at a fret position `index`\n  getModifierStartXY(position, index) {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    let x = 0;\n    if (position === Modifier.Position.LEFT) {\n      x = -1 * 2;  // extra_left_px\n    } else if (position === Modifier.Position.RIGHT) {\n      x = this.width + 2; // extra_right_px\n    } else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n      const note_glyph_width = this.glyph.getWidth();\n      x = note_glyph_width / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Get the default line for rest\n  getLineForRest() { return this.positions[0].str; }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return;\n    if (this.modifierContext) this.modifierContext.preFormat();\n    // width is already set during init()\n    this.setPreFormatted(true);\n  }\n\n  // Get the x position for the stem\n  getStemX() { return this.getCenterGlyphX(); }\n\n  // Get the y position for the stem\n  getStemY() {\n    const num_lines = this.stave.getNumLines();\n\n    // The decimal staff line amounts provide optimal spacing between the\n    // fret number and the stem\n    const stemUpLine = -0.5;\n    const stemDownLine = num_lines - 0.5;\n    const stemStartLine = Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n\n    return this.stave.getYForLine(stemStartLine);\n  }\n\n  // Get the stem extents for the tabnote\n  getStemExtents() {\n    return this.stem.getExtents();\n  }\n\n  // Draw the fal onto the context\n  drawFlag() {\n    const {\n      beam, glyph, context, stem, stem_direction,\n      render_options: { draw_stem, glyph_font_scale },\n    } = this;\n\n    const shouldDrawFlag = beam == null && draw_stem;\n\n    // Now it's the flag's turn.\n    if (glyph.flag && shouldDrawFlag) {\n      const flag_x = this.getStemX() + 1;\n      const flag_y = this.getStemY() - stem.getHeight();\n\n      const flag_code = stem_direction === Stem.DOWN\n        ? glyph.code_flag_downstem // Down stems have flags on the left.\n        : glyph.code_flag_upstem;\n\n      // Draw the Flag\n      Glyph.renderGlyph(context, flag_x, flag_y, glyph_font_scale, flag_code);\n    }\n  }\n\n  // Render the modifiers onto the context\n  drawModifiers() {\n    // Draw the modifiers\n    this.modifiers.forEach((modifier) => {\n      // Only draw the dots if enabled\n      if (modifier.getCategory() === 'dots' && !this.render_options.draw_dots) return;\n\n      modifier.setContext(this.context);\n      modifier.draw();\n    });\n  }\n\n  // Render the stem extension through the fret positions\n  drawStemThrough() {\n    const stem_x = this.getStemX();\n    const stem_y = this.getStemY();\n    const ctx = this.context;\n\n    const stem_through = this.render_options.draw_stem_through_stave;\n    const draw_stem = this.render_options.draw_stem;\n    if (draw_stem && stem_through) {\n      const total_lines = this.stave.getNumLines();\n      const strings_used = this.positions.map(position => position.str);\n\n      const unused_strings = getUnusedStringGroups(total_lines, strings_used);\n      const stem_lines = getPartialStemLines(\n        stem_y,\n        unused_strings,\n        this.getStave(),\n        this.getStemDirection()\n      );\n\n      ctx.save();\n      ctx.setLineWidth(Stem.WIDTH);\n      stem_lines.forEach(bounds => {\n        if (bounds.length === 0) return;\n\n        ctx.beginPath();\n        ctx.moveTo(stem_x, bounds[0]);\n        ctx.lineTo(stem_x, bounds[bounds.length - 1]);\n        ctx.stroke();\n        ctx.closePath();\n      });\n      ctx.restore();\n    }\n  }\n\n  // Render the fret positions onto the context\n  drawPositions() {\n    const ctx = this.context;\n    const x = this.getAbsoluteX();\n    const ys = this.ys;\n    for (let i = 0; i < this.positions.length; ++i) {\n      const y = ys[i] + this.render_options.y_shift;\n      const glyph = this.glyphs[i];\n\n      // Center the fret text beneath the notation note head\n      const note_glyph_width = this.glyph.getWidth();\n      const tab_x = x + (note_glyph_width / 2) - (glyph.getWidth() / 2);\n\n      // FIXME: Magic numbers.\n      ctx.clearRect(tab_x - 2, y - 3, glyph.getWidth() + 4, 6);\n\n      if (glyph.code) {\n        Glyph.renderGlyph(ctx, tab_x, y,\n          this.render_options.glyph_font_scale * this.render_options.scale,\n          glyph.code);\n      } else {\n        ctx.save();\n        ctx.setRawFont(this.render_options.font);\n        const text = glyph.text.toString();\n        ctx.fillText(text, tab_x, y + 5 * this.render_options.scale);\n        ctx.restore();\n      }\n    }\n  }\n\n  // The main rendering function for the entire note\n  draw() {\n    this.checkContext();\n\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    this.setRendered();\n    const render_stem = this.beam == null && this.render_options.draw_stem;\n\n    this.drawPositions();\n    this.drawStemThrough();\n\n    const stem_x = this.getStemX();\n\n    this.stem.setNoteHeadXBounds(stem_x, stem_x);\n\n    if (render_stem) {\n      this.context.openGroup('stem', null, { pointerBBox: true });\n      this.stem.setContext(this.context).draw();\n      this.context.closeGroup();\n    }\n\n    this.drawFlag();\n    this.drawModifiers();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tabnote.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Balazs Forian-Szabo\n//\n// ## Description\n//\n// This file implements `VibratoBrackets`\n// that renders vibrato effect between two notes.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Vibrato } from './vibrato';\n\n// To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`.\nfunction L(...args) { if (VibratoBracket.DEBUG) Vex.L('Vex.Flow.VibratoBracket', args); }\n\nexport class VibratoBracket extends Element {\n\n  // bracket_data = {\n  //   start: Vex.Flow.Note (optional)\n  //   stop: Vex.Flow.Note (optional)\n  // };\n  // Either the stop or start note must be set, or both of them.\n  // A null value for the start or stop note indicates that the vibrato\n  // is drawn from the beginning or until the end of the stave accordingly.\n  constructor(bracket_data) {\n    super();\n    this.setAttribute('type', 'VibratoBracket');\n\n    this.start = bracket_data.start;\n    this.stop = bracket_data.stop;\n\n    this.line = 1;\n\n    this.render_options = {\n      harsh: false,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n  }\n\n  // Set line position of the vibrato bracket\n  setLine(line) { this.line = line; return this; }\n  setHarsh(harsh) { this.render_options.harsh = harsh; return this; }\n\n  // Draw the vibrato bracket on the rendering context\n  draw() {\n    const ctx = this.context;\n    this.setRendered();\n\n    const y = (this.start)\n      ? this.start.getStave().getYForTopText(this.line)\n      : this.stop.getStave().getYForTopText(this.line);\n\n    // If start note is not set then vibrato will be drawn\n    // from the beginning of the stave\n    const start_x = (this.start)\n      ? this.start.getAbsoluteX()\n      : this.stop.getStave().getTieStartX();\n\n      // If stop note is not set then vibrato will be drawn\n      // until the end of the stave\n    const stop_x = (this.stop)\n      ? this.stop.getAbsoluteX() - this.stop.getWidth() - 5\n      : this.start.getStave().getTieEndX() - 10;\n\n    this.render_options.vibrato_width = stop_x - start_x;\n\n    L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n\n    Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vibratobracket.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Copyright Mohit Muthanna 2010\n//\n// Author Taehoon Moon 2014\n\nimport { Vex } from './vex';\nimport { BoundingBox } from './boundingbox';\nimport { Note } from './note';\nimport { Clef } from './clef';\nimport { Glyph } from './glyph';\n\n/** @constructor */\nexport class ClefNote extends Note {\n  static get CATEGORY() { return 'clefnote'; }\n\n  constructor(type, size, annotation) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'ClefNote');\n\n    this.setType(type, size, annotation);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  setType(type, size, annotation) {\n    this.type = type;\n    this.clef_obj = new Clef(type, size, annotation);\n    this.clef = this.clef_obj.clef;\n    this.glyph = new Glyph(this.clef.code, this.clef.point);\n    this.setWidth(this.glyph.getMetrics().width);\n    return this;\n  }\n\n  getClef() {\n    return this.clef;\n  }\n\n  setContext(context) {\n    this.context = context;\n    this.glyph.setContext(this.context);\n    return this;\n  }\n\n  getBoundingBox() {\n    return new BoundingBox(0, 0, 0, 0);\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  getCategory() { return ClefNote.CATEGORY; }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\n    if (!this.glyph.getContext()) {\n      this.glyph.setContext(this.context);\n    }\n\n    this.setRendered();\n    const abs_x = this.getAbsoluteX();\n\n    this.glyph.setStave(this.stave);\n    this.glyph.setYShift(\n      this.stave.getYForLine(this.clef.line) - this.stave.getYForGlyphs());\n    this.glyph.renderToStave(abs_x);\n\n    // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n    if (this.clef_obj.annotation !== undefined) {\n      const attachment = new Glyph(this.clef_obj.annotation.code, this.clef_obj.annotation.point);\n      if (!attachment.getContext()) {\n        attachment.setContext(this.context);\n      }\n      attachment.setStave(this.stave);\n      attachment.setYShift(\n        this.stave.getYForLine(this.clef_obj.annotation.line) - this.stave.getYForGlyphs());\n      attachment.setXShift(this.clef_obj.annotation.x_shift);\n      attachment.renderToStave(abs_x);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/clefnote.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { BoundingBox } from './boundingbox';\nimport { Note } from './note';\nimport { TimeSignature } from './timesignature';\n\nexport class TimeSigNote extends Note {\n  constructor(timeSpec, customPadding) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'TimeSigNote');\n\n    const timeSignature = new TimeSignature(timeSpec, customPadding);\n    this.timeSig = timeSignature.getTimeSig();\n    this.setWidth(this.timeSig.glyph.getMetrics().width);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  getBoundingBox() {\n    return new BoundingBox(0, 0, 0, 0);\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    this.stave.checkContext();\n    this.setRendered();\n\n    if (!this.timeSig.glyph.getContext()) {\n      this.timeSig.glyph.setContext(this.context);\n    }\n\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setYShift(\n      this.stave.getYForLine(this.timeSig.line) - this.stave.getYForGlyphs());\n    this.timeSig.glyph.renderToStave(this.getAbsoluteX());\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/timesignote.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { Vex } from './vex';\nimport { TabTie } from './tabtie';\n\nexport class TabSlide extends TabTie {\n  static get SLIDE_UP() {\n    return 1;\n  }\n  static get SLIDE_DOWN() {\n    return -1;\n  }\n\n  static createSlideUp(notes) {\n    return new TabSlide(notes, TabSlide.SLIDE_UP);\n  }\n\n  static createSlideDown(notes) {\n    return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n  }\n\n  constructor(notes, direction) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super(notes, 'sl.');\n    this.setAttribute('type', 'TabSlide');\n\n    if (!direction) {\n      const first_fret = notes.first_note.getPositions()[0].fret;\n      const last_fret = notes.last_note.getPositions()[0].fret;\n\n      direction = ((parseInt(first_fret, 10) > parseInt(last_fret, 10)) ?\n        TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP);\n    }\n\n    this.slide_direction = direction;\n    this.render_options.cp1 = 11;\n    this.render_options.cp2 = 14;\n    this.render_options.y_shift = 0.5;\n\n    this.setFont({ font: 'Times', size: 10, style: 'bold italic' });\n    this.setNotes(notes);\n  }\n\n  renderTie(params) {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.context;\n    const first_x_px = params.first_x_px;\n    const first_ys = params.first_ys;\n    const last_x_px = params.last_x_px;\n\n    const direction = this.slide_direction;\n    if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n      throw new Vex.RERR('BadSlide', 'Invalid slide direction');\n    }\n\n    for (let i = 0; i < this.first_indices.length; ++i) {\n      const slide_y = first_ys[this.first_indices[i]] +\n        this.render_options.y_shift;\n\n      if (isNaN(slide_y)) {\n        throw new Vex.RERR('BadArguments', 'Bad indices for slide rendering.');\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(first_x_px, slide_y + (3 * direction));\n      ctx.lineTo(last_x_px, slide_y - (3 * direction));\n      ctx.closePath();\n      ctx.stroke();\n    }\n\n    this.setRendered();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tabslide.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { StaveNote } from './stavenote';\nimport { Flow } from './tables';\n\nexport class GraceNote extends StaveNote {\n  static get CATEGORY() { return 'gracenotes'; }\n  static get LEDGER_LINE_OFFSET() { return 2; }\n  static get SCALE() { return 0.66; }\n\n  constructor(note_struct) {\n    super(Object.assign(note_struct, {\n      glyph_font_scale: Flow.DEFAULT_NOTATION_FONT_SCALE * GraceNote.SCALE,\n      stroke_px: GraceNote.LEDGER_LINE_OFFSET,\n    }));\n    this.setAttribute('type', 'GraceNote');\n\n    this.slash = note_struct.slash;\n    this.slur = true;\n\n    this.buildNoteHeads();\n\n    this.width = 3;\n  }\n\n  getStemExtension() {\n    const glyph = this.getGlyph();\n\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.gracenote_stem_up_extension\n        : glyph.gracenote_stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  getCategory() { return GraceNote.CATEGORY; }\n\n  draw() {\n    super.draw();\n    this.setRendered();\n    const ctx = this.context;\n    const stem_direction = this.getStemDirection();\n\n    if (this.slash) {\n      ctx.beginPath();\n\n      let x = this.getAbsoluteX();\n      let y = this.getYs()[0] - (this.stem.getHeight() / 2.8);\n      if (stem_direction === 1) {\n        x += 1;\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + 13, y - 9);\n      } else if (stem_direction === -1) {\n        x -= 4;\n        y += 1;\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + 13, y + 9);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/gracenote.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Balazs Forian-Szabo\n//\n// ## Description\n//\n// A basic implementation of grace notes\n// to be rendered on a tab stave.\n//\n// See `tests/gracetabnote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { TabNote } from './tabnote';\n\nexport class GraceTabNote extends TabNote {\n  static get CATEGORY() { return 'gracetabnotes'; }\n\n  constructor(note_struct) {\n    super(note_struct, false);\n    this.setAttribute('type', 'GraceTabNote');\n\n    Vex.Merge(this.render_options, {\n      // vertical shift from stave line\n      y_shift: 0.3,\n      // grace glyph scale\n      scale: 0.6,\n      // grace tablature font\n      font: '7.5pt Arial',\n    });\n\n    this.updateWidth();\n  }\n\n  getCategory() { return GraceTabNote.CATEGORY; }\n\n  draw() {\n    super.draw();\n    this.setRendered();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/gracetabnote.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of tunings for tablature.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\n\nexport class Tuning {\n  static get names() {\n    return {\n      'standard': 'E/5,B/4,G/4,D/4,A/3,E/3',\n      'dagdad': 'D/5,A/4,G/4,D/4,A/3,D/3',\n      'dropd': 'E/5,B/4,G/4,D/4,A/3,D/3',\n      'eb': 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n      'standardBanjo': 'D/5,B/4,G/4,D/4,G/5',\n    };\n  }\n\n  constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n    // Default to standard tuning.\n    this.setTuning(tuningString);\n  }\n\n  noteToInteger(noteString) {\n    return Flow.keyProperties(noteString).int_value;\n  }\n\n  setTuning(noteString) {\n    if (Tuning.names[noteString]) {\n      noteString = Tuning.names[noteString];\n    }\n\n    this.tuningString = noteString;\n    this.tuningValues = [];\n    this.numStrings = 0;\n\n    const keys = noteString.split(/\\s*,\\s*/);\n    if (keys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'Invalid tuning string: ' + noteString);\n    }\n\n    this.numStrings = keys.length;\n    for (let i = 0; i < this.numStrings; ++i) {\n      this.tuningValues[i] = this.noteToInteger(keys[i]);\n    }\n  }\n\n  getValueForString(stringNum) {\n    const s = parseInt(stringNum, 10);\n    if (s < 1 || s > this.numStrings) {\n      throw new Vex.RERR(\n        'BadArguments', `String number must be between 1 and ${this.numStrings}:${stringNum}`\n      );\n    }\n\n    return this.tuningValues[s - 1];\n  }\n\n  getValueForFret(fretNum, stringNum) {\n    const stringValue = this.getValueForString(stringNum);\n    const f = parseInt(fretNum, 10);\n\n    if (f < 0) {\n      throw new Vex.RERR('BadArguments', 'Fret number must be 0 or higher: ' +\n          fretNum);\n    }\n\n    return stringValue + f;\n  }\n\n  getNoteForFret(fretNum, stringNum) {\n    const noteValue = this.getValueForFret(fretNum, stringNum);\n\n    const octave = Math.floor(noteValue / 12);\n    const value = noteValue % 12;\n\n    return Flow.integerToNote(value) + '/' + octave;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tuning.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements diatonic key management.\n\nimport { Vex } from './vex';\nimport { Music } from './music';\n\nexport class KeyManager {\n  constructor(key) {\n    this.music = new Music();\n    this.setKey(key);\n  }\n\n  setKey(key) {\n    this.key = key;\n    this.reset();\n    return this;\n  }\n\n  getKey() { return this.key; }\n\n  reset() {\n    this.keyParts = this.music.getKeyParts(this.key);\n\n    this.keyString = this.keyParts.root;\n    if (this.keyParts.accidental) this.keyString += this.keyParts.accidental;\n\n    const is_supported_type = Music.scaleTypes[this.keyParts.type];\n    if (!is_supported_type) {\n      throw new Vex.RERR('BadArguments', `Unsupported key type: ${this.key}`);\n    }\n\n    this.scale = this.music.getScaleTones(\n      this.music.getNoteValue(this.keyString),\n      Music.scaleTypes[this.keyParts.type]\n    );\n\n    this.scaleMap = {};\n    this.scaleMapByValue = {};\n    this.originalScaleMapByValue = {};\n\n    const noteLocation = Music.root_indices[this.keyParts.root];\n\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n\n      const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n      this.scaleMap[rootName] = noteName;\n      this.scaleMapByValue[this.scale[i]] = noteName;\n      this.originalScaleMapByValue[this.scale[i]] = noteName;\n    }\n\n    return this;\n  }\n\n  getAccidental(key) {\n    const root = this.music.getKeyParts(key).root;\n    const parts = this.music.getNoteParts(this.scaleMap[root]);\n\n    return {\n      note: this.scaleMap[root],\n      accidental: parts.accidental,\n    };\n  }\n\n  selectNote(note) {\n    note = note.toLowerCase();\n    const parts = this.music.getNoteParts(note);\n\n    // First look for matching note in our altered scale\n    const scaleNote = this.scaleMap[parts.root];\n    const modparts = this.music.getNoteParts(scaleNote);\n\n    if (scaleNote === note) {\n      return {\n        'note': scaleNote,\n        'accidental': parts.accidental,\n        'change': false,\n      };\n    }\n\n    // Then search for a note of equivalent value in our altered scale\n    const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n    if (valueNote != null) {\n      return {\n        'note': valueNote,\n        'accidental': this.music.getNoteParts(valueNote).accidental,\n        'change': false,\n      };\n    }\n\n    // Then search for a note of equivalent value in the original scale\n    const originalValueNote = this.originalScaleMapByValue[\n      this.music.getNoteValue(note)];\n    if (originalValueNote != null) {\n      this.scaleMap[modparts.root] = originalValueNote;\n      delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n      this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n      return {\n        'note': originalValueNote,\n        'accidental': this.music.getNoteParts(originalValueNote).accidental,\n        'change': true,\n      };\n    }\n\n    // Then try to unmodify a currently modified note.\n    if (modparts.root === note) {\n      delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n      this.scaleMapByValue[this.music.getNoteValue(modparts.root)] =  modparts.root;\n      this.scaleMap[modparts.root] = modparts.root;\n      return {\n        'note': modparts.root,\n        'accidental': null,\n        'change': true,\n      };\n    }\n\n    // Last resort -- shitshoot\n    delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n    this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n\n    delete this.scaleMap[modparts.root];\n    this.scaleMap[modparts.root] = note;\n\n    return {\n      note,\n      'accidental': parts.accidental,\n      'change': true,\n    };\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/keymanager.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class by Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either Crescendo or Descrescendo.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Modifier } from './modifier';\n\nexport class StaveHairpin extends Element {\n  static get type() {\n    return {\n      CRESC: 1,\n      DECRESC: 2,\n    };\n  }\n\n  /* Helper function to convert ticks into pixels.\n   * Requires a Formatter with voices joined and formatted (to\n   * get pixels per tick)\n   *\n   * options is struct that has:\n   *\n   *  {\n   *   height: px,\n   *   y_shift: px, //vertical offset\n   *   left_shift_ticks: 0, //left horizontal offset expressed in ticks\n   *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n   *  }\n   *\n   **/\n  static FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n    const ppt = formatter.pixelsPerTick;\n\n    if (ppt == null) {\n      throw new Vex.RuntimeError('BadArguments',\n          'A valid Formatter must be provide to draw offsets by ticks.'); }\n\n    const l_shift_px = ppt * options.left_shift_ticks;\n    const r_shift_px = ppt * options.right_shift_ticks;\n\n    const hairpin_options = {\n      height: options.height,\n      y_shift: options.y_shift,\n      left_shift_px: l_shift_px,\n      right_shift_px: r_shift_px };\n\n    new StaveHairpin({\n      first_note: notes.first_note,\n      last_note: notes.last_note,\n    }, type)\n      .setContext(ctx)\n      .setRenderOptions(hairpin_options)\n      .setPosition(position)\n      .draw();\n  }\n\n  /**\n   * Create a new hairpin from the specified notes.\n   *\n   * @constructor\n   * @param {!Object} notes The notes to tie up.\n   * @param {!Object} type The type of hairpin\n   */\n  constructor(notes, type) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveHairpin');\n    this.notes = notes;\n    this.hairpin = type;\n    this.position = Modifier.Position.BELOW;\n\n    this.render_options = {\n      height: 10,\n      y_shift: 0, // vertical offset\n      left_shift_px: 0, // left horizontal offset\n      right_shift_px: 0, // right horizontal offset\n    };\n\n    this.setNotes(notes);\n  }\n\n  setPosition(position) {\n    if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n      this.position = position;\n    }\n    return this;\n  }\n\n  setRenderOptions(options) {\n    if (\n      options.height != null &&\n      options.y_shift != null &&\n      options.left_shift_px != null &&\n      options.right_shift_px != null\n    ) {\n      this.render_options = options;\n    }\n    return this;\n  }\n\n  /**\n   * Set the notes to attach this hairpin to.\n   *\n   * @param {!Object} notes The start and end notes.\n   */\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        'Hairpin needs to have either first_note or last_note set.'\n      );\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.last_note = notes.last_note;\n    return this;\n  }\n\n  renderHairpin(params) {\n    const ctx = this.checkContext();\n    let dis = this.render_options.y_shift + 20;\n    let y_shift = params.first_y;\n\n    if (this.position === Modifier.Position.ABOVE) {\n      dis = -dis + 30;\n      y_shift = params.first_y - params.staff_height;\n    }\n\n    const l_shift = this.render_options.left_shift_px;\n    const r_shift = this.render_options.right_shift_px;\n\n    ctx.beginPath();\n\n    switch (this.hairpin) {\n      case StaveHairpin.type.CRESC:\n        ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + (this.render_options.height / 2) + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n        break;\n      case StaveHairpin.type.DECRESC:\n        ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + (this.render_options.height / 2) + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const firstNote = this.first_note;\n    const lastNote = this.last_note;\n\n    const start = firstNote.getModifierStartXY(this.position, 0);\n    const end = lastNote.getModifierStartXY(this.position, 0);\n\n    this.renderHairpin({\n      first_x: start.x,\n      last_x: end.x,\n      first_y: firstNote.getStave().y + firstNote.getStave().height,\n      last_y: lastNote.getStave().y + lastNote.getStave().height,\n      staff_height: firstNote.getStave().height,\n    });\n    return true;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/stavehairpin.js\n **/","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements curves (for slurs)\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\nexport class Curve extends Element {\n  static get Position() {\n    return {\n      NEAR_HEAD: 1,\n      NEAR_TOP: 2,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      nearHead: Curve.Position.NEAR_HEAD,\n      nearTop: Curve.Position.NEAR_TOP,\n    };\n  }\n\n  // from: Start note\n  // to: End note\n  // options:\n  //    cps: List of control points\n  //    x_shift: pixels to shift\n  //    y_shift: pixels to shift\n  constructor(from, to, options) {\n    super();\n    this.setAttribute('type', 'Curve');\n\n    this.render_options = {\n      spacing: 2,\n      thickness: 2,\n      x_shift: 0,\n      y_shift: 10,\n      position: Curve.Position.NEAR_HEAD,\n      position_end: Curve.Position.NEAR_HEAD,\n      invert: false,\n      cps: [{ x: 0, y: 10 }, { x: 0, y: 10 }],\n    };\n\n    Vex.Merge(this.render_options, options);\n    this.setNotes(from, to);\n  }\n\n  setNotes(from, to) {\n    if (!from && !to) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Curve needs to have either first_note or last_note set.'\n      );\n    }\n\n    this.from = from;\n    this.to = to;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial() {\n    return (!this.from || !this.to);\n  }\n\n  renderCurve(params) {\n    const ctx = this.context;\n    const cps = this.render_options.cps;\n\n    const x_shift = this.render_options.x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    const first_x = params.first_x + x_shift;\n    const first_y = params.first_y + y_shift;\n    const last_x = params.last_x - x_shift;\n    const last_y = params.last_y + y_shift;\n    const thickness = this.render_options.thickness;\n\n    const cp_spacing = (last_x - first_x) / (cps.length + 2);\n\n    ctx.beginPath();\n    ctx.moveTo(first_x, first_y);\n    ctx.bezierCurveTo(\n      first_x + cp_spacing + cps[0].x,\n      first_y + (cps[0].y * params.direction),\n      last_x - cp_spacing + cps[1].x,\n      last_y + (cps[1].y * params.direction),\n      last_x,\n      last_y\n    );\n    ctx.bezierCurveTo(\n      last_x - cp_spacing + cps[1].x,\n      last_y + ((cps[1].y + thickness) * params.direction),\n      first_x + cp_spacing + cps[0].x,\n      first_y + ((cps[0].y + thickness) * params.direction),\n      first_x,\n      first_y\n    );\n    ctx.stroke();\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.from;\n    const last_note = this.to;\n    let first_x;\n    let last_x;\n    let first_y;\n    let last_y;\n    let stem_direction;\n\n    let metric = 'baseY';\n    let end_metric = 'baseY';\n\n    function getPosition(position) {\n      return typeof(position) === 'string'\n        ? Curve.PositionString[position]\n        : position;\n    }\n    const position = getPosition(this.render_options.position);\n    const position_end = getPosition(this.render_options.position_end);\n\n    if (position === Curve.Position.NEAR_TOP) {\n      metric = 'topY';\n      end_metric = 'topY';\n    }\n\n    if (position_end === Curve.Position.NEAR_HEAD) {\n      end_metric = 'baseY';\n    } else if (position_end === Curve.Position.NEAR_TOP) {\n      end_metric = 'topY';\n    }\n\n    if (first_note) {\n      first_x = first_note.getTieRightX();\n      stem_direction = first_note.getStemDirection();\n      first_y = first_note.getStemExtents()[metric];\n    } else {\n      first_x = last_note.getStave().getTieStartX();\n      first_y = last_note.getStemExtents()[metric];\n    }\n\n    if (last_note) {\n      last_x = last_note.getTieLeftX();\n      stem_direction = last_note.getStemDirection();\n      last_y = last_note.getStemExtents()[end_metric];\n    } else {\n      last_x = first_note.getStave().getTieEndX();\n      last_y = first_note.getStemExtents()[end_metric];\n    }\n\n    this.renderCurve({\n      first_x,\n      last_x,\n      first_y,\n      last_y,\n      direction: stem_direction * (this.render_options.invert === true ? -1 : 1),\n    });\n    return true;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/curve.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `TextDynamics` which renders traditional\n// text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n//\n// You can render any dynamics string that contains a combination of\n// the following letters:  P, M, F, Z, R, S\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`.\nfunction L(...args) { if (TextDynamics.DEBUG) Vex.L('Vex.Flow.TextDynamics', args); }\n\nexport class TextDynamics extends Note {\n  // The glyph data for each dynamics letter\n  static get GLYPHS() {\n    return {\n      'f': {\n        code: 'vba',\n        width: 12,\n      },\n      'p': {\n        code: 'vbf',\n        width: 14,\n      },\n      'm': {\n        code: 'v62',\n        width: 17,\n      },\n      's': {\n        code: 'v4a',\n        width: 10,\n      },\n      'z': {\n        code: 'v80',\n        width: 12,\n      },\n      'r': {\n        code: 'vb1',\n        width: 12,\n      },\n    };\n  }\n\n  // A `TextDynamics` object inherits from `Note` so that it can be formatted\n  // within a `Voice`.\n  // Create the dynamics marking. `text_struct` is an object\n  // that contains a `duration` property and a `sequence` of\n  // letters that represents the letters to render\n  constructor(text_struct) {\n    super(text_struct);\n    this.setAttribute('type', 'TextDynamics');\n\n    this.sequence = text_struct.text.toLowerCase();\n    this.line = text_struct.line || 0;\n    this.glyphs = [];\n\n    Vex.Merge(this.render_options, {\n      glyph_font_size: 40,\n    });\n\n    L('New Dynamics Text: ', this.sequence);\n  }\n\n  // Set the Stave line on which the note should be placed\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n\n  // Preformat the dynamics text\n  preFormat() {\n    let total_width = 0;\n    // Iterate through each letter\n    this.sequence.split('').forEach(letter => {\n      // Get the glyph data for the letter\n      const glyph_data = TextDynamics.GLYPHS[letter];\n      if (!glyph_data) throw new Vex.RERR('Invalid dynamics character: ' + letter);\n\n      const size =  this.render_options.glyph_font_size;\n      const glyph = new Glyph(glyph_data.code, size);\n\n      // Add the glyph\n      this.glyphs.push(glyph);\n\n      total_width += glyph_data.width;\n    });\n\n    // Store the width of the text\n    this.setWidth(total_width);\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Draw the dynamics text on the rendering context\n  draw() {\n    this.setRendered();\n    const x = this.getAbsoluteX();\n    const y = this.stave.getYForLine(this.line + (-3));\n\n    L('Rendering Dynamics: ', this.sequence);\n\n    let letter_x = x;\n    this.glyphs.forEach((glyph, index) => {\n      const current_letter = this.sequence[index];\n      glyph.render(this.context, letter_x, y);\n      letter_x += TextDynamics.GLYPHS[current_letter].width;\n    });\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/textdynamics.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `render_options`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\n\n// Attribution: Arrow rendering implementations based off of\n// Patrick Horgan's article, \"Drawing lines and arcs with\n// arrow heads on  HTML5 Canvas\"\n//\n// Draw an arrow head that connects between 3 coordinates\nfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n  // all cases do this.\n  ctx.beginPath();\n  ctx.moveTo(x0, y0);\n  ctx.lineTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.lineTo(x0, y0);\n  ctx.closePath();\n\n  ctx.fill();\n}\n\n// Helper function to draw a line with arrow heads\nfunction drawArrowLine(ctx, point1, point2, config) {\n  const both_arrows = config.draw_start_arrow && config.draw_end_arrow;\n\n  const x1 = point1.x;\n  const y1 = point1.y;\n  const x2 = point2.x;\n  const y2 = point2.y;\n\n  // For ends with arrow we actually want to stop before we get to the arrow\n  // so that wide lines won't put a flat end on the arrow.\n  const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  const ratio = (distance - config.arrowhead_length / 3) / distance;\n  let end_x;\n  let end_y;\n  let start_x;\n  let start_y;\n  if (config.draw_end_arrow || both_arrows) {\n    end_x = Math.round(x1 + (x2 - x1) * ratio);\n    end_y = Math.round(y1 + (y2 - y1) * ratio);\n  } else {\n    end_x = x2;\n    end_y = y2;\n  }\n\n  if (config.draw_start_arrow || both_arrows) {\n    start_x = x1 + (x2 - x1) * (1 - ratio);\n    start_y = y1 + (y2 - y1) * (1 - ratio);\n  } else {\n    start_x = x1;\n    start_y = y1;\n  }\n\n  if (config.color) {\n    ctx.setStrokeStyle(config.color);\n    ctx.setFillStyle(config.color);\n  }\n\n  // Draw the shaft of the arrow\n  ctx.beginPath();\n  ctx.moveTo(start_x, start_y);\n  ctx.lineTo(end_x, end_y);\n  ctx.stroke();\n  ctx.closePath();\n\n  // calculate the angle of the line\n  const line_angle = Math.atan2(y2 - y1, x2 - x1);\n  // h is the line length of a side of the arrow head\n  const h = Math.abs(config.arrowhead_length / Math.cos(config.arrowhead_angle));\n\n  let angle1;\n  let angle2;\n  let top_x;\n  let top_y;\n  let bottom_x;\n  let bottom_y;\n\n  if (config.draw_end_arrow || both_arrows) {\n    angle1 = line_angle + Math.PI + config.arrowhead_angle;\n    top_x = x2 + Math.cos(angle1) * h;\n    top_y = y2 + Math.sin(angle1) * h;\n\n    angle2 = line_angle + Math.PI - config.arrowhead_angle;\n    bottom_x = x2 + Math.cos(angle2) * h;\n    bottom_y = y2 + Math.sin(angle2) * h;\n\n    drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n  }\n\n  if (config.draw_start_arrow || both_arrows) {\n    angle1 = line_angle + config.arrowhead_angle;\n    top_x = x1 + Math.cos(angle1) * h;\n    top_y = y1 + Math.sin(angle1) * h;\n\n    angle2 = line_angle - config.arrowhead_angle;\n    bottom_x = x1 + Math.cos(angle2) * h;\n    bottom_y = y1 + Math.sin(angle2) * h;\n\n    drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n  }\n}\n\nexport class StaveLine extends Element {\n  // Text Positioning\n  static get TextVerticalPosition() {\n    return {\n      TOP: 1,\n      BOTTOM: 2,\n    };\n  }\n\n  static get TextJustification() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n    };\n  }\n\n  // Initialize the StaveLine with the given `notes`.\n  //\n  // `notes` is a struct that has:\n  //\n  //  ```\n  //  {\n  //    first_note: Note,\n  //    last_note: Note,\n  //    first_indices: [n1, n2, n3],\n  //    last_indices: [n1, n2, n3]\n  //  }\n  //  ```\n  constructor(notes) {\n    super();\n    this.setAttribute('type', 'StaveLine');\n\n    this.notes = notes;\n\n    this.text = '';\n\n    this.font = {\n      family: 'Arial',\n      size: 10,\n      weight: '',\n    };\n\n    this.render_options = {\n      // Space to add to the left or the right\n      padding_left: 4,\n      padding_right: 3,\n\n      // The width of the line in pixels\n      line_width: 1,\n      // An array of line/space lengths. Unsupported with Raphael (SVG)\n      line_dash: null,\n      // Can draw rounded line end, instead of a square. Unsupported with Raphael (SVG)\n      rounded_end: true,\n      // The color of the line and arrowheads\n      color: null,\n\n      // Flags to draw arrows on each end of the line\n      draw_start_arrow: false,\n      draw_end_arrow: false,\n\n      // The length of the arrowhead sides\n      arrowhead_length: 10,\n      // The angle of the arrowhead\n      arrowhead_angle: Math.PI / 8,\n\n      // The position of the text\n      text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n      text_justification: StaveLine.TextJustification.CENTER,\n    };\n\n    this.setNotes(notes);\n  }\n\n  // Set the font for the `StaveLine` text\n  setFont(font) { this.font = font; return this; }\n  // The the annotation for the `StaveLine`\n  setText(text) { this.text = text; return this; }\n\n  // Set the notes for the `StaveLine`\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Notes needs to have either first_note or last_note set.'\n      );\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Connected notes must have similar index sizes'\n      );\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  // Apply the style of the `StaveLine` to the context\n  applyLineStyle() {\n    const ctx = this.checkContext();\n    const render_options = this.render_options;\n\n    if (render_options.line_dash) {\n      ctx.setLineDash(render_options.line_dash);\n    }\n\n    if (render_options.line_width) {\n      ctx.setLineWidth(render_options.line_width);\n    }\n\n    if (render_options.rounded_end) {\n      ctx.setLineCap('round');\n    } else {\n      ctx.setLineCap('square');\n    }\n  }\n\n  // Apply the text styling to the context\n  applyFontStyle() {\n    const ctx = this.checkContext();\n\n    if (this.font) {\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    }\n\n    if (this.render_options.color) {\n      ctx.setStrokeStyle(this.render_options.color);\n      ctx.setFillStyle(this.render_options.color);\n    }\n  }\n\n  // Renders the `StaveLine` on the context\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n    const render_options = this.render_options;\n\n    ctx.save();\n    this.applyLineStyle();\n\n    // Cycle through each set of indices and draw lines\n    let start_position;\n    let end_position;\n    this.first_indices.forEach((first_index, i) => {\n      const last_index = this.last_indices[i];\n\n      // Get initial coordinates for the start/end of the line\n      start_position = first_note.getModifierStartXY(2, first_index);\n      end_position = last_note.getModifierStartXY(1, last_index);\n      const upwards_slope = start_position.y > end_position.y;\n\n      // Adjust `x` coordinates for modifiers\n      start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n      end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n\n\n      // Adjust first `x` coordinates for displacements\n      const notehead_width = first_note.getGlyph().getWidth();\n      const first_displaced = first_note.getKeyProps()[first_index].displaced;\n      if (first_displaced && first_note.getStemDirection() === 1) {\n        start_position.x += notehead_width + render_options.padding_left;\n      }\n\n      // Adjust last `x` coordinates for displacements\n      const last_displaced = last_note.getKeyProps()[last_index].displaced;\n      if (last_displaced && last_note.getStemDirection() === -1) {\n        end_position.x -= notehead_width + render_options.padding_right;\n      }\n\n      // Adjust y position better if it's not coming from the center of the note\n      start_position.y += upwards_slope ? -3 : 1;\n      end_position.y += upwards_slope ? 2 : 0;\n\n      drawArrowLine(ctx, start_position, end_position, this.render_options);\n    });\n\n    ctx.restore();\n\n    // Determine the x coordinate where to start the text\n    const text_width = ctx.measureText(this.text).width;\n    const justification = render_options.text_justification;\n    let x = 0;\n    if (justification === StaveLine.TextJustification.LEFT) {\n      x = start_position.x;\n    } else if (justification === StaveLine.TextJustification.CENTER) {\n      const delta_x = (end_position.x - start_position.x);\n      const center_x = (delta_x / 2) + start_position.x;\n      x = center_x - (text_width / 2);\n    } else if (justification === StaveLine.TextJustification.RIGHT) {\n      x = end_position.x  -  text_width;\n    }\n\n    // Determine the y value to start the text\n    let y;\n    const vertical_position = render_options.text_position_vertical;\n    if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n      y = first_note.getStave().getYForTopText();\n    } else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n      y = first_note.getStave().getYForBottomText(Flow.TEXT_HEIGHT_OFFSET_HACK);\n    }\n\n    // Draw the text\n    ctx.save();\n    this.applyFontStyle();\n    ctx.fillText(this.text, x, y);\n    ctx.restore();\n\n    return this;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/staveline.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements different types of pedal markings. These notation\n// elements indicate to the performer when to depress and release the a pedal.\n//\n// In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n// custom text for the release/depress pedal markings.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`.\nfunction L(...args) { if (PedalMarking.DEBUG) Vex.L('Vex.Flow.PedalMarking', args); }\n\n// Draws a pedal glyph with the provided `name` on a rendering `context`\n// at the coordinates `x` and `y. Takes into account the glyph data\n// coordinate shifts.\nfunction drawPedalGlyph(name, context, x, y, point) {\n  const glyph_data = PedalMarking.GLYPHS[name];\n  const glyph = new Glyph(glyph_data.code, point);\n  glyph.render(context, x + glyph_data.x_shift, y + glyph_data.y_shift);\n}\n\nexport class PedalMarking extends Element {\n  // Glyph data\n  static get GLYPHS() {\n    return {\n      'pedal_depress': {\n        code: 'v36',\n        x_shift: -10,\n        y_shift: 0,\n      },\n      'pedal_release': {\n        code: 'v5d',\n        x_shift: -2,\n        y_shift: 3,\n      },\n    };\n  }\n\n  static get Styles() {\n    return {\n      TEXT: 1,\n      BRACKET: 2,\n      MIXED: 3,\n    };\n  }\n\n  // Create a sustain pedal marking. Returns the defaults PedalMarking.\n  // Which uses the traditional \"Ped\" and \"*\"\" markings.\n  static createSustain(notes) {\n    const pedal = new PedalMarking(notes);\n    return pedal;\n  }\n\n  // Create a sostenuto pedal marking\n  static createSostenuto(notes) {\n    const pedal = new PedalMarking(notes);\n    pedal.setStyle(PedalMarking.Styles.MIXED);\n    pedal.setCustomText('Sost. Ped.');\n    return pedal;\n  }\n\n  // Create an una corda pedal marking\n  static createUnaCorda(notes) {\n    const pedal = new PedalMarking(notes);\n    pedal.setStyle(PedalMarking.Styles.TEXT);\n    pedal.setCustomText('una corda', 'tre corda');\n    return pedal;\n  }\n\n  // ## Prototype Methods\n  constructor(notes) {\n    super();\n    this.setAttribute('type', 'PedalMarking');\n\n    this.notes = notes;\n    this.style = PedalMarking.TEXT;\n    this.line = 0;\n\n    // Custom text for the release/depress markings\n    this.custom_depress_text = '';\n    this.custom_release_text = '';\n\n    this.font = {\n      family: 'Times New Roman',\n      size: 12,\n      weight: 'italic bold',\n    };\n\n    this.render_options = {\n      bracket_height: 10,\n      text_margin_right: 6,\n      bracket_line_width: 1,\n      glyph_point_size: 40,\n      color: 'black',\n    };\n  }\n\n  // Set custom text for the `depress`/`release` pedal markings. No text is\n  // set if the parameter is falsy.\n  setCustomText(depress, release) {\n    this.custom_depress_text = depress || '';\n    this.custom_release_text = release || '';\n    return this;\n  }\n\n  // Set the pedal marking style\n  setStyle(style) {\n    if (style < 1 && style > 3)  {\n      throw new Vex.RERR('InvalidParameter', 'The style must be one found in PedalMarking.Styles');\n    }\n\n    this.style = style;\n    return this;\n  }\n\n  // Set the staff line to render the markings on\n  setLine(line) { this.line = line; return this; }\n\n  // Draw the bracket based pedal markings\n  drawBracketed() {\n    const ctx = this.context;\n    let is_pedal_depressed = false;\n    let prev_x;\n    let prev_y;\n    const pedal = this;\n\n    // Iterate through each note\n    this.notes.forEach((note, index, notes) => {\n      // Each note triggers the opposite pedal action\n      is_pedal_depressed = !is_pedal_depressed;\n\n      // Get the initial coordinates for the note\n      const x = note.getAbsoluteX();\n      const y = note.getStave().getYForBottomText(pedal.line + 3);\n\n      // Throw if current note is positioned before the previous note\n      if (x < prev_x) {\n        throw new Vex.RERR(\n          'InvalidConfiguration', 'The notes provided must be in order of ascending x positions'\n        );\n      }\n\n      // Determine if the previous or next note are the same\n      // as the current note. We need to keep track of this for\n      // when adjustments are made for the release+depress action\n      const next_is_same = notes[index + 1] === note;\n      const prev_is_same = notes[index - 1] === note;\n\n      let x_shift = 0;\n      if (is_pedal_depressed) {\n        // Adjustment for release+depress\n        x_shift =  prev_is_same ? 5 : 0;\n\n        if (pedal.style === PedalMarking.Styles.MIXED && !prev_is_same) {\n          // For MIXED style, start with text instead of bracket\n          if (pedal.custom_depress_text) {\n            // If we have custom text, use instead of the default \"Ped\" glyph\n            const text_width = ctx.measureText(pedal.custom_depress_text).width;\n            ctx.fillText(pedal.custom_depress_text, x - (text_width / 2), y);\n            x_shift = (text_width / 2) + pedal.render_options.text_margin_right;\n          } else {\n            // Render the Ped glyph in position\n            drawPedalGlyph('pedal_depress', ctx, x, y, pedal.render_options.glyph_point_size);\n            x_shift = 20 + pedal.render_options.text_margin_right;\n          }\n        } else {\n          // Draw start bracket\n          ctx.beginPath();\n          ctx.moveTo(x, y - pedal.render_options.bracket_height);\n          ctx.lineTo(x + x_shift, y);\n          ctx.stroke();\n          ctx.closePath();\n        }\n      } else {\n        // Adjustment for release+depress\n        x_shift = next_is_same ? -5 : 0;\n\n        // Draw end bracket\n        ctx.beginPath();\n        ctx.moveTo(prev_x, prev_y);\n        ctx.lineTo(x + x_shift, y);\n        ctx.lineTo(x, y - pedal.render_options.bracket_height);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      // Store previous coordinates\n      prev_x = x + x_shift;\n      prev_y = y;\n    });\n  }\n\n  // Draw the text based pedal markings. This defaults to the traditional\n  // \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n  drawText() {\n    const ctx = this.context;\n    let is_pedal_depressed = false;\n    const pedal = this;\n\n    // The glyph point size\n    const point = pedal.render_options.glyph_point_size;\n\n    // Iterate through each note, placing glyphs or custom text accordingly\n    this.notes.forEach(note => {\n      is_pedal_depressed = !is_pedal_depressed;\n      const stave = note.getStave();\n      const x = note.getAbsoluteX();\n      const y = stave.getYForBottomText(pedal.line + 3);\n\n      let text_width = 0;\n      if (is_pedal_depressed) {\n        if (pedal.custom_depress_text) {\n          text_width = ctx.measureText(pedal.custom_depress_text).width;\n          ctx.fillText(pedal.custom_depress_text, x - (text_width / 2), y);\n        } else {\n          drawPedalGlyph('pedal_depress', ctx, x, y, point);\n        }\n      } else {\n        if (pedal.custom_release_text) {\n          text_width = ctx.measureText(pedal.custom_release_text).width;\n          ctx.fillText(pedal.custom_release_text, x - (text_width / 2), y);\n        } else {\n          drawPedalGlyph('pedal_release', ctx, x, y, point);\n        }\n      }\n    });\n  }\n\n  // Render the pedal marking in position on the rendering context\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.setStrokeStyle(this.render_options.color);\n    ctx.setFillStyle(this.render_options.color);\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\n    L('Rendering Pedal Marking');\n\n    if (this.style === PedalMarking.Styles.BRACKET || this.style === PedalMarking.Styles.MIXED) {\n      ctx.setLineWidth(this.render_options.bracket_line_width);\n      this.drawBracketed();\n    } else if (this.style === PedalMarking.Styles.TEXT) {\n      this.drawText();\n    }\n\n    ctx.restore();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/pedalmarking.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implement `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Renderer } from './renderer';\n\n// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\nfunction L(...args) { if (TextBracket.DEBUG) Vex.L('Vex.Flow.TextBracket', args); }\n\nexport class TextBracket extends Element {\n  static get Positions() {\n    return {\n      TOP: 1,\n      BOTTOM: -1,\n    };\n  }\n\n  constructor(bracket_data) {\n    super();\n    this.setAttribute('type', 'TextBracket');\n\n    this.start = bracket_data.start;\n    this.stop = bracket_data.stop;\n\n    this.text = bracket_data.text || '';\n    this.superscript = bracket_data.superscript || '';\n\n    this.position = bracket_data.position || TextBracket.Positions.TOP;\n    this.line = 1;\n\n    this.font = {\n      family: 'Serif',\n      size: 15,\n      weight: 'italic',\n    };\n\n    this.render_options = {\n      dashed: true,\n      dash: [5],\n      color: 'black',\n      line_width: 1,\n      show_bracket: true,\n      bracket_height: 8,\n\n      // In the BOTTOM position, the bracket line can extend\n      // under the superscript.\n      underline_superscript: true,\n    };\n  }\n\n  // Apply the text backet styling to the provided `context`\n  applyStyle(context) {\n    // Apply style for the octave bracket\n    context.setFont(this.font.family, this.font.size, this.font.weight);\n    context.setStrokeStyle(this.render_options.color);\n    context.setFillStyle(this.render_options.color);\n    context.setLineWidth(this.render_options.line_width);\n\n    return this;\n  }\n\n  // Set whether the bracket line should be `dashed`. You can also\n  // optionally set the `dash` pattern by passing in an array of numbers\n  setDashed(dashed, dash) {\n    this.render_options.dashed = dashed;\n    if (dash) this.render_options.dash = dash;\n    return this;\n  }\n\n  // Set the font for the text\n  setFont(font) { this.font = font; return this; }\n  // Set the rendering `context` for the octave bracket\n  setLine(line) { this.line = line; return this; }\n\n  // Draw the octave bracket on the rendering context\n  draw() {\n    const ctx = this.context;\n    this.setRendered();\n\n    let y = 0;\n    switch (this.position) {\n      case TextBracket.Positions.TOP:\n        y =  this.start.getStave().getYForTopText(this.line);\n        break;\n      case TextBracket.Positions.BOTTOM:\n        y =  this.start.getStave().getYForBottomText(this.line + Flow.TEXT_HEIGHT_OFFSET_HACK);\n        break;\n      default:\n        throw new Vex.RERR('InvalidPosition', `The position ${this.position} is invalid`);\n    }\n\n    // Get the preliminary start and stop coordintates for the bracket\n    const start = { x: this.start.getAbsoluteX(), y };\n    const stop = { x: this.stop.getAbsoluteX(), y };\n\n    L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n\n    const bracket_height = this.render_options.bracket_height * this.position;\n\n    ctx.save();\n    this.applyStyle(ctx);\n\n    // Draw text\n    ctx.fillText(this.text, start.x, start.y);\n\n    // Get the width and height for the octave number\n    const main_width = ctx.measureText(this.text).width;\n    const main_height = ctx.measureText('M').width;\n\n    // Calculate the y position for the super script\n    const super_y = start.y - (main_height / 2.5);\n\n    // Draw the superscript\n    ctx.setFont(this.font.family, this.font.size / 1.4, this.font.weight);\n    ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n\n    // Determine width and height of the superscript\n    const superscript_width = ctx.measureText(this.superscript).width;\n    const super_height = ctx.measureText('M').width;\n\n    // Setup initial coordinates for the bracket line\n    let start_x = start.x;\n    let line_y = super_y;\n    const end_x = stop.x + this.stop.getGlyph().getWidth();\n\n    // Adjust x and y coordinates based on position\n    if (this.position === TextBracket.Positions.TOP) {\n      start_x += main_width + superscript_width + 5;\n      line_y -= super_height / 2.7;\n    } else if (this.position === TextBracket.Positions.BOTTOM) {\n      line_y += super_height / 2.7;\n      start_x += main_width + 2;\n\n      if (!this.render_options.underline_superscript) {\n        start_x += superscript_width;\n      }\n    }\n\n    if (this.render_options.dashed) {\n      // Main line\n      Renderer.drawDashedLine(\n        ctx,\n        start_x,\n        line_y,\n        end_x,\n        line_y,\n        this.render_options.dash\n      );\n      // Ending Bracket\n      if (this.render_options.show_bracket) {\n        Renderer.drawDashedLine(\n          ctx,\n          end_x,\n          line_y + (1 * this.position),\n          end_x,\n          line_y + bracket_height,\n          this.render_options.dash\n        );\n      }\n    } else {\n      ctx.beginPath();\n      ctx.moveTo(start_x, line_y);\n      // Main line\n      ctx.lineTo(end_x, line_y);\n      if (this.render_options.show_bracket) {\n        // Ending bracket\n        ctx.lineTo(end_x, line_y + bracket_height);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n\n    ctx.restore();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/textbracket.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// A `BarNote` is used to render bar lines (from `barline.js`). `BarNote`s can\n// be added to a voice and rendered in the middle of a stave. Since it has no\n// duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n//\n// See `tests/barnote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Barline } from './stavebarline';\nimport { BoundingBox } from './boundingbox';\n\n// To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`.\nfunction L(...args) { if (BarNote.DEBUG) Vex.L('Vex.Flow.BarNote', args); }\n\nexport class BarNote extends Note {\n  constructor(type) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'BarNote');\n\n    const TYPE = Barline.type;\n    this.metrics = {\n      widths: {},\n    };\n\n    // Defined this way to prevent lint errors.\n    this.metrics.widths[TYPE.SINGLE] = 8;\n    this.metrics.widths[TYPE.DOUBLE] = 12;\n    this.metrics.widths[TYPE.END] = 15;\n    this.metrics.widths[TYPE.REPEAT_BEGIN] = 14;\n    this.metrics.widths[TYPE.REPEAT_END] = 14;\n    this.metrics.widths[TYPE.REPEAT_BOTH] = 18;\n    this.metrics.widths[TYPE.NONE] = 0;\n\n    // Tell the formatter that bar notes have no duration.\n    this.ignore_ticks = true;\n    this.type = type === undefined ? TYPE.SINGLE : type;\n\n    // Set width to width of relevant `Barline`.\n    this.setWidth(this.metrics.widths[this.type]);\n  }\n\n  // Get and set the type of Bar note. `type` must be one of `Vex.Flow.Barline.type`.\n  getType() { return this.type; }\n  setType(type) {\n    this.type = type;\n    this.setWidth(this.metrics.widths[this.type]);\n    return this;\n  }\n\n  getBoundingBox() {\n    return new BoundingBox(0, 0, 0, 0);\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    /* overridden to ignore */\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  // Render note to stave.\n  draw() {\n    this.checkContext();\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    L('Rendering bar line at: ', this.getAbsoluteX());\n    const barline = new Barline(this.type);\n    barline.setX(this.getAbsoluteX());\n    barline.draw(this.stave);\n    this.setRendered();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/barnote.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n\nimport { Vex } from './vex';\nimport { StemmableNote } from './stemmablenote';\n\nexport class GhostNote extends StemmableNote {\n  /** @constructor */\n  constructor(parameter) {\n    // Sanity check\n    if (!parameter) {\n      throw new Vex.RuntimeError('BadArguments',\n          'Ghost note must have valid initialization data to identify ' +\n          'duration.');\n    }\n\n    let note_struct;\n\n    // Preserve backwards-compatibility\n    if (typeof(parameter) === 'string') {\n      note_struct = { duration: parameter };\n    } else if (typeof(parameter) === 'object') {\n      note_struct = parameter;\n    } else {\n      throw new Vex.RuntimeError('BadArguments',\n          'Ghost note must have valid initialization data to identify ' +\n          'duration.');\n    }\n\n    super(note_struct);\n    this.setAttribute('type', 'GhostNote');\n\n    // Note properties\n    this.setWidth(0);\n  }\n\n  isRest() { return true; }\n\n  setStave(stave) {\n    super.setStave(stave);\n  }\n\n  addToModifierContext() { /* intentionally overridden */ return this; }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\n    // Draw the modifiers\n    this.setRendered();\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      const modifier = this.modifiers[i];\n      modifier.setContext(this.context);\n      modifier.draw();\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ghostnote.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Mike Corrigan <corrigan@gmail.com>\n//\n// This class implements tremolo notation.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\n\nexport class Tremolo extends Modifier {\n  static get CATEGORY() { return 'tremolo'; }\n  constructor(num) {\n    super();\n    this.setAttribute('type', 'Tremolo');\n\n    this.num = num;\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.CENTER;\n    this.code = 'v74';\n    this.shift_right = -2;\n    this.y_spacing = 4;\n\n    this.render_options = {\n      font_scale: 35,\n      stroke_px: 3,\n      stroke_spacing: 10,\n    };\n\n    this.font = {\n      family: 'Arial',\n      size: 16,\n      weight: '',\n    };\n  }\n\n  getCategory() { return Tremolo.CATEGORY; }\n\n  draw() {\n    this.checkContext();\n\n    if (!(this.note && this.index != null)) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Tremolo without a note and index.\");\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let x = start.x;\n    let y = start.y;\n\n    x += this.shift_right;\n    for (let i = 0; i < this.num; ++i) {\n      Glyph.renderGlyph(this.context, x, y, this.render_options.font_scale, this.code);\n      y += this.y_spacing;\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tremolo.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { TickContext } from './tickcontext';\n\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\nfunction L(...args) { if (Crescendo.DEBUG) Vex.L('Vex.Flow.Crescendo', args); }\n\n// Private helper to draw the hairpin\nfunction renderHairpin(ctx, params) {\n  const begin_x = params.begin_x;\n  const end_x = params.end_x;\n  const y = params.y;\n  const half_height =  params.height / 2;\n\n  ctx.beginPath();\n\n  if (params.reverse) {\n    ctx.moveTo(begin_x, y - half_height);\n    ctx.lineTo(end_x,  y);\n    ctx.lineTo(begin_x, y + half_height);\n  } else {\n    ctx.moveTo(end_x,  y - half_height);\n    ctx.lineTo(begin_x, y);\n    ctx.lineTo(end_x,  y + half_height);\n  }\n\n  ctx.stroke();\n  ctx.closePath();\n}\n\nexport class Crescendo extends Note {\n  // Initialize the crescendo's properties\n  constructor(note_struct) {\n    super(note_struct);\n    this.setAttribute('type', 'Crescendo');\n\n    // Whether the object is a decrescendo\n    this.decrescendo = false;\n\n    // The staff line to be placed on\n    this.line = note_struct.line || 0;\n\n    // The height at the open end of the cresc/decresc\n    this.height = 15;\n\n    Vex.Merge(this.render_options, {\n      // Extensions to the length of the crescendo on either side\n      extend_left: 0,\n      extend_right: 0,\n      // Vertical shift\n      y_shift: 0,\n    });\n  }\n\n  // Set the line to center the element on\n  setLine(line) { this.line = line; return this; }\n\n  // Set the full height at the open end\n  setHeight(height) { this.height = height; return this; }\n\n  // Set whether the sign should be a descresendo by passing a bool\n  // to `decresc`\n  setDecrescendo(decresc) {\n    this.decrescendo = decresc;\n    return this;\n  }\n\n  // Preformat the note\n  preFormat() { this.preFormatted = true; return this; }\n\n  // Render the Crescendo object onto the canvas\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const tick_context = this.getTickContext();\n    const next_context = TickContext.getNextContext(tick_context);\n\n    const begin_x = this.getAbsoluteX();\n    const end_x  = next_context ? next_context.getX() : this.stave.x + this.stave.width;\n    const y = this.stave.getYForLine(this.line + (-3)) + 1;\n\n    L(\n      'Drawing ',\n      this.decrescendo ? 'decrescendo ' : 'crescendo ',\n      this.height,\n      'x',\n      begin_x - end_x\n    );\n\n    renderHairpin(this.context, {\n      begin_x: begin_x - this.render_options.extend_left,\n      end_x: end_x + this.render_options.extend_right,\n      y: y + this.render_options.y_shift,\n      height: this.height,\n      reverse: this.decrescendo,\n    });\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/crescendo.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements a musical system, which is a collection of staves,\n// each which can have one or more voices. All voices across all staves in\n// the system are formatted together.\n\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Formatter } from './formatter';\nimport { Note } from './note';\n\nfunction setDefaults(params, defaults) {\n  const default_options = defaults.options;\n  params = Object.assign(defaults, params);\n  params.options = Object.assign(default_options, params.options);\n  return params;\n}\n\nexport class System extends Element {\n  constructor(params = {}) {\n    super();\n    this.setAttribute('type', 'System');\n    this.setOptions(params);\n    this.parts = [];\n  }\n\n  setOptions(options = {}) {\n    this.options = setDefaults(options, {\n      x: 10,\n      y: 10,\n      width: 500,\n      connector: null,\n      spaceBetweenStaves: 12, // stave spaces\n      factory: null,\n      debugFormatter: false,\n      formatIterations: 0,   // number of formatter tuning steps\n      options: {},\n    });\n\n    this.factory = this.options.factory || new Factory({ renderer: { el: null } });\n  }\n\n  setContext(context) {\n    super.setContext(context);\n    this.factory.setContext(context);\n    return this;\n  }\n\n  addConnector(type = 'double') {\n    this.connector = this.factory.StaveConnector({\n      top_stave: this.parts[0].stave,\n      bottom_stave: this.parts[this.parts.length - 1].stave,\n      type,\n    });\n    return this.connector;\n  }\n\n  addStave(params) {\n    params = setDefaults(params, {\n      stave: null,\n      voices: [],\n      spaceAbove: 0, // stave spaces\n      spaceBelow: 0, // stave spaces\n      debugNoteMetrics: false,\n      options: {},\n    });\n\n    if (!params.stave) {\n      const options = { left_bar: false };\n      params.stave = this.factory.Stave(\n        { x: this.options.x, y: this.options.y, width: this.options.width, options });\n    }\n\n    params.voices.forEach(voice => voice.setContext(this.context).setStave(params.stave));\n    this.parts.push(params);\n    return params.stave;\n  }\n\n  format() {\n    const formatter = new Formatter();\n    this.formatter = formatter;\n\n    let y = this.options.y;\n    let startX = 0;\n    let allVoices = [];\n    const debugNoteMetricsYs = [];\n\n    // Join the voices for each stave.\n    this.parts.forEach(part => {\n      y = y + part.stave.space(part.spaceAbove);\n      part.stave.setY(y);\n      formatter.joinVoices(part.voices);\n      y = y + part.stave.space(part.spaceBelow);\n      y = y + part.stave.space(this.options.spaceBetweenStaves);\n      if (part.debugNoteMetrics) {\n        debugNoteMetricsYs.push({ y, voice: part.voices[0] });\n        y += 15;\n      }\n      allVoices = allVoices.concat(part.voices);\n\n      startX = Math.max(startX, part.stave.getNoteStartX());\n    });\n\n    // Update the start position of all staves.\n    this.parts.forEach(part => part.stave.setNoteStartX(startX));\n    const justifyWidth = this.options.width - (startX - this.options.x) - Note.STAVEPADDING;\n    formatter.format(allVoices, justifyWidth);\n\n    for (let i = 0; i < this.options.formatIterations; i++) {\n      formatter.tune();\n    }\n\n    this.startX = startX;\n    this.debugNoteMetricsYs = debugNoteMetricsYs;\n    this.lastY = y;\n  }\n\n  draw() {\n    // Render debugging information, if requested.\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    if (this.options.debugFormatter) {\n      Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n    }\n\n    this.debugNoteMetricsYs.forEach(d => {\n      d.voice.getTickables().forEach(note => Note.plotMetrics(ctx, note, d.y));\n    });\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/system.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a high level API around VexFlow. It will eventually\n// become the canonical way to use VexFlow.\n//\n// *This API is currently DRAFT*\n\nimport { Vex } from './vex';\nimport { Accidental } from './accidental';\nimport { Articulation } from './articulation';\nimport { Annotation } from './annotation';\nimport { Formatter } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { TextDynamics } from './textdynamics';\nimport { ModifierContext } from './modifiercontext';\nimport { Renderer } from './renderer';\nimport { Stave } from './stave';\nimport { StaveTie } from './stavetie';\nimport { StaveNote } from './stavenote';\nimport { StaveConnector } from './staveconnector';\nimport { System } from './system';\nimport { TickContext } from './tickcontext';\nimport { Tuplet } from './tuplet';\nimport { Voice } from './voice';\nimport { Beam } from './beam';\nimport { Curve } from './curve';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { EasyScore } from './easyscore';\n\n// To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`.\nfunction L(...args) { if (Factory.DEBUG) Vex.L('Vex.Flow.Factory', args); }\n\nexport const X = Vex.MakeException('FactoryError');\n\nfunction setDefaults(params = {}, defaults) {\n  const default_options = defaults.options;\n  params = Object.assign(defaults, params);\n  params.options = Object.assign(default_options, params.options);\n  return params;\n}\n\nexport class Factory {\n  constructor(options) {\n    L('New factory: ', options);\n    const defaults = {\n      stave: {\n        space: 10,\n      },\n      renderer: {\n        context: null,\n        selector: '',\n        backend: Renderer.Backends.SVG,\n        width: 500,\n        height: 200,\n        background: '#FFF',\n      },\n      font: {\n        face: 'Arial',\n        point: 10,\n        style: '',\n      },\n    };\n\n    this.options = defaults;\n    this.setOptions(options);\n  }\n\n  static newFromSelector(selector, width = 500, height = 200) {\n    return new Factory({ renderer: { selector, width, height } });\n  }\n\n  reset() {\n    this.renderQ = [];\n    this.systems = [];\n    this.staves = [];\n    this.voices = [];\n    this.stave = null; // current stave\n  }\n\n  getOptions() { return this.options; }\n  setOptions(options) {\n    for (const key of ['stave', 'renderer', 'font']) {\n      Object.assign(this.options[key], options[key]);\n    }\n    if (this.options.renderer.selector !== null || this.options.renderer.context) {\n      this.initRenderer();\n    }\n\n    this.reset();\n  }\n\n  initRenderer() {\n    const { selector, backend, width, height, background } = this.options.renderer;\n    if (selector === '') {\n      throw new X('HTML DOM element not set in Factory');\n    }\n\n    this.context = Renderer.buildContext(selector, backend, width, height, background);\n  }\n\n  getContext() { return this.context; }\n  setContext(context) { this.context = context; return this; }\n  getStave() { return this.stave; }\n\n  // Returns pixels from current stave spacing.\n  space(spacing) { return this.options.stave.space * spacing; }\n\n  Stave(params) {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space,\n      },\n    });\n\n    const stave = new Stave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  StaveNote(noteStruct) {\n    const note = new StaveNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GraceNote(noteStruct) {\n    const note = new GraceNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    return note;\n  }\n\n  GraceNoteGroup(params) {\n    const group = new GraceNoteGroup(params.notes, params.slur);\n    group.setContext(this.context);\n    return group;\n  }\n\n  Accidental(params) {\n    params = setDefaults(params, {\n      type: null,\n      options: {},\n    });\n\n    const accid = new Accidental(params.type);\n    accid.setContext(this.context);\n    return accid;\n  }\n\n  Annotation(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      vJustify: 'below',\n      hJustify: 'center',\n      fontFamily: 'Times',\n      fontSize: 14,\n      fontWeight: 'bold italic',\n      options: {},\n    });\n\n    const annotation = new Annotation(params.text);\n    annotation.setJustification(params.hJustify);\n    annotation.setVerticalJustification(params.vJustify);\n    annotation.setFont(params.fontFamily, params.fontSize, params.fontWeight);\n    annotation.setContext(this.context);\n    return annotation;\n  }\n\n  Articulation(params) {\n    params = setDefaults(params, {\n      type: 'a.',\n      position: 'above',\n      options: {},\n    });\n\n    const articulation = new Articulation(params.type);\n    articulation.setPosition(params.position);\n    articulation.setContext(this.context);\n    return articulation;\n  }\n\n  TextDynamics(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      duration: 'q',\n      dots: 0,\n      line: 0,\n      options: {},\n    });\n\n    const text = new TextDynamics({\n      text: params.text,\n      line: params.line,\n      duration: params.duration,\n      dots: params.dots,\n    });\n    text.setContext(this.context);\n    return text;\n  }\n\n  Fingering(params) {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {},\n    });\n\n    const fingering = new FretHandFinger(params.number);\n    fingering.setPosition(params.position);\n    fingering.setContext(this.context);\n    return fingering;\n  }\n\n  TickContext() {\n    return new TickContext().setContext(this.context);\n  }\n\n  ModifierContext() {\n    return new ModifierContext();\n  }\n\n  Voice(params) {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {},\n    });\n    const voice = new Voice(params.time);\n    this.voices.push(voice);\n    return voice;\n  }\n\n  StaveConnector(params) {\n    params = setDefaults(params, {\n      top_stave: null,\n      bottom_stave: null,\n      type: 'double',\n      options: {},\n    });\n    const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n    connector.setType(params.type).setContext(this.context);\n    this.renderQ.push(connector);\n    return connector;\n  }\n\n  Formatter() {\n    return new Formatter();\n  }\n\n  Tuplet(params) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {},\n    });\n\n    const tuplet = new Tuplet(params.notes, params.options).setContext(this.context);\n    this.renderQ.push(tuplet);\n    return tuplet;\n  }\n\n  Beam(params) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        autoStem: false,\n      },\n    });\n\n    const beam = new Beam(params.notes, params.options.autoStem).setContext(this.context);\n    this.renderQ.push(beam);\n    return beam;\n  }\n\n  Curve(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {},\n    });\n\n    const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n    this.renderQ.push(curve);\n    return curve;\n  }\n\n  StaveTie(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      text: null,\n      options: {},\n    });\n\n    const tie = new StaveTie({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    }, params.text).setContext(this.context);\n    this.renderQ.push(tie);\n    return tie;\n  }\n\n  System(params = {}) {\n    params.factory = this;\n    const system = new System(params).setContext(this.context);\n    this.systems.push(system);\n    return system;\n  }\n\n  EasyScore(params = {}) {\n    params.factory = this;\n    return new EasyScore(params);\n  }\n\n  draw() {\n    this.systems.forEach(i => i.setContext(this.context).format());\n    this.staves.forEach(i => i.setContext(this.context).draw());\n    this.voices.forEach(i => i.setContext(this.context).draw());\n    this.renderQ.forEach(i => {\n      if (!i.isRendered()) i.setContext(this.context).draw();\n    });\n    this.systems.forEach(i => i.setContext(this.context).draw());\n    this.reset();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/factory.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements a parser for a simple language to generate\n// VexFlow objects.\n\nimport { Vex } from './vex';\nimport { StaveNote } from './stavenote';\nimport { Parser } from './parser';\nimport { Articulation } from './articulation';\n\n// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\nfunction L(...args) { if (EasyScore.DEBUG) Vex.L('Vex.Flow.EasyScore', args); }\n\nexport const X = Vex.MakeException('EasyScoreError');\n\nclass Grammar {\n  constructor(builder) {\n    this.builder = builder;\n  }\n\n  begin() { return this.LINE; }\n\n  LINE() {\n    return {\n      expect: [this.PIECE, this.PIECES, this.EOL],\n    };\n  }\n  PIECE() {\n    return {\n      expect: [this.CHORDORNOTE, this.PARAMS],\n      run: () => this.builder.commitPiece(),\n    };\n  }\n  PIECES() {\n    return {\n      expect: [this.COMMA, this.PIECE],\n      zeroOrMore: true,\n    };\n  }\n  PARAMS() {\n    return {\n      expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n    };\n  }\n  CHORDORNOTE() {\n    return {\n      expect: [this.CHORD, this.SINGLENOTE],\n      or: true,\n    };\n  }\n  CHORD() {\n    return {\n      expect: [this.LPAREN, this.NOTES, this.RPAREN],\n      run: (state) => this.builder.addChord(state.matches[1]),\n    };\n  }\n  NOTES() {\n    return {\n      expect: [this.NOTE],\n      oneOrMore: true,\n    };\n  }\n  NOTE() {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n    };\n  }\n  SINGLENOTE() {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n      run: (state) =>\n        this.builder.addSingleNote(state.matches[0], state.matches[1], state.matches[2]),\n    };\n  }\n  ACCIDENTAL() {\n    return {\n      expect: [this.ACCIDENTALS],\n      maybe: true,\n    };\n  }\n  DOTS() {\n    return {\n      expect: [this.DOT],\n      zeroOrMore: true,\n      run: (state) => this.builder.setNoteDots(state.matches[0]),\n    };\n  }\n  TYPE() {\n    return {\n      expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n      maybe: true,\n      run: (state) => this.builder.setNoteType(state.matches[2]),\n    };\n  }\n  DURATION() {\n    return {\n      expect: [this.SLASH, this.DURATIONS],\n      maybe: true,\n      run: (state) => this.builder.setNoteDuration(state.matches[1]),\n    };\n  }\n  OPTS() {\n    return {\n      expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n      maybe: true,\n    };\n  }\n  KEYVALS() {\n    return {\n      expect: [this.COMMA, this.KEYVAL],\n      zeroOrMore: true,\n    };\n  }\n  KEYVAL() {\n    const unquote = (str) => str.slice(1, -1);\n\n    return {\n      expect: [this.KEY, this.EQUALS, this.VAL],\n      run: (state) => this.builder.addNoteOption(state.matches[0], unquote(state.matches[2])),\n    };\n  }\n  VAL()  {\n    return {\n      expect: [this.SVAL, this.DVAL],\n      or: true,\n    };\n  }\n\n  KEY()         { return { token: '[a-zA-Z][a-zA-Z0-9]*' }; }\n  DVAL()        { return { token: '[\"][^\"]*[\"]' }; }\n  SVAL()        { return { token: \"['][^']*[']\" }; }\n  NOTENAME()    { return { token: '[a-gA-G]' }; }\n  OCTAVE()      { return { token: '[0-9]+' }; }\n  ACCIDENTALS() { return { token: 'bbs|bb|bss|bs|b|db|d|##|#|n|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+' }; }\n  DURATIONS()   { return { token: '[0-9whq]+' }; }\n  TYPES()       { return { token: '[rRsSxX]' }; }\n  LPAREN()      { return { token: '[(]' }; }\n  RPAREN()      { return { token: '[)]' }; }\n  COMMA()       { return { token: '[,]' }; }\n  DOT()         { return { token: '[.]' }; }\n  SLASH()       { return { token: '[/]' }; }\n  MAYBESLASH()  { return { token: '[/]?' }; }\n  EQUALS()      { return { token: '[=]' }; }\n  LBRACKET()    { return { token: '\\\\[' }; }\n  RBRACKET()    { return { token: '\\\\]' }; }\n  EOL()         { return { token: '$' }; }\n}\n\nclass Builder {\n  constructor(factory) {\n    this.factory = factory;\n    this.commitHooks = [];\n    this.reset();\n  }\n\n  reset(options = {}) {\n    this.options = {\n      stem: 'auto',\n      clef: 'treble',\n    };\n    this.elements = {\n      notes: [],\n      accidentals: [],\n    };\n    this.rollingDuration = '8';\n    this.resetPiece();\n    Object.assign(this.options, options);\n  }\n\n  getFactory() { return this.factory; }\n\n  getElements() { return this.elements; }\n\n  addCommitHook(commitHook) {\n    this.commitHooks.push(commitHook);\n  }\n\n  resetPiece() {\n    L('resetPiece');\n    this.piece = {\n      chord: [],\n      duration: this.rollingDuration,\n      dots: 0,\n      type: undefined,\n      options: {},\n    };\n  }\n\n  setNoteDots(dots) {\n    L('setNoteDots:', dots);\n    if (dots) this.piece.dots = dots.length;\n  }\n\n  setNoteDuration(duration) {\n    L('setNoteDuration:', duration);\n    this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n  }\n\n  setNoteType(type) {\n    L('setNoteType:', type);\n    if (type) this.piece.type = type;\n  }\n\n  addNoteOption(key, value) {\n    L('addNoteOption: key:', key, 'value:', value);\n    this.piece.options[key] = value;\n  }\n\n  addNote(key, accid, octave) {\n    L('addNote:', key, accid, octave);\n    this.piece.chord.push({ key, accid, octave });\n  }\n\n  addSingleNote(key, accid, octave) {\n    L('addSingleNote:', key, accid, octave);\n    this.addNote(key, accid, octave);\n  }\n\n  addChord(notes) {\n    L('startChord');\n    if (typeof(notes[0]) !== 'object') {\n      this.addSingleNote(notes[0]);\n    } else {\n      notes.forEach(n => {\n        if (n) this.addNote(...n);\n      });\n    }\n    L('endChord');\n  }\n\n  commitPiece() {\n    L('commitPiece');\n    const { factory } = this;\n\n    if (!factory) return;\n\n    const options = Object.assign({}, this.options, this.piece.options);\n    const { stem, clef } = options;\n    const autoStem = stem.toLowerCase() === 'auto';\n    const stemDirection = !autoStem && stem.toLowerCase() === 'up'\n      ? StaveNote.STEM_UP\n      : StaveNote.STEM_DOWN;\n\n    // Build StaveNotes.\n    const { chord, duration, dots, type } = this.piece;\n    const keys = chord.map(note => note.key + '/' + note.octave);\n    const note = factory.StaveNote({\n      keys,\n      duration,\n      dots,\n      type,\n      clef,\n      auto_stem: autoStem,\n    });\n    if (!autoStem) note.setStemDirection(stemDirection);\n\n    // Attach accidentals.\n    const accids = chord.map(note => note.accid || null);\n    accids.forEach((accid, i) => {\n      if (accid) note.addAccidental(i, factory.Accidental({ type: accid }));\n    });\n\n    // Attach dots.\n    for (let i = 0; i < dots; i++) note.addDotToAll();\n\n    this.commitHooks.forEach(fn => fn(options, note, this));\n\n    this.elements.notes.push(note);\n    this.elements.accidentals.concat(accids);\n    this.resetPiece();\n  }\n}\n\nfunction setId({ id }, note) {\n  if (id === undefined) return;\n\n  note.setAttribute('id', id);\n}\n\n\nfunction setClass(options, note) {\n  if (!options.class) return;\n\n  const commaSeparatedRegex = /\\s*,\\s*/;\n\n  options.class\n    .split(commaSeparatedRegex)\n    .forEach(className => note.addClass(className));\n}\n\nexport class EasyScore {\n  constructor(options = {}) {\n    this.setOptions(options);\n    this.defaults = {\n      clef: 'treble',\n      time: '4/4',\n      stem: 'auto',\n    };\n  }\n\n  set(defaults) {\n    Object.assign(this.defaults, defaults);\n    return this;\n  }\n\n  setOptions(options) {\n    this.options = Object.assign({\n      factory: null,\n      builder: null,\n      commitHooks: [\n        setId,\n        setClass,\n        Articulation.easyScoreHook,\n      ],\n      throwOnError: false,\n    }, options);\n\n    this.factory = this.options.factory;\n    this.builder = this.options.builder || new Builder(this.factory);\n    this.grammar = new Grammar(this.builder);\n    this.parser = new Parser(this.grammar);\n    this.options.commitHooks.forEach(commitHook => this.addCommitHook(commitHook));\n    return this;\n  }\n\n  setContext(context) {\n    if (this.factory) this.factory.setContext(context);\n    return this;\n  }\n\n  parse(line, options = {}) {\n    this.builder.reset(options);\n    const result = this.parser.parse(line);\n    if (!result.success && this.options.throwOnError) {\n      throw new X('Error parsing line: ' + line, result);\n    }\n    return result;\n  }\n\n  beam(notes, options = {}) {\n    this.factory.Beam({ notes, options });\n    return notes;\n  }\n\n  tuplet(notes, options = {}) {\n    this.factory.Tuplet({ notes, options });\n    return notes;\n  }\n\n  notes(line, options = {}) {\n    options = Object.assign({ clef: this.defaults.clef, stem: this.defaults.stem }, options);\n    this.parse(line, options);\n    return this.builder.getElements().notes;\n  }\n\n  voice(notes, voiceOptions) {\n    voiceOptions = Object.assign({ time: this.defaults.time }, voiceOptions);\n    return this.factory.Voice(voiceOptions).addTickables(notes);\n  }\n\n  addCommitHook(commitHook) {\n    return this.builder.addCommitHook(commitHook);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/easyscore.js\n **/","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// A generic text parsing class for VexFlow.\n\nimport { Vex } from './vex';\n\n// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\nfunction L(...args) { if (Parser.DEBUG) Vex.L('Vex.Flow.Parser', args); }\n\nexport const X = Vex.MakeException('ParserError');\n\n// Converts parser results into an easy to reference list that can be\n// used in triggers.\nfunction flattenMatches(results) {\n  if (results.matchedString !== undefined) return results.matchedString;\n  if (results.results) return flattenMatches(results.results);\n  if (results.length === 1) return flattenMatches(results[0]);\n  if (results.length === 0) return null;\n  return results.map(flattenMatches);\n}\n\n// This is the base parser class. Given an arbitrary context-free grammar, it\n// can parse any line and execute code when specific rules are met (e.g.,\n// when a string is terminated.)\nexport class Parser {\n  // For an example of a simple grammar, take a look at tests/parser_tests.js or\n  // the EasyScore grammar in easyscore.js.\n  constructor(grammar) {\n    this.grammar = grammar;\n  }\n\n  // Parse `line` using current grammar. Returns {success: true} if the\n  // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n  // where `errorPos` is the location of the error in the string.\n  parse(line) {\n    this.line = line;\n    this.pos = 0;\n    this.errorPos = -1;\n    const results = this.expect(this.grammar.begin());\n    results.errorPos = this.errorPos;\n    return results;\n  }\n\n  matchFail(returnPos) {\n    if (this.errorPos === -1) this.errorPos = this.pos;\n    this.pos = returnPos;\n  }\n\n  matchSuccess() {\n    this.errorPos = -1;\n  }\n\n  // Look for `token` in this.line[this.pos], and return success\n  // if one is found. `token` is specified as a regular expression.\n  matchToken(token, noSpace = false) {\n    const regexp = noSpace\n      ? new RegExp('^((' + token + '))')\n      : new RegExp('^((' + token + ')\\\\s*)');\n    const workingLine = this.line.slice(this.pos);\n    const result = workingLine.match(regexp);\n    if (result !== null) {\n      return {\n        success: true,\n        matchedString: result[2],\n        incrementPos: result[1].length,\n        pos: this.pos,\n      };\n    } else {\n      return {\n        success: false,\n        pos: this.pos,\n      };\n    }\n  }\n\n  // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n  // set, then return success even if the token is not found, but reset\n  // the position before exiting.\n  expectOne(rule, maybe = false) {\n    const results = [];\n    const pos = this.pos;\n\n    let allMatches = true;\n    let oneMatch = false;\n    maybe = (maybe === true) || (rule.maybe === true);\n\n    // Execute all sub rules in sequence.\n    for (let i = 0; i < rule.expect.length; i++) {\n      const next = rule.expect[i];\n      const localPos = this.pos;\n      const result = this.expect(next);\n\n      // If `rule.or` is set, then return success if any one\n      // of the subrules match, else all subrules must match.\n      if (result.success) {\n        results.push(result);\n        oneMatch = true;\n        if (rule.or) break;\n      } else {\n        allMatches = false;\n        if (!rule.or) {\n          this.pos = localPos;\n          break;\n        }\n      }\n    }\n\n    const gotOne = (rule.or && oneMatch) || allMatches;\n    const success = gotOne || (maybe === true);\n    if (maybe && !gotOne) this.pos = pos;\n    if (success) this.matchSuccess(); else this.matchFail(pos);\n    return { success, results, numMatches: gotOne ? 1 : 0 };\n  }\n\n  // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n  // then a failed match is also a success (but the position is reset).\n  expectOneOrMore(rule, maybe = false) {\n    const results = [];\n    const pos = this.pos;\n    let numMatches = 0;\n    let more = true;\n\n    do {\n      const result = this.expectOne(rule);\n      if (result.success) {\n        numMatches++;\n        results.push(result.results);\n      } else {\n        more = false;\n      }\n    } while (more);\n\n    const success = (numMatches > 0) || (maybe === true);\n    if (maybe && !(numMatches > 0)) this.pos = pos;\n    if (success) this.matchSuccess(); else this.matchFail(pos);\n    return { success, results, numMatches };\n  }\n\n  // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n  expectZeroOrMore(rule) {\n    return this.expectOneOrMore(rule, true);\n  }\n\n  // Execute the rule produced by the provided the `rules` function. This\n  // ofloads to one of the above matchers and consolidates the results. It is also\n  // responsible for executing any code triggered by the rule (in `rule.run`.)\n  expect(rules) {\n    L('Evaluating rules:', rules);\n    let result;\n    if (!rules) {\n      throw new X('Invalid Rule: ' + rules, rules);\n    }\n\n    // Get rule from Grammar class.\n    const rule = rules.bind(this.grammar)();\n\n    if (rule.token) {\n      // Base case: parse the regex and throw an error if the\n      // line doesn't match.\n      result = this.matchToken(rule.token, (rule.noSpace === true));\n      if (result.success) {\n        // Token match! Update position and throw away parsed portion\n        // of string.\n        this.pos += result.incrementPos;\n      }\n    } else if (rule.expect) {\n      if (rule.oneOrMore) {\n        result = this.expectOneOrMore(rule);\n      } else if (rule.zeroOrMore) {\n        result = this.expectZeroOrMore(rule);\n      } else {\n        result = this.expectOne(rule);\n      }\n    } else {\n      throw new X('Bad grammar! No `token` or `expect` property', rule);\n    }\n\n    // If there's a trigger attached to this rule, then pull it.\n    result.matches = [];\n    if (result.results) result.results.forEach(r => result.matches.push(flattenMatches(r)));\n    if (rule.run && result.success) rule.run(result);\n    return result;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/parser.js\n **/"],"sourceRoot":""}