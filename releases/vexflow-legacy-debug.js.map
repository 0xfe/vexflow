{"version":3,"sources":["webpack://Vex/webpack/universalModuleDefinition","webpack://Vex/webpack/bootstrap","webpack://Vex/./src/vex.js","webpack://Vex/./src/fraction.js","webpack://Vex/./src/registry.js","webpack://Vex/./src/element.js","webpack://Vex/./src/boundingboxcomputation.js","webpack://Vex/./src/boundingbox.js","webpack://Vex/./src/fonts/vexflow_font.js","webpack://Vex/./src/glyph.js","webpack://Vex/./src/tables.js","webpack://Vex/./src/canvascontext.js","webpack://Vex/./src/raphaelcontext.js","webpack://Vex/./src/svgcontext.js","webpack://Vex/./src/renderer.js","webpack://Vex/./src/stem.js","webpack://Vex/./src/tuplet.js","webpack://Vex/./src/beam.js","webpack://Vex/./src/voice.js","webpack://Vex/./src/staveconnector.js","webpack://Vex/./src/tickable.js","webpack://Vex/./src/note.js","webpack://Vex/./src/notehead.js","webpack://Vex/./src/stemmablenote.js","webpack://Vex/./src/modifier.js","webpack://Vex/./src/dot.js","webpack://Vex/./src/stavenote.js","webpack://Vex/./src/frethandfinger.js","webpack://Vex/./src/music.js","webpack://Vex/./src/accidental.js","webpack://Vex/./src/notesubgroup.js","webpack://Vex/./src/stavetie.js","webpack://Vex/./src/tabtie.js","webpack://Vex/./src/gracenotegroup.js","webpack://Vex/./src/strokes.js","webpack://Vex/./src/stringnumber.js","webpack://Vex/./src/articulation.js","webpack://Vex/./src/tickcontext.js","webpack://Vex/./src/ornament.js","webpack://Vex/./src/annotation.js","webpack://Vex/./src/bend.js","webpack://Vex/./src/vibrato.js","webpack://Vex/./src/modifiercontext.js","webpack://Vex/./src/formatter.js","webpack://Vex/./src/stavemodifier.js","webpack://Vex/./src/stavebarline.js","webpack://Vex/./src/staverepetition.js","webpack://Vex/./src/stavesection.js","webpack://Vex/./src/stavetempo.js","webpack://Vex/./src/textnote.js","webpack://Vex/./src/stavetext.js","webpack://Vex/./src/clef.js","webpack://Vex/./src/keysignature.js","webpack://Vex/./src/timesignature.js","webpack://Vex/./src/stavevolta.js","webpack://Vex/./src/stave.js","webpack://Vex/./src/tabstave.js","webpack://Vex/./src/tabnote.js","webpack://Vex/./src/vibratobracket.js","webpack://Vex/./src/multimeasurerest.js","webpack://Vex/./src/clefnote.js","webpack://Vex/./src/keysignote.js","webpack://Vex/./src/timesignote.js","webpack://Vex/./src/tabslide.js","webpack://Vex/./src/gracenote.js","webpack://Vex/./src/gracetabnote.js","webpack://Vex/./src/tuning.js","webpack://Vex/./src/keymanager.js","webpack://Vex/./src/stavehairpin.js","webpack://Vex/./src/curve.js","webpack://Vex/./src/textdynamics.js","webpack://Vex/./src/staveline.js","webpack://Vex/./src/pedalmarking.js","webpack://Vex/./src/textbracket.js","webpack://Vex/./src/barnote.js","webpack://Vex/./src/ghostnote.js","webpack://Vex/./src/tremolo.js","webpack://Vex/./src/crescendo.js","webpack://Vex/./src/parser.js","webpack://Vex/./src/easyscore.js","webpack://Vex/./src/factory.js","webpack://Vex/./src/system.js","webpack://Vex/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Vex","L","block","args","line","Array","slice","join","console","log","MakeException","_Error","exception","message","data","_this","this","_wrapNativeSuper","Error","RuntimeError","code","toString","RERR","Merge","destination","source","Min","Math","min","Max","max","forEach","a","fn","length","RoundN","x","parseInt","MidLine","b","mid_line","SortAndUnique","arr","cmp","eq","last","newArr","sort","push","Contains","obj","getCanvasContext","canvas_sel","canvas","document","getElementById","getContext","drawDot","ctx","y","color","save","setFillStyle","beginPath","arc","PI","closePath","fill","restore","BM","f","start_time","Date","getTime","elapsed","StackTrace","stack","W","_len","arguments","_key","Prefix","text","prefix","Fraction","numerator","denominator","set","GCD","LCM","LCMM","arg0","shift","_proto","undefined","simplify","u","gcd","add","param1","param2","otherNumerator","otherDenominator","lcm","subtract","multiply","divide","equals","compare","__compareA","copy","__compareB","greaterThan","greaterThanEquals","lessThan","lessThanEquals","clone","quotient","floor","fraction","abs","toSimplifiedString","__tmp","toMixedString","q","parse","str","split","X","setIndexValue","index","id","elem","Registry","clear","enableDefaultRegistry","registry","defaultRegistry","getDefaultRegistry","disableDefaultRegistry","type","class","updateIndex","_ref","oldValue","getAttribute","register","setAttribute","INDEXES","onRegister","getElementsByAttribute","attrName","keys","map","getElementsByType","getElementsByClass","className","onUpdate","_ref2","array","filter","includes","concat","Element","_temp","attrs","newID","el","classes","boundingBox","context","rendered","ID","setStyle","style","getStyle","applyStyle","shadowColor","setShadowColor","shadowBlur","setShadowBlur","fillStyle","strokeStyle","setStrokeStyle","lineWidth","setLineWidth","restoreStyle","hasClass","addClass","removeClass","isRendered","setRendered","getAttributes","setContext","getBoundingBox","checkContext","BoundingBoxComputation","x1","y1","x2","y2","Number","NaN","addPoint","width","height","isNaN","addX","addY","addQuadraticCurve","p0x","p0y","p1x","p1y","p2x","p2y","cp1x","cp1y","cp2x","cp2y","addBezierCurve","p3x","p3y","p0","p1","p2","p3","pow","b2ac","t1","sqrt","t2","BoundingBox","w","h","that","getX","getY","getW","getH","setX","setY","setW","setH","move","mergeWith","new_x","new_y","new_w","new_h","draw","rect","stroke","Font","glyphs","v0","x_min","x_max","ha","v1","v2","v3","v4","v5","v6","v7","v8","v9","va","vb","vc","vf","v10","v11","v18","v1b","v1d","v1e","v1f","v20","v22","v23","v25","v26","v27","v28","v29","v2a","v2c","v2d","v2f","v30","v31","v33","v34","v36","v38","v39","v3b","v3c","v3e","v3f","v40","v41","v42","v43","v44","v45","v46","v47","v49","v4a","v4b","v4d","v4e","v51","v52","v53","v54","v55","v58","v59","v5a","v5b","v5c","v5d","v60","v62","v68","v6c","v6d","v6f","v70","v72","v74","v75","v78","v79","v7a","v7c","v7d","v7f","v80","v81","v83","v84","v86","v8a","v8b","v8c","v8d","v8f","v90","v92","v93","v94","v95","v97","v9a","v9b","v9c","v9e","va3","va5","va9","vaa","vab","vad","vb1","vb3","vb4","vb6","vb7","vb9","vba","vbf","vc3","vd0","vd1","vd2","vd3","vd4","vd5","cssFontWeight","ascender","underlinePosition","cssFontStyle","yMin","xMin","yMax","xMax","resolution","descender","familyName","lineHeight","underlineThickness","processOutline","outline","originX","originY","scaleX","scaleY","outlineFns","command","nextX","nextY","Glyph","_Element","point","options","cache","font","metrics","x_shift","y_shift","originShift","setOptions","reset","loadMetrics","glyph","cached_outline","renderGlyph","x_pos","y_pos","val","nocache","scale","renderOutline","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","getOutlineBoundingBox","bboxComp","setPoint","setStave","stave","setXShift","setYShift","bbox","getMetrics","setOriginX","xShift","setOriginY","yShift","setOrigin","render","renderToStave","getYForGlyphs","Flow","STEM_WIDTH","STEM_HEIGHT","STAVE_LINE_THICKNESS","RESOLUTION","DEFAULT_NOTATION_FONT_SCALE","DEFAULT_TABLATURE_FONT_SCALE","SLASH_NOTEHEAD_WIDTH","TEXT_HEIGHT_OFFSET_HACK","IsKerned","clefProperties","clef","props","values","treble","line_shift","bass","tenor","alto","soprano","percussion","mezzo-soprano","baritone-c","baritone-f","subbass","french","keyProperties","params","octave_shift","pieces","k","toUpperCase","note_values","octave","int_value","int_val","shift_right","glyph_name","note_glyph","accidental","displaced","C","CN","C#","C##","CB","CBB","D","DN","D#","D##","DB","DBB","E","EN","E#","E##","EB","EBB","F","FN","F#","F##","FB","FBB","G","GN","G#","G##","GB","GBB","A","AN","A#","A##","AB","ABB","B","BN","B#","B##","BB","BBB","R","rest","D0","D1","D2","D3","T0","stem_up_y_offset","stem_down_y_offset","T1","T2","T3","X0","X1","X2","X3","S1","S2","R1","R2","integerToNote","integer","noteValue","table","0","1","2","3","4","5","6","7","8","9","10","11","tabToGlyph","fret","shift_y","glyphMetrics","textWidth","getWidth","articulationCodes","artic","articulations","a.","between_lines","av","a>","a-","a^","a+","ao","ah","a@a","a@u","a|","am","a,","accidentalCodes","acc","accidentals","#","parenRightPaddingAdjustment","##","bb","{","}","db","bbs","++","+","+-","++-","bs","bss","accidentalColumnsTable","second_on_bottom","spaced_out_tetrachord","spaced_out_pentachord","very_spaced_out_pentachord","spaced_out_hexachord","very_spaced_out_hexachord","ornamentCodes","ornaments","mordent","mordent_inverted","turn","turn_inverted","tr","upprall","downprall","prallup","pralldown","upmordent","downmordent","lineprall","prallprall","keySignature","spec","keySpec","keySpecs","notes","accidentalList","acc_list","num","Am","Dm","Bb","Gm","Eb","Cm","Ab","Fm","Db","Bbm","Gb","Ebm","Cb","Abm","Em","Bm","F#m","C#m","G#m","D#m","A#m","unicode","sharp","String","fromCharCode","flat","natural","triangle","o-with-slash","degrees","circle","parseNoteDurationString","durationString","result","exec","duration","dots","parseNoteData","noteData","durationStringData","ticks","durationToTicks","currentTicks","sanitizeDuration","alias","durationAliases","durations","durationToFraction","durationToNumber","1/2","16","32","64","128","256","durationToGlyph","duration_codes","glyphTypeProperties","customGlyphTypeProperties","code_head","common","stem","stem_offset","flag","stem_up_extension","stem_down_extension","tabnote_stem_up_extension","tabnote_stem_down_extension","dot_shiftY","line_above","line_below","position","beam_count","code_flag_upstem","code_flag_downstem","smufl","to_code_points","bracketTop","bracketBottom","barlineTick","segno","coda","gClef","cClef","fClef","unpitchedPercussionClef1","6stringTabClef","timeSig0","timeSig1","timeSig2","timeSig3","timeSig4","timeSig5","timeSig6","timeSig7","timeSig8","timeSig9","timeSigCommon","timeSigCutCommon","noteheadDoubleWhole","noteheadWhole","noteheadHalf","noteheadBlack","noteheadXWhole","noteheadXHalf","noteheadXBlack","noteheadCircleX","noteheadTriangleUpWhole","noteheadTriangleUpHalf","noteheadTriangleUpBlack","noteheadDiamondWhole","noteheadDiamondHalf","noteheadDiamondBlack","augmentationDot","tremolo1","flag8thUp","flag8thDown","flag16thUp","flag16thDown","flag32ndUp","flag32ndDown","flag64thUp","flag64thDown","flag128thUp","flag128thDown","accidentalFlat","accidentalNatural","accidentalSharp","accidentalDoubleSharp","accidentalDoubleFlat","accidentalParensLeft","accidentalParensRight","accidentalQuarterToneFlatStein","accidentalThreeQuarterTonesFlatZimmermann","accidentalQuarterToneSharpStein","accidentalThreeQuarterTonesSharpStein","accidentalBuyukMucennebFlat","accidentalBakiyeFlat","accidentalKomaSharp","accidentalKucukMucennebSharp","accidentalKoron","accidentalSori","articAccentAbove","articAccentBelow","articTenutoAbove","articTenutoBelow","articStaccatoAbove","articStaccatoBelow","articStaccatissimoAbove","articMarcatoAbove","fermataAbove","fermataBelow","breathMarkComma","breathMarkUpbow","caesura","caesuraCurved","restMaxima","restDoubleWhole","restWhole","restHalf","restQuarter","rest8th","rest16th","rest32nd","rest64th","rest128th","dynamicPiano","dynamicMezzo","dynamicForte","dynamicRinforzando","dynamicSforzando","dynamicZ","ornamentTrill","ornamentTurn","ornamentTurnSlash","ornamentMordent","ornamentMordentInverted","ornamentTremblement","ornamentPrecompAppoggTrill","ornamentPrecompSlideTrillDAnglebert","ornamentPrecompSlideTrillBach","ornamentPrecompTrillSuffixDandrieu","ornamentPrecompDoubleCadenceUpperPrefix","ornamentPrecompDoubleCadenceUpperPrefixTurn","ornamentPrecompTrillLowerSuffix","stringsDownBow","stringsUpBow","stringsHarmonic","pluckedSnapPizzicatoAbove","pluckedLeftHandPizzicato","keyboardPedalPed","keyboardPedalUp","pictChokeCymbal","wiggleArpeggiatoUp","arrowheadBlackUp","arrowheadBlackDown","TIME4_4","num_beats","beat_value","CanvasContext","vexFlowCanvasContext","WIDTH","HEIGHT","clearRect","openGroup","closeGroup","setFont","family","size","weight","setRawFont","setBackgroundFillStyle","background_fillStyle","blur","setLineCap","cap_type","lineCap","setLineDash","dash","lineDash","parseFloat","resize","fillRect","radius","startAngle","endAngle","antiClockwise","glow","measureText","fillText","RaphaelContext","element","paper","Raphael","path","pen","state","font_family","font_size","font_weight","attributes","stroke-width","background_attributes","shadow_attributes","state_stack","transform","setSize","setViewBox","viewBox","attr","normalizeAngle","angle","tmp","delta","arcHelper","cos","sin","largeArcFlag","sweepFlag","out","sa","num_paths","stroke-linejoin","stroke-linecap","toFixed","opacity","strokeWidth","txt","bounds","getBBox","remove","pop","attrNamesToIgnoreMap","fontAttrNamesToIgnore","font-family","font-weight","font-style","font-size","SVGContext","svgNS","svg","appendChild","groups","parent","stroke-dasharray","iePolyfill","svgElementType","createElementNS","cls","group","pointerBBox","navigator","ie","test","userAgent","bold","italic","indexOf","replace","fontAttributes","fontSize","fontArray","trim","match","applyAttributes","visibleWidth","visibleHeight","viewBoxString","attrNamesToIgnore","nodeName","propertyName","setAttributeNS","lastChild","removeChild","rectangle","peth","textContent","ieMeasureTextFix","widthCorrection","lastContext","Renderer","elementId","backend","Backends","CANVAS","bolsterCanvasContext","RAPHAEL","SVG","buildContext","background","renderer","getRaphaelContext","getSVGContext","USE_CANVAS_PROXY","methodName","drawDashedLine","fromX","fromY","toX","toY","dashPattern","dx","dy","atan2","idx","dashLength","nx","ny","VML","NONE","UP","DOWN","devicePixelRatio","Stem","x_begin","x_end","y_top","y_bottom","stem_extension","stem_direction","hide","isStemlet","stemletHeight","renderHeightAdjustment","setNoteHeadXBounds","setDirection","direction","setExtension","ext","getExtension","setYBounds","getCategory","CATEGORY","getHeight","y_offset","getExtents","isStemUp","ys","stemHeight","innerMostNoteheadY","apply","outerMostNoteheadY","topY","baseY","setVisibility","isVisible","setStemlet","stem_x","stem_y","DEBUG","stemletYOffset","Tuplet","num_notes","beats_occupied","beatsOccupiedDeprecationWarning","notes_occupied","bracketed","some","note","beam","ratioed","location","LOCATION_TOP","Formatter","AlignRestsToNotes","resolveGlyphs","attach","setTuplet","detach","resetTuplet","setBracketed","setRatioed","setTupletLocation","LOCATION_BOTTOM","getNotes","getNoteCount","msg","warn","getBeatsOccupied","getNotesOccupied","setBeatsOccupied","beats","setNotesOccupied","num_glyphs","denom_glyphs","getNestedTupletCount","first_note","maxTupletCount","countTuplets","minTupletCount","tupletStack","tuplet","tupletCount","getYPosition","nested_tuplet_y_offset","NESTING_OFFSET","getStave","getYForLine","top_y","getStemDirection","getStemExtents","bottom_y","_this2","last_note","getTieLeftX","getTieRightX","getStemX","addGlyphWidth","reduce","notation_start_x","line_width","x_offset","colon_x","colon_radius","calculateStemDirection","lineSum","keyProps","keyProp","Beam","auto_stem","getIntrinsicTicks","hasStem","memo","setStemDirection","setBeam","_assertThisInitialized","postFormatted","getBeamCount","break_on_indices","render_options","beam_width","max_slope","min_slope","slope_iterations","slope_cost","show_stemlets","stemlet_extension","partial_beam_length","flat_beams","min_flat_beam_offset","getDefaultBeamGroups","time_sig","2/2","3/2","4/2","1/4","2/4","3/4","4/4","1/8","2/8","3/8","4/8","1/16","2/16","3/16","4/16","beatTotal","beatValue","applyAndGetBeams","voice","generateBeams","getTickables","config","nextGroup","sanitizedGroups","tickGroups","currentTickGroup","noteGroups","currentGroup","nextTickGroup","unprocessedNote","shouldIgnoreTicks","ticksPerGroup","totalTicks","getTicks","unbeamable","tempGroup","isFirstOrLast","prevNote","breaksOnEachRest","beam_rests","isRest","breaksOnFirstOrLastRest","beam_middle_only","breakOnStemChange","maintain_stem_directions","prevDirection","isUnbeamableDuration","stemDirection","findFirstNote","applyStemDirection","uniqueTuplets","beamedNoteGroups","beamable","allTuplets","beams","secondary_breaks","secondary_break_ticks","flat_beam_offset","getGlyph","beamCount","breakSecondaryAt","indices","getSlopeY","first_x_px","first_y_px","slope","calculateSlope","_this$render_options","firstNote","initialSlope","lastNote","firstStemTipY","firstStemX","getStemSlope","increment","minCost","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","adjustedStemTipY","stemTipY","diff","idealSlope","cost","calculateFlatSlope","_this$render_options2","total","extremeY","extremeBeamCount","currentExtreme","getYs","offset","extremeTest","newOffset","getBeamYToDraw","beamY","applyStemExtensions","_this$render_options3","stemX","beamedStemTipY","preBeamExtension","getStem","beamExtension","totalBeamWidth","getBeamLines","beam_lines","beam_started","current_beam","previous_should_break","tick_tally","should_break","note_gets_beam","next_note","beam_next","end","start","last_beam","drawStems","drawBeamLines","valid_beam_durations","beamThickness","beamLines","j","beam_line","startBeamX","startBeamY","lastBeamX","lastBeamY","preFormat","postFormat","Voice","time","resolutionMultiplier","tickables","ticksUsed","smallestTickCount","largestTickWidth","Mode","STRICT","voiceGroup","SOFT","FULL","getTotalTicks","getTicksUsed","getLargestTickWidth","getSmallestTickCount","getMode","setMode","getResolutionMultiplier","getActualResolution","getVoiceGroup","setVoiceGroup","g","setStrict","strict","isComplete","addTickable","tickable","setVoice","addTickables","preFormatted","tickable_bb","drawBoldDoubleLine","topX","botY","StaveConnector","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","top_stave","bottom_stave","thickness","DOUBLE","texts","SINGLE_RIGHT","SINGLE_LEFT","SINGLE","BRACE","BRACKET","THIN_DOUBLE","singleRight","singleLeft","single","double","brace","bracket","boldDoubleLeft","boldDoubleRight","thinDouble","none","setType","typeString","setText","content","shift_x","getNumLines","attachment_height","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","text_width","getBottomLineY","Tickable","intrinsicTicks","tickMultiplier","tickContext","modifierContext","modifiers","align_center","center_x_shift","ignore_ticks","formatterMetrics","freedom","left","right","iterations","space","used","mean","deviation","getFormatterMetrics","getCenterXShift","isCenterAligned","setCenterAlignment","getVoice","getTuplet","noteCount","notesOccupied","splice","applyTickMultiplier","addToModifierContext","mc","addModifier","mod","getModifiers","setTickContext","tc","setIntrinsicTicks","getTickMultiplier","setDuration","Note","_Tickable","note_struct","initData","JSON","stringify","noteType","duration_override","positions","playNote","extraLeftPx","extraRightPx","left_modPx","right_modPx","annotation_spacing","stave_padding","STAVEPADDING","plotMetrics","yPos","xStart","getAbsoluteX","modLeftPx","xPre1","xAbs","xPost1","noteWidth","xPost2","xEnd","modRightPx","xFreedomRight","xWidth","round","getXShift","yy","spaceDeviation","getPlayNote","setPlayNote","addStroke","setNote","setIndex","setPreFormatted","setYs","getExtraLeftPx","getExtraRightPx","setExtraLeftPx","setExtraRightPx","getLineNumber","getLineForRest","getGlyphWidth","glyph_font_scale","getYForTopText","text_line","getTickContext","getDuration","isDotted","getDots","getNoteType","setModifierContext","modifier","getModifierStartXY","left_shift","right_shift","setWidth","getNoteStartX","extra","getExtraPx","NoteHead","_Note","head_options","note_type","StaveNote","STEM_UP","glyph_code","custom_glyph_code","custom_glyph","slashed","stroke_px","isDisplaced","getLine","setLine","displacementStemAdjustment","spacing","getSpacingBetweenLines","half_spacing","min_y","getYForNote","head_x","staveSpace","breve_lines","drawSlashNoteHead","StemmableNote","stemExtensionOverride","setStem","buildStem","buildFlag","shouldRenderFlag","flagCode","getStemLength","getStemExtension","getStemMinumumLength","getCenterGlyphX","setStemLength","textLine","extents","getYForBottomText","hasFlag","drawStem","stem_struct","Modifier","Position","LEFT","modifier_context","spacingFromNextModifier","RIGHT","ABOVE","BELOW","above","below","getNote","getIndex","getModifierContext","getPosition","setPosition","PositionString","setTextLine","setSpacingFromNextModifier","getSpacingFromNextModifier","alignSubNotesWithNote","subNotes","extraPx","subNoteXOffset","extraLeft","subNote","subTickContext","setXOffset","Dot","_Modifier","format","dot_list","max_shift_map","dot","getKeyProps","note_id","dot_shift","x_width","last_line","prev_dotted_space","half_shiftY","_dot_list$_i","setDotShiftY","lineSpace","spacing_between_lines_px","forceFlagRight","shiftRestVertical","dir","isrest","maxLine","minLine","setKeyLine","getKeyLine","_StemmableNote","noteStruct","use_default_head_x","note_heads","DEFAULT_LEDGER_LINE_OFFSET","calculateKeyProps","autoStem","formatByY","notesList","minL","stemMax","stemMin","maxL","voice_shift","getVoiceShiftWidth","is_displaced","voices","noteU","noteM","noteL","stemDelta","voiceXShift","lineSpacing","centerRest","hasStave","topNote","bottomNote","topKeys","bottomKeys","topNotBottomY","noteHeadStyles","noteHead","buildNoteHeads","head","calcExtraPx","step","getKeys","lastLine","lineDiff","noteProps","notehead","Infinity","_this$getMetrics","minY","maxY","halfLineSpacing","frac","isTopNote","resultLine","thisLine","isChord","_this$getNoteHeadBoun","getNoteHeadBounds","setNoteDisplaced","tieStartX","tieEndX","restLine","top","bot","_Modifier$Position","isInnerNoteIndex","setStemStyle","getStemStyle","setLedgerLineStyle","ledgerLineStyle","getLedgerLineStyle","setFlagStyle","flagStyle","getFlagStyle","setKeyStyle","mContext","addAccidental","addArticulation","articulation","addAnnotation","annotation","addDot","addDotToAll","getAccidentals","yTop","yBottom","nonDisplacedX","displacedX","highestLine","lowestLine","highestDisplacedLine","lowestDisplacedLine","highestNonDisplacedLine","lowestNonDisplacedLine","displaced_x","non_displaced_x","highest_line","lowest_line","highest_displaced_line","lowest_displaced_line","highest_non_displaced_line","lowest_non_displaced_line","getNoteHeadBeginX","getNoteHeadEndX","drawLedgerLines","doubleWidth","_this$getNoteHeadBoun2","min_x","drawLedgerLine","normal","ledgerWidth","_extends","drawModifiers","noteheadStyle","drawFlag","_this$getNoteHeadBoun3","noteStemHeight","flagX","flagY","drawNoteHeads","_this3","stemStruct","xBegin","shouldRenderStem","FretHandFinger","number","finger","nums","nums_list","prev_note","shiftLeft","shiftRight","pos","props_tmp","shiftL","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","num_shift","_nums_list$_i","numWidth","setFretHandFinger","setOffsetX","setOffsetY","dot_x","dot_y","Music","isValidNoteValue","NUM_TONES","isValidIntervalValue","interval","getNoteParts","noteString","toLowerCase","getKeyParts","keyString","getNoteValue","noteValues","getIntervalValue","intervalString","intervals","getCanonicalNoteName","canonical_notes","getCanonicalIntervalName","intervalValue","diatonic_intervals","getRelativeNoteValue","sum","getRelativeNoteName","parts","rootValue","multiplier","reverse_interval","relativeNoteName","getScaleTones","tones","nextNote","getIntervalBetween","note1","note2","difference","createScaleMap","keySigParts","scaleName","scaleTypes","keySigString","noteLocation","root_indices","scaleMap","roots","rootName","noteName","e","unison","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","b2","min2","S","H","maj2","T","b3","min3","maj3","#4","b5","aug4","#5","b6","aug5","maj6","m7","min7","dom7","maj7","major","dorian","mixolydian","minor","M","scales","root_index","cn","c#","c##","cb","cbb","dn","d#","d##","dbb","en","e#","e##","eb","ebb","f#","f##","fb","fbb","gn","g#","g##","gb","gbb","an","a#","a##","ab","abb","bn","b#","b##","bbb","Accidental","font_scale","parenLeftPadding","parenRightPadding","cautionary","parenLeft","parenRight","leftShift","accList","accLine","lineList","accShift","previousLine","flatLine","dblSharpLine","numAcc","totalColumns","_loop","_i3","noFurtherConflicts","groupStart","groupEnd","checkCollision","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","_getGroupLines$map","item","_i2","notColliding","_len2","indexPairs","_key2","every","lines","groupLength","endCase","groupMember","column","patternLength","collisionDetected","columnWidths","columnXOffsets","totalShift","accCount","lastAccOnLine","line1","line2","clearance","clearanceRequired","collision","applyAccidentals","tickPositions","tickNoteMap","tickPosition","notesAtPosition","music","tick","modifiedPitches","processNote","keyIndex","accidentalString","pitch","sameAccidental","previouslyModified","getGraceNotes","fontScale","parenWidth","setAsCautionary","accX","accY","NoteSubGroup","formatter","notesubgroup_assertThisInitialized","joinVoices","getMinTotalWidth","StaveTie","cp1","cp2","text_shift_x","first_x_shift","last_x_shift","tie_spacing","setNotes","first_indices","last_indices","isPartial","renderTie","first_ys","last_ys","last_x_px","cp_x","last_y_px","top_cp_y","bottom_cp_y","renderText","center_x","getTieStartX","getTieEndX","TabTie","_StaveTie","createHammeron","createPulloff","GraceNoteGroup","grace_notes","show_slur","slur","slur_y_shift","gracenotegroup_assertThisInitialized","gracenote_groups","group_list","gracenote_group","is_stavenote","formatWidth","group_shift","beamNotes","graceNote","TieClass","Stroke","all_voices","note_end","stroke_spacing","strokes","strokeList","_note$getKeyProps$str","getPositions","strokeShift","BRUSH_DOWN","BRUSH_UP","ROLL_DOWN","ROLL_UP","RASQUEDO_DOWN","RASQUEDO_UP","ARPEGGIO_DIRECTIONLESS","addEndNote","arrow","arrow_shift_x","arrow_y","text_y","line_space","Type","StringNumber","string_number","dashed","leg","LineEndType","shift_left","num_shiftR","x_widthL","x_widthR","num_width","setLineEndType","setStringNumber","setLastNote","setDashed","stem_ext","bottom","STEM_DOWN","len","pattern","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","ceil","isStaveNote","noteCategory","Articulation","getIncrement","top_text_line","maxWidth","articWidth","easyScoreHook","builder","articNameToCode","staccato","tenuto","articString","getFactory","_ABOVE$BELOW$position","canSitBetweenLines","staffSpace","isTab","shouldSitOutsideStaff","initialOffset","isOnStemTip","getInitialOffset","_note$getStemExtents","stemBaseY","getTopY","INITIAL_OFFSET","_note$getStemExtents2","getBottomY","offsetDirection","noteLine","articLine","snappedLine","snapLineToStaff","TickContext","currentTick","maxTicks","minTicks","padding","xBase","xOffset","notePx","tContexts","getNextContext","tContext","contexts","getXBase","setXBase","getXOffset","setPadding","getMaxTicks","getMinTicks","getCenterAlignedTickables","getCurrentTick","setCurrentTick","extraRight","Ornament","delayed","accidentalUpper","accidentalLower","accidentalLowerPadding","accidentalUpperPadding","ornament","setDelayed","setUpperAccidental","accid","setLowerAccidental","stemDir","stemExtents","isPlacedOnNoteheadSide","glyphYBetweenLines","glyphX","glyphY","delayXShift","nextContext","Annotation","justification","Justify","CENTER","vert_justification","VerticalJustify","TOP","annotations","CENTER_STEM","center","centerStem","BOTTOM","setVerticalJustification","just","VerticalJustifyString","getJustification","setJustification","JustifyString","text_height","has_stem","stem_base","yt","Bend","release","phrase","line_style","bend_width","release_width","updateWidth","bends","last_width","bend","getText","total_width","additional_width","draw_width","bend_height","annotation_y","renderRelease","renderArrowHead","render_x","cp_y","last_bend","last_drawn_width","Vibrato","harsh","vibrato_width","wave_height","wave_width","wave_girth","setVibratoWidth","vibratos","vibrato","setHarsh","vx","vy","renderVibrato","opts","num_waves","ModifierContext","PREFORMAT","POSTFORMAT","getState","formatted","extra_left_px","extra_right_px","lookAhead","nextRestLine","createContexts","ContextType","addToContext","tickToContextMap","tickList","integerTicks","newContext","list","minTotalWidth","hasMinTotalWidth","tickContexts","modiferContexts","contextGaps","gaps","SimpleFormat","_ref$paddingBetween","paddingBetween","plotDebugging","xPos","gap","lossHistory","loss","FormatAndDraw","auto_beam","align_rests","formatToStave","FormatAndDrawTab","tabstave","tabnotes","autobeam","notevoice","tabvoice","alignAllNotes","alignTuplets","alignRests","preCalculateMinTotalWidth","createTickContexts","_this$tickContexts","contextList","contextMap","createModifierContexts","justifyWidth","renderingContext","centerX","leftoverPxPerTick","spaceAccum","prevTick","evaluate","prevContext","prevMetrics","insideRightEdge","insideLeftEdge","durationStats","leftNoteEdge","rightNote","rightMetrics","stats","count","updateStats","totalDeviation","totalCost","tune","current","prev","next","minShift","postFormatContexts","getNoteEndX","StaveModifier","layoutMetrics","BEGIN","END","makeSpacer","placeGlyphOnLine","getPadding","setLayoutMetrics","getLayoutMetrics","Barline","_StaveModifier","TYPE","widths","REPEAT_BEGIN","REPEAT_END","REPEAT_BOTH","paddings","layoutMetricsMap","paddingLeft","paddingRight","repeatBegin","repeatEnd","repeatBoth","getType","drawVerticalBar","drawVerticalEndBar","drawRepeatBar","double_bar","getTopLineTopY","getBottomLineBottomY","begin","dot_radius","Repetition","symbol_type","CODA_LEFT","CODA_RIGHT","SEGNO_LEFT","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","setShiftX","setShiftY","drawCodaFixed","drawSymbolText","drawSignoFixed","num_lines","draw_coda","text_x","symbol_x","vertical_bar_width","StaveSection","section","setStaveSection","StaveTempo","tempo","setTempo","bpm","stem_height","TextNote","text_struct","superscript","subscript","glyph_type","struct","GLYPHS","glyph_struct","smooth","Justification","mordent_upper","mordent_lower","z","pedal_open","pedal_close","caesura_straight","caesura_curved","breath","StaveText","setStaveText","Clef","tab","default","small","8va","sizes","attachments","8vb","types","anno_dict","attachment","glyphScale","glyphOffset","numLines","getOptions","KeySignature","cancelKeySpec","alterKeySpec","setKeySig","glyphFontScale","xPositions","paddingForced","convertToGlyph","nextAcc","accGlyphData","extraWidth","accidentalSpacing","xPosition","glyphWidth","cancelKey","convertToCancelAccList","cancel_accList","different_types","naturals","cancelled","addToStave","convertAccLines","customLines","alterKey","convertToAlterAccList","firstAccidentalType","TimeSignature","timeSpec","customPadding","validate_args","timesignature_assertThisInitialized","topLine","bottomLine","setTimeSig","timeSig","C|","parseTimeSpec","_TimeSignature$glyphs","numbers","assertIsValidFraction","_timeSpec$split$map","topDigits","botDigits","makeTimeSignatureGlyph","topGlyphs","botGlyphs","topWidth","topGlyph","botWidth","botGlyph","topStartX","botStartX","start_x","getTimeSig","Volta","volta","MID","BEGIN_END","vert_height","Stave","end_x","measure","glyph_spacing_px","fill_style","left_bar","right_bar","space_above_staff_ln","space_below_staff_ln","top_text_position","resetLines","BARTYPE","addEndModifier","line_config","visible","bottom_text_position","setNoteStartX","setNumLines","stave_extends","setMeasure","getModifierXShift","begBarline","setRepetitionTypeLeft","setRepetitionTypeRight","setVoltaType","number_t","setSection","headroom","getLineForY","setBegBarType","_Barline$type","setEndBarType","setClef","clefSpec","clefs","addClef","setEndClef","setKeySignature","keySignatures","addKeySignature","setEndKeySignature","setTimeSignature","timeSignatures","addTimeSignature","setEndTimeSignature","addEndClef","addEndTimeSignature","addTrebleGlyph","category","sortByCategory","items","order","temp","endBarline","begModifiers","endModifiers","barlines","keysignatures","timesignatures","lastBarlineIdx","drawVertical","isDouble","drawVerticalFixed","top_line","bottom_line","drawVerticalBarFixed","getConfigForLines","setConfigForLine","line_number","setConfigForLines","lines_configuration","TabStave","_Stave","tab_options","addTabGlyph","TabNote","tab_struct","draw_stem","ghost","draw_dots","draw_stem_through_stave","setGhost","stem_extension_override","getStemY","stemDownLine","stemStartLine","shouldDrawFlag","flag_x","flag_y","flag_code","_this4","drawStemThrough","stem_through","stem_lines","unused_strings","up_stem","down_stem","line_spacing","total_lines","strings","containsLastString","containsFirstString","line_ys","string","isTopBound","isBottomBound","getPartialStemLines","strings_used","getUnusedStringGroups","drawPositions","tab_x","render_stem","semibrave_rest","VibratoBracket","bracket_data","stop","stop_x","MultiMeasureRest","number_of_measures","show_number","number_line","number_glyph_point","padding_left","padding_right","line_thickness","serif_thickness","use_symbols","symbol_spacing","semibrave_rest_glyph_scale","xs","getXs","drawLine","sbl","serif","lineThicknessHalf","drawSymbols","n4","n2","n1","get_semibrave_rest","semibrave_rest_width","yMiddle","ClefNote","clef_obj","getClef","abs_x","KeySigNote","TimeSigNote","timeSignature","TabSlide","_TabTie","first_fret","last_fret","SLIDE_DOWN","SLIDE_UP","slide_direction","createSlideUp","createSlideDown","slide_y","GraceNote","_StaveNote","gracenote_extends","SCALE","LEDGER_LINE_OFFSET","slash","ret","staveNoteScale","getStaveNoteScale","offsetScale","slashBBox","calcBeamedNotesSlashBBox","noteHeadBounds","defaultStemExtention","defaultOffsetY","offsets","slashStemOffset","slashBeamOffset","protrusions","beam_slope","beam_angle","atan","iPointOnBeam","slash_angle","protrusion_stem_dx","protrusion_stem_dy","protrusion_beam_dx","protrusion_beam_dy","stem0X","stemY","GraceTabNote","_TabNote","Tuning","tuningString","setTuning","standard","dagdad","dropd","standardBanjo","noteToInteger","names","tuningValues","numStrings","getValueForString","stringNum","getValueForFret","fretNum","stringValue","getNoteForFret","KeyManager","setKey","getKey","keyParts","scaleMapByValue","originalScaleMapByValue","getAccidental","selectNote","scaleNote","modparts","change","valueNote","originalValueNote","StaveHairpin","hairpin","left_shift_px","right_shift_px","FormatByTicksAndDraw","ppt","pixelsPerTick","l_shift_px","left_shift_ticks","r_shift_px","right_shift_ticks","hairpin_options","setRenderOptions","CRESC","DECRESC","renderHairpin","dis","first_y","staff_height","l_shift","r_shift","last_x","first_x","last_y","Curve","from","to","NEAR_HEAD","position_end","invert","cps","NEAR_TOP","nearHead","nearTop","renderCurve","cp_spacing","metric","end_metric","TextDynamics","sequence","glyph_font_size","letter","glyph_data","letter_x","current_letter","drawArrowHead","x0","y0","StaveLine","line_dash","rounded_end","draw_start_arrow","draw_end_arrow","arrowhead_length","arrowhead_angle","text_position_vertical","TextVerticalPosition","text_justification","TextJustification","applyLineStyle","applyFontStyle","start_position","end_position","first_index","last_index","upwards_slope","notehead_width","point1","point2","end_y","start_y","both_arrows","distance","ratio","angle1","angle2","top_x","line_angle","drawArrowLine","vertical_position","drawPedalGlyph","PedalMarking","TEXT","custom_depress_text","custom_release_text","bracket_height","text_margin_right","bracket_line_width","glyph_point_size","createSustain","createSostenuto","pedal","Styles","MIXED","setCustomText","createUnaCorda","pedal_depress","pedal_release","mixed","depress","drawBracketed","prev_x","prev_y","is_pedal_depressed","next_is_same","prev_is_same","drawText","TextBracket","_ref$text","_ref$superscript","_ref$position","Positions","show_bracket","underline_superscript","textbracket_extends","main_width","main_height","super_y","superscript_width","super_height","line_y","BarNote","_this$metrics$widths","barline","GhostNote","parameter","Tremolo","y_spacing","YOFFSETSTEMDOWN","YOFFSETSTEMUP","XOFFSETSTEMDOWN","XOFFSETSTEMUP","Crescendo","decrescendo","extend_left","extend_right","setHeight","setDecrescendo","decresc","tick_context","next_context","begin_x","half_height","reverse","Parser","flattenMatches","results","matchedString","grammar","errorPos","expect","matchFail","returnPos","matchSuccess","matchToken","token","noSpace","regexp","RegExp","success","incrementPos","expectOne","rule","maybe","allMatches","oneMatch","localPos","or","gotOne","numMatches","expectOneOrMore","more","expectZeroOrMore","rules","oneOrMore","zeroOrMore","matches","run","EasyScore","Grammar","LINE","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","commitPiece","COMMA","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","LPAREN","NOTES","RPAREN","addChord","NOTE","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","ACCIDENTALS","DOT","setNoteDots","_this5","SLASH","MAYBESLASH","TYPES","setNoteType","_this6","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","_this7","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","Builder","commitHooks","elements","rollingDuration","resetPiece","easyscore_extends","getElements","addCommitHook","commitHook","piece","chord","addNote","_this8","_this9","_this$piece","accids","setId","setClass","defaults","_proto3","_this10","throwOnError","parser","voiceOptions","setDefaults","default_options","factory_extends","Factory","face","newFromElementId","renderQ","systems","staves","_arr","_i","initRenderer","_this$options$rendere","getVoices","ghostNote","textNoteStruct","textNote","barNote","clefNote","timeSigNote","keySigNote","vJustify","hJustify","fontFamily","fontWeight","Fingering","fingering","stringNumber","multimeasurerest","connector","secondaryBeamBreaks","curve","tie","vibratoBracket","textBracket","System","system","StylesString","system_extends","spaceBetweenStaves","debugFormatter","formatIterations","addConnector","addStave","spaceAbove","spaceBelow","debugNoteMetrics","startX","allVoices","debugNoteMetricsYs","part","lastY"],"mappings":"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","file":"vexflow-legacy-debug.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements utility methods used by the rest of the VexFlow\n// codebase.\n//\n\nconst Vex = () => {};\n\n// Default log function sends all arguments to console.\nVex.L = (block, args) => {\n  if (!args) return;\n  const line = Array.prototype.slice.call(args).join(' ');\n  window.console.log(block + ': ' + line);\n};\n\nVex.MakeException = (name) => {\n  const exception = class extends Error {\n    constructor(message, data) {\n      super(message);\n      this.name = name;\n      this.message = message;\n      this.data = data;\n    }\n  };\n\n  return exception;\n};\n\n// Default runtime exception.\nclass RuntimeError {\n  constructor(code, message) {\n    this.code = code;\n    this.message = message;\n  }\n\n  toString() {\n    return '[RuntimeError] ' + this.code + ':' + this.message;\n  }\n}\n\n// Shortcut method for `RuntimeError`.\nVex.RuntimeError = RuntimeError;\nVex.RERR = Vex.RuntimeError;\n\n// Merge `destination` hash with `source` hash, overwriting like keys\n// in `source` if necessary.\nVex.Merge = (destination, source) => {\n  for (const property in source) { // eslint-disable-line guard-for-in\n    destination[property] = source[property];\n  }\n  return destination;\n};\n\n// DEPRECATED. Use `Math.*`.\nVex.Min = Math.min;\nVex.Max = Math.max;\nVex.forEach = (a, fn) => {\n  for (let i = 0; i < a.length; i++) {\n    fn(a[i], i);\n  }\n};\n\n// Round number to nearest fractional value (`.5`, `.25`, etc.)\nVex.RoundN = (x, n) =>\n  (x % n) >= (n / 2)\n    ? parseInt(x / n, 10) * n + n\n    : parseInt(x / n, 10) * n;\n\n// Locate the mid point between stave lines. Returns a fractional line if a space.\nVex.MidLine = (a, b) => {\n  let mid_line = b + (a - b) / 2;\n  if (mid_line % 2 > 0) {\n    mid_line = Vex.RoundN(mid_line * 10, 5) / 10;\n  }\n  return mid_line;\n};\n\n// Take `arr` and return a new list consisting of the sorted, unique,\n// contents of arr. Does not modify `arr`.\nVex.SortAndUnique = (arr, cmp, eq) => {\n  if (arr.length > 1) {\n    const newArr = [];\n    let last;\n    arr.sort(cmp);\n\n    for (let i = 0; i < arr.length; ++i) {\n      if (i === 0 || !eq(arr[i], last)) {\n        newArr.push(arr[i]);\n      }\n      last = arr[i];\n    }\n\n    return newArr;\n  } else {\n    return arr;\n  }\n};\n\n// Check if array `a` contains `obj`.\nVex.Contains = (a, obj) => {\n  let i = a.length;\n  while (i--) {\n    if (a[i] === obj) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Get the 2D Canvas context from DOM element `canvas_sel`.\nVex.getCanvasContext = canvas_sel => {\n  if (!canvas_sel) {\n    throw new Vex.RERR('BadArgument', 'Invalid canvas selector: ' + canvas_sel);\n  }\n\n  const canvas = document.getElementById(canvas_sel);\n  if (!(canvas && canvas.getContext)) {\n    throw new Vex.RERR(\n      'UnsupportedBrowserError', 'This browser does not support HTML5 Canvas'\n    );\n  }\n\n  return canvas.getContext('2d');\n};\n\n// Draw a tiny dot marker on the specified canvas. A great debugging aid.\n//\n// `ctx`: Canvas context.\n// `x`, `y`: Dot coordinates.\nVex.drawDot = (ctx, x, y, color = '#55') => {\n  ctx.save();\n  ctx.setFillStyle(color);\n\n  // draw a circle\n  ctx.beginPath();\n  ctx.arc(x, y, 3, 0, Math.PI * 2, true);\n  ctx.closePath();\n  ctx.fill();\n  ctx.restore();\n};\n\n// Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds.\nVex.BM = (s, f) => {\n  const start_time = new Date().getTime();\n  f();\n  const elapsed = new Date().getTime() - start_time;\n  Vex.L(s + elapsed + 'ms');\n};\n\n// Get stack trace.\nVex.StackTrace = () => {\n  const err = new Error();\n  return err.stack;\n};\n\n// Dump warning to console.\nVex.W = (...args) => {\n  const line = args.join(' ');\n  window.console.log('Warning: ', line, Vex.StackTrace());\n};\n\n// Used by various classes (e.g., SVGContext) to provide a\n// unique prefix to element names (or other keys in shared namespaces).\nVex.Prefix = text => Vex.Prefix.prefix + text;\nVex.Prefix.prefix = 'vf-';\n\nexport { Vex };\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Fraction class that represents a rational number\n//\n// @author zz85\n// @author incompleteopus (modifications)\n\n/* eslint-disable no-underscore-dangle */\n\nimport { Vex } from './vex';\nexport class Fraction {\n  /**\n   * GCD: Find greatest common divisor using Euclidean algorithm\n   */\n  static GCD(a, b) {\n    if (typeof a !== 'number' || typeof b !== 'number') {\n      throw new Vex.RERR('BadArgument', `Invalid numbers: ${a}, ${b}`);\n    }\n\n    let t;\n\n    while (b !== 0) {\n      t = b;\n      b = a % b;\n      a = t;\n    }\n\n    return a;\n  }\n\n  /**\n   * LCM: Lowest common multiple\n   */\n  static LCM(a, b) {\n    return ((a * b) / Fraction.GCD(a, b));\n  }\n\n  /**\n   * LCMM: Lowest common multiple for more than two numbers\n   */\n  static LCMM(args) {\n    if (args.length === 0) {\n      return 0;\n    } else if (args.length === 1) {\n      return args[0];\n    } else if (args.length === 2) {\n      return Fraction.LCM(args[0], args[1]);\n    } else {\n      const arg0 = args[0];\n      args.shift();\n      return Fraction.LCM(arg0, Fraction.LCMM(args));\n    }\n  }\n\n  constructor(numerator, denominator) {\n    this.set(numerator, denominator);\n  }\n  set(numerator, denominator) {\n    this.numerator = numerator === undefined ? 1 : numerator;\n    this.denominator = denominator === undefined ? 1 : denominator;\n    return this;\n  }\n  value() {\n    return this.numerator / this.denominator;\n  }\n  simplify() {\n    let u = this.numerator;\n    let d = this.denominator;\n\n    const gcd = Fraction.GCD(u, d);\n    u /= gcd;\n    d /= gcd;\n\n    if (d < 0) {\n      d = -d;\n      u = -u;\n    }\n    return this.set(u, d);\n  }\n  add(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 0;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n\n    const u = this.numerator * a + otherNumerator * b;\n    return this.set(u, lcm);\n  }\n  subtract(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 0;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n\n    const u = this.numerator * a - otherNumerator * b;\n    return this.set(u, lcm);\n  }\n  multiply(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 1;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n  }\n  divide(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 1;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n  }\n\n  // Simplifies both sides and checks if they are equal.\n  equals(compare) {\n    const a = Fraction.__compareA.copy(compare).simplify();\n    const b = Fraction.__compareB.copy(this).simplify();\n\n    return (a.numerator === b.numerator) && (a.denominator === b.denominator);\n  }\n\n  // Greater than operator.\n  greaterThan(compare) {\n    const a = Fraction.__compareB.copy(this);\n    a.subtract(compare);\n    return (a.numerator > 0);\n  }\n\n  // Greater than or equals operator.\n  greaterThanEquals(compare) {\n    const a = Fraction.__compareB.copy(this);\n    a.subtract(compare);\n    return (a.numerator >= 0);\n  }\n\n  // Less than operator.\n  lessThan(compare) {\n    return !(this.greaterThanEquals(compare));\n  }\n\n  // Less than or equals operator.\n  lessThanEquals(compare) {\n    return !(this.greaterThan(compare));\n  }\n\n  // Creates a new copy with this current values.\n  clone() {\n    return new Fraction(this.numerator, this.denominator);\n  }\n\n  // Copies value of another Fraction into itself.\n  copy(copy) {\n    if (typeof copy === 'number') {\n      return this.set(copy || 0, 1);\n    }\n    return this.set(copy.numerator, copy.denominator);\n  }\n\n  // Returns the integer component eg. (4/2) == 2\n  quotient() {\n    return Math.floor(this.numerator / this.denominator);\n  }\n\n  // Returns the fraction component when reduced to a mixed number\n  fraction() {\n    return this.numerator % this.denominator;\n  }\n\n  // Returns the absolute value\n  abs() {\n    this.denominator = Math.abs(this.denominator);\n    this.numerator = Math.abs(this.numerator);\n    return this;\n  }\n\n  // Returns a raw string representation\n  toString() {\n    return this.numerator + '/' + this.denominator;\n  }\n\n  // Returns a simplified string respresentation\n  toSimplifiedString() {\n    return Fraction.__tmp.copy(this).simplify().toString();\n  }\n\n  // Returns string representation in mixed form\n  toMixedString() {\n    let s = '';\n    const q = this.quotient();\n    const f = Fraction.__tmp.copy(this);\n\n    if (q < 0) {\n      f.abs().fraction();\n    } else {\n      f.fraction();\n    }\n\n    if (q !== 0) {\n      s += q;\n\n      if (f.numerator !== 0) {\n        s += ' ' + f.toSimplifiedString();\n      }\n    } else {\n      if (f.numerator === 0) {\n        s = '0';\n      } else {\n        s = f.toSimplifiedString();\n      }\n    }\n\n    return s;\n  }\n\n  // Parses a fraction string\n  parse(str) {\n    const i = str.split('/');\n    const n = parseInt(i[0], 10);\n    const d = (i[1]) ? parseInt(i[1], 10) : 1;\n\n    return this.set(n, d);\n  }\n}\n\n// Temporary cached objects\nFraction.__compareA = new Fraction();\nFraction.__compareB = new Fraction();\nFraction.__tmp = new Fraction();\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a registry for VexFlow elements. It allows users\n// to track, query, and manage some subset of generated elements, and\n// dynamically get and set attributes.\n//\n// There are two ways to regiser with a registry:\n//\n// 1) Explicitly call `element.register(registry)`, or,\n// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n//    elements will automatically register with it.\n//\n// Once an element is registered, selected attributes are tracked and indexed by\n// the registry. This allows fast look up of elements by attributes like id, type,\n// and class.\n\nimport { Vex } from './vex';\n\nexport const X = Vex.MakeException('RegistryError');\n\nfunction setIndexValue(index, name, value, id, elem) {\n  if (!index[name][value]) index[name][value] = {};\n  index[name][value][id] = elem;\n}\n\nexport class Registry {\n  static get INDEXES() { return ['type']; }\n\n  constructor() {\n    this.clear();\n  }\n\n  // If you call `enableDefaultRegistry`, any new elements will auto-register with\n  // the provided registry as soon as they're constructed.\n  static enableDefaultRegistry(registry) {\n    Registry.defaultRegistry = registry;\n  }\n\n  static getDefaultRegistry() {\n    return Registry.defaultRegistry;\n  }\n\n  static disableDefaultRegistry() {\n    Registry.defaultRegistry = null;\n  }\n\n  clear() {\n    // Indexes are represented as maps of maps (of maps). This allows\n    // for both multi-labeling (e.g., an element can have multiple classes)\n    // and efficient lookup.\n    this.index = {\n      id: {},\n      type: {},\n      class: {},\n    };\n    return this;\n  }\n\n  // Updates the indexes for element 'id'. If an element's attribute changes\n  // from A -> B, make sure to remove the element from A.\n  updateIndex({ id, name, value, oldValue }) {\n    const elem = this.getElementById(id);\n    if (oldValue !== null && this.index[name][oldValue]) {\n      delete this.index[name][oldValue][id];\n    }\n    if (value !== null) {\n      setIndexValue(this.index, name, value, elem.getAttribute('id'), elem);\n    }\n  }\n\n  // Register element `elem` with this registry. This adds the element to its index and watches\n  // it for attribute changes.\n  register(elem, id) {\n    id = id || elem.getAttribute('id');\n\n    if (!id) {\n      throw new X('Can\\'t add element without `id` attribute to registry', elem);\n    }\n\n    // Manually add id to index, then update other indexes.\n    elem.setAttribute('id', id);\n    setIndexValue(this.index, 'id', id, id, elem);\n    Registry.INDEXES.forEach(name => {\n      this.updateIndex({ id, name, value: elem.getAttribute(name), oldValue: null });\n    });\n    elem.onRegister(this);\n    return this;\n  }\n\n  getElementById(id) {\n    return this.index.id[id] ? this.index.id[id][id] : null;\n  }\n\n  getElementsByAttribute(attrName, value) {\n    const index = this.index[attrName];\n    if (index && index[value]) {\n      return Object.keys(index[value]).map(i => index[value][i]);\n    } else {\n      return [];\n    }\n  }\n\n  getElementsByType(type) { return this.getElementsByAttribute('type', type); }\n  getElementsByClass(className) { return this.getElementsByAttribute('class', className); }\n\n  // This is called by the element when an attribute value changes. If an indexed\n  // attribute changes, then update the local index.\n  onUpdate({ id, name, value, oldValue }) {\n    function includes(array, value) {\n      return array.filter(x => x === value).length > 0;\n    }\n\n    if (!includes(Registry.INDEXES.concat(['id', 'class']), name)) return this;\n    this.updateIndex({ id, name, value, oldValue });\n    return this;\n  }\n}\n\nRegistry.defaultRegistry = null;\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a generic base class for VexFlow, with implementations\n// of general functions and properties that can be inherited by all VexFlow elements.\n\nimport { Vex } from './vex';\nimport { Registry } from './registry';\n\nexport class Element {\n  static newID() { return 'auto' + (Element.ID++); }\n\n  constructor({ type } = {}) {\n    this.attrs = {\n      id: Element.newID(),\n      el: null,\n      type: type || 'Base',\n      classes: {},\n    };\n\n    this.boundingBox = null;\n    this.context = null;\n    this.rendered = false;\n\n    // If a default registry exist, then register with it right away.\n    if (Registry.getDefaultRegistry()) {\n      Registry.getDefaultRegistry().register(this);\n    }\n  }\n\n  // set the draw style of a stemmable note:\n  setStyle(style) { this.style = style; return this; }\n  getStyle() { return this.style; }\n\n  // Apply current style to Canvas `context`\n  applyStyle(context = this.context, style = this.getStyle()) {\n    if (!style) return this;\n\n    context.save();\n    if (style.shadowColor) context.setShadowColor(style.shadowColor);\n    if (style.shadowBlur) context.setShadowBlur(style.shadowBlur);\n    if (style.fillStyle) context.setFillStyle(style.fillStyle);\n    if (style.strokeStyle) context.setStrokeStyle(style.strokeStyle);\n    if (style.lineWidth) context.setLineWidth(style.lineWidth);\n    return this;\n  }\n\n  restoreStyle(context = this.context, style = this.getStyle()) {\n    if (!style) return this;\n    context.restore();\n    return this;\n  }\n\n  // An element can have multiple class labels.\n  hasClass(className) { return (this.attrs.classes[className] === true); }\n  addClass(className) {\n    this.attrs.classes[className] = true;\n    if (this.registry) {\n      this.registry.onUpdate({\n        id: this.getAttribute('id'),\n        name: 'class',\n        value: className,\n        oldValue: null,\n      });\n    }\n    return this;\n  }\n\n  removeClass(className) {\n    delete this.attrs.classes[className];\n    if (this.registry) {\n      this.registry.onUpdate({\n        id: this.getAttribute('id'),\n        name: 'class',\n        value: null,\n        oldValue: className,\n      });\n    }\n    return this;\n  }\n\n  // This is called by the registry after the element is registered.\n  onRegister(registry) { this.registry = registry; return this; }\n  isRendered() { return this.rendered; }\n  setRendered(rendered = true) { this.rendered = rendered; return this; }\n\n  getAttributes() { return this.attrs; }\n  getAttribute(name) { return this.attrs[name]; }\n  setAttribute(name, value) {\n    const id = this.attrs.id;\n    const oldValue = this.attrs[name];\n    this.attrs[name] = value;\n    if (this.registry) {\n      // Register with old id to support id changes.\n      this.registry.onUpdate({ id, name, value, oldValue });\n    }\n    return this;\n  }\n\n  getContext() { return this.context; }\n  setContext(context) { this.context = context; return this; }\n  getBoundingBox() { return this.boundingBox; }\n\n  // Validators\n  checkContext() {\n    if (!this.context) {\n      throw new Vex.RERR('NoContext', 'No rendering context attached to instance');\n    }\n    return this.context;\n  }\n}\n\nElement.ID = 1000;\n","// ## Description\n//\n// Object which computes metrics for a bounding box by continuously\n// taking canvas path commands\n\n// Warning: This file is merely a crutch to get bounding box information without\n// explicit metadata. This is likely to get deprecated following SMuFL support.\n//\n// taken from: https://github.com/gabelerner/canvg/blob/860e418aca67b9a41e858a223d74d375793ec364/ca\n// nvg.js#L449\n\nexport class BoundingBoxComputation {\n  constructor(x1, y1, x2, y2) { // pass in initial points if you want\n    this.x1 = Number.NaN;\n    this.y1 = Number.NaN;\n    this.x2 = Number.NaN;\n    this.y2 = Number.NaN;\n\n    this.addPoint(x1, y1);\n    this.addPoint(x2, y2);\n  }\n\n  width() {\n    return this.x2 - this.x1;\n  }\n\n  height() {\n    return this.y2 - this.y1;\n  }\n\n  addPoint(x, y) {\n    if (x != null) {\n      if (isNaN(this.x1) || isNaN(this.x2)) {\n        this.x1 = x;\n        this.x2 = x;\n      }\n      if (x < this.x1) this.x1 = x;\n      if (x > this.x2) this.x2 = x;\n    }\n\n    if (y != null) {\n      if (isNaN(this.y1) || isNaN(this.y2)) {\n        this.y1 = y;\n        this.y2 = y;\n      }\n      if (y < this.y1) this.y1 = y;\n      if (y > this.y2) this.y2 = y;\n    }\n  }\n\n  addX(x) {\n    this.addPoint(x, null);\n  }\n\n  addY(y) {\n    this.addPoint(null, y);\n  }\n\n  addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n    const cp1x = p0x + 2 / 3 * (p1x - p0x); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp1y = p0y + 2 / 3 * (p1y - p0y); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp2x = cp1x + 1 / 3 * (p2x - p0x); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    const cp2y = cp1y + 1 / 3 * (p2y - p0y); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    this.addBezierCurve(p0x, p0y, cp1x, cp1y, cp2x, cp2y, p2x, p2y);\n  }\n\n  addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n    // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    const p0 = [p0x, p0y];\n    const p1 = [p1x, p1y];\n    const p2 = [p2x, p2y];\n    const p3 = [p3x, p3y];\n    let i;\n\n    this.addPoint(p0[0], p0[1]);\n    this.addPoint(p3[0], p3[1]);\n\n    const f = (t, i) => Math.pow(1 - t, 3) * p0[i] +\n      3 * Math.pow(1 - t, 2) * t * p1[i] +\n      3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n      Math.pow(t, 3) * p3[i];\n\n    for (i = 0; i <= 1; i++) {\n      const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n      const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n      const c = 3 * p1[i] - 3 * p0[i];\n\n      if (a === 0) {\n        if (b === 0) continue;\n        const t = -c / b;\n        if (0 < t && t < 1) {\n          if (i === 0) this.addX(f(t, i));\n          if (i === 1) this.addY(f(t, i));\n        }\n        continue;\n      }\n\n      const b2ac = Math.pow(b, 2) - 4 * c * a;\n      if (b2ac < 0) continue;\n      const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        if (i === 0) this.addX(f(t1, i));\n        if (i === 1) this.addY(f(t1, i));\n      }\n      const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        if (i === 0) this.addX(f(t2, i));\n        if (i === 1) this.addY(f(t2, i));\n      }\n    }\n  }\n}\n","// Vex Music Notation\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// Copyright Mohit Muthanna 2010\n\n// Bounding boxes for interactive notation\n\nexport class BoundingBox {\n  static copy(that) {\n    return new BoundingBox(that.x, that.y, that.w, that.h);\n  }\n\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }\n  getX() { return this.x; }\n  getY() { return this.y; }\n  getW() { return this.w; }\n  getH() { return this.h; }\n  setX(x) { this.x = x; return this; }\n  setY(y) { this.y = y; return this; }\n  setW(w) { this.w = w; return this; }\n  setH(h) { this.h = h; return this; }\n  move(x, y) { this.x += x; this.y += y; }\n  clone() { return BoundingBox.copy(this); }\n\n  // Merge my box with given box. Creates a bigger bounding box unless\n  // the given box is contained in this one.\n  mergeWith(boundingBox, ctx) {\n    const that = boundingBox;\n\n    const new_x = this.x < that.x ? this.x : that.x;\n    const new_y = this.y < that.y ? this.y : that.y;\n    const new_w = Math.max(this.x + this.w, that.x + that.w) - new_x;\n    const new_h = Math.max(this.y + this.h, that.y + that.h) - new_y;\n\n    this.x = new_x;\n    this.y = new_y;\n    this.w = new_w;\n    this.h = new_h;\n\n    if (ctx) this.draw(ctx);\n    return this;\n  }\n\n  draw(ctx, x, y) {\n    if (!x) x = 0;\n    if (!y) y = 0;\n    ctx.rect(this.x + x, this.y + y, this.w, this.h);\n    ctx.stroke();\n  }\n}\n","export const Font = {\n\"glyphs\":{\n\"v0\":{\"x_min\":0,\"x_max\":514.5,\"ha\":525,\"o\":\"m 236 648 b 246 648 238 648 242 648 b 288 646 261 648 283 648 b 472 513 364 634 428 587 b 514 347 502 464 514 413 b 462 163 514 272 499 217 b 257 44 409 83 333 44 b 50 163 181 44 103 83 b 0 347 14 217 0 272 b 40 513 0 413 12 464 b 236 648 87 591 155 638 m 277 614 b 253 616 273 616 261 616 b 242 616 247 616 243 616 b 170 499 193 609 181 589 b 159 348 163 446 159 398 b 166 222 159 308 161 266 b 201 91 174 138 183 106 b 257 76 215 81 235 76 b 311 91 277 76 299 81 b 347 222 330 106 338 138 b 353 348 352 266 353 308 b 344 499 353 398 351 446 b 277 614 333 587 322 606 m 257 -1 l 258 -1 l 255 -1 l 257 -1 m 257 673 l 258 673 l 255 673 l 257 673 \"},\n\"v1\":{\"x_min\":-1.359375,\"x_max\":344.359375,\"ha\":351,\"o\":\"m 126 637 l 129 638 l 198 638 l 266 638 l 269 635 b 274 631 272 634 273 632 l 277 627 l 277 395 b 279 156 277 230 277 161 b 329 88 281 123 295 106 b 344 69 341 81 344 79 b 337 55 344 62 343 59 l 333 54 l 197 54 l 61 54 l 58 55 b 50 69 53 59 50 62 b 65 88 50 79 53 81 b 80 97 72 91 74 93 b 117 156 103 113 112 129 b 117 345 117 161 117 222 l 117 528 l 100 503 l 38 406 b 14 383 24 384 23 383 b -1 398 5 383 -1 390 b 4 415 -1 403 1 409 b 16 437 5 416 10 426 l 72 539 l 100 596 b 121 632 119 631 119 631 b 126 637 122 634 125 635 m 171 -1 l 172 -1 l 170 -1 l 171 -1 m 171 673 l 172 673 l 170 673 l 171 673 \"},\n\"v2\":{\"x_min\":-1.359375,\"x_max\":458.6875,\"ha\":468,\"o\":\"m 197 648 b 216 648 201 648 208 648 b 258 646 232 648 253 648 b 419 546 333 637 393 599 b 432 489 428 528 432 509 b 356 342 432 440 405 384 b 235 278 322 313 288 295 b 69 170 166 256 107 217 b 69 169 69 170 69 169 b 69 169 69 169 69 169 b 74 173 69 169 72 170 b 209 222 112 204 163 222 b 310 195 247 222 274 215 b 371 179 332 184 352 179 b 396 181 379 179 387 179 b 428 202 409 184 423 194 b 442 212 431 209 436 212 b 458 197 450 212 458 206 b 441 148 458 190 449 165 b 299 44 409 84 353 44 b 288 45 295 44 292 44 b 250 61 274 45 268 49 b 122 99 212 86 164 99 b 73 91 104 99 88 97 b 28 63 53 84 34 72 b 14 54 25 56 20 54 b 1 62 9 54 4 56 l -1 65 l -1 79 b 0 99 -1 91 0 95 b 2 113 1 102 2 108 b 164 309 20 197 81 272 b 285 470 232 341 277 398 b 287 487 287 476 287 481 b 171 595 287 551 239 595 b 155 595 166 595 160 595 b 142 592 145 594 142 594 b 145 589 142 592 142 591 b 179 527 168 576 179 551 b 132 455 179 496 163 467 b 104 451 122 452 112 451 b 27 530 62 451 27 487 b 29 555 27 538 27 546 b 197 648 44 601 115 639 m 228 -1 l 230 -1 l 227 -1 l 228 -1 m 228 673 l 230 673 l 227 673 l 228 673 \"},\n\"v3\":{\"x_min\":-1.359375,\"x_max\":409.6875,\"ha\":418,\"o\":\"m 174 648 b 191 648 176 648 183 648 b 225 648 204 648 220 648 b 402 523 317 638 389 588 b 404 503 404 517 404 510 b 402 484 404 495 404 488 b 264 373 389 437 334 394 b 257 370 259 371 257 371 b 257 370 257 370 257 370 b 264 369 258 370 261 369 b 409 202 359 334 409 267 b 318 72 409 152 381 104 b 200 43 281 52 240 43 b 23 113 134 43 69 68 b 0 169 6 129 0 149 b 77 249 0 210 29 249 l 77 249 b 152 174 125 249 152 212 b 103 102 152 145 137 116 b 103 102 103 102 103 102 b 147 94 103 101 132 95 b 153 94 149 94 151 94 b 265 206 219 94 265 141 b 264 226 265 213 265 219 b 147 355 253 299 204 353 b 126 371 133 356 126 362 b 147 388 126 383 132 388 b 254 474 196 391 238 424 b 259 502 258 484 259 494 b 182 592 259 544 228 582 b 156 595 175 595 166 595 b 115 592 142 595 129 594 l 111 591 l 115 588 b 152 524 141 574 152 549 b 92 449 152 491 130 458 b 76 448 87 448 81 448 b -1 530 32 448 -1 488 b 20 581 -1 548 5 566 b 174 648 55 619 108 641 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 \"},\n\"v4\":{\"x_min\":0,\"x_max\":468.21875,\"ha\":478,\"o\":\"m 174 637 b 232 638 175 638 189 638 b 277 638 245 638 259 638 l 378 638 l 381 635 b 389 623 386 632 389 627 b 382 609 389 617 386 613 b 366 589 381 606 372 598 l 313 528 l 245 451 l 209 410 l 155 348 l 84 267 b 59 240 72 252 59 240 b 59 240 59 240 59 240 b 151 238 59 238 68 238 l 242 238 l 242 303 b 243 371 242 369 242 370 b 289 426 245 374 254 385 l 303 441 l 317 456 l 338 483 l 360 506 l 371 520 b 386 527 375 526 381 527 b 400 519 392 527 397 524 b 401 440 401 516 401 514 b 401 377 401 423 401 402 l 401 238 l 426 238 b 453 237 449 238 450 238 b 465 217 461 234 465 226 b 460 202 465 212 464 206 b 426 197 454 197 453 197 l 401 197 l 401 180 b 451 88 402 129 412 109 b 468 69 465 81 468 79 b 461 55 468 62 466 59 l 458 54 l 321 54 l 185 54 l 182 55 b 175 69 176 59 175 62 b 191 88 175 79 176 81 b 240 180 230 109 240 129 l 240 197 l 125 197 b 73 195 104 195 87 195 b 8 197 10 195 9 197 b 0 212 2 199 0 205 b 0 212 0 212 0 212 b 20 242 0 219 0 219 b 163 610 104 344 163 492 b 174 637 163 628 166 634 m 234 -1 l 235 -1 l 232 -1 l 234 -1 m 234 673 l 235 673 l 232 673 l 234 673 \"},\n\"v5\":{\"x_min\":0,\"x_max\":409.6875,\"ha\":418,\"o\":\"m 47 637 b 53 638 49 638 50 638 b 69 634 55 638 61 637 b 210 610 114 619 161 610 b 363 634 259 610 311 619 b 382 638 372 637 378 638 b 392 634 386 638 389 637 b 397 623 396 630 397 627 b 393 610 397 620 396 616 b 298 505 368 552 338 520 b 212 494 277 498 246 494 b 65 517 163 494 106 502 b 61 517 62 517 61 517 b 61 517 61 517 61 517 b 51 408 61 517 51 412 b 51 408 51 408 51 408 b 51 408 51 408 51 408 b 61 412 53 408 55 409 b 125 434 80 421 103 430 b 185 441 145 440 166 441 b 409 244 310 441 409 353 b 401 191 409 227 406 209 b 197 43 375 105 287 43 b 159 47 183 43 171 44 b 23 123 112 56 61 86 b 0 180 6 140 0 159 b 76 260 0 220 31 260 b 92 259 81 260 87 259 b 152 183 132 251 152 216 b 100 112 152 152 134 122 b 95 111 98 112 95 111 b 95 111 95 111 95 111 b 129 98 95 109 119 101 b 148 97 136 97 141 97 b 264 235 206 97 261 158 b 265 248 265 240 265 244 b 210 398 265 312 243 373 b 179 408 201 406 194 408 b 174 408 178 408 176 408 b 53 369 130 408 88 394 b 34 359 39 359 38 359 b 17 374 24 359 17 365 b 39 628 17 384 38 625 b 47 637 40 631 43 635 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 \"},\n\"v6\":{\"x_min\":0,\"x_max\":475.03125,\"ha\":485,\"o\":\"m 255 648 b 274 648 259 648 266 648 b 314 646 288 648 307 648 b 450 555 374 637 438 594 b 454 530 453 546 454 538 b 375 451 454 485 416 451 b 328 467 359 451 343 455 b 300 526 310 483 300 503 b 352 598 300 557 319 589 b 356 599 355 598 356 599 b 352 602 356 599 355 601 b 288 616 330 612 308 616 b 210 584 257 616 230 605 b 164 433 189 559 174 508 b 160 374 163 415 160 381 b 160 374 160 374 160 374 b 160 374 160 374 160 374 b 168 377 160 374 164 376 b 258 395 200 390 228 395 b 366 367 294 395 328 387 b 475 223 436 333 475 283 b 472 197 475 215 473 206 b 349 65 462 141 419 95 b 259 43 317 51 288 43 b 167 69 230 43 200 52 b 4 290 80 113 20 195 b 0 349 1 309 0 328 b 20 467 0 391 6 433 b 255 648 58 563 155 637 m 269 363 b 257 363 265 363 261 363 b 210 345 236 363 220 356 b 186 226 196 324 186 272 b 187 198 186 216 186 206 b 213 95 191 151 202 112 b 257 76 221 83 238 76 b 270 77 261 76 266 76 b 321 156 299 81 310 99 b 329 229 326 183 329 206 b 321 301 329 252 326 274 b 269 363 311 342 298 359 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 \"},\n\"v7\":{\"x_min\":0,\"x_max\":442.359375,\"ha\":451,\"o\":\"m 147 648 b 166 649 153 649 160 649 b 313 598 217 649 273 630 b 340 587 323 588 328 587 l 341 587 b 412 628 367 587 390 601 b 427 638 416 635 421 638 b 439 632 431 638 435 637 b 442 623 441 630 442 628 b 430 569 442 616 439 603 b 352 369 408 492 377 410 b 300 259 325 324 313 298 b 273 84 283 205 273 140 b 265 55 273 65 272 59 l 261 54 l 181 54 l 99 54 l 96 55 b 91 61 95 56 92 59 l 89 63 l 89 77 b 147 263 89 133 111 202 b 261 401 176 313 212 355 b 378 541 315 449 349 489 l 382 548 l 375 544 b 240 495 333 512 285 495 b 129 535 198 495 160 509 b 84 560 108 552 95 560 b 76 559 81 560 78 560 b 31 487 59 555 43 530 b 14 470 27 473 24 470 b 1 477 8 470 4 471 l 0 480 l 0 553 l 0 627 l 1 630 b 16 638 4 635 9 638 b 23 635 17 638 20 637 b 49 626 36 626 39 626 b 96 638 59 626 80 630 b 104 639 99 638 102 639 b 117 644 107 641 112 642 b 147 648 125 645 137 648 m 220 -1 l 221 -1 l 219 -1 l 220 -1 m 220 673 l 221 673 l 219 673 l 220 673 \"},\n\"v8\":{\"x_min\":0,\"x_max\":488.640625,\"ha\":499,\"o\":\"m 217 648 b 245 649 225 648 235 649 b 453 516 343 649 430 595 b 458 478 455 503 458 491 b 412 370 458 440 441 398 b 411 369 412 369 411 369 b 415 365 411 367 412 367 b 488 231 462 331 488 281 b 472 165 488 208 483 186 b 243 43 434 86 338 43 b 63 104 178 43 112 62 b 0 233 20 140 0 186 b 73 365 0 283 24 331 l 77 369 l 72 374 b 29 476 42 406 29 441 b 217 648 29 557 103 635 m 258 605 b 242 606 253 605 247 606 b 157 552 198 606 157 580 b 160 541 157 548 159 544 b 319 413 176 503 242 452 l 337 403 l 338 406 b 359 476 352 428 359 452 b 258 605 359 537 318 595 m 138 326 b 130 330 134 328 130 330 b 130 330 130 330 130 330 b 107 305 127 330 112 313 b 84 231 91 281 84 256 b 243 86 84 156 151 86 b 249 87 245 86 246 87 b 347 156 303 88 347 120 b 344 172 347 162 345 167 b 156 319 325 227 257 281 b 138 326 151 322 144 324 m 243 -1 l 245 -1 l 242 -1 l 243 -1 m 243 673 l 245 673 l 242 673 l 243 673 \"},\n\"v9\":{\"x_min\":0,\"x_max\":475.03125,\"ha\":485,\"o\":\"m 191 646 b 212 649 198 648 205 649 b 255 644 227 649 243 646 b 458 448 348 616 428 539 b 475 342 469 415 475 378 b 460 244 475 308 469 274 b 193 44 421 124 303 44 b 91 69 157 44 122 51 b 19 161 43 97 19 126 b 21 181 19 167 20 174 b 98 241 32 220 65 241 b 170 186 129 241 160 223 b 172 166 171 179 172 173 b 121 94 172 134 152 102 b 117 93 118 94 117 93 b 121 90 117 93 118 91 b 185 76 142 80 164 76 b 270 119 220 76 251 91 b 308 259 287 145 300 194 b 313 317 310 277 313 310 b 313 317 313 317 313 317 b 313 317 313 317 313 317 b 304 315 313 317 308 316 b 216 295 273 302 245 295 b 145 308 193 295 170 299 b 19 398 88 327 42 360 b 0 469 5 420 0 444 b 24 551 0 496 8 526 b 191 646 54 596 125 637 m 227 614 b 215 616 224 616 220 616 b 202 614 210 616 206 616 b 152 535 174 610 163 592 b 144 463 147 509 144 485 b 152 391 144 440 147 417 b 216 328 163 344 179 328 b 280 391 253 328 269 344 b 288 463 285 417 288 440 b 280 535 288 485 285 509 b 227 614 269 594 258 610 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 \"},\n\"va\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 \"},\n\"vb\":{\"x_min\":0,\"x_max\":428.75,\"ha\":438,\"o\":\"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 \"},\n\"vc\":{\"x_min\":0,\"x_max\":447.8125,\"ha\":457,\"o\":\"m 0 86 l 0 173 l 223 173 l 447 173 l 447 86 l 447 0 l 223 0 l 0 0 l 0 86 \"},\n\"vf\":{\"x_min\":0,\"x_max\":370.21875,\"ha\":378,\"o\":\"m 0 0 l 0 277 l 61 277 l 122 277 l 122 0 l 122 -278 l 61 -278 l 0 -278 l 0 0 m 246 -1 l 246 277 l 308 277 l 370 277 l 370 -1 l 370 -278 l 308 -278 l 246 -278 l 246 -1 \"},\n\"v10\":{\"x_min\":0,\"x_max\":559.421875,\"ha\":571,\"o\":\"m 5 127 b 14 127 6 127 9 127 b 51 126 25 127 43 127 b 175 98 93 122 138 112 l 186 94 b 279 51 210 86 255 65 b 285 47 280 51 283 48 b 319 27 291 44 311 31 l 326 22 b 359 0 332 19 352 4 l 367 -6 b 371 -9 368 -6 370 -8 l 379 -15 b 387 -22 383 -18 386 -20 l 398 -30 l 411 -40 l 417 -47 l 427 -55 l 434 -61 b 441 -66 436 -62 439 -65 l 446 -72 l 453 -77 l 462 -87 b 558 -188 490 -113 549 -176 b 559 -195 559 -191 559 -194 b 548 -205 559 -201 555 -205 b 541 -204 547 -205 544 -205 b 534 -198 539 -201 536 -199 l 525 -191 b 481 -162 518 -187 490 -167 b 472 -155 477 -159 472 -156 b 468 -152 470 -155 469 -154 b 461 -149 466 -152 464 -151 b 428 -130 454 -145 441 -137 b 371 -99 413 -122 372 -99 b 363 -95 371 -99 367 -98 b 353 -91 357 -94 353 -91 b 348 -90 353 -91 352 -91 b 332 -81 343 -87 341 -86 b 27 -12 230 -37 127 -13 b 0 -5 4 -11 2 -11 b 0 58 0 -2 0 27 b 0 122 0 88 0 120 b 5 127 1 124 4 126 \"},\n\"v11\":{\"x_min\":-155.171875,\"x_max\":153.8125,\"ha\":157,\"o\":\"m -137 353 b -130 353 -136 353 -133 353 b -112 349 -125 353 -119 352 b -100 342 -110 347 -104 344 b 0 317 -69 326 -35 317 b 111 349 38 317 76 328 b 129 353 117 352 123 353 b 153 327 142 353 153 344 b 144 302 153 320 153 317 b 27 6 93 226 50 113 b 21 -13 24 -11 24 -11 b 0 -26 17 -22 8 -26 b -24 -12 -9 -26 -19 -22 b -28 5 -24 -9 -27 -2 b -145 302 -53 117 -95 224 b -155 327 -155 317 -155 320 b -137 353 -155 340 -148 349 \"},\n\"v18\":{\"x_min\":0,\"x_max\":323.9375,\"ha\":331,\"o\":\"m 217 535 b 225 537 220 537 221 537 b 245 524 235 537 242 533 l 246 521 l 247 390 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 492 87 498 b 103 495 98 498 100 496 b 114 485 107 494 111 489 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 384 l 205 521 l 206 524 b 217 535 209 528 212 533 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 \"},\n\"v1b\":{\"x_min\":0,\"x_max\":559.421875,\"ha\":571,\"o\":\"m 544 204 b 548 204 545 204 547 204 b 559 194 555 204 559 199 b 559 190 559 192 559 191 b 530 156 559 188 556 184 b 462 86 510 134 481 104 b 453 76 458 81 454 77 l 446 70 l 441 65 b 434 59 439 63 436 61 l 427 54 b 409 37 426 51 416 44 b 392 23 398 29 394 26 b 387 19 389 22 387 20 b 379 13 386 19 383 16 l 371 8 l 367 5 l 359 -1 l 337 -16 b 285 -48 319 -29 298 -41 l 279 -52 b 186 -95 255 -66 210 -87 l 175 -99 b 23 -129 127 -117 68 -129 b 17 -129 20 -129 19 -129 b 1 -123 2 -129 2 -129 b 0 -49 0 -122 0 -83 b 0 4 0 -22 0 1 b 27 11 2 9 4 9 b 185 31 78 12 145 20 b 198 34 186 31 193 33 b 314 73 234 44 277 58 b 349 88 328 79 340 84 b 353 90 352 90 353 90 b 363 94 353 90 357 93 b 371 98 367 97 371 98 b 428 129 372 98 413 120 b 461 148 441 136 454 144 b 468 151 464 149 466 151 b 472 154 469 152 470 154 b 481 161 473 155 477 158 b 525 190 490 166 518 186 l 534 197 b 540 201 536 198 539 199 b 544 204 541 202 544 204 \"},\n\"v1d\":{\"x_min\":0,\"x_max\":619.3125,\"ha\":632,\"o\":\"m 274 184 b 307 186 285 186 296 186 b 616 22 465 186 597 116 b 619 -1 617 13 619 5 b 308 -187 619 -104 483 -187 b 0 -1 133 -187 0 -102 b 5 36 0 11 1 23 b 274 184 29 115 141 176 m 289 161 b 272 162 284 162 277 162 b 171 41 209 162 171 108 b 205 -73 171 5 182 -34 b 345 -163 243 -133 298 -163 b 436 -98 385 -163 420 -142 b 446 -43 443 -80 446 -62 b 289 161 446 47 377 147 \"},\n\"v1e\":{\"x_min\":-402.890625,\"x_max\":401.53125,\"ha\":410,\"o\":\"m -219 173 b -213 174 -217 174 -215 174 b -202 173 -209 174 -205 173 b -114 86 -200 172 -179 151 b -28 0 -66 37 -28 0 b 40 84 -28 0 2 37 b 117 174 111 173 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b -42 -86 27 0 -4 -38 b -118 -174 -112 -174 -111 -173 b -123 -176 -119 -176 -121 -176 b -133 -174 -126 -176 -130 -174 b -296 -12 -136 -173 -172 -137 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 172 -398 -43 -228 167 b -219 173 -223 172 -220 173 \"},\n\"v1f\":{\"x_min\":-340.28125,\"x_max\":338.921875,\"ha\":346,\"o\":\"m -32 520 b -29 521 -31 520 -31 521 b -23 519 -27 521 -24 520 b -20 513 -21 517 -20 516 b -21 506 -20 512 -20 509 b -31 474 -23 502 -27 488 l -53 402 l -66 352 l -68 349 l -57 349 b -32 351 -51 349 -40 351 b 123 370 19 352 74 359 b 137 371 127 370 133 371 b 170 356 152 371 164 366 b 171 355 170 355 170 355 b 216 366 174 355 183 358 b 280 378 268 377 266 377 b 287 378 283 378 284 378 b 332 349 307 378 322 369 b 338 319 336 341 338 330 b 332 301 338 310 336 302 b 242 280 329 299 246 280 b 242 280 242 280 242 280 b 235 288 236 280 235 283 b 235 292 235 290 235 291 b 236 302 236 297 236 299 b 220 337 236 316 230 330 l 216 340 l 210 335 b 159 276 189 322 172 301 b 118 149 152 265 156 274 b 81 34 84 36 85 36 b -8 13 78 33 -4 13 b -8 13 -8 13 -8 13 b -14 20 -12 15 -14 15 b -8 44 -14 24 -12 31 b -2 66 -5 55 -2 65 b -2 66 -2 66 -2 66 l -2 66 b -43 41 -2 66 -21 55 b -114 4 -98 8 -98 8 b -144 0 -123 0 -134 0 b -242 99 -197 0 -242 43 b -242 109 -242 102 -242 105 b -212 219 -240 122 -242 116 b -185 312 -197 270 -185 312 l -185 312 b -189 312 -185 312 -186 312 b -259 312 -200 312 -227 312 b -321 310 -291 312 -310 310 b -334 312 -330 310 -334 312 b -340 319 -338 313 -340 316 b -336 326 -340 322 -338 324 b -291 337 -334 326 -314 331 l -247 347 l -210 348 b -172 348 -190 348 -172 348 b -168 363 -172 348 -171 355 b -145 442 -151 424 -145 441 b -133 452 -144 444 -140 446 l -77 489 b -32 520 -53 506 -32 520 m 57 334 b 53 335 55 335 54 335 b 44 334 50 335 49 335 b -70 316 8 326 -28 320 b -78 309 -78 316 -78 316 b -108 202 -80 305 -88 274 b -141 81 -136 112 -141 93 b -140 74 -141 79 -141 77 b -117 49 -137 59 -127 49 b -107 52 -114 49 -110 51 b 16 127 -106 54 14 126 b 42 217 16 127 42 215 b 49 241 42 222 44 229 b 73 320 53 251 73 317 b 57 334 73 327 65 333 \"},\n\"v20\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m -559 351 b -551 352 -556 352 -553 352 b -530 338 -543 352 -533 348 b -529 169 -530 337 -529 291 l -529 1 l -507 27 l -441 112 b -382 174 -394 169 -390 174 b -378 174 -381 174 -379 174 b -281 86 -370 174 -375 179 b -196 0 -234 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 279 172 b 289 174 285 174 288 174 b 300 173 294 174 298 173 b 462 11 303 172 340 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 375 -176 371 -176 b 280 -87 367 -173 347 -152 b 194 0 234 -38 194 0 b 126 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 44 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -140 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -288 -176 b -300 -174 -294 -176 -298 -174 b -464 -11 -303 -173 -374 -102 l -476 0 l -506 -37 b -539 -76 -528 -65 -537 -74 b -551 -80 -543 -79 -547 -80 b -570 -68 -558 -80 -566 -76 l -571 -65 l -571 136 b -570 340 -571 331 -571 337 b -559 351 -568 344 -564 348 \"},\n\"v22\":{\"x_min\":0,\"x_max\":432.828125,\"ha\":442,\"o\":\"m 209 186 b 213 187 210 187 212 187 b 216 187 215 187 216 187 b 224 174 216 186 220 180 b 420 -1 269 105 338 43 b 432 -12 431 -8 432 -9 b 421 -23 432 -15 432 -16 b 228 -180 345 -70 264 -137 b 219 -188 221 -188 221 -188 l 219 -188 b 208 -177 215 -188 215 -188 b 10 1 163 -106 93 -44 b 0 11 0 6 0 8 b 10 22 0 13 0 15 b 202 179 87 69 167 136 b 209 186 206 183 209 186 \"},\n\"v23\":{\"x_min\":0,\"x_max\":133.390625,\"ha\":136,\"o\":\"m 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 \"},\n\"v25\":{\"x_min\":0,\"x_max\":318.5,\"ha\":325,\"o\":\"m 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 \"},\n\"v26\":{\"x_min\":-21.78125,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 179 164 199 187 192 l 210 176 l 210 396 l 210 617 l 212 621 b 231 632 216 628 223 632 b 250 620 239 632 247 628 b 251 383 251 616 251 616 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\n\"v27\":{\"x_min\":0,\"x_max\":432.828125,\"ha\":442,\"o\":\"m 208 184 b 213 187 209 186 212 187 b 224 176 217 187 221 183 b 245 147 225 172 235 159 b 419 -1 288 90 347 38 b 431 -8 424 -4 431 -8 b 432 -12 432 -9 432 -11 b 430 -18 432 -13 432 -16 b 364 -61 424 -20 383 -47 b 225 -183 307 -102 250 -152 b 223 -187 224 -184 223 -187 b 220 -188 221 -188 220 -188 b 208 -176 216 -188 210 -184 b 187 -148 205 -173 197 -159 b 12 0 144 -90 84 -38 b 0 11 4 5 0 8 b 16 24 0 13 4 18 b 183 158 83 69 141 115 b 208 184 194 169 198 173 m 183 105 b 176 113 181 109 176 113 b 172 109 176 113 175 112 b 92 45 149 90 117 62 l 88 41 l 102 31 b 247 -105 160 -6 210 -55 l 254 -115 l 257 -112 l 269 -102 b 340 -45 287 -87 319 -61 l 344 -43 l 330 -33 b 183 105 272 6 221 54 \"},\n\"v28\":{\"x_min\":-73.5,\"x_max\":72.140625,\"ha\":74,\"o\":\"m -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 \"},\n\"v29\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m 175 273 b 182 274 178 273 181 274 b 202 262 190 274 198 269 b 204 158 204 259 204 259 l 204 56 l 250 112 b 303 174 296 172 298 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 208 -6 213 0 210 -2 l 204 -12 l 204 -147 b 204 -210 204 -173 204 -194 b 198 -292 204 -297 204 -287 b 183 -299 194 -297 189 -299 b 164 -287 175 -299 167 -295 b 163 -174 163 -284 163 -284 l 161 -63 l 119 -117 b 65 -176 76 -170 73 -176 b 61 -176 63 -176 62 -176 b -35 -87 51 -174 57 -180 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -363 174 -374 170 -371 174 b -359 174 -362 174 -360 174 b -262 86 -351 174 -356 179 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 147 11 -13 172 35 123 l 157 -1 l 160 1 l 163 4 l 163 130 b 164 260 163 256 163 258 b 175 273 166 266 170 270 \"},\n\"v2a\":{\"x_min\":-21.78125,\"x_max\":366.140625,\"ha\":374,\"o\":\"m 276 1378 b 284 1379 279 1379 281 1379 b 306 1360 292 1379 298 1374 b 352 1247 326 1326 343 1286 b 366 1139 362 1213 366 1175 b 347 1009 366 1093 359 1049 l 344 1002 l 347 992 b 352 971 348 986 351 977 b 366 863 362 936 366 899 b 347 732 366 818 359 773 l 344 725 l 347 716 b 352 695 348 710 351 700 b 366 588 362 659 366 623 b 223 262 366 464 314 345 b 189 233 212 252 212 252 b 35 76 126 183 73 129 b -1 16 20 56 2 27 b -19 4 -4 9 -12 4 l -21 4 l -21 137 l -21 270 l -17 270 b 186 344 59 281 134 308 b 319 606 270 399 319 499 b 317 650 319 620 319 635 l 315 659 l 314 655 b 223 537 288 607 258 570 b 189 509 212 528 212 528 b 35 352 126 459 73 405 b -1 292 20 333 2 303 b -19 280 -4 285 -12 280 l -21 280 l -21 413 l -21 546 l -17 546 b 186 620 59 557 134 584 b 319 882 270 675 319 775 b 317 925 319 896 319 911 l 315 935 l 314 931 b 223 813 288 884 258 846 b 189 785 212 805 212 805 b 35 628 126 735 73 681 b -1 569 20 609 2 580 b -19 556 -4 562 -12 556 l -21 556 l -21 689 l -21 823 l -17 823 b 202 907 68 835 152 867 b 319 1157 280 968 319 1061 b 270 1338 319 1218 303 1281 b 262 1358 264 1349 262 1353 b 262 1364 262 1360 262 1363 b 276 1378 265 1371 269 1376 \"},\n\"v2c\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -413 173 b -408 174 -412 174 -409 174 b -397 173 -404 174 -400 173 b -308 86 -394 172 -374 151 b -223 0 -261 37 -223 0 b -153 84 -223 0 -191 37 b -77 174 -83 173 -84 172 b -72 174 -76 174 -74 174 b -62 173 -68 174 -63 173 b 25 86 -59 172 -39 151 b 112 0 73 37 111 0 b 181 84 112 0 144 37 b 257 174 251 173 251 172 b 262 174 258 174 261 174 b 273 173 266 174 270 173 b 436 9 276 172 347 101 l 447 -1 l 477 36 b 522 79 511 79 513 79 l 522 79 b 552 51 533 79 539 73 b 596 -112 582 6 596 -51 b 567 -262 596 -161 586 -213 b 539 -322 558 -287 544 -316 b 524 -327 534 -326 529 -327 b 504 -315 515 -327 507 -323 b 503 -308 503 -312 503 -309 b 511 -285 503 -302 504 -297 b 555 -113 540 -227 555 -169 b 544 -34 555 -86 551 -59 b 522 19 540 -16 530 8 l 521 22 l 481 -26 l 405 -122 b 353 -176 366 -172 362 -176 b 349 -176 352 -176 351 -176 b 253 -87 341 -176 347 -180 b 167 0 206 -38 167 0 b 99 -86 167 0 136 -38 b 21 -174 27 -174 28 -173 b 17 -176 20 -176 19 -176 b 6 -174 13 -176 9 -174 b -81 -87 4 -173 -14 -152 b -167 0 -129 -38 -167 0 b -236 -86 -167 0 -198 -38 b -313 -174 -307 -174 -306 -173 b -318 -176 -314 -176 -315 -176 b -328 -174 -321 -176 -325 -174 b -491 -12 -330 -173 -367 -137 l -503 0 l -530 -34 b -570 -77 -562 -73 -564 -76 b -577 -79 -571 -79 -574 -79 b -597 -58 -588 -79 -597 -69 b -596 -49 -597 -55 -597 -52 b -417 172 -593 -43 -423 167 b -413 173 -417 172 -415 173 \"},\n\"v2d\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 190 b 219 191 213 191 216 191 b 236 176 225 191 228 190 b 419 18 277 105 341 49 b 436 5 431 13 434 11 b 438 -1 438 4 438 1 b 424 -16 438 -8 432 -13 b 356 -49 409 -20 379 -36 b 234 -180 306 -83 258 -133 b 219 -192 230 -188 224 -192 b 200 -176 213 -192 206 -187 b 9 -15 157 -102 89 -45 b 0 0 2 -12 0 -6 b 16 18 0 9 2 12 b 200 176 93 48 159 104 b 212 190 205 186 208 188 m 239 113 b 236 117 238 116 238 117 b 230 108 235 117 234 115 b 92 -15 196 58 140 8 b 88 -18 91 -16 88 -18 b 92 -20 88 -18 91 -19 b 198 -116 130 -43 166 -74 b 200 -117 200 -117 200 -117 b 201 -117 200 -117 201 -117 b 264 -43 212 -98 242 -62 b 345 15 288 -19 321 4 b 348 18 347 16 348 16 b 344 20 348 18 347 19 b 239 113 307 41 266 79 \"},\n\"v2f\":{\"x_min\":-1.359375,\"x_max\":680.5625,\"ha\":694,\"o\":\"m 597 1042 b 604 1042 600 1042 602 1042 b 642 1002 627 1042 642 1022 b 619 966 642 988 635 974 b 439 927 574 942 503 927 l 426 927 l 426 921 b 430 838 428 893 430 866 b 345 480 430 696 398 560 b 179 391 307 423 249 391 b 156 392 171 391 164 392 b 138 394 149 394 142 394 b 103 434 115 396 103 416 b 129 471 103 451 111 466 b 141 474 133 473 137 474 b 172 459 153 474 164 469 b 181 455 175 456 176 455 b 187 456 182 455 185 455 b 253 520 212 460 234 483 b 315 836 294 605 315 714 b 311 928 315 867 314 898 b 302 945 310 943 311 942 b 245 953 283 950 262 953 b 130 891 193 953 149 931 b 84 860 119 870 102 860 b 36 905 61 860 39 877 b 36 910 36 907 36 909 b 80 970 36 931 50 949 b 249 1017 125 1000 187 1017 b 322 1009 273 1017 299 1014 l 341 1003 b 436 991 372 995 406 991 b 577 1031 495 991 545 1004 b 597 1042 583 1038 590 1041 m 416 360 b 424 360 419 360 421 360 b 481 309 454 360 479 338 b 503 145 484 280 495 199 b 585 -185 525 16 555 -106 b 630 -245 596 -213 613 -237 l 634 -247 l 638 -245 b 647 -244 641 -245 645 -244 b 680 -278 666 -244 680 -262 b 664 -308 680 -290 675 -301 b 638 -312 658 -310 650 -312 b 613 -309 631 -312 623 -310 b 477 -201 555 -303 502 -260 b 417 -2 460 -159 434 -72 b 416 5 417 1 416 5 b 416 5 416 5 416 5 b 411 -5 415 5 413 0 b 359 -97 397 -33 377 -70 b 353 -106 355 -102 353 -105 b 359 -112 353 -108 355 -109 b 409 -130 375 -123 390 -129 b 426 -134 420 -130 421 -131 b 431 -147 428 -137 431 -141 b 420 -162 431 -152 427 -159 b 382 -169 409 -166 396 -169 b 323 -155 363 -169 341 -165 l 317 -152 l 314 -155 b 62 -303 240 -240 148 -295 b 36 -305 55 -305 44 -305 b 23 -303 29 -305 24 -305 b -1 -273 6 -299 -1 -287 b 31 -240 -1 -256 10 -240 b 36 -240 32 -240 34 -240 b 42 -241 38 -241 39 -241 b 134 -204 63 -241 99 -226 b 367 288 265 -115 357 81 b 375 330 368 313 370 320 b 416 360 383 347 400 358 m 360 -359 b 379 -359 363 -359 371 -359 b 424 -360 396 -359 416 -359 b 646 -502 536 -373 624 -430 b 649 -527 649 -510 649 -519 b 530 -673 649 -578 604 -635 l 521 -677 l 529 -681 b 653 -811 592 -714 637 -762 b 660 -853 658 -827 660 -839 b 645 -911 660 -873 656 -892 b 426 -1021 608 -981 519 -1021 b 283 -989 377 -1021 328 -1011 b 235 -949 249 -972 239 -964 b 234 -936 234 -946 234 -941 b 234 -928 234 -934 234 -931 l 235 -925 l 234 -927 l 225 -934 b 87 -982 186 -966 138 -982 b 80 -982 85 -982 83 -982 b 55 -981 70 -981 58 -981 b 17 -943 32 -981 17 -964 b 54 -904 17 -921 35 -904 b 78 -914 62 -904 72 -909 l 83 -918 l 88 -918 b 190 -831 122 -918 166 -881 b 269 -506 242 -727 269 -612 b 268 -462 269 -492 269 -477 b 266 -449 266 -458 266 -452 b 265 -444 266 -445 266 -444 b 257 -446 264 -444 261 -445 b 132 -545 196 -470 152 -505 b 88 -573 122 -563 104 -573 b 39 -523 63 -573 39 -553 b 63 -476 39 -505 44 -494 b 360 -359 136 -408 235 -369 m 419 -424 b 393 -423 411 -423 406 -423 l 375 -423 l 377 -426 b 379 -439 377 -427 378 -434 b 383 -510 382 -463 383 -487 b 314 -811 383 -609 360 -710 b 266 -893 296 -850 285 -870 b 264 -898 265 -896 264 -898 l 264 -898 b 264 -898 264 -898 264 -898 b 268 -898 264 -898 266 -898 b 273 -898 270 -898 272 -898 b 300 -909 283 -898 291 -900 b 426 -957 340 -941 385 -957 b 476 -949 443 -957 460 -954 b 547 -853 522 -931 547 -893 b 485 -745 547 -816 526 -775 b 397 -707 460 -727 432 -714 b 366 -675 375 -703 366 -692 b 396 -642 366 -657 377 -645 b 530 -557 455 -637 511 -601 b 536 -527 534 -548 536 -537 b 419 -424 536 -480 490 -437 \"},\n\"v30\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 276 1900 b 284 1901 279 1900 281 1901 b 306 1883 291 1901 298 1896 b 367 1686 347 1825 367 1757 b 343 1558 367 1643 359 1600 l 338 1549 l 343 1537 b 367 1411 359 1497 367 1454 b 343 1282 367 1367 359 1324 l 338 1272 l 343 1261 b 367 1135 359 1221 367 1178 b 343 1007 367 1090 359 1047 l 338 996 l 343 985 b 367 859 359 945 367 902 b 343 731 367 814 359 771 l 338 720 l 343 709 b 367 582 359 667 367 626 b 289 362 367 503 340 426 b 239 312 276 345 259 330 b 29 77 152 237 76 152 b -1 18 14 54 2 30 b -19 4 -4 11 -12 4 l -21 4 l -21 133 l -20 260 l -13 262 b 98 299 17 269 62 284 b 111 305 103 302 110 305 b 167 334 123 310 156 327 b 319 595 264 391 319 491 b 313 659 319 616 318 638 b 310 667 311 664 311 667 b 307 663 310 667 308 666 b 240 588 289 637 269 614 b 16 331 141 505 62 413 b -1 294 8 316 1 302 b -19 280 -4 287 -12 280 l -21 280 l -21 408 l -20 537 l -13 538 b 98 576 17 545 62 560 b 111 581 103 578 110 581 b 167 610 123 587 156 603 b 319 871 264 667 319 767 b 313 935 319 892 318 913 b 310 942 311 941 311 942 b 307 939 310 942 308 941 b 240 864 289 913 269 889 b 16 607 141 781 62 689 b -1 570 8 592 1 578 b -19 556 -4 563 -12 556 l -21 556 l -21 684 l -20 813 l -13 814 b 98 852 17 821 62 836 b 111 857 103 855 110 857 b 167 886 123 863 156 880 b 319 1147 264 943 319 1043 b 313 1211 319 1168 318 1189 b 310 1218 311 1217 311 1218 b 307 1215 310 1218 308 1217 b 240 1140 289 1188 269 1165 b 16 884 141 1057 62 966 b -1 846 8 868 1 855 b -19 832 -4 839 -12 832 l -21 832 l -21 960 l -20 1089 l -13 1090 b 98 1128 17 1097 62 1111 b 111 1134 103 1131 110 1134 b 167 1163 123 1139 156 1156 b 319 1424 264 1220 319 1320 b 313 1486 319 1444 318 1465 b 310 1494 311 1493 311 1494 b 307 1492 310 1494 308 1493 b 240 1417 289 1464 269 1442 b 16 1160 141 1333 62 1242 b -1 1121 8 1145 1 1131 b -19 1109 -4 1115 -12 1109 l -21 1109 l -21 1236 l -20 1365 l -13 1367 b 98 1404 17 1374 62 1388 b 111 1410 103 1407 110 1410 b 250 1508 172 1437 215 1467 b 319 1701 296 1564 319 1633 b 270 1859 319 1757 303 1814 b 262 1882 265 1868 262 1875 b 276 1900 262 1890 266 1896 \"},\n\"v31\":{\"x_min\":0,\"x_max\":386.5625,\"ha\":394,\"o\":\"m 0 173 l 0 347 l 193 347 l 386 347 l 386 173 l 386 0 l 193 0 l 0 0 l 0 173 \"},\n\"v33\":{\"x_min\":-423.3125,\"x_max\":421.9375,\"ha\":431,\"o\":\"m -10 276 b -2 277 -8 277 -5 277 b 17 265 5 277 13 273 b 19 163 19 260 19 260 l 19 68 l 39 45 b 277 -95 122 -34 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -54 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 200 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 137 b 421 22 421 37 421 29 b 257 -198 421 -86 347 -188 b 242 -198 251 -198 247 -198 b 20 -105 181 -198 95 -163 l 19 -104 l 19 -183 b 19 -216 19 -195 19 -206 b 12 -273 19 -272 17 -267 b -2 -278 8 -277 2 -278 b -21 -266 -10 -278 -19 -274 b -23 -165 -23 -263 -23 -262 l -23 -69 l -44 -47 b -250 86 -117 23 -183 66 b -295 94 -270 93 -284 94 b -315 91 -302 94 -308 94 b -381 5 -356 81 -381 43 b -355 -56 -381 -16 -372 -40 b -299 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -168 -77 -196 -58 -179 -65 b -151 -122 -156 -90 -151 -105 b -179 -174 -151 -141 -160 -162 b -239 -195 -194 -184 -217 -192 b -257 -197 -245 -195 -250 -197 b -423 -5 -349 -197 -423 -113 b -423 0 -423 -4 -423 -1 b -277 194 -420 97 -362 173 b -247 197 -268 197 -258 197 b -24 104 -185 197 -100 162 l -23 102 l -23 181 b -21 265 -23 260 -23 260 b -10 276 -20 269 -14 274 \"},\n\"v34\":{\"x_min\":0,\"x_max\":622.03125,\"ha\":635,\"o\":\"m 398 417 b 406 419 401 419 404 419 b 427 398 417 419 427 409 b 427 391 427 395 427 392 b 34 -274 424 385 38 -272 b 20 -280 29 -278 25 -280 b 0 -259 9 -280 0 -270 b 0 -252 0 -256 0 -254 b 393 413 2 -247 389 410 b 398 417 394 415 397 416 m 592 417 b 600 419 594 419 597 419 b 622 398 611 419 622 409 b 620 391 622 395 620 392 b 227 -274 617 385 231 -272 b 213 -280 223 -278 219 -280 b 193 -259 202 -280 193 -270 b 194 -252 193 -256 193 -254 b 586 413 196 -247 582 410 b 592 417 588 415 590 416 \"},\n\"v36\":{\"x_min\":-1.359375,\"x_max\":1064.390625,\"ha\":1086,\"o\":\"m 296 692 b 314 694 302 694 307 694 b 386 685 337 694 366 689 b 548 498 480 660 548 580 b 548 481 548 492 548 487 b 455 395 541 426 499 395 b 370 462 420 395 383 417 b 362 496 364 477 362 488 b 377 514 362 509 367 514 b 393 501 386 514 390 510 b 432 474 397 484 413 474 b 470 487 445 474 458 478 b 491 530 484 496 491 510 b 490 544 491 534 491 539 b 333 660 479 606 411 657 l 323 662 l 315 646 b 269 524 285 591 269 556 b 321 431 269 492 287 466 b 349 395 338 413 343 408 b 363 342 359 378 363 362 b 359 312 363 333 362 322 b 285 158 348 266 318 206 b 281 152 283 155 281 152 b 281 152 281 152 281 152 b 287 154 283 152 284 152 b 318 155 298 154 308 155 b 461 98 371 155 419 136 l 464 97 l 483 112 b 503 129 494 120 503 127 b 504 130 503 129 504 129 b 503 138 504 131 503 134 b 500 180 500 152 500 166 b 553 326 500 238 518 288 b 604 366 560 331 592 358 b 649 381 617 376 632 381 b 696 362 665 381 681 374 b 724 302 714 347 724 324 b 695 238 724 278 714 255 b 660 210 691 234 662 212 b 579 148 658 209 582 151 b 579 148 579 148 579 148 b 596 106 579 144 589 119 b 622 77 604 88 609 83 b 657 69 632 72 645 69 b 748 112 688 69 721 84 b 755 123 754 117 755 120 b 755 127 755 124 755 126 b 751 165 752 137 751 151 b 758 219 751 183 754 202 b 894 387 774 290 820 347 b 896 390 896 388 896 388 b 891 398 896 391 895 392 b 622 560 827 477 730 535 b 600 580 605 564 600 569 b 617 596 600 591 607 596 b 628 595 622 596 624 596 b 1057 248 846 552 1020 412 b 1064 191 1061 229 1064 209 b 922 0 1064 94 1005 9 b 902 -1 916 -1 909 -1 b 774 76 847 -1 800 26 b 769 83 770 81 770 83 b 769 81 769 83 769 83 b 627 -1 733 29 677 -1 b 548 27 597 -1 570 8 b 515 88 537 37 525 61 l 513 95 l 510 93 l 453 45 b 390 0 396 0 396 0 b 390 0 390 0 390 0 b 374 15 381 0 377 4 b 268 105 359 69 314 105 b 250 104 262 105 257 105 l 243 102 l 234 90 b 155 1 201 49 159 2 b 147 -1 152 0 149 -1 b 130 15 138 -1 130 6 b 132 20 130 18 132 19 b 136 31 133 22 134 27 b 220 131 149 74 178 109 b 231 137 225 134 230 136 b 302 278 280 202 302 244 b 265 335 302 299 295 309 b 209 442 234 363 213 402 b 209 455 209 446 209 451 b 279 648 209 502 232 564 l 285 659 l 283 659 b 176 627 238 653 210 645 b 57 477 111 594 66 538 b 55 459 55 471 55 464 b 72 409 55 437 61 415 b 93 403 78 405 87 403 b 152 467 123 403 151 431 b 168 488 153 483 157 488 b 185 462 181 488 185 483 l 185 460 b 137 344 183 409 168 369 b 78 322 119 328 98 322 b 13 360 50 322 25 335 b -1 426 4 380 -1 402 b 89 610 -1 488 32 559 b 296 692 147 659 210 685 m 926 348 b 921 353 924 351 922 353 b 914 348 920 353 918 351 b 823 167 857 306 823 237 b 828 124 823 154 826 138 b 890 31 837 79 862 40 b 896 31 892 31 894 31 b 956 104 916 31 940 59 b 970 191 965 129 970 159 b 966 241 970 208 969 224 b 926 348 959 277 945 313 m 627 326 b 619 326 624 326 622 326 b 598 316 611 326 604 323 b 568 215 579 288 568 255 b 568 208 568 213 568 210 b 571 183 570 195 570 184 l 571 183 b 594 201 571 183 582 191 l 634 231 b 660 259 653 247 656 248 b 664 278 662 266 664 272 b 627 326 664 299 649 320 \"},\n\"v38\":{\"x_min\":-1.359375,\"x_max\":651.96875,\"ha\":665,\"o\":\"m 389 644 b 405 645 394 645 400 645 b 504 566 450 645 492 613 b 507 541 506 557 507 549 b 480 471 507 514 498 489 l 477 467 l 483 470 b 609 591 539 485 586 531 b 613 601 611 595 613 599 b 631 609 619 607 624 609 b 651 588 641 609 651 602 b 200 -946 651 584 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 537 313 478 300 508 b 389 644 300 585 334 635 \"},\n\"v39\":{\"x_min\":-171.5,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"v3b\":{\"x_min\":0,\"x_max\":484.5625,\"ha\":494,\"o\":\"m 228 245 b 239 247 234 247 239 247 b 243 247 240 247 242 247 b 303 238 257 247 287 242 b 484 -2 417 208 484 104 b 412 -177 484 -65 461 -127 b 243 -248 363 -226 303 -248 b 6 -63 138 -248 36 -180 b 0 -1 1 -41 0 -20 b 228 245 0 127 98 240 m 255 181 b 240 183 247 183 245 183 b 232 181 238 183 235 183 b 142 152 200 180 168 170 l 138 149 l 190 97 l 242 44 l 294 97 l 345 149 l 340 152 b 255 181 315 169 284 180 m 147 -54 l 197 -1 l 147 51 l 95 104 l 91 99 b 62 -1 72 70 62 34 b 66 -43 62 -15 63 -29 b 91 -101 72 -63 80 -84 l 95 -106 l 147 -54 m 393 99 b 389 104 390 102 389 104 b 337 51 389 104 366 80 l 285 -1 l 337 -54 l 389 -106 l 393 -101 b 421 -1 412 -72 421 -36 b 393 99 421 34 412 69 m 294 -98 b 242 -45 265 -69 242 -45 b 190 -98 242 -45 219 -69 l 138 -151 l 142 -154 b 242 -184 172 -174 206 -184 b 340 -154 276 -184 311 -174 l 345 -151 l 294 -98 \"},\n\"v3c\":{\"x_min\":0,\"x_max\":450.53125,\"ha\":460,\"o\":\"m 189 302 b 204 303 193 302 198 303 b 303 224 250 303 292 270 b 306 199 304 216 306 208 b 279 129 306 173 296 147 l 276 126 l 281 127 b 408 249 337 142 385 190 b 412 259 409 254 412 258 b 430 267 417 265 423 267 b 450 247 441 267 450 259 b 200 -605 450 242 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 194 111 136 99 165 b 189 302 99 244 133 292 \"},\n\"v3e\":{\"x_min\":0,\"x_max\":406.96875,\"ha\":415,\"o\":\"m 21 183 b 28 183 24 183 25 183 b 42 181 34 183 39 183 b 127 108 47 179 47 179 b 202 41 168 72 202 41 b 279 108 204 41 238 72 b 357 177 321 145 356 176 b 375 183 363 181 370 183 b 406 151 392 183 406 169 b 404 137 406 147 405 141 b 322 62 401 131 398 129 b 251 0 284 27 251 0 b 322 -63 251 -1 284 -29 b 404 -138 398 -130 401 -133 b 406 -152 405 -142 406 -148 b 375 -184 406 -170 392 -184 b 357 -179 370 -184 363 -183 b 279 -109 356 -177 321 -147 b 202 -43 238 -73 204 -43 b 127 -109 202 -43 168 -73 b 49 -179 85 -147 50 -177 b 31 -184 43 -183 36 -184 b 0 -152 13 -184 0 -170 b 2 -138 0 -148 0 -142 b 83 -63 5 -133 8 -130 b 155 0 122 -29 155 -1 b 83 62 155 0 122 27 b 8 129 43 97 10 127 b 0 151 2 136 0 144 b 21 183 0 165 8 177 \"},\n\"v3f\":{\"x_min\":-24.5,\"x_max\":317.140625,\"ha\":324,\"o\":\"m -24 -147 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 58 -123 6 -43 31 -86 b 196 -278 93 -173 134 -219 b 317 -570 274 -356 317 -460 b 294 -713 317 -617 308 -666 l 289 -724 l 294 -735 b 317 -873 308 -780 317 -827 b 235 -1132 317 -963 288 -1054 b 209 -1165 228 -1140 224 -1146 b 189 -1177 204 -1172 196 -1177 b 171 -1164 182 -1177 175 -1172 b 168 -1154 170 -1161 168 -1159 b 181 -1132 168 -1149 172 -1142 b 269 -891 238 -1064 269 -975 b 269 -881 269 -886 269 -884 b 262 -814 269 -857 265 -827 b 258 -800 261 -811 259 -806 b 142 -628 240 -731 198 -667 b -8 -589 112 -606 47 -589 b -20 -589 -13 -589 -19 -589 l -24 -589 l -24 -449 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 58 -424 6 -345 31 -388 b 194 -580 93 -476 136 -523 b 259 -660 221 -606 245 -635 b 261 -663 259 -662 261 -663 b 264 -656 262 -663 262 -660 b 269 -587 268 -632 269 -610 b 264 -521 269 -566 268 -544 b 262 -512 264 -517 262 -513 b 258 -498 261 -509 259 -503 b 142 -326 240 -428 198 -365 b -8 -287 112 -303 47 -288 b -20 -287 -13 -287 -19 -287 l -24 -287 l -24 -147 \"},\n\"v40\":{\"x_min\":-1.359375,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 \"},\n\"v41\":{\"x_min\":-1.359375,\"x_max\":556.6875,\"ha\":568,\"o\":\"m 294 322 b 318 323 299 322 308 323 b 360 320 334 323 352 322 b 526 217 430 310 490 273 b 543 166 537 202 543 184 b 447 70 543 117 503 70 b 445 70 447 70 446 70 b 359 159 394 72 359 113 b 368 201 359 173 362 187 b 442 245 382 229 412 245 b 455 244 446 245 451 245 b 460 244 458 244 460 244 b 460 244 460 244 460 244 b 454 248 460 244 458 245 b 325 291 417 276 372 291 b 285 287 313 291 299 290 b 144 -2 183 269 144 190 b 281 -290 144 -208 179 -280 b 304 -291 289 -291 298 -291 b 524 -105 412 -291 506 -212 b 541 -84 526 -88 530 -84 b 556 -101 551 -84 556 -90 b 549 -138 556 -111 553 -122 b 334 -322 521 -237 435 -310 b 302 -324 323 -323 313 -324 b 13 -101 172 -324 54 -234 b -1 -1 4 -68 -1 -34 b 294 322 -1 161 121 303 \"},\n\"v42\":{\"x_min\":-348.4375,\"x_max\":24.5,\"ha\":25,\"o\":\"m -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 \"},\n\"v43\":{\"x_min\":-442.359375,\"x_max\":441,\"ha\":450,\"o\":\"m -31 487 b -1 488 -21 488 -10 488 b 434 104 216 488 397 330 b 441 27 438 79 441 47 b 439 12 441 20 439 15 b 419 0 435 4 427 0 b 404 5 413 0 408 1 b 398 30 400 11 398 13 b 0 351 390 213 213 351 b -59 348 -20 351 -39 349 b -400 30 -251 324 -393 191 b -405 5 -400 13 -401 11 b -420 0 -409 1 -415 0 b -441 12 -428 0 -436 4 b -442 27 -441 15 -442 20 b -435 104 -442 47 -439 79 b -31 487 -401 316 -235 474 m -13 131 b -1 133 -9 133 -5 133 b 51 105 19 133 39 123 b 61 70 58 95 61 83 b 51 34 61 58 58 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -57 38 -62 54 b -13 131 -62 98 -44 124 \"},\n\"v44\":{\"x_min\":-21.78125,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"v45\":{\"x_min\":-402.890625,\"x_max\":401.53125,\"ha\":410,\"o\":\"m -10 273 b -4 274 -9 273 -6 274 b 16 262 4 274 12 269 b 17 158 17 259 17 259 l 17 56 l 62 112 b 117 174 110 172 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b 21 -6 27 0 24 -2 l 17 -12 l 17 -147 b 17 -210 17 -173 17 -194 b 10 -292 17 -297 16 -287 b -2 -299 6 -297 2 -299 b -21 -287 -10 -299 -19 -295 b -24 -174 -23 -284 -23 -284 l -24 -63 l -66 -117 b -121 -176 -110 -170 -114 -176 b -125 -176 -122 -176 -123 -176 b -296 -12 -134 -174 -125 -184 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 170 -398 -43 -231 165 b -212 174 -221 173 -216 174 b -202 173 -208 174 -205 174 b -39 11 -200 172 -151 122 l -28 -1 l -25 1 l -24 4 l -24 130 b -23 260 -24 256 -24 258 b -10 273 -20 266 -16 270 \"},\n\"v46\":{\"x_min\":0,\"x_max\":627.46875,\"ha\":640,\"o\":\"m 306 190 b 314 191 308 191 311 191 b 326 184 318 191 322 190 l 336 173 b 510 52 377 127 442 80 b 515 49 513 51 515 49 b 611 16 537 40 579 24 b 627 0 624 13 627 9 b 607 -18 627 -11 624 -13 b 330 -181 490 -49 389 -109 b 314 -192 323 -190 319 -192 b 306 -191 311 -192 308 -192 b 294 -177 302 -188 302 -188 b 257 -140 287 -170 265 -148 b 19 -18 193 -84 114 -44 b 0 0 2 -13 0 -11 b 16 16 0 9 2 13 b 110 49 47 24 89 40 b 117 52 111 49 114 51 b 145 65 126 56 130 58 b 281 163 200 93 245 124 b 300 186 288 170 291 174 b 306 190 300 187 303 188 m 317 137 b 313 142 315 141 314 142 b 308 137 313 142 311 141 b 161 4 276 84 220 33 b 155 0 159 1 155 0 b 163 -4 155 0 159 -2 b 308 -138 220 -34 276 -84 b 313 -142 311 -141 313 -142 b 317 -138 314 -142 315 -141 b 464 -4 351 -84 406 -34 b 470 0 468 -2 470 0 b 464 4 470 0 468 1 b 317 137 406 33 351 84 \"},\n\"v47\":{\"x_min\":-24.5,\"x_max\":315.78125,\"ha\":322,\"o\":\"m -24 -145 l -24 -5 l -20 -5 b 1 -26 -10 -5 -6 -9 b 175 -241 31 -86 96 -166 b 314 -548 259 -323 304 -420 b 315 -589 315 -555 315 -571 b 314 -630 315 -606 315 -623 b 298 -730 311 -664 306 -699 l 295 -742 l 296 -748 b 314 -850 304 -778 311 -813 b 315 -892 315 -857 315 -874 b 314 -932 315 -909 315 -925 b 298 -1032 311 -967 306 -1002 l 295 -1045 l 296 -1050 b 314 -1153 304 -1081 311 -1115 b 315 -1193 315 -1160 315 -1177 b 314 -1235 315 -1211 315 -1228 b 217 -1526 306 -1338 270 -1444 b 201 -1533 213 -1532 208 -1533 b 182 -1522 193 -1533 185 -1529 b 179 -1514 181 -1518 179 -1517 b 189 -1489 179 -1508 182 -1501 b 266 -1217 240 -1403 266 -1308 b 262 -1156 266 -1196 265 -1177 b 110 -907 247 -1043 190 -950 b 0 -889 87 -895 50 -889 l -1 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 1 -631 -10 -610 -6 -614 b 175 -846 31 -691 96 -771 b 259 -956 213 -884 236 -914 b 265 -966 262 -961 264 -966 b 265 -966 265 -966 265 -966 b 265 -953 265 -964 265 -959 b 266 -920 266 -943 266 -932 b 262 -853 266 -898 265 -873 b 110 -605 247 -741 190 -648 b 0 -587 87 -592 50 -587 l -1 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 1 -328 -10 -308 -6 -312 b 175 -544 31 -388 96 -469 b 259 -655 213 -581 236 -612 b 265 -663 262 -659 264 -663 b 265 -663 265 -663 265 -663 b 265 -650 265 -663 265 -657 b 266 -617 266 -641 266 -630 b 262 -551 266 -595 265 -570 b 110 -303 247 -438 190 -345 b 0 -284 87 -290 50 -284 l -1 -284 l -24 -284 l -24 -145 \"},\n\"v49\":{\"x_min\":0,\"x_max\":630.203125,\"ha\":643,\"o\":\"m 308 204 b 314 205 310 205 313 205 b 326 201 319 205 323 204 b 355 154 328 199 338 180 b 401 83 362 142 392 95 l 409 72 b 431 41 412 66 424 49 b 619 -174 498 -51 570 -134 b 630 -192 626 -180 630 -186 b 626 -202 630 -195 628 -199 b 616 -206 623 -205 620 -206 b 552 -188 608 -206 592 -202 b 310 -155 488 -169 392 -155 b 268 -156 295 -155 281 -155 b 77 -188 197 -161 126 -173 b 13 -206 35 -202 20 -206 b 9 -206 12 -206 10 -206 b 0 -191 2 -202 0 -197 b 8 -176 0 -186 2 -180 b 204 49 58 -136 138 -43 l 220 72 l 227 83 b 295 188 245 108 281 166 b 308 204 299 197 304 202 m 315 147 b 314 147 315 147 314 147 b 314 147 314 147 314 147 b 306 129 314 145 310 138 l 296 105 b 281 72 292 97 284 77 l 274 56 b 181 -123 247 -4 212 -72 l 174 -134 l 176 -133 b 314 -123 215 -127 272 -123 b 451 -133 356 -123 413 -127 l 454 -134 l 449 -123 b 353 56 417 -72 381 -4 l 347 72 b 332 105 344 77 336 97 l 322 129 b 315 147 318 138 315 145 \"},\n\"v4a\":{\"x_min\":70.78125,\"x_max\":378.390625,\"ha\":315,\"o\":\"m 246 373 b 254 373 249 373 251 373 b 372 324 303 373 360 351 b 378 302 377 317 378 309 b 338 251 378 278 362 255 b 328 249 334 249 332 249 b 283 294 303 249 283 270 b 288 315 283 301 284 308 b 289 319 289 317 289 319 b 289 319 289 319 289 319 b 283 320 289 320 287 320 b 270 322 279 322 274 322 b 206 288 242 322 215 308 b 206 283 206 287 206 285 b 257 223 206 267 230 238 b 284 206 272 213 277 210 b 351 90 328 173 351 130 b 340 47 351 74 348 59 b 205 -30 314 -2 264 -30 b 182 -29 198 -30 190 -30 b 84 15 147 -24 103 -5 b 70 48 74 24 70 36 b 108 99 70 70 85 94 b 121 102 112 101 117 102 b 167 56 147 102 167 80 b 159 31 167 48 164 40 l 156 26 l 157 26 b 190 20 167 22 178 20 b 220 26 201 20 212 22 b 258 65 243 34 258 51 b 257 70 258 66 258 69 b 204 126 249 94 234 109 b 114 258 148 158 114 209 b 125 302 114 273 118 288 b 246 373 147 342 193 370 \"},\n\"v4b\":{\"x_min\":0,\"x_max\":503.609375,\"ha\":514,\"o\":\"m 274 430 b 277 430 276 430 277 430 b 310 394 296 430 310 415 b 308 383 310 391 308 387 b 306 367 307 381 307 374 b 236 120 298 305 272 210 b 40 -273 189 -5 125 -134 b 20 -287 35 -283 27 -287 b 5 -281 14 -287 9 -285 b 0 -267 1 -277 0 -273 b 9 -242 0 -262 2 -255 b 246 395 137 -12 232 242 b 274 430 249 416 257 427 m 468 430 b 472 430 469 430 470 430 b 503 394 490 430 503 415 b 502 383 503 391 503 387 b 499 367 502 381 500 374 b 431 120 491 305 465 210 b 234 -273 382 -5 318 -134 b 213 -287 228 -283 220 -287 b 198 -281 208 -287 202 -285 b 193 -267 194 -277 193 -273 b 202 -242 193 -262 196 -255 b 439 395 330 -12 426 242 b 468 430 442 416 451 427 \"},\n\"v4d\":{\"x_min\":-311.6875,\"x_max\":310.328125,\"ha\":317,\"o\":\"m -9 388 b -2 390 -8 390 -5 390 b 5 388 1 390 4 390 b 19 378 10 387 16 383 b 23 333 23 371 23 371 b 24 298 23 299 24 298 b 81 276 34 298 65 285 b 213 91 145 240 190 177 b 224 24 217 76 224 36 b 257 24 224 24 235 24 b 299 19 292 24 292 24 b 310 -1 306 15 310 6 b 299 -23 310 -11 306 -19 b 257 -27 292 -27 292 -27 b 224 -29 235 -27 224 -29 b 213 -95 224 -40 217 -80 b 81 -280 190 -181 145 -244 b 24 -301 65 -290 34 -301 b 23 -335 24 -301 23 -303 l 23 -340 b 17 -381 23 -374 23 -374 b -1 -391 13 -388 5 -391 b -21 -381 -9 -391 -17 -388 b -27 -340 -27 -374 -27 -374 l -27 -335 b -28 -301 -27 -303 -27 -301 b -85 -280 -38 -301 -69 -290 b -217 -95 -149 -244 -194 -181 b -228 -29 -221 -80 -228 -40 b -259 -27 -228 -29 -238 -27 b -300 -23 -294 -27 -294 -27 b -311 -2 -307 -19 -311 -11 b -294 23 -311 8 -304 19 b -259 24 -291 23 -284 24 b -228 24 -239 24 -228 24 b -217 91 -228 36 -221 76 b -85 276 -194 177 -149 240 b -28 298 -69 285 -38 298 b -27 333 -27 298 -27 299 b -27 371 -27 362 -27 369 b -9 388 -24 378 -17 385 m -27 136 b -28 247 -27 197 -28 247 b -61 216 -31 247 -53 226 b -123 33 -95 172 -121 98 l -125 24 l -76 24 l -27 24 l -27 136 m 29 242 b 24 247 27 245 24 247 b 23 136 24 247 23 197 l 23 24 l 72 24 l 121 24 l 119 33 b 29 242 115 116 77 206 m -27 -140 l -27 -27 l -76 -27 l -125 -27 l -123 -36 b -61 -220 -121 -102 -95 -176 b -28 -251 -53 -230 -31 -251 b -27 -140 -28 -251 -27 -201 m 119 -36 l 121 -27 l 72 -27 l 23 -27 l 23 -140 b 24 -251 23 -201 24 -251 b 57 -220 27 -251 49 -230 b 119 -36 91 -176 117 -102 \"},\n\"v4e\":{\"x_min\":0,\"x_max\":239.5625,\"ha\":244,\"o\":\"m 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -106 l 239 -448 l 238 -451 b 219 -463 234 -459 225 -463 b 198 -451 210 -463 202 -459 l 197 -448 l 197 -324 b 197 -201 197 -248 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 \"},\n\"v51\":{\"x_min\":-1.359375,\"x_max\":455.96875,\"ha\":465,\"o\":\"m 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 \"},\n\"v52\":{\"x_min\":-10.890625,\"x_max\":298.078125,\"ha\":294,\"o\":\"m 138 473 b 142 474 140 473 141 474 b 164 459 148 474 153 470 b 191 402 183 442 191 423 b 181 353 191 388 187 371 b 178 349 179 352 178 349 b 179 348 178 348 179 348 b 185 349 181 348 182 348 b 255 376 210 355 234 363 b 272 381 264 381 266 381 b 298 355 287 381 298 370 b 288 330 298 348 298 345 b 171 34 238 254 194 141 b 166 13 168 16 168 16 b 144 1 161 5 152 1 b 121 15 134 1 125 5 b 115 33 119 18 117 24 b 0 330 91 145 49 252 b -10 355 -9 345 -10 348 b 13 381 -10 371 0 381 b 31 376 19 381 25 380 b 132 345 61 358 103 345 l 136 345 l 137 355 b 145 378 138 359 142 370 b 152 415 149 394 152 405 b 137 452 152 427 148 438 b 133 464 134 458 133 460 b 138 473 133 467 134 470 \"},\n\"v53\":{\"x_min\":0,\"x_max\":902.421875,\"ha\":921,\"o\":\"m 17 240 b 24 241 19 241 21 241 b 32 240 28 241 31 241 b 46 229 38 238 43 234 b 50 88 50 223 50 237 b 50 -1 50 63 50 34 b 50 -90 50 -36 50 -65 b 46 -231 50 -238 50 -224 b 25 -242 42 -238 34 -242 b 0 -224 14 -242 4 -235 b 0 2 0 -222 0 -108 b 0 223 0 112 0 220 b 17 240 2 230 9 237 m 110 240 b 118 241 111 241 114 241 b 126 240 121 241 123 241 b 142 223 133 237 140 230 b 144 123 144 220 144 205 b 144 29 144 45 144 29 b 144 29 144 29 144 29 b 393 183 166 106 264 167 b 450 186 412 184 431 186 b 756 29 600 186 732 120 b 756 29 756 29 756 29 b 758 123 758 29 758 45 b 760 227 758 226 758 223 b 784 241 766 237 774 241 b 804 229 792 241 800 237 b 809 88 808 223 809 237 l 809 -1 l 809 -90 b 804 -231 809 -238 808 -224 b 784 -242 800 -238 792 -242 b 762 -231 775 -242 766 -238 b 758 -124 756 -224 758 -231 b 756 -30 758 -47 758 -30 b 756 -30 756 -30 756 -30 b 509 -184 736 -108 637 -169 b 450 -187 488 -187 469 -187 b 144 -30 300 -187 168 -122 b 144 -30 144 -30 144 -30 b 144 -124 144 -30 144 -47 b 140 -231 144 -231 144 -224 b 118 -242 134 -238 126 -242 b 92 -224 107 -242 96 -235 b 92 2 92 -222 92 -108 b 92 223 92 112 92 220 b 110 240 95 230 102 237 m 432 161 b 413 162 426 162 420 162 b 313 41 351 162 313 109 b 347 -73 313 5 323 -34 b 487 -163 385 -133 439 -163 b 578 -97 526 -163 562 -142 b 588 -43 585 -80 588 -62 b 432 161 588 47 518 147 m 868 240 b 876 241 869 241 872 241 b 884 240 879 241 882 241 b 898 229 890 238 894 234 b 902 88 902 223 902 237 l 902 -1 l 902 -90 b 898 -231 902 -238 902 -224 b 876 -242 892 -238 884 -242 b 852 -224 865 -242 854 -235 b 850 2 850 -222 850 -108 b 852 223 850 112 850 220 b 868 240 853 230 860 237 \"},\n\"v54\":{\"x_min\":-24.5,\"x_max\":317.140625,\"ha\":324,\"o\":\"m -24 -161 l -24 -5 l -20 -5 b 0 -24 -9 -5 -2 -12 b 171 -315 21 -124 84 -233 b 317 -660 268 -406 317 -531 b 187 -1014 317 -782 274 -909 b 161 -1034 172 -1034 171 -1034 b 141 -1013 149 -1034 141 -1025 b 152 -991 141 -1004 142 -1002 b 266 -682 228 -899 266 -788 b 174 -430 266 -588 236 -498 b -23 -317 136 -388 66 -348 b -24 -161 -23 -316 -24 -285 \"},\n\"v55\":{\"x_min\":0,\"x_max\":551.25,\"ha\":563,\"o\":\"m 289 644 b 304 645 294 645 299 645 b 404 566 349 645 392 613 b 406 541 405 557 406 549 b 379 471 406 514 397 489 l 377 467 l 382 470 b 509 591 438 485 485 531 b 513 601 510 595 513 599 b 530 609 518 607 524 609 b 551 588 540 609 551 602 b 200 -605 551 584 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 195 112 136 99 165 b 118 256 99 217 106 238 b 204 303 138 287 171 303 b 292 249 238 303 273 285 b 306 199 302 234 306 217 b 279 129 306 173 296 148 l 276 126 l 281 127 b 408 248 336 142 385 190 b 473 470 409 254 473 469 b 473 470 473 470 473 470 b 465 464 473 470 469 467 b 341 421 428 435 383 421 b 236 458 303 421 266 433 b 200 537 212 478 200 508 b 289 644 200 585 234 635 \"},\n\"v58\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 259 1553 b 265 1553 261 1553 264 1553 b 288 1540 272 1553 277 1550 b 367 1351 340 1493 367 1424 b 336 1221 367 1308 357 1263 l 332 1211 l 333 1208 b 367 1077 356 1170 367 1124 b 336 945 367 1032 357 986 l 332 935 l 333 932 b 367 800 356 893 367 848 b 336 669 367 756 357 710 l 332 659 l 333 656 b 367 523 356 617 367 571 b 345 412 367 485 360 446 b 231 273 322 356 284 310 b -1 19 121 195 27 93 b -17 4 -4 11 -10 5 l -21 4 l -21 134 l -21 265 l -17 265 b 133 291 20 265 96 278 b 318 537 245 328 318 433 b 307 603 318 559 315 582 b 303 614 304 612 304 614 b 298 609 302 614 300 613 b 231 549 281 589 258 567 b -1 295 121 471 27 369 b -17 280 -4 287 -10 281 l -21 280 l -21 410 l -21 541 l -17 541 b 133 567 20 541 96 555 b 318 813 245 605 318 709 b 307 880 318 835 315 859 b 303 891 304 888 304 891 b 298 885 302 891 300 888 b 231 825 281 866 258 843 b -1 571 121 748 27 645 b -17 556 -4 563 -10 557 l -21 556 l -21 687 l -21 817 l -17 817 b 133 843 20 817 96 830 b 318 1089 245 881 318 985 b 307 1156 318 1111 315 1134 b 303 1167 304 1164 304 1167 b 298 1161 302 1167 300 1164 b 231 1102 281 1140 258 1120 b -1 848 121 1024 27 921 b -17 832 -4 839 -10 834 l -21 832 l -21 963 l -21 1093 l -17 1093 b 114 1113 12 1093 78 1103 b 313 1314 215 1142 289 1218 b 318 1364 317 1331 318 1347 b 255 1511 318 1422 295 1478 b 243 1532 247 1519 243 1525 b 259 1553 243 1540 250 1550 \"},\n\"v59\":{\"x_min\":0,\"x_max\":464.140625,\"ha\":474,\"o\":\"m 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 \"},\n\"v5a\":{\"x_min\":-171.5,\"x_max\":170.140625,\"ha\":174,\"o\":\"m -6 566 b 0 567 -5 567 -2 567 b 14 556 6 567 12 563 b 92 285 14 555 50 433 b 170 13 166 33 170 19 b 168 13 170 13 170 13 b 161 1 168 8 167 4 l 159 0 l 122 0 l 84 0 l 81 1 b 21 195 76 5 78 -5 b -32 381 -8 297 -32 381 b -87 197 -32 381 -57 298 b -141 8 -115 94 -140 9 b -155 0 -142 2 -149 0 b -171 15 -163 0 -171 5 b -14 556 -171 18 -24 528 b -6 566 -14 560 -10 564 \"},\n\"v5b\":{\"x_min\":-441,\"x_max\":439.640625,\"ha\":449,\"o\":\"m -428 -2 b -421 0 -427 -1 -424 0 b -406 -6 -416 0 -409 -2 b -400 -31 -401 -12 -400 -15 b -1 -352 -392 -215 -215 -352 b 58 -349 19 -352 38 -351 b 398 -31 250 -326 392 -192 b 404 -6 398 -15 400 -12 b 419 -1 408 -2 413 -1 b 439 -13 427 -1 435 -5 b 439 -29 439 -16 439 -22 b 434 -105 439 -48 438 -80 b 0 -489 397 -333 213 -489 b -68 -484 -23 -489 -44 -488 b -441 -36 -280 -452 -436 -263 b -441 -30 -441 -34 -441 -31 b -428 -2 -441 -11 -439 -5 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -57 -102 -62 -87 b -13 -9 -62 -44 -44 -16 \"},\n\"v5c\":{\"x_min\":0,\"x_max\":447.8125,\"ha\":457,\"o\":\"m 0 -87 l 0 0 l 223 0 l 447 0 l 447 -87 l 447 -174 l 223 -174 l 0 -174 l 0 -87 \"},\n\"v5d\":{\"x_min\":-1.359375,\"x_max\":592.078125,\"ha\":604,\"o\":\"m 280 692 b 295 694 283 692 289 694 b 310 692 300 694 307 692 b 357 630 340 684 357 657 b 336 580 357 612 351 594 b 311 538 321 566 311 549 b 352 492 311 512 330 492 b 366 495 357 492 362 492 b 397 553 390 503 397 517 b 415 603 397 576 402 591 b 460 623 427 617 443 623 b 509 599 479 623 498 614 b 522 559 518 587 522 573 b 494 506 522 538 513 519 b 451 495 481 498 473 496 b 415 488 432 495 426 494 b 394 449 404 483 394 464 b 394 448 394 448 394 448 l 394 440 l 397 433 b 428 409 404 420 413 413 b 438 408 431 408 435 408 b 479 431 450 408 462 415 b 528 455 495 448 510 455 b 548 452 534 455 541 453 b 592 391 577 442 592 416 b 549 331 592 365 577 340 b 528 327 541 328 534 327 b 479 351 510 327 495 335 b 438 374 464 367 450 374 b 417 369 431 374 424 373 b 394 333 402 360 394 348 b 400 312 394 326 396 319 b 451 287 408 294 420 288 b 513 258 484 285 499 278 b 522 223 519 247 522 234 b 461 159 522 190 496 159 b 449 161 457 159 453 159 b 397 229 416 167 397 191 b 366 288 397 265 390 278 b 352 290 362 290 357 290 b 315 262 336 290 321 280 b 311 245 313 256 311 251 b 334 204 311 233 318 220 b 355 170 348 190 351 184 b 357 152 356 166 357 159 b 355 136 357 147 356 140 b 295 88 345 104 321 88 b 232 152 264 88 232 112 b 255 204 232 174 238 186 b 279 244 273 222 279 231 l 279 245 b 238 290 279 270 259 290 b 224 288 234 290 228 290 b 193 229 200 278 193 265 b 141 161 193 191 174 167 b 129 159 137 159 133 159 b 68 223 93 159 68 190 b 77 258 68 234 70 247 b 138 287 91 278 106 285 b 185 302 166 287 175 291 b 196 333 193 312 196 323 b 174 369 196 347 187 360 b 152 374 166 373 159 374 b 111 351 140 374 126 367 b 62 327 95 335 80 327 b 51 328 58 327 54 327 b -1 391 16 334 -1 363 b 53 455 -1 420 17 449 b 62 455 57 455 59 455 b 111 431 80 455 95 448 b 152 408 127 415 140 408 b 161 409 155 408 159 408 b 193 433 176 413 186 420 l 196 440 l 196 448 b 196 451 196 449 196 449 b 190 471 196 459 194 463 b 137 495 182 489 167 495 l 134 495 l 134 495 b 68 560 95 495 68 521 b 129 623 68 596 95 623 b 144 621 134 623 138 623 b 193 553 175 614 193 589 b 224 495 193 517 200 503 b 238 492 228 492 234 492 b 279 538 259 492 279 512 b 254 580 279 549 269 566 b 232 630 239 594 232 612 b 280 692 232 657 250 684 m 307 456 b 295 458 303 458 299 458 b 230 391 258 458 230 426 b 236 360 230 381 231 371 b 295 324 249 337 272 324 b 353 360 318 324 341 337 b 360 391 357 370 360 381 b 307 456 360 421 340 451 \"},\n\"v60\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m -367 173 b -362 174 -366 174 -364 174 b -351 173 -357 174 -353 173 b -262 86 -348 172 -328 151 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 72 86 -13 172 6 151 b 157 0 119 37 157 0 b 227 84 159 0 189 37 b 303 174 298 173 296 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 144 -86 213 0 182 -38 b 68 -174 73 -174 74 -173 b 62 -176 66 -176 65 -176 b 53 -174 59 -176 55 -174 b -35 -87 50 -173 29 -152 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -367 173 -375 169 -372 172 \"},\n\"v62\":{\"x_min\":46.28125,\"x_max\":669.671875,\"ha\":563,\"o\":\"m 183 376 b 189 376 185 376 187 376 b 212 374 197 376 208 376 b 265 337 234 369 253 355 b 274 317 268 331 273 320 b 274 316 274 317 274 316 b 280 323 276 316 276 319 b 311 358 288 337 299 348 b 319 366 315 360 318 365 b 356 376 326 373 340 376 b 382 371 364 376 374 374 b 428 337 400 366 417 352 b 436 317 431 331 436 320 b 438 316 436 317 436 316 b 442 323 438 316 439 319 b 475 358 451 337 462 348 b 483 366 477 360 481 365 b 518 376 488 373 503 376 b 544 373 528 376 536 376 b 604 285 579 360 604 326 b 597 249 604 273 601 258 b 543 63 596 247 544 70 b 541 54 543 61 541 55 b 540 44 540 51 540 47 b 552 23 540 33 545 23 b 552 23 552 23 552 23 b 647 126 586 29 627 72 b 658 138 651 136 653 138 b 660 138 660 138 660 138 b 669 129 666 137 669 136 b 654 88 669 122 665 109 b 562 -12 631 43 602 9 l 549 -19 b 521 -27 540 -24 530 -27 b 447 30 490 -27 458 -4 b 443 58 445 38 443 48 b 450 93 443 72 446 84 b 504 278 453 97 504 272 b 507 288 506 283 506 287 b 509 298 507 292 509 295 b 491 326 509 310 502 320 b 487 327 490 327 488 327 b 479 324 484 327 483 326 b 441 270 462 316 443 288 b 435 249 441 265 436 254 b 398 127 434 248 419 195 b 362 4 379 61 362 5 b 328 -1 359 -1 362 -1 b 314 -1 323 -1 319 -1 b 302 -1 310 -1 306 -1 b 266 4 266 -1 269 -1 b 265 6 265 5 265 5 b 303 144 265 13 272 34 b 343 278 325 216 343 276 b 344 288 343 281 344 285 b 345 298 345 291 345 295 b 330 326 345 310 340 320 b 323 327 328 327 325 327 b 317 324 322 327 321 326 b 279 270 300 316 281 288 b 273 249 279 265 274 254 b 236 127 272 248 255 195 b 200 4 216 61 200 5 b 164 -1 197 -1 198 -1 b 151 -1 161 -1 156 -1 b 140 -1 147 -1 142 -1 b 103 4 104 -1 106 -1 b 103 6 103 5 103 5 b 141 144 103 13 108 34 b 181 278 161 216 179 276 b 182 288 181 281 181 285 b 183 298 182 291 183 295 b 168 324 183 310 178 320 b 160 327 166 326 163 327 b 141 320 156 327 151 324 b 69 230 112 305 85 272 b 57 215 65 217 62 215 b 55 215 57 215 55 215 b 46 224 49 215 46 217 b 59 260 46 231 50 242 b 151 363 81 306 112 341 b 161 369 155 365 160 367 b 183 376 166 371 174 374 \"},\n\"v68\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 155 11 -5 172 43 123 l 166 -1 l 168 1 l 170 4 l 170 130 b 171 260 170 256 170 258 b 191 274 175 269 183 274 b 205 267 196 274 201 272 b 212 158 212 262 210 273 l 212 56 l 257 112 b 311 173 304 172 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 216 -6 221 -1 219 -2 l 212 -12 l 212 -147 b 212 -210 212 -173 212 -194 b 205 -292 212 -297 210 -287 b 191 -299 201 -297 196 -299 b 172 -287 183 -299 175 -295 b 170 -174 171 -284 171 -284 l 170 -63 l 127 -117 b 73 -176 84 -170 80 -176 b 68 -176 72 -176 70 -176 b -27 -87 59 -174 65 -180 b -114 0 -74 -38 -112 0 b -182 -86 -114 0 -145 -38 b -258 -174 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 \"},\n\"v6c\":{\"x_min\":-1.359375,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 78 233 b 87 233 81 233 84 233 b 187 140 132 233 174 195 b 193 102 190 127 193 115 b 43 -113 193 22 136 -62 b 27 -119 36 -116 31 -119 b 19 -108 21 -119 19 -115 b 29 -97 19 -102 20 -101 b 102 13 73 -72 102 -27 b 92 51 102 26 98 40 l 91 54 l 84 54 b 8 104 53 54 21 74 b -1 142 1 116 -1 130 b 78 233 -1 187 31 227 \"},\n\"v6d\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m 544 335 b 553 337 548 337 551 337 b 575 313 563 337 570 330 b 589 226 583 285 589 256 b 517 8 589 152 563 76 b 464 -58 507 -4 503 -9 l 401 -136 b 362 -176 372 -172 370 -176 b 357 -176 360 -176 359 -176 b 261 -87 349 -174 355 -180 b 175 0 215 -38 175 0 b 106 -86 175 0 144 -38 b 29 -174 35 -174 36 -173 b 24 -176 28 -176 27 -176 b 14 -174 21 -176 17 -174 b -73 -87 12 -173 -8 -152 b -159 0 -121 -38 -159 0 b -228 -86 -160 0 -190 -38 b -304 -174 -299 -174 -298 -173 b -310 -176 -306 -176 -308 -176 b -319 -174 -314 -176 -318 -174 b -483 -12 -323 -173 -359 -137 l -495 0 l -524 -34 b -562 -77 -553 -73 -556 -76 b -568 -79 -564 -79 -566 -79 b -590 -58 -581 -79 -590 -69 b -588 -49 -590 -55 -589 -52 b -412 170 -585 -43 -417 165 b -398 174 -408 173 -402 174 b -389 173 -394 174 -392 174 b -300 86 -387 172 -366 151 b -215 -1 -254 37 -215 -1 b -145 84 -215 -1 -183 37 b -69 173 -74 173 -76 172 b -63 174 -68 174 -66 174 b -54 173 -61 174 -57 173 b 34 86 -51 172 -31 151 b 119 -1 81 37 119 -1 b 189 84 121 -1 151 37 b 265 173 259 173 258 172 b 270 174 266 174 269 174 b 280 173 274 174 279 173 b 370 84 283 172 303 151 b 455 -1 416 37 455 -1 l 455 -1 b 476 24 455 -1 469 15 b 547 226 522 87 547 159 b 534 302 547 252 543 278 b 532 317 533 308 532 313 b 544 335 532 326 536 333 \"},\n\"v6f\":{\"x_min\":-80.3125,\"x_max\":78.9375,\"ha\":81,\"o\":\"m 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 \"},\n\"v70\":{\"x_min\":0,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 190 b 217 191 215 191 216 191 b 231 184 223 191 228 188 b 249 154 240 167 246 159 b 419 18 292 91 348 45 b 436 -1 435 11 436 8 b 424 -16 436 -9 434 -13 b 308 -87 394 -26 340 -59 b 231 -186 276 -117 257 -142 b 219 -192 228 -191 225 -192 b 198 -174 209 -192 208 -191 b 47 -33 161 -113 110 -63 b 10 -16 34 -26 17 -19 b 0 -1 2 -13 0 -9 b 17 18 0 8 1 11 b 198 173 95 48 156 101 b 213 190 206 187 208 188 \"},\n\"v72\":{\"x_min\":-423.3125,\"x_max\":421.9375,\"ha\":431,\"o\":\"m -262 197 b -247 197 -257 197 -253 197 b -118 162 -210 197 -163 184 b 40 45 -61 134 -13 98 b 277 -95 119 -33 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -55 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 201 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 136 b 421 22 421 37 421 29 b 245 -199 421 -93 338 -199 b 238 -198 243 -199 240 -199 b -44 -47 148 -194 50 -141 b -250 86 -114 22 -183 66 b -295 94 -270 91 -283 94 b -315 91 -302 94 -307 94 b -381 4 -356 81 -381 43 b -355 -56 -381 -18 -372 -40 b -298 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -178 -69 -200 -58 -189 -62 b -151 -122 -160 -81 -151 -101 b -171 -167 -151 -138 -157 -155 b -239 -195 -185 -181 -213 -192 b -257 -197 -245 -197 -250 -197 b -423 -5 -352 -197 -423 -109 b -412 65 -423 16 -419 40 b -262 197 -389 137 -329 188 \"},\n\"v74\":{\"x_min\":-206.890625,\"x_max\":428.75,\"ha\":438,\"o\":\"m 389 -351 b 394 -351 390 -351 393 -351 b 428 -385 413 -351 428 -367 b 428 -394 428 -388 428 -391 b 394 -428 426 -406 421 -410 l 332 -473 l 269 -516 l 205 -560 l 141 -603 l 77 -648 l 13 -692 l -50 -737 l -114 -780 l -145 -802 b -171 -813 -157 -810 -163 -813 b -175 -813 -172 -813 -174 -813 b -206 -777 -194 -811 -206 -795 b -202 -760 -206 -771 -205 -766 b -87 -675 -197 -752 -206 -757 l -34 -639 l 83 -557 l 145 -514 l 209 -470 l 272 -427 b 389 -351 375 -356 381 -352 \"},\n\"v75\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -137 381 b -130 383 -134 383 -133 383 b -111 371 -122 383 -114 378 b -55 224 -110 370 -85 305 b 0 80 -25 145 -1 80 b 54 224 0 80 24 145 b 112 377 114 384 110 373 b 127 384 118 381 122 384 b 148 362 138 384 148 374 l 148 356 l 83 183 b 16 9 47 88 17 11 b -1 0 12 2 5 0 b -14 5 -5 0 -10 1 b -84 183 -19 9 -13 -6 l -149 356 l -149 362 b -137 381 -149 371 -145 378 \"},\n\"v78\":{\"x_min\":0,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 85 514 b 95 517 88 517 89 517 b 114 505 103 517 110 513 l 115 502 l 115 376 b 115 249 115 306 115 249 b 141 258 117 249 127 252 l 167 266 l 172 266 b 190 254 181 265 187 262 l 193 251 l 193 202 l 193 188 b 187 147 193 149 191 152 b 147 130 183 142 182 141 l 115 119 l 115 9 b 115 -99 115 -51 115 -99 b 141 -91 115 -99 127 -95 b 171 -81 166 -81 167 -81 l 171 -81 b 191 -94 181 -81 189 -87 b 193 -142 191 -97 193 -120 b 191 -195 193 -167 191 -194 b 125 -227 187 -205 187 -204 l 115 -230 l 115 -366 l 115 -503 l 114 -506 b 95 -519 110 -514 102 -519 b 74 -506 87 -519 78 -514 l 73 -503 l 73 -374 b 73 -245 73 -260 73 -245 b 73 -245 73 -245 73 -245 b 55 -252 72 -245 63 -249 l 32 -260 b 19 -263 27 -262 23 -263 b 4 -256 13 -263 8 -260 b 0 -215 0 -251 0 -254 b 0 -199 0 -210 0 -206 l 0 -152 l 1 -149 b 8 -140 2 -145 5 -141 b 42 -127 9 -140 24 -133 l 73 -116 l 73 -5 b 73 23 73 4 73 15 b 73 105 73 70 73 105 b 49 97 73 105 61 101 b 17 88 32 91 23 88 b 4 95 10 88 8 91 b 0 137 0 101 0 98 b 0 151 0 141 0 145 l 0 199 l 1 202 b 43 224 5 212 5 212 l 73 234 l 73 367 l 73 502 l 74 505 b 85 514 77 509 81 513 \"},\n\"v79\":{\"x_min\":-1.359375,\"x_max\":899.703125,\"ha\":918,\"o\":\"m 307 349 b 332 351 315 351 323 351 b 443 340 367 351 408 347 b 741 47 607 306 720 195 b 744 0 743 31 744 16 b 660 -303 744 -90 713 -206 b 28 -755 534 -531 304 -695 b 14 -756 23 -755 19 -756 b -1 -741 4 -756 -1 -750 b 21 -720 -1 -731 1 -728 b 567 -56 337 -601 548 -344 b 568 -11 568 -41 568 -24 b 442 285 568 129 525 233 b 325 319 406 308 367 319 b 93 177 232 319 137 266 b 84 154 91 170 84 155 b 84 154 84 154 84 154 b 88 156 84 154 85 155 b 159 177 110 170 134 177 b 257 134 194 177 231 162 b 294 41 281 108 294 73 b 171 -97 294 -24 246 -90 b 156 -98 166 -97 161 -98 b 6 74 73 -98 6 -22 b 6 80 6 76 6 79 b 307 349 10 223 141 340 m 839 215 b 845 216 841 216 842 216 b 862 213 852 216 860 215 b 899 163 887 206 899 184 b 872 117 899 145 890 127 b 847 111 865 112 856 111 b 808 130 833 111 818 117 b 796 162 800 140 796 151 b 839 215 796 187 812 212 m 839 -112 b 845 -112 841 -112 842 -112 b 862 -115 852 -112 860 -113 b 899 -165 887 -122 899 -144 b 872 -210 899 -183 890 -201 b 847 -217 865 -215 856 -217 b 808 -198 833 -217 818 -210 b 796 -165 800 -188 796 -177 b 839 -112 796 -140 812 -116 \"},\n\"v7a\":{\"x_min\":-1.359375,\"x_max\":386.5625,\"ha\":394,\"o\":\"m 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 \"},\n\"v7c\":{\"x_min\":0,\"x_max\":300.8125,\"ha\":307,\"o\":\"m 49 505 b 53 506 50 505 51 506 b 70 496 58 506 62 503 b 81 485 73 492 78 488 l 96 473 l 111 459 l 122 449 l 134 438 l 182 396 l 255 330 b 292 291 292 298 292 298 l 292 290 l 292 284 l 283 270 b 209 36 234 197 209 113 b 288 -170 209 -44 235 -119 b 299 -184 295 -179 299 -181 b 300 -191 300 -187 300 -188 b 285 -206 300 -199 294 -206 b 280 -206 283 -206 281 -206 b 247 -201 270 -202 259 -201 b 176 -222 223 -201 197 -208 b 114 -340 136 -249 114 -292 b 172 -471 114 -384 134 -433 b 185 -492 182 -481 185 -487 b 181 -502 185 -496 183 -499 b 171 -508 176 -505 174 -508 b 152 -498 166 -508 160 -503 b 0 -284 65 -428 12 -352 b 0 -260 0 -278 0 -270 b 1 -238 0 -252 0 -242 b 148 -140 16 -177 73 -140 b 209 -148 167 -140 189 -142 b 215 -149 212 -148 215 -149 b 215 -149 215 -149 215 -149 l 215 -149 b 201 -136 215 -148 209 -142 l 157 -97 l 96 -41 b 17 34 21 24 17 29 b 17 37 17 36 17 36 b 17 38 17 37 17 38 b 25 56 17 44 17 44 b 110 298 81 131 110 219 b 46 474 110 367 88 431 b 38 491 40 480 38 487 b 49 505 38 498 42 502 \"},\n\"v7d\":{\"x_min\":-1.359375,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 \"},\n\"v7f\":{\"x_min\":0,\"x_max\":367.5,\"ha\":375,\"o\":\"m 0 124 l 0 187 l 61 187 l 122 187 l 122 138 l 122 91 l 153 61 l 183 30 l 213 61 l 243 91 l 243 138 l 243 187 l 306 187 l 367 187 l 367 124 l 367 61 l 321 61 l 274 61 l 243 30 l 213 0 l 243 -31 l 274 -62 l 321 -62 l 367 -62 l 367 -124 l 367 -188 l 306 -188 l 243 -188 l 243 -140 l 243 -93 l 213 -62 l 183 -31 l 153 -62 l 122 -93 l 122 -140 l 122 -188 l 61 -188 l 0 -188 l 0 -124 l 0 -62 l 46 -62 l 92 -62 l 123 -31 l 153 0 l 123 30 l 92 61 l 46 61 l 0 61 l 0 124 \"},\n\"v80\":{\"x_min\":29.9375,\"x_max\":420.578125,\"ha\":371,\"o\":\"m 115 345 b 221 347 117 345 166 347 b 411 345 306 347 409 345 b 420 330 416 342 420 335 b 415 319 420 326 419 321 b 178 118 397 303 179 118 b 178 117 178 118 178 117 b 181 117 178 117 178 117 b 189 117 182 117 185 117 b 193 117 190 117 191 117 b 247 98 215 117 232 111 b 296 75 266 83 280 76 b 302 75 299 75 300 75 b 322 91 311 75 315 79 b 322 91 322 91 322 91 b 322 91 322 91 322 91 b 319 91 322 91 321 91 b 313 90 318 90 315 90 b 283 107 300 90 288 97 b 277 126 279 114 277 121 b 319 167 277 149 295 167 b 319 167 319 167 319 167 b 362 118 347 167 362 147 b 355 82 362 108 359 96 b 311 33 349 65 340 55 b 224 1 284 12 253 1 b 194 5 213 1 204 2 b 168 18 183 8 178 11 b 110 36 151 30 130 36 b 57 15 88 36 68 29 b 47 11 54 12 51 11 b 31 20 40 11 34 13 b 29 26 31 22 29 25 b 68 66 29 36 39 45 b 285 250 73 71 281 248 b 285 250 285 250 285 250 b 231 252 285 252 261 252 b 137 250 190 252 141 250 b 93 227 122 248 110 241 b 78 220 88 222 83 220 b 66 227 74 220 70 222 b 63 234 65 229 63 231 b 85 291 63 241 69 252 b 115 345 108 342 108 344 \"},\n\"v81\":{\"x_min\":0,\"x_max\":428.75,\"ha\":438,\"o\":\"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 m 366 131 b 352 134 362 133 357 134 b 219 81 321 134 269 115 b 47 -111 126 23 50 -62 b 47 -112 47 -111 47 -112 b 77 -136 47 -129 58 -136 b 264 -45 118 -136 194 -101 b 382 109 336 12 382 76 b 366 131 382 120 377 129 \"},\n\"v83\":{\"x_min\":-1.359375,\"x_max\":847.96875,\"ha\":865,\"o\":\"m 488 1499 b 495 1500 490 1500 492 1500 b 541 1465 507 1500 521 1490 b 679 1078 622 1372 679 1210 b 677 1050 679 1068 677 1060 b 477 642 668 893 604 764 l 443 609 l 431 596 l 431 592 l 438 562 l 449 508 l 460 458 b 481 355 475 390 481 355 b 481 355 481 355 481 355 b 490 356 481 355 485 355 b 528 358 495 356 511 358 b 558 356 540 358 552 356 b 839 95 699 338 808 237 b 847 22 845 72 847 47 b 631 -303 847 -113 766 -242 b 620 -309 623 -308 620 -309 l 620 -310 b 631 -359 620 -310 626 -333 l 646 -435 l 660 -496 b 672 -588 668 -535 672 -563 b 664 -653 672 -610 669 -630 b 383 -875 630 -792 509 -875 b 201 -810 321 -875 257 -855 b 129 -680 151 -768 129 -730 b 274 -530 129 -592 200 -530 b 351 -553 300 -530 326 -538 b 412 -669 393 -582 412 -626 b 287 -805 412 -735 366 -800 l 279 -805 l 285 -809 b 383 -830 318 -823 351 -830 b 586 -718 464 -830 540 -789 b 626 -584 612 -678 626 -631 b 619 -528 626 -566 623 -548 b 612 -495 619 -526 616 -510 b 577 -324 590 -387 577 -324 b 577 -324 577 -324 577 -324 b 568 -326 575 -324 571 -324 b 528 -334 558 -328 537 -333 b 465 -338 506 -337 485 -338 b 24 -11 269 -338 87 -206 b -1 145 8 41 -1 93 b 96 442 -1 249 32 351 b 322 714 166 541 236 626 l 352 745 l 345 782 l 332 843 l 315 921 b 303 984 310 950 304 978 b 295 1082 298 1017 295 1049 b 413 1426 295 1208 336 1329 b 488 1499 436 1456 477 1496 m 549 1301 b 541 1301 547 1301 544 1301 b 411 1207 500 1301 447 1263 b 355 1004 374 1152 355 1079 b 359 942 355 984 356 963 b 371 881 362 927 363 917 l 385 818 b 392 782 389 799 392 784 l 392 782 b 434 828 393 782 424 816 b 607 1165 534 941 594 1060 b 608 1193 608 1175 608 1183 b 597 1270 608 1224 604 1254 b 549 1301 589 1286 571 1299 m 398 528 b 393 555 396 542 393 553 b 392 555 393 555 393 555 b 317 470 390 555 347 505 b 190 298 266 408 212 334 b 127 70 148 227 127 148 b 155 -77 127 19 137 -30 b 468 -303 209 -216 333 -303 b 519 -299 484 -303 502 -302 b 568 -284 541 -295 568 -287 l 568 -284 b 563 -263 568 -284 566 -274 l 534 -120 l 511 -13 l 496 61 l 480 133 b 469 187 472 176 469 187 b 468 188 469 187 469 188 b 416 162 462 188 430 172 b 337 13 364 126 337 69 b 413 -124 337 -40 363 -93 b 428 -144 424 -131 428 -137 b 428 -149 428 -145 428 -148 b 409 -166 426 -161 419 -166 b 394 -162 405 -166 400 -165 b 240 77 302 -122 240 -27 l 240 77 b 430 342 240 197 315 301 l 436 344 l 426 394 l 398 528 m 548 194 b 526 195 540 195 532 195 b 519 195 524 195 521 195 l 514 195 l 518 177 l 539 79 l 552 15 l 566 -48 l 594 -187 l 605 -240 b 612 -266 609 -254 611 -266 b 612 -266 612 -266 612 -266 b 641 -248 613 -266 630 -256 b 744 -98 692 -212 730 -156 b 751 -40 749 -79 751 -59 b 548 194 751 76 665 181 \"},\n\"v84\":{\"x_min\":25.859375,\"x_max\":164.6875,\"ha\":168,\"o\":\"m 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 \"},\n\"v86\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m -386 173 b -381 174 -385 174 -383 174 b -370 173 -377 174 -372 173 b -281 86 -367 172 -347 151 b -196 0 -235 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 277 172 b 289 174 285 174 288 174 b 299 173 294 174 298 173 b 462 11 303 172 338 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 374 -176 371 -176 b 280 -87 367 -173 345 -152 b 194 0 234 -38 194 0 b 125 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 43 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -141 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -289 -176 b -300 -174 -295 -176 -299 -174 b -464 -12 -304 -173 -340 -137 l -476 0 l -504 -34 b -543 -77 -534 -73 -537 -76 b -549 -79 -545 -79 -547 -79 b -571 -58 -562 -79 -571 -69 b -568 -49 -571 -55 -570 -52 b -392 172 -566 -43 -396 167 b -386 173 -390 172 -387 173 \"},\n\"v8a\":{\"x_min\":-170.140625,\"x_max\":168.78125,\"ha\":172,\"o\":\"m -160 567 b -122 567 -159 567 -149 567 l -87 567 l -84 566 b -74 553 -78 563 -77 560 b -20 366 -73 551 -49 466 b 31 186 8 267 31 186 b 85 371 31 186 55 269 b 140 559 114 473 138 557 b 153 567 141 564 148 567 b 168 559 159 567 166 564 b 168 555 168 557 168 557 b 92 281 168 548 159 513 b 14 13 50 134 14 13 b 0 0 14 6 6 0 b -17 15 -8 0 -17 8 b -93 283 -17 15 -51 136 b -170 552 -166 533 -170 548 b -170 553 -170 552 -170 552 b -160 567 -170 560 -167 564 \"},\n\"v8b\":{\"x_min\":0,\"x_max\":319.859375,\"ha\":326,\"o\":\"m 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 \"},\n\"v8c\":{\"x_min\":-330.75,\"x_max\":329.390625,\"ha\":336,\"o\":\"m -133 483 b -117 484 -127 484 -122 484 b 31 373 -51 484 9 440 b 35 348 34 365 35 356 b -25 285 35 313 10 285 b -87 331 -55 285 -76 302 b -167 402 -100 376 -133 402 b -191 398 -175 402 -183 401 b -227 341 -215 388 -227 369 b -225 320 -227 334 -227 327 b -13 74 -209 230 -125 133 b 6 65 -4 70 5 66 l 9 63 l 10 65 b 117 231 12 68 40 112 l 189 341 l 242 424 b 268 460 262 456 264 458 b 283 464 273 463 277 464 b 308 438 296 464 308 453 l 308 437 b 287 396 308 430 308 428 l 95 98 l 59 43 l 58 41 l 65 37 b 253 -156 151 -8 217 -77 b 281 -285 272 -199 281 -244 b 148 -481 281 -381 231 -463 b 115 -485 137 -484 126 -485 b -32 -376 51 -485 -9 -442 b -36 -349 -35 -366 -36 -358 b 25 -287 -36 -315 -12 -287 b 85 -333 54 -287 74 -302 b 166 -403 99 -377 133 -403 b 190 -399 174 -403 182 -402 b 225 -342 215 -390 225 -370 b 224 -322 225 -335 225 -328 b 12 -76 208 -231 125 -134 b -8 -66 2 -72 -6 -68 l -10 -65 l -12 -66 b -118 -231 -13 -68 -42 -113 l -190 -342 l -243 -426 b -269 -462 -264 -458 -265 -458 b -284 -466 -274 -464 -279 -466 b -310 -440 -298 -466 -310 -455 l -310 -438 b -288 -398 -310 -430 -308 -430 l -96 -99 l -59 -44 l -59 -43 l -66 -38 b -281 284 -198 33 -281 158 l -281 284 b -133 483 -281 392 -220 474 m 254 177 b 266 179 258 177 262 179 b 319 149 287 179 307 167 b 329 115 326 140 329 127 b 319 79 329 102 326 90 b 268 51 307 61 287 51 b 221 72 250 51 234 58 b 205 115 210 84 205 99 b 254 177 205 142 223 170 m -281 -54 b -269 -52 -277 -52 -273 -52 b -223 -73 -253 -52 -235 -59 b -206 -116 -212 -84 -206 -101 b -216 -151 -206 -129 -209 -141 b -269 -179 -228 -170 -249 -179 b -314 -159 -285 -179 -302 -173 b -330 -116 -325 -147 -330 -131 b -281 -54 -330 -88 -313 -61 \"},\n\"v8d\":{\"x_min\":-1.359375,\"x_max\":255.890625,\"ha\":261,\"o\":\"m 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 \"},\n\"v8f\":{\"x_min\":-21.78125,\"x_max\":362.0625,\"ha\":369,\"o\":\"m 302 1031 b 308 1032 304 1032 307 1032 b 330 1016 318 1032 325 1027 b 362 867 351 970 362 920 b 340 738 362 824 353 780 l 336 727 l 340 717 b 362 591 355 677 362 634 b 257 323 362 496 325 401 b 204 272 243 306 227 290 b 20 56 129 206 66 133 b -1 18 12 44 0 22 b -19 4 -4 9 -12 4 l -21 4 l -21 140 l -21 276 l -12 277 b 167 333 61 288 127 309 b 319 598 262 388 319 491 b 311 664 319 620 317 642 l 310 673 l 304 664 b 204 548 279 620 250 587 b 20 333 129 483 66 409 b -1 292 12 320 0 298 b -19 280 -4 285 -12 280 l -21 280 l -21 416 l -21 552 l -12 553 b 167 609 61 564 127 585 b 319 874 264 666 319 770 b 294 992 319 914 311 954 b 288 1011 288 1004 288 1007 b 302 1031 288 1021 294 1028 \"},\n\"v90\":{\"x_min\":-171.5,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\n\"v92\":{\"x_min\":0,\"x_max\":598.890625,\"ha\":611,\"o\":\"m 62 181 b 77 183 66 183 72 183 b 91 181 83 183 88 183 b 202 131 100 180 106 177 l 299 87 l 394 131 b 517 183 499 181 502 183 b 519 183 517 183 518 183 b 598 104 567 183 598 144 b 577 49 598 84 592 65 b 518 15 567 38 563 37 b 484 0 499 6 484 0 b 518 -16 484 -1 499 -8 b 577 -51 563 -38 567 -40 b 598 -105 592 -66 598 -86 b 519 -184 598 -145 567 -184 b 517 -184 518 -184 517 -184 b 394 -133 502 -184 499 -183 l 299 -88 l 202 -133 b 81 -184 99 -183 95 -184 b 77 -184 80 -184 78 -184 b 0 -105 29 -184 0 -145 b 20 -51 0 -86 5 -66 b 80 -16 29 -40 34 -38 b 114 -1 98 -8 114 -1 b 80 15 114 0 98 6 b 20 49 34 37 29 38 b 0 104 6 65 0 84 b 62 181 0 140 23 174 m 88 134 b 74 136 85 134 80 136 b 68 134 72 136 69 136 b 46 104 54 130 46 117 b 55 81 46 95 49 88 b 149 34 59 76 53 80 b 224 -1 190 15 224 0 b 144 -38 224 -1 187 -18 b 54 -84 59 -79 58 -79 b 46 -105 49 -90 46 -98 b 76 -137 46 -122 58 -137 b 78 -137 77 -137 77 -137 b 194 -86 87 -137 76 -141 b 298 -36 250 -58 298 -36 b 298 -36 298 -36 298 -36 b 402 -84 299 -36 345 -58 b 518 -137 522 -141 510 -137 b 521 -137 519 -137 519 -137 b 551 -105 539 -137 551 -122 b 541 -83 551 -98 548 -90 b 447 -36 537 -77 544 -81 b 374 -1 406 -16 374 -1 b 447 34 374 0 406 15 b 541 81 544 80 537 76 b 551 104 548 88 551 97 b 521 136 551 120 539 136 b 518 136 519 136 519 136 b 517 136 518 136 517 136 l 517 136 b 402 83 511 136 511 136 b 298 34 345 56 299 34 b 298 34 298 34 298 34 b 194 84 298 34 250 56 b 88 134 137 111 89 133 \"},\n\"v93\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 205 b 219 205 213 205 216 205 b 239 183 228 205 231 204 b 421 -163 298 40 363 -83 b 438 -191 434 -180 438 -186 b 436 -197 438 -192 438 -195 b 424 -206 434 -204 431 -206 b 406 -201 420 -206 415 -205 b 216 -156 347 -172 281 -156 b 23 -205 148 -156 80 -173 b 14 -206 20 -206 17 -206 b 0 -191 6 -206 0 -201 b 6 -176 0 -187 1 -183 b 202 192 63 -104 142 45 b 212 205 205 199 208 202 m 264 48 l 249 81 l 243 94 l 242 91 b 89 -126 208 36 137 -66 b 81 -138 85 -133 81 -138 b 81 -138 81 -138 81 -138 b 81 -138 81 -138 81 -138 b 95 -133 81 -138 87 -136 b 280 -94 156 -108 221 -94 b 334 -98 299 -94 317 -95 b 343 -99 338 -99 343 -99 b 343 -99 343 -99 343 -99 b 338 -94 343 -99 341 -97 b 264 48 318 -58 287 1 \"},\n\"v94\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 \"},\n\"v95\":{\"x_min\":0,\"x_max\":406.96875,\"ha\":415,\"o\":\"m 55 181 b 70 183 61 183 66 183 b 111 170 85 183 99 179 b 160 130 115 167 137 149 l 202 95 l 245 130 b 319 181 299 176 302 179 b 334 183 325 183 330 183 b 406 109 375 183 406 148 b 401 81 406 99 405 91 b 348 24 394 65 390 59 b 318 -1 332 11 318 0 b 348 -26 318 -1 332 -12 b 401 -83 390 -61 394 -66 b 406 -111 405 -93 406 -101 b 334 -184 406 -149 375 -184 b 319 -183 330 -184 325 -184 b 245 -131 302 -180 299 -177 l 202 -97 l 160 -131 b 85 -183 107 -177 103 -180 b 70 -184 80 -184 76 -184 b 0 -111 31 -184 0 -149 b 4 -83 0 -101 1 -93 b 58 -26 10 -66 16 -61 b 88 -1 74 -12 88 -1 b 58 24 88 0 74 11 b 10 69 23 54 17 59 b 0 109 2 81 0 95 b 55 181 0 142 21 173 m 83 133 b 72 136 78 136 76 136 b 57 131 66 136 61 134 b 46 109 49 126 46 117 b 50 93 46 104 47 98 b 107 45 51 91 77 70 b 160 0 137 20 160 0 b 107 -47 160 -1 137 -22 b 50 -94 77 -72 51 -93 b 46 -111 47 -99 46 -105 b 59 -134 46 -120 50 -130 b 72 -137 62 -136 68 -137 b 83 -136 76 -137 80 -136 b 144 -84 84 -134 107 -116 b 202 -36 176 -58 202 -36 b 261 -84 202 -36 230 -58 b 323 -136 299 -116 321 -134 b 334 -137 326 -136 330 -137 b 345 -134 338 -137 343 -136 b 360 -111 355 -130 360 -120 b 355 -94 360 -105 359 -99 b 299 -47 353 -93 329 -72 b 245 0 269 -22 245 -1 b 299 45 245 0 269 20 b 355 93 329 70 353 91 b 360 109 359 98 360 104 b 345 133 360 119 355 129 b 334 136 343 134 338 136 b 323 134 330 136 326 134 b 261 83 321 133 299 115 b 202 34 230 56 202 34 b 144 83 202 34 176 56 b 83 133 106 115 84 133 \"},\n\"v97\":{\"x_min\":-228.671875,\"x_max\":227.3125,\"ha\":232,\"o\":\"m -217 487 l -213 488 l 0 488 l 212 488 l 216 487 b 225 476 220 484 224 480 l 227 473 l 227 244 l 227 15 l 225 12 b 206 0 223 4 215 0 b 197 1 204 0 200 0 b 187 12 193 4 189 6 l 186 15 l 186 138 l 186 262 l -1 262 l -187 262 l -187 138 l -187 15 l -189 12 b -208 0 -193 4 -200 0 b -227 12 -216 0 -223 4 l -228 15 l -228 244 l -228 473 l -227 476 b -217 487 -225 480 -221 484 \"},\n\"v9a\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 230 1031 b 238 1032 232 1032 235 1032 b 259 1014 245 1032 251 1027 b 367 662 330 906 367 782 b 364 602 367 641 367 621 b 232 317 352 488 304 384 b 57 120 155 245 103 187 b -1 18 31 84 6 40 b -19 4 -4 11 -12 4 l -21 4 l -21 159 l -21 315 l -16 315 b 96 335 10 315 62 324 b 315 695 227 380 315 527 b 313 738 315 709 314 724 b 224 991 304 825 273 916 b 216 1013 219 999 216 1007 b 230 1031 216 1021 220 1028 \"},\n\"v9b\":{\"x_min\":-24.5,\"x_max\":313.0625,\"ha\":319,\"o\":\"m -24 -133 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 142 -213 13 -61 74 -144 b 258 -376 196 -269 230 -315 b 313 -605 295 -449 313 -528 b 292 -742 313 -652 306 -699 b 288 -752 289 -748 288 -752 b 288 -752 288 -752 288 -752 b 292 -764 289 -753 291 -757 b 313 -907 306 -811 313 -860 b 292 -1045 313 -954 306 -1002 b 288 -1054 289 -1050 288 -1054 b 288 -1054 288 -1054 288 -1054 b 292 -1067 289 -1054 291 -1060 b 313 -1210 306 -1113 313 -1161 b 292 -1346 313 -1257 306 -1304 b 288 -1357 289 -1353 288 -1357 b 288 -1357 288 -1357 288 -1357 b 292 -1368 289 -1357 291 -1363 b 313 -1512 306 -1415 313 -1464 b 292 -1648 313 -1560 306 -1605 b 288 -1660 289 -1654 288 -1660 b 288 -1660 288 -1660 288 -1660 b 292 -1671 289 -1660 291 -1665 b 313 -1814 306 -1719 313 -1766 b 250 -2040 313 -1897 291 -1977 b 232 -2062 238 -2057 236 -2059 b 221 -2065 230 -2063 225 -2065 b 200 -2045 210 -2065 201 -2057 b 200 -2043 200 -2044 200 -2044 b 208 -2026 200 -2037 202 -2034 b 269 -1826 249 -1966 269 -1897 b 153 -1544 269 -1726 230 -1625 b -9 -1472 115 -1506 58 -1481 b -21 -1471 -14 -1471 -19 -1471 l -24 -1471 l -24 -1343 l -24 -1215 l -20 -1215 b -1 -1229 -12 -1215 -4 -1221 b 142 -1424 13 -1270 74 -1353 b 257 -1582 196 -1478 228 -1524 b 264 -1594 261 -1589 264 -1594 l 264 -1594 b 265 -1582 264 -1594 264 -1589 b 270 -1525 268 -1562 270 -1544 b 153 -1243 270 -1424 228 -1321 b -9 -1170 115 -1203 58 -1178 b -21 -1168 -14 -1170 -19 -1168 l -24 -1168 l -24 -1041 l -24 -913 l -20 -913 b -1 -927 -12 -913 -4 -918 b 142 -1121 13 -967 74 -1050 b 257 -1281 196 -1175 228 -1221 b 264 -1292 261 -1286 264 -1292 l 264 -1292 b 265 -1279 264 -1292 264 -1286 b 270 -1222 268 -1261 270 -1242 b 153 -941 270 -1121 228 -1018 b -9 -867 115 -900 58 -875 b -21 -866 -14 -867 -19 -866 l -24 -866 l -24 -738 l -24 -610 l -20 -610 b -1 -624 -12 -610 -4 -616 b 142 -818 13 -664 74 -749 b 257 -978 196 -873 228 -918 b 264 -989 261 -984 264 -989 l 264 -989 b 265 -977 264 -989 264 -984 b 270 -920 268 -959 270 -939 b 153 -638 270 -818 228 -716 b -9 -564 115 -598 58 -573 b -21 -563 -14 -564 -19 -563 l -24 -563 l -24 -435 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 142 -516 13 -363 74 -446 b 257 -675 196 -571 228 -616 b 264 -687 261 -681 264 -687 l 264 -687 b 265 -674 264 -687 264 -681 b 270 -617 268 -656 270 -637 b 153 -335 270 -516 228 -413 b -9 -262 115 -295 58 -270 b -21 -260 -14 -262 -19 -260 l -24 -260 l -24 -133 \"},\n\"v9c\":{\"x_min\":-166.0625,\"x_max\":-25.859375,\"ha\":0,\"o\":\"m -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 \"},\n\"v9e\":{\"x_min\":0,\"x_max\":607.0625,\"ha\":619,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 m 347 631 b 353 632 348 632 351 632 b 374 620 363 632 371 628 b 375 383 375 616 375 616 l 375 148 l 377 151 b 492 199 415 183 454 199 b 537 191 507 199 522 197 b 607 84 582 176 607 134 b 583 0 607 58 598 29 b 455 -142 562 -40 533 -72 l 378 -215 b 355 -229 364 -229 362 -229 b 334 -216 345 -229 337 -224 l 333 -212 l 333 201 l 333 616 l 334 620 b 347 631 337 624 341 630 m 465 131 b 451 133 461 133 455 133 b 445 133 449 133 446 133 b 379 87 419 129 396 113 l 375 80 l 375 -37 l 375 -156 l 378 -152 b 499 81 451 -72 499 20 l 499 83 b 465 131 499 113 490 126 \"},\n\"va3\":{\"x_min\":58.53125,\"x_max\":228.671875,\"ha\":294,\"o\":\"m 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 \"},\n\"va5\":{\"x_min\":0,\"x_max\":349.8125,\"ha\":357,\"o\":\"m 88 302 b 103 303 93 302 98 303 b 202 224 149 303 191 270 b 205 199 204 216 205 208 b 178 129 205 173 196 147 l 175 126 l 182 127 b 307 249 236 142 284 190 b 313 259 308 254 311 258 b 329 267 317 265 323 267 b 349 247 340 267 349 259 b 201 -263 349 242 204 -258 b 182 -273 197 -270 190 -273 b 163 -260 174 -273 166 -269 b 161 -256 161 -259 161 -258 b 217 -59 161 -248 170 -220 b 272 129 247 43 272 127 b 272 129 272 129 272 129 b 264 122 272 129 268 126 b 140 80 227 94 183 80 b 36 115 102 80 65 91 b 0 194 10 136 0 165 b 88 302 0 244 32 292 \"},\n\"va9\":{\"x_min\":-24.5,\"x_max\":314.421875,\"ha\":321,\"o\":\"m -24 -145 l -24 -5 l -20 -5 b 0 -23 -9 -5 -2 -12 b 27 -87 4 -38 14 -66 b 138 -220 53 -136 88 -177 b 235 -328 179 -255 208 -288 b 314 -592 287 -409 314 -501 b 292 -732 314 -639 307 -687 l 289 -742 l 294 -756 b 314 -896 307 -802 314 -849 b 292 -1035 314 -943 307 -991 l 289 -1045 l 294 -1057 b 314 -1197 307 -1104 314 -1152 b 292 -1338 314 -1246 307 -1292 l 289 -1347 l 294 -1360 b 314 -1500 307 -1407 314 -1454 b 273 -1689 314 -1565 300 -1628 b 250 -1712 265 -1710 261 -1712 b 228 -1691 236 -1712 228 -1704 l 228 -1685 l 234 -1675 b 270 -1507 258 -1621 270 -1564 b 98 -1193 270 -1381 209 -1261 b 40 -1174 76 -1179 58 -1174 b -10 -1189 24 -1174 8 -1178 b -20 -1192 -14 -1192 -16 -1192 l -24 -1192 l -24 -1052 l -24 -913 l -20 -913 b 0 -931 -9 -913 -2 -920 b 27 -995 4 -946 14 -974 b 138 -1128 53 -1043 88 -1085 b 257 -1275 190 -1172 228 -1220 b 262 -1283 259 -1279 262 -1283 l 262 -1283 b 269 -1249 264 -1282 268 -1260 b 270 -1206 270 -1233 270 -1220 b 98 -891 270 -1075 206 -957 b 40 -871 76 -877 58 -871 b -10 -886 24 -871 8 -875 b -20 -889 -14 -889 -16 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 0 -628 -9 -610 -2 -617 b 27 -692 4 -644 14 -671 b 138 -825 53 -741 88 -782 b 257 -973 190 -870 228 -917 b 262 -981 259 -977 262 -981 l 262 -981 b 269 -946 264 -979 268 -957 b 270 -903 270 -931 270 -917 b 98 -588 270 -774 206 -655 b 40 -569 76 -574 58 -569 b -10 -584 24 -569 8 -574 b -20 -587 -14 -587 -16 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 0 -326 -9 -308 -2 -315 b 27 -390 4 -341 14 -369 b 138 -523 53 -438 88 -480 b 257 -670 190 -567 228 -614 b 262 -678 259 -674 262 -678 b 262 -678 262 -678 262 -678 b 269 -644 264 -677 268 -656 b 270 -601 270 -628 270 -614 b 98 -285 270 -471 206 -352 b 40 -266 76 -273 58 -266 b -10 -281 24 -266 8 -272 b -20 -284 -14 -284 -16 -284 l -24 -284 l -24 -145 \"},\n\"vaa\":{\"x_min\":-1.359375,\"x_max\":752.703125,\"ha\":768,\"o\":\"m 490 985 b 504 986 495 986 500 986 b 604 907 551 986 593 954 b 607 884 607 900 607 892 b 581 813 607 857 597 831 l 578 810 l 583 811 b 710 932 638 827 687 873 b 714 943 711 936 713 942 b 730 952 720 949 725 952 b 752 931 741 952 752 943 b 200 -946 752 927 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 538 314 477 300 508 b 318 598 300 559 306 580 b 404 645 340 630 372 645 b 494 592 439 645 475 627 b 507 541 502 577 507 559 b 480 471 507 516 498 489 l 477 467 l 483 470 b 608 589 537 485 586 531 b 675 811 611 595 675 810 b 675 811 675 811 675 811 b 666 806 675 811 671 809 b 543 763 628 777 585 763 b 438 799 504 763 468 775 b 401 878 412 820 401 849 b 490 985 401 928 434 977 \"},\n\"vab\":{\"x_min\":0,\"x_max\":272.21875,\"ha\":278,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 \"},\n\"vad\":{\"x_min\":0,\"x_max\":873.828125,\"ha\":892,\"o\":\"m 0 0 l 0 703 l 81 703 l 164 703 l 164 0 l 164 -705 l 81 -705 l 0 -705 l 0 0 m 225 0 l 225 703 l 246 703 l 268 703 l 268 366 l 268 30 l 274 36 b 314 79 284 44 302 63 b 413 302 357 137 392 213 b 432 327 419 324 421 327 b 449 306 443 327 447 322 b 611 115 457 195 529 115 b 651 122 624 115 638 117 b 728 316 705 140 724 188 b 729 388 728 342 729 366 b 671 635 729 533 711 602 b 581 662 649 652 616 662 b 477 637 545 662 510 653 l 475 635 l 477 634 b 503 627 488 632 495 631 b 545 556 532 612 545 584 b 491 480 545 524 526 491 b 465 474 481 476 473 474 b 379 563 417 474 379 516 b 389 602 379 576 382 588 b 541 691 409 641 479 681 b 582 694 555 692 568 694 b 865 462 714 694 834 598 b 873 392 871 440 873 416 b 865 317 873 367 871 341 b 639 84 839 194 748 101 b 612 83 630 83 620 83 b 511 116 577 83 543 94 b 504 120 509 119 506 120 b 504 120 504 120 504 120 b 469 59 504 120 488 93 l 432 -1 l 469 -61 b 504 -122 488 -94 504 -122 b 504 -122 504 -122 504 -122 b 511 -117 506 -122 509 -120 b 612 -84 543 -95 577 -84 b 665 -91 630 -84 647 -87 b 869 -338 771 -122 850 -216 b 873 -392 872 -356 873 -374 b 798 -595 873 -469 847 -539 b 581 -695 741 -662 660 -695 b 406 -626 517 -695 454 -671 b 381 -563 389 -607 381 -585 b 465 -477 381 -519 413 -477 b 545 -559 514 -477 545 -519 b 503 -628 545 -587 532 -613 b 477 -635 495 -632 488 -634 l 475 -637 l 477 -638 b 581 -663 510 -655 545 -663 b 671 -637 616 -663 649 -653 b 729 -391 711 -603 729 -534 b 728 -317 729 -367 728 -344 b 623 -117 722 -173 698 -124 b 611 -116 619 -116 615 -116 b 449 -308 528 -116 457 -198 b 432 -328 447 -323 443 -328 b 413 -303 421 -328 419 -326 b 314 -80 392 -215 357 -138 b 274 -37 302 -65 284 -45 l 268 -31 l 268 -367 l 268 -705 l 246 -705 l 225 -705 l 225 0 \"},\n\"vb1\":{\"x_min\":78.9375,\"x_max\":485.921875,\"ha\":417,\"o\":\"m 362 378 b 378 380 367 380 372 380 b 472 348 415 380 453 367 b 485 315 481 338 485 327 b 462 273 485 298 477 281 b 439 267 454 269 446 267 b 398 290 424 267 409 274 b 344 319 385 309 364 319 b 281 269 315 319 289 301 b 279 262 280 266 279 262 b 276 256 279 260 277 258 b 274 249 276 254 274 251 b 238 127 273 248 257 192 b 201 4 217 61 201 5 b 166 -1 198 -1 200 -1 b 153 -1 163 -1 157 -1 b 141 -1 148 -1 144 -1 b 104 4 106 -1 107 -1 b 104 6 104 5 104 5 b 142 144 104 13 110 34 b 182 278 164 219 181 276 b 183 288 182 281 182 285 b 185 302 185 292 185 298 b 164 330 185 317 176 328 b 159 330 163 330 161 330 b 102 302 140 330 119 320 b 91 294 95 295 93 294 b 88 294 91 294 89 294 b 78 303 83 294 78 298 b 81 312 78 306 78 309 b 200 373 106 347 160 373 b 215 371 205 373 209 371 b 266 335 235 367 254 353 b 269 331 268 333 269 331 b 269 331 269 331 269 331 b 273 335 269 331 270 334 b 362 378 298 359 330 376 \"},\n\"vb3\":{\"x_min\":0,\"x_max\":227.3125,\"ha\":232,\"o\":\"m 91 213 b 100 215 93 215 96 215 b 227 58 167 215 224 144 b 227 52 227 56 227 54 b 61 -201 227 -43 164 -138 b 29 -216 44 -212 36 -216 b 23 -210 27 -216 24 -213 b 21 -205 21 -208 21 -206 b 34 -192 21 -201 25 -197 b 122 -55 89 -161 122 -106 b 104 6 122 -33 117 -12 l 103 9 l 96 9 b 4 79 57 9 17 38 b 0 112 1 90 0 101 b 91 213 0 163 36 209 \"},\n\"vb4\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 80 86 -5 172 13 151 b 166 -1 127 37 166 -1 b 235 84 166 -1 197 37 b 311 173 306 173 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 152 -86 221 -1 190 -38 b 76 -176 81 -174 83 -173 b 70 -176 74 -176 73 -176 b 61 -174 66 -176 62 -174 b -27 -87 58 -173 38 -152 b -114 -1 -74 -38 -112 -1 b -182 -86 -114 -1 -145 -38 b -258 -176 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 \"},\n\"vb6\":{\"x_min\":0,\"x_max\":556.6875,\"ha\":568,\"o\":\"m 289 545 b 298 546 292 545 295 546 b 318 533 306 546 315 541 b 319 428 319 530 319 528 l 319 327 l 334 327 b 526 223 412 326 485 285 b 543 172 537 206 543 190 b 447 76 543 122 503 76 b 445 76 446 76 446 76 b 359 165 394 77 359 119 b 368 205 359 179 362 192 b 441 251 382 233 412 251 b 455 249 446 251 451 251 b 460 248 458 249 460 248 b 460 248 460 248 460 248 b 454 254 460 249 458 251 b 334 295 419 280 378 294 l 319 295 l 319 4 l 319 -287 l 321 -285 b 328 -285 322 -285 325 -285 b 524 -99 424 -277 507 -198 b 541 -79 526 -84 530 -79 b 556 -97 551 -79 556 -84 b 548 -133 556 -105 553 -117 b 334 -317 521 -233 434 -306 b 322 -319 329 -317 323 -317 l 319 -319 l 319 -424 b 319 -471 319 -444 319 -459 b 313 -541 319 -544 318 -535 b 298 -548 308 -545 303 -548 b 279 -534 289 -548 281 -542 b 277 -424 277 -531 277 -530 l 277 -317 l 273 -317 b 13 -95 153 -305 51 -217 b 0 2 4 -62 0 -29 b 182 295 0 126 66 238 b 274 324 210 309 249 320 l 277 324 l 277 427 b 279 533 277 528 277 530 b 289 545 281 538 285 542 m 277 2 b 277 291 277 161 277 291 b 268 288 277 291 273 290 b 144 1 179 265 144 184 b 276 -284 144 -199 175 -267 l 277 -285 l 277 2 \"},\n\"vb7\":{\"x_min\":-176.9375,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"vb9\":{\"x_min\":-122.5,\"x_max\":121.140625,\"ha\":124,\"o\":\"m -16 145 b 0 147 -10 147 -5 147 b 121 -1 66 147 121 77 b 114 -49 121 -16 118 -33 b -1 -148 95 -112 47 -148 b -85 -106 -31 -148 -61 -134 b -122 -1 -110 -76 -122 -38 b -16 145 -122 68 -81 134 m 12 111 b 0 113 8 113 4 113 b -68 22 -29 113 -61 73 b -70 0 -69 15 -70 6 b -13 -113 -70 -49 -47 -98 b -1 -115 -9 -115 -5 -115 b 63 -40 24 -115 53 -83 b 68 -1 66 -27 68 -15 b 12 111 68 48 46 97 \"},\n\"vba\":{\"x_min\":-118.421875,\"x_max\":597.53125,\"ha\":381,\"o\":\"m 460 574 b 464 574 461 574 462 574 b 488 574 470 574 481 574 b 500 573 491 574 498 574 b 594 503 543 570 588 538 b 597 488 596 498 597 494 b 528 417 597 449 564 417 b 502 423 519 417 510 419 b 465 481 477 434 465 458 b 488 528 465 499 472 516 b 490 530 490 530 490 530 b 490 530 490 530 490 530 b 468 517 488 530 475 523 b 349 340 419 485 377 420 b 347 330 348 334 347 330 b 383 328 347 328 363 328 b 428 326 423 328 424 328 b 442 302 438 320 442 312 b 430 281 442 294 438 285 b 385 276 424 277 426 276 l 377 276 l 332 276 l 330 269 b 178 -117 303 126 250 -9 b 1 -249 129 -194 69 -237 b -20 -251 -6 -251 -13 -251 b -114 -187 -65 -251 -100 -227 b -118 -156 -117 -177 -118 -166 b -51 -84 -118 -116 -91 -84 b -31 -87 -46 -84 -39 -86 b 16 -152 0 -95 16 -124 b -12 -205 16 -173 8 -194 b -16 -208 -14 -206 -16 -208 b -14 -208 -16 -208 -14 -208 b -9 -206 -14 -208 -12 -208 b 74 -124 23 -197 54 -166 b 172 224 98 -79 125 22 b 185 276 178 252 183 274 b 185 276 185 276 185 276 b 141 276 185 276 181 276 b 91 280 96 276 96 276 b 77 302 83 285 77 294 b 91 326 77 312 83 320 b 148 328 95 328 96 328 l 198 330 l 202 341 b 460 574 249 473 351 566 \"},\n\"vbf\":{\"x_min\":-53.078125,\"x_max\":513.140625,\"ha\":485,\"o\":\"m 185 383 b 196 384 187 383 191 384 b 277 334 230 384 259 365 b 288 301 281 324 288 306 b 288 297 288 298 288 297 b 294 302 289 297 291 299 b 394 370 323 338 367 367 b 404 371 398 370 401 371 b 510 272 453 371 498 328 b 513 237 513 262 513 251 b 507 172 513 217 511 192 b 326 -34 487 59 412 -26 b 314 -36 322 -36 318 -36 b 274 -24 298 -36 283 -31 l 265 -16 b 224 44 246 -1 232 20 b 223 49 224 47 223 49 b 223 49 223 49 223 49 b 149 -197 221 48 149 -194 b 149 -198 149 -197 149 -198 b 170 -210 149 -202 155 -205 b 187 -215 174 -210 175 -212 b 204 -231 201 -219 204 -222 b 197 -245 204 -240 202 -242 l 194 -248 l 76 -248 l -42 -248 l -46 -245 b -53 -231 -51 -242 -53 -240 b -35 -215 -53 -222 -49 -217 b -13 -210 -21 -212 -20 -212 b -6 -208 -10 -209 -8 -208 b 0 -206 -6 -208 -2 -206 b 25 -188 13 -201 21 -195 b 163 280 28 -183 163 276 b 166 291 163 283 164 287 b 167 302 167 295 167 299 b 155 324 167 315 161 324 b 155 324 155 324 155 324 b 65 230 125 322 85 280 b 53 215 61 217 58 215 b 51 215 53 215 51 215 b 42 224 46 215 42 217 b 57 263 42 231 47 244 b 140 360 77 305 104 337 b 152 370 144 365 149 369 b 185 383 157 376 172 381 m 374 306 b 366 308 371 308 368 308 b 300 273 348 308 321 294 b 284 254 288 262 287 259 b 280 242 283 249 281 245 b 257 169 279 240 270 213 l 236 98 l 236 93 b 251 48 238 77 243 61 b 279 27 258 37 272 27 b 281 27 279 27 280 27 b 291 31 281 27 287 30 b 396 170 334 52 378 109 b 406 247 402 197 406 224 b 401 277 406 259 405 270 b 374 306 397 290 383 303 \"},\n\"vc3\":{\"x_min\":-10.890625,\"x_max\":299.4375,\"ha\":294,\"o\":\"m 136 460 b 142 462 137 462 140 462 b 166 449 152 462 161 456 b 171 428 168 446 168 445 b 288 131 194 322 238 209 b 298 115 295 120 296 117 b 299 106 298 112 299 109 b 273 81 299 91 287 81 b 255 86 268 81 261 83 b 155 116 225 104 183 116 l 152 116 l 149 108 b 141 83 148 102 144 91 b 134 48 137 69 134 58 b 149 9 134 34 140 24 b 153 -1 152 5 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 147 -11 b 122 2 138 -11 133 -6 b 95 61 104 20 95 38 b 107 108 95 74 99 90 b 108 113 107 111 108 112 b 107 113 108 113 108 113 b 102 113 106 113 104 113 b 31 86 76 108 53 98 b 14 80 24 81 20 80 b -10 106 0 80 -10 91 b 0 131 -10 115 -9 116 b 115 430 49 209 91 317 b 136 460 119 451 123 456 \"},\n\"vd0\":{\"x_min\":-10.890625,\"x_max\":299.4375,\"ha\":294,\"o\":\"m 44 174 b 51 174 47 174 49 174 b 68 173 55 174 61 174 l 287 112 l 551 40 b 615 20 617 22 609 23 b 626 0 622 16 626 8 b 615 -22 626 -9 622 -18 b 613 -23 613 -23 613 -23 b 613 -23 613 -23 613 -23 b 287 -113 613 -24 597 -29 l 68 -174 b 53 -176 61 -176 57 -176 b 39 -172 47 -176 43 -174 b 27 -151 31 -167 27 -159 b 39 -129 27 -141 31 -133 b 230 -74 43 -124 20 -131 l 370 -36 l 468 -9 b 498 0 484 -4 498 -1 b 468 8 498 0 484 2 l 370 34 l 230 73 b 40 126 28 129 43 124 b 27 149 31 131 27 140 b 44 174 27 161 34 170 m 205 110 l 205 300 b 205 330 245 330 245 300 l 245 300 l 245 -300 b 245 -330 205 -330 205 -300 l 205 -300 l 205 110 l 345 90 m 345 90 l 345 330 b 345 360 385 360 385 330 l 385 330 l 385 -270 b 385 -300 345 -300 345 -270 l 345 -270 l 345 90 \"},\n\"vd1\":{\"x_min\":-20,\"x_max\":320,\"ha\":257,\"o\":\"m -8 200 b -8 210 8 200 16 200 l 20 148 -199 l 23 -615 b 0 -629 9 -629 6 -629 l -21 -612 l -21 -201 l -21 216 l -20 200 m 16 200 l 310 0 l 240 0 l 16 140 l 16 -120 l 240 0 l 310 0 l 16 -200 \"},\n\"vd2\":{\"x_min\":0,\"x_max\":430.75,\"ha\":386,\"o\":\"m 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 \"},\n\"vd3\":{\"x_min\":0,\"x_max\":430.75,\"ha\":386,\"o\":\"m 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 l 50 150 l 380 150 l 380 -150 l 50 -150 l 50 150 \"},\n\"vd4\":{\"x_min\":0,\"x_max\":430.75,\"ha\":360,\"o\":\"m 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 \"},\n\"vd5\":{\"x_min\":0,\"x_max\":430.75,\"ha\":360,\"o\":\"m 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 l 50 100 l 380 100 l 380 -100 l 50 -100 l 50 100\"},\n},\n\"cssFontWeight\":\"normal\",\"ascender\":1903,\"underlinePosition\":-125,\"cssFontStyle\":\"normal\",\"boundingBox\":{\"yMin\":-2065.375,\"xMin\":-695.53125,\"yMax\":1901.578125,\"xMax\":1159.671875},\n\"resolution\":1000,\"descender\":-2066,\"familyName\":\"VexFlow-18\",\"lineHeight\":4093,\"underlineThickness\":50\n};\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { BoundingBox } from './boundingbox';\nimport { Font } from './fonts/vexflow_font';\n\nfunction processOutline(outline, originX, originY, scaleX, scaleY, outlineFns) {\n  let command;\n  let x;\n  let y;\n  let i = 0;\n\n  function nextX() { return originX + outline[i++] * scaleX; }\n  function nextY() { return originY + outline[i++] * scaleY; }\n\n  while (i < outline.length) {\n    command = outline[i++];\n    switch (command) {\n      case 'm':\n      case 'l':\n        outlineFns[command](nextX(), nextY());\n        break;\n      case 'q':\n        x = nextX();\n        y = nextY();\n        outlineFns.q(nextX(), nextY(), x, y);\n        break;\n      case 'b':\n        x = nextX();\n        y = nextY();\n        outlineFns.b(nextX(), nextY(), nextX(), nextY(), x, y);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class Glyph extends Element {\n  /* Static methods used to implement loading / unloading of glyphs */\n  static loadMetrics(font, code, cache) {\n    const glyph = font.glyphs[code];\n    if (!glyph) {\n      throw new Vex.RERR('BadGlyph', `Glyph ${code} does not exist in font.`);\n    }\n\n    const x_min = glyph.x_min;\n    const x_max = glyph.x_max;\n    const ha = glyph.ha;\n\n    let outline;\n\n    if (glyph.o) {\n      if (cache) {\n        if (glyph.cached_outline) {\n          outline = glyph.cached_outline;\n        } else {\n          outline = glyph.o.split(' ');\n          glyph.cached_outline = outline;\n        }\n      } else {\n        if (glyph.cached_outline) delete glyph.cached_outline;\n        outline = glyph.o.split(' ');\n      }\n\n      return {\n        x_min,\n        x_max,\n        ha,\n        outline,\n      };\n    } else {\n      throw new Vex.RERR('BadGlyph', `Glyph ${code} has no outline defined.`);\n    }\n  }\n\n  /**\n   * A quick and dirty static glyph renderer. Renders glyphs from the default\n   * font defined in Vex.Flow.Font.\n   *\n   * @param {!Object} ctx The canvas context.\n   * @param {number} x_pos X coordinate.\n   * @param {number} y_pos Y coordinate.\n   * @param {number} point The point size to use.\n   * @param {string} val The glyph code in Vex.Flow.Font.\n   * @param {boolean} nocache If set, disables caching of font outline.\n   */\n  static renderGlyph(ctx, x_pos, y_pos, point, val, nocache) {\n    const scale = point * 72.0 / (Font.resolution * 100.0);\n    const metrics = Glyph.loadMetrics(Font, val, !nocache);\n    Glyph.renderOutline(ctx, metrics.outline, scale, x_pos, y_pos);\n  }\n\n  static renderOutline(ctx, outline, scale, x_pos, y_pos) {\n    ctx.beginPath();\n    ctx.moveTo(x_pos, y_pos);\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: ctx.moveTo.bind(ctx),\n      l: ctx.lineTo.bind(ctx),\n      q: ctx.quadraticCurveTo.bind(ctx),\n      b: ctx.bezierCurveTo.bind(ctx),\n    });\n    ctx.fill();\n  }\n\n  static getOutlineBoundingBox(outline, scale, x_pos, y_pos) {\n    const bboxComp = new BoundingBoxComputation();\n\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: bboxComp.addPoint.bind(bboxComp),\n      l: bboxComp.addPoint.bind(bboxComp),\n      q: bboxComp.addQuadraticCurve.bind(bboxComp),\n      b: bboxComp.addBezierCurve.bind(bboxComp),\n    });\n\n    return new BoundingBox(\n      bboxComp.x1,\n      bboxComp.y1,\n      bboxComp.width(),\n      bboxComp.height()\n    );\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(code, point, options) {\n    super();\n    this.setAttribute('type', 'Glyph');\n\n    this.code = code;\n    this.point = point;\n    this.options = {\n      cache: true,\n      font: Font,\n    };\n\n    this.metrics = null;\n    this.x_shift = 0;\n    this.y_shift = 0;\n\n    this.originShift = {\n      x: 0,\n      y: 0,\n    };\n\n    if (options) {\n      this.setOptions(options);\n    } else {\n      this.reset();\n    }\n  }\n\n  setOptions(options) {\n    Vex.Merge(this.options, options);\n    this.reset();\n  }\n\n  setPoint(point) { this.point = point; return this; }\n  setStave(stave) { this.stave = stave; return this; }\n  setXShift(x_shift) { this.x_shift = x_shift; return this; }\n  setYShift(y_shift) { this.y_shift = y_shift; return this; }\n\n  reset() {\n    this.scale = this.point * 72 / (this.options.font.resolution * 100);\n    this.metrics = Glyph.loadMetrics(\n      this.options.font,\n      this.code,\n      this.options.cache\n    );\n    this.bbox = Glyph.getOutlineBoundingBox(\n      this.metrics.outline,\n      this.scale,\n      0,\n      0\n    );\n  }\n\n  getMetrics() {\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    return {\n      x_min: this.metrics.x_min * this.scale,\n      x_max: this.metrics.x_max * this.scale,\n      width: this.bbox.getW(),\n      height: this.bbox.getH(),\n    };\n  }\n\n  setOriginX(x) {\n    const { bbox } = this;\n    const originX = Math.abs(bbox.getX() / bbox.getW());\n    const xShift = (x - originX) * bbox.getW();\n    this.originShift.x = -xShift;\n  }\n\n  setOriginY(y) {\n    const { bbox } = this;\n    const originY = Math.abs(bbox.getY() / bbox.getH());\n    const yShift = (y - originY) * bbox.getH();\n    this.originShift.y = -yShift;\n  }\n\n  setOrigin(x, y) {\n    this.setOriginX(x);\n    this.setOriginY(y);\n  }\n\n  render(ctx, x, y) {\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale;\n\n    this.setRendered();\n    this.applyStyle(ctx);\n    Glyph.renderOutline(ctx, outline, scale, x + this.originShift.x, y + this.originShift.y);\n    this.restoreStyle(ctx);\n  }\n\n  renderToStave(x) {\n    this.checkContext();\n\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    if (!this.stave) {\n      throw new Vex.RuntimeError('GlyphError', 'No valid stave');\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale;\n\n    this.setRendered();\n    this.applyStyle();\n    Glyph.renderOutline(this.context, outline, scale,\n      x + this.x_shift, this.stave.getYForGlyphs() + this.y_shift);\n    this.restoreStyle();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\n/* eslint-disable key-spacing */\n\nimport { Vex } from './vex';\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\n\nconst Flow = {\n  STEM_WIDTH: 1.5,\n  STEM_HEIGHT: 35,\n  STAVE_LINE_THICKNESS: 1,\n  RESOLUTION: 16384,\n  DEFAULT_NOTATION_FONT_SCALE: 39,\n  DEFAULT_TABLATURE_FONT_SCALE: 39,\n  SLASH_NOTEHEAD_WIDTH: 15,\n\n  // HACK:\n  // Since text origins are positioned at the baseline, we must\n  // compensate for the ascender of the text. Of course, 1 staff space is\n  // a very poor approximation.\n  //\n  // This will be deprecated in the future. This is a temporary solution until\n  // we have more robust text metrics.\n  TEXT_HEIGHT_OFFSET_HACK: 1,\n\n  /* Kerning (DEPRECATED) */\n  IsKerned: true,\n};\n\n\nFlow.clefProperties = clef => {\n  if (!clef) throw new Vex.RERR('BadArgument', 'Invalid clef: ' + clef);\n\n  const props = Flow.clefProperties.values[clef];\n  if (!props) throw new Vex.RERR('BadArgument', 'Invalid clef: ' + clef);\n\n  return props;\n};\n\nFlow.clefProperties.values = {\n  'treble': { line_shift: 0 },\n  'bass': { line_shift: 6 },\n  'tenor': { line_shift: 4 },\n  'alto': { line_shift: 3 },\n  'soprano': { line_shift: 1 },\n  'percussion': { line_shift: 0 },\n  'mezzo-soprano': { line_shift: 2 },\n  'baritone-c': { line_shift: 5 },\n  'baritone-f': { line_shift: 5 },\n  'subbass': { line_shift: 7 },\n  'french': { line_shift: -1 },\n};\n\n/*\n  Take a note in the format \"Key/Octave\" (e.g., \"C/5\") and return properties.\n\n  The last argument, params, is a struct the currently can contain one option,\n  octave_shift for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n*/\nFlow.keyProperties = (key, clef, params) => {\n  if (clef === undefined) {\n    clef = 'treble';\n  }\n\n  const options = { octave_shift: 0 };\n\n  if (typeof params === 'object') {\n    Vex.Merge(options, params);\n  }\n\n  const pieces = key.split('/');\n\n  if (pieces.length < 2) {\n    throw new Vex.RERR('BadArguments', `Key must have note + octave and an optional glyph: ${key}`);\n  }\n\n  const k = pieces[0].toUpperCase();\n  const value = Flow.keyProperties.note_values[k];\n  if (!value) throw new Vex.RERR('BadArguments', 'Invalid key name: ' + k);\n  if (value.octave) pieces[1] = value.octave;\n\n  let octave = parseInt(pieces[1], 10);\n\n  // Octave_shift is the shift to compensate for clef 8va/8vb.\n  octave += -1 * options.octave_shift;\n\n  const base_index = (octave * 7) - (4 * 7);\n  let line = (base_index + value.index) / 2;\n  line += Flow.clefProperties(clef).line_shift;\n\n  let stroke = 0;\n\n  if (line <= 0 && (((line * 2) % 2) === 0)) stroke = 1;  // stroke up\n  if (line >= 6 && (((line * 2) % 2) === 0)) stroke = -1; // stroke down\n\n  // Integer value for note arithmetic.\n  const int_value = typeof (value.int_val) !== 'undefined'\n    ? (octave * 12) + value.int_val\n    : null;\n\n  /* Check if the user specified a glyph. */\n  let code = value.code;\n  let shift_right = value.shift_right;\n  if (pieces.length > 2 && pieces[2]) {\n    const glyph_name = pieces[2].toUpperCase();\n    const note_glyph = Flow.keyProperties.note_glyph[glyph_name];\n    if (note_glyph) {\n      code = note_glyph.code;\n      shift_right = note_glyph.shift_right;\n    }\n  }\n\n  return {\n    key: k,\n    octave,\n    line,\n    int_value,\n    accidental: value.accidental,\n    code,\n    stroke,\n    shift_right,\n    displaced: false,\n  };\n};\n\nFlow.keyProperties.note_values = {\n  'C': { index: 0, int_val: 0, accidental: null },\n  'CN': { index: 0, int_val: 0, accidental: 'n' },\n  'C#': { index: 0, int_val: 1, accidental: '#' },\n  'C##': { index: 0, int_val: 2, accidental: '##' },\n  'CB': { index: 0, int_val: -1, accidental: 'b' },\n  'CBB': { index: 0, int_val: -2, accidental: 'bb' },\n  'D': { index: 1, int_val: 2, accidental: null },\n  'DN': { index: 1, int_val: 2, accidental: 'n' },\n  'D#': { index: 1, int_val: 3, accidental: '#' },\n  'D##': { index: 1, int_val: 4, accidental: '##' },\n  'DB': { index: 1, int_val: 1, accidental: 'b' },\n  'DBB': { index: 1, int_val: 0, accidental: 'bb' },\n  'E': { index: 2, int_val: 4, accidental: null },\n  'EN': { index: 2, int_val: 4, accidental: 'n' },\n  'E#': { index: 2, int_val: 5, accidental: '#' },\n  'E##': { index: 2, int_val: 6, accidental: '##' },\n  'EB': { index: 2, int_val: 3, accidental: 'b' },\n  'EBB': { index: 2, int_val: 2, accidental: 'bb' },\n  'F': { index: 3, int_val: 5, accidental: null },\n  'FN': { index: 3, int_val: 5, accidental: 'n' },\n  'F#': { index: 3, int_val: 6, accidental: '#' },\n  'F##': { index: 3, int_val: 7, accidental: '##' },\n  'FB': { index: 3, int_val: 4, accidental: 'b' },\n  'FBB': { index: 3, int_val: 3, accidental: 'bb' },\n  'G': { index: 4, int_val: 7, accidental: null },\n  'GN': { index: 4, int_val: 7, accidental: 'n' },\n  'G#': { index: 4, int_val: 8, accidental: '#' },\n  'G##': { index: 4, int_val: 9, accidental: '##' },\n  'GB': { index: 4, int_val: 6, accidental: 'b' },\n  'GBB': { index: 4, int_val: 5, accidental: 'bb' },\n  'A': { index: 5, int_val: 9, accidental: null },\n  'AN': { index: 5, int_val: 9, accidental: 'n' },\n  'A#': { index: 5, int_val: 10, accidental: '#' },\n  'A##': { index: 5, int_val: 11, accidental: '##' },\n  'AB': { index: 5, int_val: 8, accidental: 'b' },\n  'ABB': { index: 5, int_val: 7, accidental: 'bb' },\n  'B': { index: 6, int_val: 11, accidental: null },\n  'BN': { index: 6, int_val: 11, accidental: 'n' },\n  'B#': { index: 6, int_val: 12, accidental: '#' },\n  'B##': { index: 6, int_val: 13, accidental: '##' },\n  'BB': { index: 6, int_val: 10, accidental: 'b' },\n  'BBB': { index: 6, int_val: 9, accidental: 'bb' },\n  'R': { index: 6, int_val: 9, rest: true }, // Rest\n  'X': {\n    index: 6,\n    accidental: '',\n    octave: 4,\n    code: 'v3e',\n    shift_right: 5.5,\n  },\n};\n\nFlow.keyProperties.note_glyph = {\n  /* Diamond */\n  'D0': { code: 'v27', shift_right: -0.5 },\n  'D1': { code: 'v2d', shift_right: -0.5 },\n  'D2': { code: 'v22', shift_right: -0.5 },\n  'D3': { code: 'v70', shift_right: -0.5 },\n\n  /* Triangle */\n  'T0': { code: 'v49', shift_right: -2, stem_up_y_offset: -4, stem_down_y_offset: 4 },\n  'T1': { code: 'v93', shift_right: 0.5, stem_up_y_offset: -4, stem_down_y_offset: 4 },\n  'T2': { code: 'v40', shift_right: 0.5, stem_up_y_offset: -4, stem_down_y_offset: 4 },\n  'T3': { code: 'v7d', shift_right: 0.5, stem_up_y_offset: -4, stem_down_y_offset: 4 },\n\n  /* Cross */\n  'X0': { code: 'v92', shift_right: -2, stem_up_y_offset: 4, stem_down_y_offset: 4 },\n  'X1': { code: 'v95', shift_right: -0.5, stem_up_y_offset: 4, stem_down_y_offset: 4 },\n  'X2': { code: 'v3e', shift_right: 0.5, stem_up_y_offset: 4, stem_down_y_offset: 4 },\n  'X3': { code: 'v3b', shift_right: -2, stem_up_y_offset: 2, stem_down_y_offset: 2 },\n\n  /* Square */\n  'S1': { code: 'vd3', shift_right: 0 },\n  'S2': { code: 'vd2', shift_right: 0 },\n  /* Rectangle */\n  'R1': { code: 'vd5', shift_right: 0 },\n  'R2': { code: 'vd4', shift_right: 0 },\n};\n\nFlow.integerToNote = integer => {\n  if (typeof (integer) === 'undefined') {\n    throw new Vex.RERR('BadArguments', 'Undefined integer for integerToNote');\n  }\n\n  if (integer < -2) {\n    throw new Vex.RERR('BadArguments', `integerToNote requires integer > -2: ${integer}`);\n  }\n\n  const noteValue = Flow.integerToNote.table[integer];\n  if (!noteValue) {\n    throw new Vex.RERR('BadArguments', `Unknown note value for integer: ${integer}`);\n  }\n\n  return noteValue;\n};\n\nFlow.integerToNote.table = {\n  0: 'C',\n  1: 'C#',\n  2: 'D',\n  3: 'D#',\n  4: 'E',\n  5: 'F',\n  6: 'F#',\n  7: 'G',\n  8: 'G#',\n  9: 'A',\n  10: 'A#',\n  11: 'B',\n};\n\n\nFlow.tabToGlyph = (fret, scale = 1.0) => {\n  let glyph = null;\n  let width = 0;\n  let shift_y = 0;\n\n  if (fret.toString().toUpperCase() === 'X') {\n    const glyphMetrics = new Glyph('v7f', Flow.DEFAULT_TABLATURE_FONT_SCALE).getMetrics();\n    glyph = 'v7f';\n    width = glyphMetrics.width;\n    shift_y = -glyphMetrics.height / 2;\n  } else {\n    width = Flow.textWidth(fret.toString());\n  }\n\n  return {\n    text: fret,\n    code: glyph,\n    getWidth: () => width * scale,\n    shift_y,\n  };\n};\n\nFlow.textWidth = text => 7 * text.toString().length;\n\nFlow.articulationCodes = artic => Flow.articulationCodes.articulations[artic];\n\nFlow.articulationCodes.articulations = {\n  'a.': { code: 'v23', between_lines: true }, // Staccato\n  'av': { code: 'v28', between_lines: true }, // Staccatissimo\n  'a>': { code: 'v42', between_lines: true }, // Accent\n  'a-': { code: 'v25', between_lines: true }, // Tenuto\n  'a^': { code: 'va', between_lines: false }, // Marcato\n  'a+': { code: 'v8b', between_lines: false }, // Left hand pizzicato\n  'ao': { code: 'v94', between_lines: false }, // Snap pizzicato\n  'ah': { code: 'vb9', between_lines: false }, // Natural harmonic or open note\n  'a@a': { code: 'v43', between_lines: false }, // Fermata above staff\n  'a@u': { code: 'v5b', between_lines: false }, // Fermata below staff\n  'a|': { code: 'v75', between_lines: false }, // Bow up - up stroke\n  'am': { code: 'v97', between_lines: false }, // Bow down - down stroke\n  'a,': { code: 'vb3', between_lines: false }, // Choked\n};\n\nFlow.accidentalCodes = acc => Flow.accidentalCodes.accidentals[acc];\n\nFlow.accidentalCodes.accidentals = {\n  '#': { code: 'v18', parenRightPaddingAdjustment: -1 },\n  '##': { code: 'v7f', parenRightPaddingAdjustment: -1 },\n  'b': { code: 'v44', parenRightPaddingAdjustment: -2 },\n  'bb': { code: 'v26', parenRightPaddingAdjustment: -2 },\n  'n': { code: 'v4e', parenRightPaddingAdjustment: -1 },\n  '{': { code: 'v9c', parenRightPaddingAdjustment: -1 },\n  '}': { code: 'v84', parenRightPaddingAdjustment: -1 },\n  'db': { code: 'v9e', parenRightPaddingAdjustment: -1 },\n  'd': { code: 'vab', parenRightPaddingAdjustment: 0 },\n  'bbs': { code: 'v90', parenRightPaddingAdjustment: -1 },\n  '++': { code: 'v51', parenRightPaddingAdjustment: -1 },\n  '+': { code: 'v78', parenRightPaddingAdjustment: -1 },\n  '+-': { code: 'v8d', parenRightPaddingAdjustment: -1 },\n  '++-': { code: 'v7a', parenRightPaddingAdjustment: -1 },\n  'bs': { code: 'vb7', parenRightPaddingAdjustment: -1 },\n  'bss': { code: 'v39', parenRightPaddingAdjustment: -1 },\n  'o': { code: 'vd0', parenRightPaddingAdjustment: -1 },\n  'k': { code: 'vd1', parenRightPaddingAdjustment: -1 },\n};\n\nFlow.accidentalColumnsTable = {\n  1: {\n    a: [1],\n    b: [1],\n  },\n  2: {\n    a: [1, 2],\n  },\n  3: {\n    a: [1, 3, 2],\n    b: [1, 2, 1],\n    second_on_bottom: [1, 2, 3],\n  },\n  4: {\n    a: [1, 3, 4, 2],\n    b: [1, 2, 3, 1],\n    spaced_out_tetrachord: [1, 2, 1, 2],\n  },\n  5: {\n    a: [1, 3, 5, 4, 2],\n    b: [1, 2, 4, 3, 1],\n    spaced_out_pentachord: [1, 2, 3, 2, 1],\n    very_spaced_out_pentachord: [1, 2, 1, 2, 1],\n  },\n  6: {\n    a: [1, 3, 5, 6, 4, 2],\n    b: [1, 2, 4, 5, 3, 1],\n    spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n    very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2],\n  },\n};\n\nFlow.ornamentCodes = acc => Flow.ornamentCodes.ornaments[acc];\n\nFlow.ornamentCodes.ornaments = {\n  'mordent': { code: 'v1e' },\n  'mordent_inverted': { code: 'v45' },\n  'turn': { code: 'v72' },\n  'turn_inverted': { code: 'v33' },\n  'tr': { code: 'v1f' },\n  'upprall': { code: 'v60' },\n  'downprall': { code: 'vb4' },\n  'prallup': { code: 'v6d' },\n  'pralldown': { code: 'v2c' },\n  'upmordent': { code: 'v29' },\n  'downmordent': { code: 'v68' },\n  'lineprall': { code: 'v20' },\n  'prallprall': { code: 'v86' },\n};\n\nFlow.keySignature = spec => {\n  const keySpec = Flow.keySignature.keySpecs[spec];\n\n  if (!keySpec) {\n    throw new Vex.RERR('BadKeySignature', `Bad key signature spec: '${spec}'`);\n  }\n\n  if (!keySpec.acc) {\n    return [];\n  }\n\n  const notes = Flow.keySignature.accidentalList(keySpec.acc);\n\n  const acc_list = [];\n  for (let i = 0; i < keySpec.num; ++i) {\n    const line = notes[i];\n    acc_list.push({ type: keySpec.acc, line });\n  }\n\n  return acc_list;\n};\n\nFlow.keySignature.keySpecs = {\n  'C': { acc: null, num: 0 },\n  'Am': { acc: null, num: 0 },\n  'F': { acc: 'b', num: 1 },\n  'Dm': { acc: 'b', num: 1 },\n  'Bb': { acc: 'b', num: 2 },\n  'Gm': { acc: 'b', num: 2 },\n  'Eb': { acc: 'b', num: 3 },\n  'Cm': { acc: 'b', num: 3 },\n  'Ab': { acc: 'b', num: 4 },\n  'Fm': { acc: 'b', num: 4 },\n  'Db': { acc: 'b', num: 5 },\n  'Bbm': { acc: 'b', num: 5 },\n  'Gb': { acc: 'b', num: 6 },\n  'Ebm': { acc: 'b', num: 6 },\n  'Cb': { acc: 'b', num: 7 },\n  'Abm': { acc: 'b', num: 7 },\n  'G': { acc: '#', num: 1 },\n  'Em': { acc: '#', num: 1 },\n  'D': { acc: '#', num: 2 },\n  'Bm': { acc: '#', num: 2 },\n  'A': { acc: '#', num: 3 },\n  'F#m': { acc: '#', num: 3 },\n  'E': { acc: '#', num: 4 },\n  'C#m': { acc: '#', num: 4 },\n  'B': { acc: '#', num: 5 },\n  'G#m': { acc: '#', num: 5 },\n  'F#': { acc: '#', num: 6 },\n  'D#m': { acc: '#', num: 6 },\n  'C#': { acc: '#', num: 7 },\n  'A#m': { acc: '#', num: 7 },\n};\n\nFlow.unicode = {\n  // Unicode accidentals\n  'sharp': String.fromCharCode(parseInt('266F', 16)),\n  'flat': String.fromCharCode(parseInt('266D', 16)),\n  'natural': String.fromCharCode(parseInt('266E', 16)),\n  // Major Chord\n  'triangle': String.fromCharCode(parseInt('25B3', 16)),\n  // half-diminished\n  'o-with-slash': String.fromCharCode(parseInt('00F8', 16)),\n  // Diminished\n  'degrees': String.fromCharCode(parseInt('00B0', 16)),\n  'circle': String.fromCharCode(parseInt('25CB', 16)),\n};\n\nFlow.keySignature.accidentalList = (acc) => {\n  const patterns = {\n    'b': [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n    '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n  };\n\n  return patterns[acc];\n};\n\nFlow.parseNoteDurationString = durationString => {\n  if (typeof (durationString) !== 'string') {\n    return null;\n  }\n\n  const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n\n  const result = regexp.exec(durationString);\n  if (!result) {\n    return null;\n  }\n\n  const duration = result[1];\n  const dots = result[2].length;\n  let type = result[3];\n\n  if (type.length === 0) {\n    type = 'n';\n  }\n\n  return {\n    duration,\n    dots,\n    type,\n  };\n};\n\nFlow.parseNoteData = noteData => {\n  const duration = noteData.duration;\n\n  // Preserve backwards-compatibility\n  const durationStringData = Flow.parseNoteDurationString(duration);\n  if (!durationStringData) {\n    return null;\n  }\n\n  let ticks = Flow.durationToTicks(durationStringData.duration);\n  if (ticks == null) {\n    return null;\n  }\n\n  let type = noteData.type;\n\n  if (type) {\n    if (!(type === 'n' || type === 'r' || type === 'h' || type === 'm' || type === 's')) {\n      return null;\n    }\n  } else {\n    type = durationStringData.type;\n\n    // If we have keys, try and check if we've got a custom glyph\n    if (noteData.keys !== undefined) {\n      const result = noteData.keys[0].split('/');\n\n      // We have a custom glyph specified after the note eg. /X2\n      if (result && result.length === 3) {\n        type = result[2]; // Set the type to the custom note head\n      }\n    }\n    if (!type) {\n      type = 'n';\n    }\n  }\n\n  const dots = noteData.dots ? noteData.dots : durationStringData.dots;\n\n  if (typeof (dots) !== 'number') {\n    return null;\n  }\n\n  let currentTicks = ticks;\n\n  for (let i = 0; i < dots; i++) {\n    if (currentTicks <= 1) return null;\n\n    currentTicks = currentTicks / 2;\n    ticks += currentTicks;\n  }\n\n  return {\n    duration: durationStringData.duration,\n    type,\n    dots,\n    ticks,\n  };\n};\n\n// Used to convert duration aliases to the number based duration.\n// If the input isn't an alias, simply return the input.\n//\n// example: 'q' -> '4', '8' -> '8'\nFlow.sanitizeDuration = duration => {\n  const alias = Flow.durationAliases[duration];\n  if (alias !== undefined) {\n    duration = alias;\n  }\n\n  if (Flow.durationToTicks.durations[duration] === undefined) {\n    throw new Vex.RERR('BadArguments', `The provided duration is not valid: ${duration}`);\n  }\n\n  return duration;\n};\n\n// Convert the `duration` to an fraction\nFlow.durationToFraction = duration => new Fraction().parse(Flow.sanitizeDuration(duration));\n\n// Convert the `duration` to an number\nFlow.durationToNumber = duration => Flow.durationToFraction(duration).value();\n\n// Convert the `duration` to total ticks\nFlow.durationToTicks = duration => {\n  duration = Flow.sanitizeDuration(duration);\n\n  const ticks = Flow.durationToTicks.durations[duration];\n  if (ticks === undefined) {\n    return null;\n  }\n\n  return ticks;\n};\n\nFlow.durationToTicks.durations = {\n  '1/2': Flow.RESOLUTION * 2,\n  '1': Flow.RESOLUTION / 1,\n  '2': Flow.RESOLUTION / 2,\n  '4': Flow.RESOLUTION / 4,\n  '8': Flow.RESOLUTION / 8,\n  '16': Flow.RESOLUTION / 16,\n  '32': Flow.RESOLUTION / 32,\n  '64': Flow.RESOLUTION / 64,\n  '128': Flow.RESOLUTION / 128,\n  '256': Flow.RESOLUTION / 256,\n};\n\nFlow.durationAliases = {\n  'w': '1',\n  'h': '2',\n  'q': '4',\n\n  // This is the default duration used to render bars (BarNote). Bars no longer\n  // consume ticks, so this should be a no-op.\n  //\n  // TODO(0xfe): This needs to be cleaned up.\n  'b': '256',\n};\n\nFlow.durationToGlyph = (duration, type) => {\n  duration = Flow.sanitizeDuration(duration);\n\n  const code = Flow.durationToGlyph.duration_codes[duration];\n  if (code === undefined) {\n    return null;\n  }\n\n  if (!type) {\n    type = 'n';\n  }\n\n  let glyphTypeProperties = code.type[type];\n  if (glyphTypeProperties === undefined) {\n    // Try and get it from the custom list of note heads\n    const customGlyphTypeProperties = Flow.keyProperties.note_glyph[type.toUpperCase()];\n\n    // If not, then return with nothing\n    if (customGlyphTypeProperties === undefined) {\n      return null;\n    }\n\n    // Otherwise set it as the code_head value\n    glyphTypeProperties = {\n      code_head: customGlyphTypeProperties.code,\n      stem_up_y_offset: customGlyphTypeProperties.stem_up_y_offset,\n      stem_down_y_offset: customGlyphTypeProperties.stem_down_y_offset,\n    };\n  }\n\n  return Vex.Merge(Vex.Merge({}, code.common), glyphTypeProperties);\n};\n\nFlow.durationToGlyph.duration_codes = {\n  '1/2': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v53', scale).getMetrics().width;\n      },\n      stem: false,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: -Flow.STEM_HEIGHT,\n      stem_down_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Breve note\n        code_head: 'v53',\n      },\n      'h': { // Breve note harmonic\n        code_head: 'v59',\n      },\n      'm': { // Breve note muted -\n        code_head: 'vf',\n        stem_offset: 0,\n      },\n      'r': { // Breve rest\n        code_head: 'v31',\n        rest: true,\n        position: 'B/5',\n        dot_shiftY: 0.5,\n      },\n      's': { // Breve note slash -\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '1': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v1d', scale).getMetrics().width;\n      },\n      stem: false,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: -Flow.STEM_HEIGHT,\n      stem_down_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Whole note\n        code_head: 'v1d',\n      },\n      'h': { // Whole note harmonic\n        code_head: 'v46',\n      },\n      'm': { // Whole note muted\n        code_head: 'v92',\n        stem_offset: -3,\n      },\n      'r': { // Whole rest\n        code_head: 'v5c',\n        rest: true,\n        position: 'D/5',\n        dot_shiftY: 0.5,\n      },\n      's': { // Whole note slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '2': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v81', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Half note\n        code_head: 'v81',\n      },\n      'h': { // Half note harmonic\n        code_head: 'v2d',\n      },\n      'm': { // Half note muted\n        code_head: 'v95',\n        stem_offset: -3,\n      },\n      'r': { // Half rest\n        code_head: 'vc',\n        stem: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n      },\n      's': { // Half note slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '4': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Quarter note\n        code_head: 'vb',\n      },\n      'h': { // Quarter harmonic\n        code_head: 'v22',\n      },\n      'm': { // Quarter muted\n        code_head: 'v3e',\n        stem_offset: -3,\n      },\n      'r': { // Quarter rest\n        code_head: 'v7c',\n        stem: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.5,\n        line_below: 1.5,\n      },\n      's': { // Quarter slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '8': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      beam_count: 1,\n      code_flag_upstem: 'v54',\n      code_flag_downstem: 'v9a',\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Eighth note\n        code_head: 'vb',\n      },\n      'h': { // Eighth note harmonic\n        code_head: 'v22',\n      },\n      'm': { // Eighth note muted\n        code_head: 'v3e',\n      },\n      'r': { // Eighth rest\n        code_head: 'va5',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 1.0,\n      },\n      's': { // Eight slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '16': {\n    common: {\n      beam_count: 2,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v3f',\n      code_flag_downstem: 'v8f',\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Sixteenth note\n        code_head: 'vb',\n      },\n      'h': { // Sixteenth note harmonic\n        code_head: 'v22',\n      },\n      'm': { // Sixteenth note muted\n        code_head: 'v3e',\n      },\n      'r': { // Sixteenth rest\n        code_head: 'v3c',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 2.0,\n      },\n      's': { // Sixteenth slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '32': {\n    common: {\n      beam_count: 3,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v47',\n      code_flag_downstem: 'v2a',\n      stem_up_extension: 9,\n      stem_down_extension: 9,\n      tabnote_stem_up_extension: 8,\n      tabnote_stem_down_extension: 5,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Thirty-second note\n        code_head: 'vb',\n      },\n      'h': { // Thirty-second harmonic\n        code_head: 'v22',\n      },\n      'm': { // Thirty-second muted\n        code_head: 'v3e',\n      },\n      'r': { // Thirty-second rest\n        code_head: 'v55',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 2.0,\n      },\n      's': { // Thirty-second slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '64': {\n    common: {\n      beam_count: 4,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'va9',\n      code_flag_downstem: 'v58',\n      stem_up_extension: 13,\n      stem_down_extension: 13,\n      tabnote_stem_up_extension: 12,\n      tabnote_stem_down_extension: 9,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Sixty-fourth note\n        code_head: 'vb',\n      },\n      'h': { // Sixty-fourth harmonic\n        code_head: 'v22',\n      },\n      'm': { // Sixty-fourth muted\n        code_head: 'v3e',\n      },\n      'r': { // Sixty-fourth rest\n        code_head: 'v38',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 3.0,\n      },\n      's': { // Sixty-fourth slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '128': {\n    common: {\n      beam_count: 5,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v9b',\n      code_flag_downstem: 'v30',\n      stem_up_extension: 22,\n      stem_down_extension: 22,\n      tabnote_stem_up_extension: 21,\n      tabnote_stem_down_extension: 18,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': {  // Hundred-twenty-eight note\n        code_head: 'vb',\n      },\n      'h': { // Hundred-twenty-eight harmonic\n        code_head: 'v22',\n      },\n      'm': { // Hundred-twenty-eight muted\n        code_head: 'v3e',\n      },\n      'r': {  // Hundred-twenty-eight rest\n        code_head: 'vaa',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: 1.5,\n        line_above: 3.0,\n        line_below: 3.0,\n      },\n      's': { // Hundred-twenty-eight rest\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n};\n\n// For future collaboration with the SMuFL Standard Music Font Layout\n\nFlow.smufl = {};\n\n// add references between smufl glyph names and code points.\nFlow.smufl.to_code_points = {\n  // staff brackets and dividers (e000-e00f)\n  bracketTop: 'v1b',\n  bracketBottom: 'v10',\n\n  // barlines (e030-e03f)\n  barlineTick: 'v6f',\n\n  // repeats (e040-e04f)\n  segno: 'v8c',\n  coda: 'v4d',\n\n  // clefs (e050-e07f)\n  gClef: 'v83',\n  cClef: 'vad',\n  fClef: 'v79',\n  unpitchedPercussionClef1: 'v59', // same as breveNoteheadHarmonic\n  '6stringTabClef': 'v2f',\n\n  // time signatures (e080-e09f)\n  timeSig0: 'v0',\n  timeSig1: 'v1',\n  timeSig2: 'v2',\n  timeSig3: 'v3',\n  timeSig4: 'v4',\n  timeSig5: 'v5',\n  timeSig6: 'v6',\n  timeSig7: 'v7',\n  timeSig8: 'v8',\n  timeSig9: 'v9',\n  timeSigCommon: 'v41',\n  timeSigCutCommon: 'vb6',\n\n  // notehead (e0a0-e0ff)\n  noteheadDoubleWhole: 'v53',\n  noteheadWhole: 'v1d',\n  noteheadHalf: 'v81',\n  noteheadBlack: 'vb',\n  noteheadXWhole: 'v92',\n  noteheadXHalf: 'v95',\n  noteheadXBlack: 'v3e',\n  noteheadCircleX: 'v3b',\n  noteheadTriangleUpWhole: 'v49',\n  noteheadTriangleUpHalf: 'v93',\n  noteheadTriangleUpBlack: 'v40',\n  noteheadDiamondWhole: 'v46',\n  noteheadDiamondHalf: 'v2d',\n  noteheadDiamondBlack: 'v22',\n\n  // individual notes (e1d0-e1ef)\n  augmentationDot: 'v23',\n\n  // temolos (e220-e23f)\n  tremolo1: 'v74',\n\n  // flags (e240-e25f)\n  flag8thUp: 'v54',\n  flag8thDown: 'v9a',\n  flag16thUp: 'v3f',\n  flag16thDown: 'v8f',\n  flag32ndUp: 'v47',\n  flag32ndDown: 'v2a',\n  flag64thUp: 'va9',\n  flag64thDown: 'v58',\n  flag128thUp: 'v9b',\n  flag128thDown: 'v30',\n\n  // standard accidentals (e260-e26f)\n  accidentalFlat: 'v44',\n  accidentalNatural: 'v4e',\n  accidentalSharp: 'v18',\n  accidentalDoubleSharp: 'v7f',\n  accidentalDoubleFlat: 'v26',\n  accidentalParensLeft: 'v9c',\n  accidentalParensRight: 'v84',\n\n  // stein-zimmermann accidentals (24-edo) (e280-e28f)\n  accidentalQuarterToneFlatStein: 'vab',\n  accidentalThreeQuarterTonesFlatZimmermann: 'v9e',\n  accidentalQuarterToneSharpStein: 'v78',\n  accidentalThreeQuarterTonesSharpStein: 'v51',\n\n  // arel-ezgi-uzdilek accidentals (e440-e44f)\n  accidentalBuyukMucennebFlat: 'v39',\n  accidentalBakiyeFlat: 'vb7',\n  accidentalKomaSharp: 'v51', // same as accidentalQuarterToneSharpStein\n  accidentalKucukMucennebSharp: 'v8d',\n\n  // persian accidentals (e460-e46f)\n  accidentalKoron: 'vd1',\n  accidentalSori: 'vd0',\n\n  // articulation (e4a0-e4bf)\n  articAccentAbove: 'v42',\n  articAccentBelow: 'v42', // same as above\n  articTenutoAbove: 'v25',\n  articTenutoBelow: 'v25', // same as above\n  articStaccatoAbove: 'v23', // = dot\n  articStaccatoBelow: 'v23', // = dot\n  articStaccatissimoAbove: 'v28',\n  articMarcatoAbove: 'va',\n\n  // holds and pauses (e4c0-e4df)\n  fermataAbove: 'v43',\n  fermataBelow: 'v5b',\n  breathMarkComma: 'v6c',\n  breathMarkUpbow: 'v8a', // looks better than current upbow\n  caesura: 'v34',\n  caesuraCurved: 'v4b',\n\n  // rests (e4e0-e4ff)\n  restMaxima: 'v59', // not designed for this, but should do the trick\n  // need restLonga -- used in multimeasure rests, like above\n  restDoubleWhole: 'v31',\n  restWhole: 'v5c',\n  restHalf: 'vc',\n  restQuarter: 'v7c',\n  rest8th: 'va5',\n  rest16th: 'v3c',\n  rest32nd: 'v55',\n  rest64th: 'v38',\n  rest128th: 'vaa',\n\n  // dynamics (e520-e54f)\n  dynamicPiano: 'vbf',\n  dynamicMezzo: 'v62',\n  dynamicForte: 'vba',\n  dynamicRinforzando: 'vba',\n  dynamicSforzando: 'v4a',\n  dynamicZ: 'v80',\n\n  // common ornaments (e560-e56f)\n  ornamentTrill: 'v1f',\n  ornamentTurn: 'v72',\n  ornamentTurnSlash: 'v33',\n  ornamentMordent: 'v45',\n  ornamentMordentInverted: 'v1e',\n  ornamentTremblement: 'v86',\n\n  // precomposed trills and mordents (e5b0-e5cf)\n  ornamentPrecompAppoggTrill: 'v20',\n  ornamentPrecompSlideTrillDAnglebert: 'v60',\n  ornamentPrecompSlideTrillBach: 'v29',\n  ornamentPrecompTrillSuffixDandrieu: 'v6d',\n  ornamentPrecompDoubleCadenceUpperPrefix: 'vb4',\n  ornamentPrecompDoubleCadenceUpperPrefixTurn: 'v68',\n  ornamentPrecompTrillLowerSuffix: 'v2c',\n\n  // string techniques (e610-e62f)\n  stringsDownBow: 'v94',\n  stringsUpBow: 'v75',\n  stringsHarmonic: 'vb9',\n\n  // plucked techniques (e630-e63f)\n  pluckedSnapPizzicatoAbove: 'v94',\n  pluckedLeftHandPizzicato: 'v8b', // plus sign\n\n  // keyboard techniques (e650-e67f)\n  keyboardPedalPed: 'v36',\n  keyboardPedalUp: 'v5d',\n\n  // percussion playing technique pictograms (e7f0-e80f)\n  pictChokeCymbal: 'vb3',\n\n  // multi-segment lines (eaa0-eb0f)\n  wiggleArpeggiatoUp: 'va3', // rotated 90deg from reference implementation\n\n  // arrows and arrowheads (eb60-eb8f)\n  arrowheadBlackUp: 'vc3',\n  arrowheadBlackDown: 'v52',\n\n  // not found:\n  // noteheadDiamondWhole: 'v27', stylistic alternate to v46?\n  // noteheadDiamondBlack: 'v70', stylistic alternate to v22?\n  // noteheadTriangleUpBlack: 'v7d', stylistic alternate to v40?\n  // accidentalSlashedDoubleFlat: 'v90',\n  // accidentalOneAndAHalfSharpTurned: 'v7a',\n  // unused marcato alternative?  'v5a',\n  // arpeggioBrushDown: 'v11',\n};\n\n// Some defaults\nFlow.TIME4_4 = {\n  num_beats: 4,\n  beat_value: 4,\n  resolution: Flow.RESOLUTION,\n};\nexport { Flow };\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// A rendering context for the Raphael backend.\n//\n// Copyright Mohit Cheppudira 2010\n\n/** @constructor */\nexport class CanvasContext {\n  static get WIDTH() {\n    return 600;\n  }\n  static get HEIGHT() {\n    return 400;\n  }\n\n  constructor(context) {\n    // Use a name that is unlikely to clash with a canvas context\n    // property\n    this.vexFlowCanvasContext = context;\n    if (!context.canvas) {\n      this.canvas = {\n        width: CanvasContext.WIDTH,\n        height: CanvasContext.HEIGHT,\n      };\n    } else {\n      this.canvas = context.canvas;\n    }\n  }\n\n  clear() {\n    this.vexFlowCanvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  // Containers not implemented\n  openGroup() {}\n  closeGroup() {}\n  add() {}\n\n  setFont(family, size, weight) {\n    this.vexFlowCanvasContext.font = (weight || '') + ' ' + size + 'pt ' + family;\n    return this;\n  }\n\n  setRawFont(font) {\n    this.vexFlowCanvasContext.font = font;\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.vexFlowCanvasContext.fillStyle = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_fillStyle = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.vexFlowCanvasContext.strokeStyle = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.vexFlowCanvasContext.shadowColor = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.vexFlowCanvasContext.shadowBlur = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.vexFlowCanvasContext.lineWidth = width;\n    return this;\n  }\n\n  setLineCap(cap_type) {\n    this.vexFlowCanvasContext.lineCap = cap_type;\n    return this;\n  }\n\n  // setLineDash: is the one native method in a canvas context\n  // that begins with set, therefore we don't bolster the method\n  // if it already exists (see renderer.bolsterCanvasContext).\n  // If it doesn't exist, we bolster it and assume it's looking for\n  // a ctx.lineDash method, as previous versions of VexFlow\n  // expected.\n  setLineDash(dash) {\n    this.vexFlowCanvasContext.lineDash = dash;\n    return this;\n  }\n\n  scale(x, y) {\n    return this.vexFlowCanvasContext.scale(parseFloat(x), parseFloat(y));\n  }\n\n  resize(width, height) {\n    return this.vexFlowCanvasContext.resize(parseInt(width, 10), parseInt(height, 10));\n  }\n\n  rect(x, y, width, height) {\n    return this.vexFlowCanvasContext.rect(x, y, width, height);\n  }\n\n  fillRect(x, y, width, height) {\n    return this.vexFlowCanvasContext.fillRect(x, y, width, height);\n  }\n\n  clearRect(x, y, width, height) {\n    return this.vexFlowCanvasContext.clearRect(x, y, width, height);\n  }\n\n  beginPath() {\n    return this.vexFlowCanvasContext.beginPath();\n  }\n\n  moveTo(x, y) {\n    return this.vexFlowCanvasContext.moveTo(x, y);\n  }\n\n  lineTo(x, y) {\n    return this.vexFlowCanvasContext.lineTo(x, y);\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    return this.vexFlowCanvasContext.bezierCurveTo(x1, y1, x2, y2, x, y);\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    return this.vexFlowCanvasContext.quadraticCurveTo(x1, y1, x, y);\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    return this.vexFlowCanvasContext.arc(x, y, radius, startAngle, endAngle, antiClockwise);\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    return this.vexFlowCanvasContext.glow();\n  }\n\n  fill() {\n    return this.vexFlowCanvasContext.fill();\n  }\n\n  stroke() {\n    return this.vexFlowCanvasContext.stroke();\n  }\n\n  closePath() {\n    return this.vexFlowCanvasContext.closePath();\n  }\n\n  measureText(text) {\n    return this.vexFlowCanvasContext.measureText(text);\n  }\n\n  fillText(text, x, y) {\n    return this.vexFlowCanvasContext.fillText(text, x, y);\n  }\n\n  save() {\n    return this.vexFlowCanvasContext.save();\n  }\n\n  restore() {\n    return this.vexFlowCanvasContext.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A rendering context for the Raphael backend.\n//\n// ## Warning: Deprecated for SVGContext\n// Except in instances where SVG support for IE < 9.0 is\n// needed, SVGContext is recommended.\n\nexport class RaphaelContext {\n  constructor(element) {\n    this.element = element;\n    this.paper = Raphael(element); // eslint-disable-line\n    this.path = '';\n    this.pen = { x: 0, y: 0 };\n    this.lineWidth = 1.0;\n    this.state = {\n      scale: { x: 1, y: 1 },\n      font_family: 'Arial',\n      font_size: 8,\n      font_weight: 800,\n    };\n\n    this.attributes = {\n      'stroke-width': 0.3,\n      'fill': 'black',\n      'stroke': 'black',\n      'font': '10pt Arial',\n    };\n\n    this.background_attributes = {\n      'stroke-width': 0,\n      'fill': 'white',\n      'stroke': 'white',\n      'font': '10pt Arial',\n    };\n\n    this.shadow_attributes = {\n      width: 0,\n      color: 'black',\n    };\n\n    this.state_stack = [];\n  }\n\n  // Containers not implemented\n  openGroup() {}\n  closeGroup() {}\n  add() {}\n\n  setFont(family, size, weight) {\n    this.state.font_family = family;\n    this.state.font_size = size;\n    this.state.font_weight = weight;\n    this.attributes.font = (this.state.font_weight || '') + ' ' +\n      (this.state.font_size * this.state.scale.x) + 'pt ' +\n      this.state.font_family;\n    return this;\n  }\n\n  setRawFont(font) {\n    this.attributes.font = font;\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.attributes.fill = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_attributes.fill = style;\n    this.background_attributes.stroke = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.attributes.stroke = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.shadow_attributes.color = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.shadow_attributes.width = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.attributes['stroke-width'] = width;\n    this.lineWidth = width;\n  }\n\n  // Empty because there is no equivalent in SVG\n  setLineDash() { return this; }\n  setLineCap() { return this; }\n\n  scale(x, y) {\n    this.state.scale = { x, y };\n    // The scale() method is deprecated as of Raphael.JS 2.0, and\n    // can no longer be used as an option in an Element.attr() call.\n    // It is preserved here for users running earlier versions of\n    // Raphael.JS, though it has no effect on the SVG output in\n    // Raphael 2 and higher.\n    this.attributes.transform = 'S' + x + ',' + y + ',0,0';\n    this.attributes.scale = x + ',' + y + ',0,0';\n    this.attributes.font = this.state.font_size * this.state.scale.x + 'pt ' +\n      this.state.font_family;\n    this.background_attributes.transform = 'S' + x + ',' + y + ',0,0';\n    this.background_attributes.font = this.state.font_size *\n      this.state.scale.x + 'pt ' +\n      this.state.font_family;\n    return this;\n  }\n\n  clear() { this.paper.clear(); }\n\n  resize(width, height) {\n    this.element.style.width = width;\n    this.paper.setSize(width, height);\n    return this;\n  }\n\n  // Sets the SVG `viewBox` property, which results in auto scaling images when its container\n  // is resized.\n  //\n  // Usage: `ctx.setViewBox(\"0 0 600 400\")`\n  setViewBox(viewBox) {\n    this.paper.canvas.setAttribute('viewBox', viewBox);\n  }\n\n  rect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5)\n      .attr(this.attributes)\n      .attr('fill', 'none')\n      .attr('stroke-width', this.lineWidth);\n    return this;\n  }\n\n  fillRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5).attr(this.attributes);\n    return this;\n  }\n\n  clearRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5)\n      .attr(this.background_attributes);\n    return this;\n  }\n\n  beginPath() {\n    this.path = '';\n    this.pen.x = 0;\n    this.pen.y = 0;\n    return this;\n  }\n\n  moveTo(x, y) {\n    this.path += 'M' + x + ',' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  lineTo(x, y) {\n    this.path += 'L' + x + ',' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this.path += 'C' +\n      x1 + ',' +\n      y1 + ',' +\n      x2 + ',' +\n      y2 + ',' +\n      x + ',' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    this.path += 'Q' +\n      x1 + ',' +\n      y1 + ',' +\n      x + ',' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    function normalizeAngle(angle) {\n      while (angle < 0) {\n        angle += Math.PI * 2;\n      }\n\n      while (angle > Math.PI * 2) {\n        angle -= Math.PI * 2;\n      }\n      return angle;\n    }\n\n    startAngle = normalizeAngle(startAngle);\n    endAngle = normalizeAngle(endAngle);\n\n    if (startAngle > endAngle) {\n      const tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n      antiClockwise = !antiClockwise;\n    }\n\n    const delta = endAngle - startAngle;\n\n    if (delta > Math.PI) {\n      this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n      this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n    } else {\n      this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n    }\n    return this;\n  }\n\n  arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n    const x1 = x + radius * Math.cos(startAngle);\n    const y1 = y + radius * Math.sin(startAngle);\n\n    const x2 = x + radius * Math.cos(endAngle);\n    const y2 = y + radius * Math.sin(endAngle);\n\n    let largeArcFlag = 0;\n    let sweepFlag = 0;\n    if (antiClockwise) {\n      sweepFlag = 1;\n      if (endAngle - startAngle < Math.PI) {\n        largeArcFlag = 1;\n      }\n    } else if (endAngle - startAngle > Math.PI) {\n      largeArcFlag = 1;\n    }\n\n    this.path += 'M' + x1 + ',' + y1 + ',A' +\n      radius + ',' + radius + ',0,' + largeArcFlag + ',' + sweepFlag + ',' +\n      x2 + ',' + y2 + 'M' + this.pen.x + ',' + this.pen.y;\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    const out = this.paper.set();\n    if (this.shadow_attributes.width > 0) {\n      const sa = this.shadow_attributes;\n      const num_paths = sa.width / 2;\n      for (let i = 1; i <= num_paths; i++) {\n        out.push(this.paper.path(this.path).attr({\n          stroke: sa.color,\n          'stroke-linejoin': 'round',\n          'stroke-linecap': 'round',\n          'stroke-width': +(sa.width / num_paths * i).toFixed(3),\n          opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n          // See note in this.scale(): In Raphael the scale() method\n          // is deprecated and removed as of Raphael 2.0 and replaced\n          // by the transform() method.  It is preserved here for\n          // users with earlier versions of Raphael, but has no effect\n          // on the output SVG in Raphael 2.0+.\n          transform: this.attributes.transform,\n          scale: this.attributes.scale,\n        }));\n      }\n    }\n    return out;\n  }\n\n  fill() {\n    const elem = this.paper.path(this.path)\n      .attr(this.attributes)\n      .attr('stroke-width', 0);\n    this.glow(elem);\n    return this;\n  }\n\n  stroke() {\n    // The first line of code below is, unfortunately, a bit of a hack:\n    // Raphael's transform() scaling does not scale the stroke-width, so\n    // in order to scale a stroke, we have to manually scale the\n    // stroke-width.\n    //\n    // This works well so long as the X & Y states for this.scale() are\n    // relatively similar.  However, if they are very different, we\n    // would expect horizontal and vertical lines to have different\n    // stroke-widths.\n    //\n    // In the future, if we want to support very divergent values for\n    // horizontal and vertical scaling, we may want to consider\n    // implementing SVG scaling with properties of the SVG viewBox &\n    // viewPort and removing it entirely from the Element.attr() calls.\n    // This would more closely parallel the approach taken in\n    // canvascontext.js as well.\n\n    const strokeWidth = this.lineWidth * (this.state.scale.x + this.state.scale.y) / 2;\n    const elem = this.paper.path(this.path)\n      .attr(this.attributes)\n      .attr('fill', 'none')\n      .attr('stroke-width', strokeWidth);\n    this.glow(elem);\n    return this;\n  }\n\n  closePath() {\n    this.path += 'Z';\n    return this;\n  }\n\n  measureText(text) {\n    const txt = this.paper.text(0, 0, text)\n      .attr(this.attributes)\n      .attr('fill', 'none')\n      .attr('stroke', 'none');\n    const bounds = txt.getBBox();\n    txt.remove();\n\n    return {\n      width: bounds.width,\n      height: bounds.height,\n    };\n  }\n\n  fillText(text, x, y) {\n    this.paper\n      .text(\n        x + (this.measureText(text).width / 2),\n        y - (this.state.font_size / (2.25 * this.state.scale.y)),\n        text\n      )\n      .attr(this.attributes);\n\n    return this;\n  }\n\n  save() {\n    // TODO(mmuthanna): State needs to be deep-copied.\n    this.state_stack.push({\n      state: {\n        font_family: this.state.font_family,\n      },\n      attributes: {\n        font: this.attributes.font,\n        fill: this.attributes.fill,\n        stroke: this.attributes.stroke,\n        'stroke-width': this.attributes['stroke-width'],\n      },\n      shadow_attributes: {\n        width: this.shadow_attributes.width,\n        color: this.shadow_attributes.color,\n      },\n    });\n    return this;\n  }\n\n  restore() {\n    // TODO(0xfe): State needs to be deep-restored.\n    const state = this.state_stack.pop();\n    this.state.font_family = state.state.font_family;\n    this.attributes.font = state.attributes.font;\n    this.attributes.fill = state.attributes.fill;\n    this.attributes.stroke = state.attributes.stroke;\n    this.attributes['stroke-width'] = state.attributes['stroke-width'];\n    this.shadow_attributes.width = state.shadow_attributes.width;\n    this.shadow_attributes.color = state.shadow_attributes.color;\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Gregory Ristow (2015)\n\nimport { Vex } from './vex';\n\nconst attrNamesToIgnoreMap = {\n  path: {\n    x: true,\n    y: true,\n    width: true,\n    height: true,\n  },\n  rect: {\n  },\n  text: {\n    width: true,\n    height: true,\n  },\n};\n\n{\n  const fontAttrNamesToIgnore = {\n    'font-family': true,\n    'font-weight': true,\n    'font-style': true,\n    'font-size': true,\n  };\n\n  Vex.Merge(attrNamesToIgnoreMap.rect, fontAttrNamesToIgnore);\n  Vex.Merge(attrNamesToIgnoreMap.path, fontAttrNamesToIgnore);\n}\n\nexport class SVGContext {\n  constructor(element) {\n    // element is the parent DOM object\n    this.element = element;\n    // Create the SVG in the SVG namespace:\n    this.svgNS = 'http://www.w3.org/2000/svg';\n    const svg = this.create('svg');\n    // Add it to the canvas:\n    this.element.appendChild(svg);\n\n    // Point to it:\n    this.svg = svg;\n    this.groups = [this.svg]; // Create the group stack\n    this.parent = this.svg;\n\n    this.path = '';\n    this.pen = { x: NaN, y: NaN };\n    this.lineWidth = 1.0;\n    this.state = {\n      scale: { x: 1, y: 1 },\n      'font-family': 'Arial',\n      'font-size': '8pt',\n      'font-weight': 'normal',\n    };\n\n    this.attributes = {\n      'stroke-width': 0.3,\n      'fill': 'black',\n      'stroke': 'black',\n      'stroke-dasharray': 'none',\n      'font-family': 'Arial',\n      'font-size': '10pt',\n      'font-weight': 'normal',\n      'font-style': 'normal',\n    };\n\n    this.background_attributes = {\n      'stroke-width': 0,\n      'fill': 'white',\n      'stroke': 'white',\n      'stroke-dasharray': 'none',\n      'font-family': 'Arial',\n      'font-size': '10pt',\n      'font-weight': 'normal',\n      'font-style': 'normal',\n    };\n\n    this.shadow_attributes = {\n      width: 0,\n      color: 'black',\n    };\n\n    this.state_stack = [];\n\n    // Test for Internet Explorer\n    this.iePolyfill();\n  }\n\n  create(svgElementType) {\n    return document.createElementNS(this.svgNS, svgElementType);\n  }\n\n  // Allow grouping elements in containers for interactivity.\n  openGroup(cls, id, attrs) {\n    const group = this.create('g');\n    this.groups.push(group);\n    this.parent.appendChild(group);\n    this.parent = group;\n    if (cls) group.setAttribute('class', Vex.Prefix(cls));\n    if (id) group.setAttribute('id', Vex.Prefix(id));\n\n    if (attrs && attrs.pointerBBox) {\n      group.setAttribute('pointer-events', 'bounding-box');\n    }\n    return group;\n  }\n\n  closeGroup() {\n    this.groups.pop();\n    this.parent = this.groups[this.groups.length - 1];\n  }\n\n  add(elem) {\n    this.parent.appendChild(elem);\n  }\n\n  // Tests if the browser is Internet Explorer; if it is,\n  // we do some tricks to improve text layout.  See the\n  // note at ieMeasureTextFix() for details.\n  iePolyfill() {\n    if (typeof (navigator) !== 'undefined') {\n      this.ie = (\n        /MSIE 9/i.test(navigator.userAgent) ||\n        /MSIE 10/i.test(navigator.userAgent) ||\n        /rv:11\\.0/i.test(navigator.userAgent) ||\n        /Trident/i.test(navigator.userAgent)\n      );\n    }\n  }\n\n  // ### Styling & State Methods:\n\n  setFont(family, size, weight) {\n    // Unlike canvas, in SVG italic is handled by font-style,\n    // not weight. So: we search the weight argument and\n    // apply bold and italic to weight and style respectively.\n    let bold = false;\n    let italic = false;\n    let style = 'normal';\n    // Weight might also be a number (200, 400, etc...) so we\n    // test its type to be sure we have access to String methods.\n    if (typeof weight === 'string') {\n      // look for \"italic\" in the weight:\n      if (weight.indexOf('italic') !== -1) {\n        weight = weight.replace(/italic/g, '');\n        italic = true;\n      }\n      // look for \"bold\" in weight\n      if (weight.indexOf('bold') !== -1) {\n        weight = weight.replace(/bold/g, '');\n        bold = true;\n      }\n      // remove any remaining spaces\n      weight = weight.replace(/ /g, '');\n    }\n    weight = bold ? 'bold' : weight;\n    weight = (typeof weight === 'undefined' || weight === '') ? 'normal' : weight;\n\n    style = italic ? 'italic' : style;\n\n    const fontAttributes = {\n      'font-family': family,\n      'font-size': size + 'pt',\n      'font-weight': weight,\n      'font-style': style,\n    };\n\n    // Store the font size so that if the browser is Internet\n    // Explorer we can fix its calculations of text width.\n    this.fontSize = Number(size);\n\n    Vex.Merge(this.attributes, fontAttributes);\n    Vex.Merge(this.state, fontAttributes);\n\n    return this;\n  }\n\n  setRawFont(font) {\n    font = font.trim();\n    // Assumes size first, splits on space -- which is presently\n    // how all existing modules are calling this.\n    const fontArray = font.split(' ');\n\n    this.attributes['font-family'] = fontArray[1];\n    this.state['font-family'] = fontArray[1];\n\n    this.attributes['font-size'] = fontArray[0];\n    this.state['font-size'] = fontArray[0];\n\n    // Saves fontSize for IE polyfill\n    this.fontSize = Number(fontArray[0].match(/\\d+/));\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.attributes.fill = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_attributes.fill = style;\n    this.background_attributes.stroke = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.attributes.stroke = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.shadow_attributes.color = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.shadow_attributes.width = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.attributes['stroke-width'] = width;\n    this.lineWidth = width;\n  }\n\n  // @param array {lineDash} as [dashInt, spaceInt, dashInt, spaceInt, etc...]\n  setLineDash(lineDash) {\n    if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n      lineDash = lineDash.join(', ');\n      this.attributes['stroke-dasharray'] = lineDash;\n      return this;\n    } else {\n      throw new Vex.RERR('ArgumentError', 'lineDash must be an array of integers.');\n    }\n  }\n\n  setLineCap(lineCap) {\n    this.attributes['stroke-linecap'] = lineCap;\n    return this;\n  }\n\n  // ### Sizing & Scaling Methods:\n\n  // TODO (GCR): See note at scale() -- seperate our internal\n  // conception of pixel-based width/height from the style.width\n  // and style.height properties eventually to allow users to\n  // apply responsive sizing attributes to the SVG.\n  resize(width, height) {\n    this.width = width;\n    this.height = height;\n    this.element.style.width = width;\n    const attributes = {\n      width,\n      height,\n    };\n    this.applyAttributes(this.svg, attributes);\n    return this;\n  }\n\n  scale(x, y) {\n    // uses viewBox to scale\n    // TODO (GCR): we may at some point want to distinguish the\n    // style.width / style.height properties that are applied to\n    // the SVG object from our internal conception of the SVG\n    // width/height.  This would allow us to create automatically\n    // scaling SVG's that filled their containers, for instance.\n    //\n    // As this isn't implemented in Canvas or Raphael contexts,\n    // I've left as is for now, but in using the viewBox to\n    // handle internal scaling, am trying to make it possible\n    // for us to eventually move in that direction.\n\n    this.state.scale = { x, y };\n    const visibleWidth = this.width / x;\n    const visibleHeight = this.height / y;\n    this.setViewBox(0, 0, visibleWidth, visibleHeight);\n\n    return this;\n  }\n\n  setViewBox(...args) {\n    // Override for \"x y w h\" style:\n    if (args.length === 1) {\n      const [viewBox] = args;\n      this.svg.setAttribute('viewBox', viewBox);\n    } else {\n      const [xMin, yMin, width, height] = args;\n      const viewBoxString = xMin + ' ' + yMin + ' ' + width + ' ' + height;\n      this.svg.setAttribute('viewBox', viewBoxString);\n    }\n  }\n\n  // ### Drawing helper methods:\n\n  applyAttributes(element, attributes) {\n    const attrNamesToIgnore = attrNamesToIgnoreMap[element.nodeName];\n    Object\n      .keys(attributes)\n      .forEach(propertyName => {\n        if (attrNamesToIgnore && attrNamesToIgnore[propertyName]) {\n          return;\n        }\n        element.setAttributeNS(null, propertyName, attributes[propertyName]);\n      });\n\n    return element;\n  }\n\n  // ### Shape & Path Methods:\n\n  clear() {\n    // Clear the SVG by removing all inner children.\n\n    // (This approach is usually slightly more efficient\n    // than removing the old SVG & adding a new one to\n    // the container element, since it does not cause the\n    // container to resize twice.  Also, the resize\n    // triggered by removing the entire SVG can trigger\n    // a touchcancel event when the element resizes away\n    // from a touch point.)\n\n    while (this.svg.lastChild) {\n      this.svg.removeChild(this.svg.lastChild);\n    }\n\n    // Replace the viewbox attribute we just removed:\n    this.scale(this.state.scale.x, this.state.scale.y);\n  }\n\n  // ## Rectangles:\n\n  rect(x, y, width, height, attributes) {\n    // Avoid invalid negative height attribs by\n    // flipping the rectangle on its head:\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    // Create the rect & style it:\n    const rectangle = this.create('rect');\n    if (typeof attributes === 'undefined') {\n      attributes = {\n        fill: 'none',\n        'stroke-width': this.lineWidth,\n        stroke: 'black',\n      };\n    }\n\n    Vex.Merge(attributes, {\n      x,\n      y,\n      width,\n      height,\n    });\n\n    this.applyAttributes(rectangle, attributes);\n\n    this.add(rectangle);\n    return this;\n  }\n\n  fillRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    this.rect(x, y, width, height, this.attributes);\n    return this;\n  }\n\n  clearRect(x, y, width, height) {\n    // TODO(GCR): Improve implementation of this...\n    // Currently it draws a box of the background color, rather\n    // than creating alpha through lower z-levels.\n    //\n    // See the implementation of this in SVGKit:\n    // http://sourceforge.net/projects/svgkit/\n    // as a starting point.\n    //\n    // Adding a large number of transform paths (as we would\n    // have to do) could be a real performance hit.  Since\n    // tabNote seems to be the only module that makes use of this\n    // it may be worth creating a seperate tabStave that would\n    // draw lines around locations of tablature fingering.\n    //\n\n    this.rect(x, y, width, height, this.background_attributes);\n    return this;\n  }\n\n  // ## Paths:\n\n  beginPath() {\n    this.path = '';\n    this.pen.x = NaN;\n    this.pen.y = NaN;\n    return this;\n  }\n\n  moveTo(x, y) {\n    this.path += 'M' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  lineTo(x, y) {\n    this.path += 'L' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this.path += 'C' +\n      x1 + ' ' +\n      y1 + ',' +\n      x2 + ' ' +\n      y2 + ',' +\n      x + ' ' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    this.path += 'Q' +\n      x1 + ' ' +\n      y1 + ',' +\n      x + ' ' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    function normalizeAngle(angle) {\n      while (angle < 0) {\n        angle += Math.PI * 2;\n      }\n\n      while (angle > Math.PI * 2) {\n        angle -= Math.PI * 2;\n      }\n      return angle;\n    }\n\n    startAngle = normalizeAngle(startAngle);\n    endAngle = normalizeAngle(endAngle);\n\n    if (startAngle > endAngle) {\n      const tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n      antiClockwise = !antiClockwise;\n    }\n\n    const delta = endAngle - startAngle;\n\n    if (delta > Math.PI) {\n      this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n      this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n    } else {\n      this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n    }\n    return this;\n  }\n\n  arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n    const x1 = x + radius * Math.cos(startAngle);\n    const y1 = y + radius * Math.sin(startAngle);\n\n    const x2 = x + radius * Math.cos(endAngle);\n    const y2 = y + radius * Math.sin(endAngle);\n\n    let largeArcFlag = 0;\n    let sweepFlag = 0;\n    if (antiClockwise) {\n      sweepFlag = 1;\n      if (endAngle - startAngle < Math.PI) {\n        largeArcFlag = 1;\n      }\n    } else if (endAngle - startAngle > Math.PI) {\n      largeArcFlag = 1;\n    }\n\n    this.path += 'M' + x1 + ' ' + y1 + ' A' +\n      radius + ' ' + radius + ' 0 ' + largeArcFlag + ' ' + sweepFlag + ' ' +\n      x2 + ' ' + y2;\n    if (!isNaN(this.pen.x) && !isNaN(this.pen.y)) {\n      this.peth += 'M' + this.pen.x + ' ' + this.pen.y;\n    }\n  }\n\n  closePath() {\n    this.path += 'Z';\n\n    return this;\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    // Calculate the width & paths of the glow:\n    if (this.shadow_attributes.width > 0) {\n      const sa = this.shadow_attributes;\n      const num_paths = sa.width / 2;\n      // Stroke at varying widths to create effect of gaussian blur:\n      for (let i = 1; i <= num_paths; i++) {\n        const attributes = {\n          stroke: sa.color,\n          'stroke-linejoin': 'round',\n          'stroke-linecap': 'round',\n          'stroke-width': +((sa.width * 0.4) / num_paths * i).toFixed(3),\n          opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n        };\n\n        const path = this.create('path');\n        attributes.d = this.path;\n        this.applyAttributes(path, attributes);\n        this.add(path);\n      }\n    }\n    return this;\n  }\n\n  fill(attributes) {\n    // If our current path is set to glow, make it glow\n    this.glow();\n\n    const path = this.create('path');\n    if (typeof attributes === 'undefined') {\n      attributes = {};\n      Vex.Merge(attributes, this.attributes);\n      attributes.stroke = 'none';\n    }\n\n    attributes.d = this.path;\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  stroke() {\n    // If our current path is set to glow, make it glow.\n    this.glow();\n\n    const path = this.create('path');\n    const attributes = {};\n    Vex.Merge(attributes, this.attributes);\n    attributes.fill = 'none';\n    attributes['stroke-width'] = this.lineWidth;\n    attributes.d = this.path;\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  // ## Text Methods:\n  measureText(text) {\n    const txt = this.create('text');\n    if (typeof (txt.getBBox) !== 'function') {\n      return { x: 0, y: 0, width: 0, height: 0 };\n    }\n\n    txt.textContent = text;\n    this.applyAttributes(txt, this.attributes);\n\n    // Temporarily add it to the document for measurement.\n    this.svg.appendChild(txt);\n\n    let bbox = txt.getBBox();\n    if (this.ie && text !== '' && this.attributes['font-style'] === 'italic') {\n      bbox = this.ieMeasureTextFix(bbox, text);\n    }\n\n    this.svg.removeChild(txt);\n    return bbox;\n  }\n\n  ieMeasureTextFix(bbox) {\n    // Internet Explorer over-pads text in italics,\n    // resulting in giant width estimates for measureText.\n    // To fix this, we use this formula, tested against\n    // ie 11:\n    // overestimate (in pixels) = FontSize(in pt) * 1.196 + 1.96\n    // And then subtract the overestimate from calculated width.\n\n    const fontSize = Number(this.fontSize);\n    const m = 1.196;\n    const b = 1.9598;\n    const widthCorrection = (m * fontSize) + b;\n    const width = bbox.width - widthCorrection;\n    const height = bbox.height - 1.5;\n\n    // Get non-protected copy:\n    const box = {\n      x: bbox.x,\n      y: bbox.y,\n      width,\n      height,\n    };\n\n    return box;\n  }\n\n  fillText(text, x, y) {\n    if (!text || text.length <= 0) {\n      return;\n    }\n    const attributes = {};\n    Vex.Merge(attributes, this.attributes);\n    attributes.stroke = 'none';\n    attributes.x = x;\n    attributes.y = y;\n\n    const txt = this.create('text');\n    txt.textContent = text;\n    this.applyAttributes(txt, attributes);\n    this.add(txt);\n  }\n\n  save() {\n    // TODO(mmuthanna): State needs to be deep-copied.\n    this.state_stack.push({\n      state: {\n        'font-family': this.state['font-family'],\n        'font-weight': this.state['font-weight'],\n        'font-style': this.state['font-style'],\n        'font-size': this.state['font-size'],\n      },\n      attributes: {\n        'font-family': this.attributes['font-family'],\n        'font-weight': this.attributes['font-weight'],\n        'font-style': this.attributes['font-style'],\n        'font-size': this.attributes['font-size'],\n        fill: this.attributes.fill,\n        stroke: this.attributes.stroke,\n        'stroke-width': this.attributes['stroke-width'],\n        'stroke-dasharray': this.attributes['stroke-dasharray'],\n      },\n      shadow_attributes: {\n        width: this.shadow_attributes.width,\n        color: this.shadow_attributes.color,\n      },\n      lineWidth: this.lineWidth,\n    });\n    return this;\n  }\n\n  restore() {\n    // TODO(0xfe): State needs to be deep-restored.\n    const state = this.state_stack.pop();\n    this.state['font-family'] = state.state['font-family'];\n    this.state['font-weight'] = state.state['font-weight'];\n    this.state['font-style'] = state.state['font-style'];\n    this.state['font-size'] = state.state['font-size'];\n\n    this.attributes['font-family'] = state.attributes['font-family'];\n    this.attributes['font-weight'] = state.attributes['font-weight'];\n    this.attributes['font-style'] = state.attributes['font-style'];\n    this.attributes['font-size'] = state.attributes['font-size'];\n\n    this.attributes.fill = state.attributes.fill;\n    this.attributes.stroke = state.attributes.stroke;\n    this.attributes['stroke-width'] = state.attributes['stroke-width'];\n    this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n\n    this.shadow_attributes.width = state.shadow_attributes.width;\n    this.shadow_attributes.color = state.shadow_attributes.color;\n\n    this.lineWidth = state.lineWidth;\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Support for different rendering contexts: Canvas, Raphael\n\n/* global document: false */\n\nimport { CanvasContext } from './canvascontext';\nimport { RaphaelContext } from './raphaelcontext';\nimport { SVGContext } from './svgcontext';\nimport { Vex } from './vex';\n\nlet lastContext = null;\n\nexport class Renderer {\n  static get Backends() {\n    return {\n      CANVAS: 1,\n      RAPHAEL: 2,\n      SVG: 3,\n      VML: 4,\n    };\n  }\n\n  // End of line types\n  static get LineEndType() {\n    return {\n      NONE: 1, // No leg\n      UP: 2,   // Upward leg\n      DOWN: 3, // Downward leg\n    };\n  }\n\n  // Set this to true if you're using VexFlow inside a runtime\n  // that does not allow modifiying canvas objects. There is a small\n  // performance degradation due to the extra indirection.\n  static get USE_CANVAS_PROXY() {\n    return false;\n  }\n\n  static get lastContext() {\n    return lastContext;\n  }\n  static set lastContext(ctx) {\n    lastContext = ctx;\n  }\n\n  static buildContext(elementId, backend, width, height, background) {\n    const renderer = new Renderer(elementId, backend);\n    if (width && height) { renderer.resize(width, height); }\n\n    if (!background) background = '#FFF';\n    const ctx = renderer.getContext();\n    ctx.setBackgroundFillStyle(background);\n    Renderer.lastContext = ctx;\n    return ctx;\n  }\n\n  static getCanvasContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n  }\n\n  static getRaphaelContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.RAPHAEL, width, height, background);\n  }\n\n  static getSVGContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n  }\n\n  static bolsterCanvasContext(ctx) {\n    if (Renderer.USE_CANVAS_PROXY) {\n      return new CanvasContext(ctx);\n    }\n\n    const methodNames = [\n      'clear', 'setFont', 'setRawFont', 'setFillStyle', 'setBackgroundFillStyle',\n      'setStrokeStyle', 'setShadowColor', 'setShadowBlur', 'setLineWidth',\n      'setLineCap', 'setLineDash', 'openGroup', 'closeGroup', 'getGroup',\n    ];\n\n    ctx.vexFlowCanvasContext = ctx;\n\n    methodNames.forEach(methodName => {\n      ctx[methodName] = ctx[methodName] || CanvasContext.prototype[methodName];\n    });\n\n    return ctx;\n  }\n\n  // Draw a dashed line (horizontal, vertical or diagonal\n  // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n  // setting the second number to 0 draws a solid line.\n  static drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n    context.beginPath();\n\n    const dx = toX - fromX;\n    const dy = toY - fromY;\n    const angle = Math.atan2(dy, dx);\n    let x = fromX;\n    let y = fromY;\n    context.moveTo(fromX, fromY);\n    let idx = 0;\n    let draw = true;\n    while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n      const dashLength = dashPattern[idx++ % dashPattern.length];\n      const nx = x + (Math.cos(angle) * dashLength);\n      x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n      const ny = y + (Math.sin(angle) * dashLength);\n      y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n      if (draw) {\n        context.lineTo(x, y);\n      } else {\n        context.moveTo(x, y);\n      }\n      draw = !draw;\n    }\n\n    context.closePath();\n    context.stroke();\n  }\n\n  constructor(elementId, backend) {\n    this.elementId = elementId;\n    if (!this.elementId) {\n      throw new Vex.RERR('BadArgument', 'Invalid id for renderer.');\n    }\n\n    this.element = document.getElementById(elementId);\n    if (!this.element) this.element = elementId;\n\n    // Verify backend and create context\n    this.ctx = null;\n    this.paper = null;\n    this.backend = backend;\n    if (this.backend === Renderer.Backends.CANVAS) {\n      // Create context.\n      if (!this.element.getContext) {\n        throw new Vex.RERR('BadElement', `Can't get canvas context from element: ${elementId}`);\n      }\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n    } else if (this.backend === Renderer.Backends.RAPHAEL) {\n      this.ctx = new RaphaelContext(this.element);\n    } else if (this.backend === Renderer.Backends.SVG) {\n      this.ctx = new SVGContext(this.element);\n    } else {\n      throw new Vex.RERR('InvalidBackend', `No support for backend: ${this.backend}`);\n    }\n  }\n\n  resize(width, height) {\n    if (this.backend === Renderer.Backends.CANVAS) {\n      if (!this.element.getContext) {\n        throw new Vex.RERR(\n          'BadElement', `Can't get canvas context from element: ${this.elementId}`\n        );\n      }\n\n      const devicePixelRatio = window.devicePixelRatio || 1;\n\n      this.element.width = width * devicePixelRatio;\n      this.element.height = height * devicePixelRatio;\n      this.element.style.width = width + 'px';\n      this.element.style.height = height + 'px';\n\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n      this.ctx.scale(devicePixelRatio, devicePixelRatio);\n    } else {\n      this.ctx.resize(width, height);\n    }\n\n    return this;\n  }\n\n  getContext() { return this.ctx; }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\n\n// To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`.\nfunction L(...args) { if (Stem.DEBUG) Vex.L('Vex.Flow.Stem', args); }\n\nexport class Stem extends Element {\n  static get CATEGORY() { return 'stem'; }\n\n  // Stem directions\n  static get UP() {\n    return 1;\n  }\n  static get DOWN() {\n    return -1;\n  }\n\n  // Theme\n  static get WIDTH() {\n    return Flow.STEM_WIDTH;\n  }\n  static get HEIGHT() {\n    return Flow.STEM_HEIGHT;\n  }\n\n  constructor(options = {}) {\n    super();\n    this.setAttribute('type', 'Stem');\n\n    // Default notehead x bounds\n    this.x_begin = options.x_begin || 0;\n    this.x_end = options.x_end || 0;\n\n    // Y bounds for top/bottom most notehead\n    this.y_top = options.y_top || 0;\n    this.y_bottom = options.y_bottom || 0;\n\n    // Stem top extension\n    this.stem_extension = options.stem_extension || 0;\n\n    // Direction of the stem\n    this.stem_direction = options.stem_direction || 0;\n\n    // Flag to override all draw calls\n    this.hide = options.hide || false;\n\n    this.isStemlet = options.isStemlet || false;\n    this.stemletHeight = options.stemletHeight || 0;\n\n    // Changing where the stem meets the head\n    this.stem_up_y_offset = options.stem_up_y_offset || 0;\n    this.stem_down_y_offset = options.stem_down_y_offset || 0;\n\n    // Use to adjust the rendered height without affecting\n    // the results of `.getExtents()`\n    this.renderHeightAdjustment = 0;\n  }\n\n  // Set the x bounds for the default notehead\n  setNoteHeadXBounds(x_begin, x_end) {\n    this.x_begin = x_begin;\n    this.x_end = x_end;\n    return this;\n  }\n\n  // Set the direction of the stem in relation to the noteheads\n  setDirection(direction) { this.stem_direction = direction; }\n\n  // Set the extension for the stem, generally for flags or beams\n  setExtension(ext) { this.stem_extension = ext; }\n  getExtension() { return this.stem_extension; }\n\n  // The the y bounds for the top and bottom noteheads\n  setYBounds(y_top, y_bottom) {\n    this.y_top = y_top;\n    this.y_bottom = y_bottom;\n  }\n\n  // The category of the object\n  getCategory() { return Stem.CATEGORY; }\n\n  // Gets the entire height for the stem\n  getHeight() {\n    const y_offset = (this.stem_direction === Stem.UP) ? this.stem_up_y_offset : this.stem_down_y_offset; // eslint-disable-line max-len\n    return ((this.y_bottom - this.y_top) * this.stem_direction) +\n           ((Stem.HEIGHT - y_offset + this.stem_extension) * this.stem_direction);\n  }\n  getBoundingBox() {\n    throw new Vex.RERR('NotImplemented', 'getBoundingBox() not implemented.');\n  }\n\n  // Get the y coordinates for the very base of the stem to the top of\n  // the extension\n  getExtents() {\n    const isStemUp = this.stem_direction === Stem.UP;\n    const ys = [this.y_top, this.y_bottom];\n    const stemHeight = Stem.HEIGHT + this.stem_extension;\n    const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n    const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n    const stemTipY = innerMostNoteheadY + (stemHeight * -this.stem_direction);\n\n    return { topY: stemTipY, baseY: outerMostNoteheadY };\n  }\n\n  setVisibility(isVisible) {\n    this.hide = !isVisible;\n    return this;\n  }\n\n  setStemlet(isStemlet, stemletHeight) {\n    this.isStemlet = isStemlet;\n    this.stemletHeight = stemletHeight;\n    return this;\n  }\n\n  // Render the stem onto the canvas\n  draw() {\n    this.setRendered();\n    if (this.hide) return;\n    const ctx = this.checkContext();\n\n    let stem_x;\n    let stem_y;\n    const stem_direction = this.stem_direction;\n\n    if (stem_direction === Stem.DOWN) {\n      // Down stems are rendered to the left of the head.\n      stem_x = this.x_begin;\n      stem_y = this.y_top + this.stem_down_y_offset;\n    } else {\n      // Up stems are rendered to the right of the head.\n      stem_x = this.x_end;\n      stem_y = this.y_bottom - this.stem_up_y_offset;\n    }\n\n    const stemHeight = this.getHeight();\n\n    L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n\n    // The offset from the stem's base which is required fo satisfy the stemlet height\n    const stemletYOffset = this.isStemlet\n      ? stemHeight - this.stemletHeight * this.stem_direction\n      : 0;\n\n    // Draw the stem\n    ctx.save();\n    this.applyStyle(ctx);\n    ctx.beginPath();\n    ctx.setLineWidth(Stem.WIDTH);\n    ctx.moveTo(stem_x, stem_y - stemletYOffset);\n    ctx.lineTo(stem_x, stem_y - stemHeight - (this.renderHeightAdjustment * stem_direction));\n    ctx.stroke();\n    this.restoreStyle(ctx);\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\n/**\n * ## Description\n *\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same voice. If they are of different rhythmic\n * values, then options.num_notes must be set.\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n *   notes, etc... any class that inherits stemmableNote at some\n *   point in its prototype chain.\n * @param options: object {\n *\n *   num_notes: fit this many notes into...\n *   notes_occupied: ...the space of this many notes\n *\n *       Together, these two properties make up the tuplet ratio\n *     in the form of num_notes : notes_occupied.\n *       num_notes defaults to the number of notes passed in, so\n *     it is important that if you omit this property, all of\n *     the notes passed should be of the same note value.\n *       notes_occupied defaults to 2 -- so you should almost\n *     certainly pass this parameter for anything other than\n *     a basic triplet.\n *\n *   location:\n *     default 1, which is above the notes: ┌─── 3 ───┐\n *      -1 is below the notes └─── 3 ───┘\n *\n *   bracketed: boolean, draw a bracket around the tuplet number\n *     when true: ┌─── 3 ───┐   when false: 3\n *     defaults to true if notes are not beamed, false otherwise\n *\n *   ratioed: boolean\n *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n *     defaults to true if the difference between num_notes and\n *     notes_occupied is greater than 1.\n *\n *   y_offset: int, default 0\n *     manually offset a tuplet, for instance to avoid collisions\n *     with articulations, etc...\n * }\n */\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\n\nexport class Tuplet extends Element {\n  static get LOCATION_TOP() {\n    return 1;\n  }\n  static get LOCATION_BOTTOM() {\n    return -1;\n  }\n  static get NESTING_OFFSET() {\n    return 15;\n  }\n\n  constructor(notes, options) {\n    super();\n    this.setAttribute('type', 'Tuplet');\n    if (!notes || !notes.length) {\n      throw new Vex.RuntimeError('BadArguments', 'No notes provided for tuplet.');\n    }\n\n    this.options = Vex.Merge({}, options);\n    this.notes = notes;\n    this.num_notes = 'num_notes' in this.options ?\n      this.options.num_notes : notes.length;\n\n    // We accept beats_occupied, but warn that it's deprecated:\n    // the preferred property name is now notes_occupied.\n    if (this.options.beats_occupied) {\n      this.beatsOccupiedDeprecationWarning();\n    }\n    this.notes_occupied = this.options.notes_occupied ||\n      this.options.beats_occupied ||\n      2;\n    if ('bracketed' in this.options) {\n      this.bracketed = this.options.bracketed;\n    } else {\n      this.bracketed =\n        notes.some(note => note.beam === null);\n    }\n\n    this.ratioed = 'ratioed' in this.options ?\n      this.options.ratioed :\n      (Math.abs(this.notes_occupied - this.num_notes) > 1);\n    this.point = 28;\n    this.y_pos = 16;\n    this.x_pos = 100;\n    this.width = 200;\n    this.location = this.options.location || Tuplet.LOCATION_TOP;\n\n    Formatter.AlignRestsToNotes(notes, true, true);\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  attach() {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.setTuplet(this);\n    }\n  }\n\n  detach() {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.resetTuplet(this);\n    }\n  }\n\n  /**\n   * Set whether or not the bracket is drawn.\n   */\n  setBracketed(bracketed) {\n    this.bracketed = !!bracketed;\n    return this;\n  }\n\n  /**\n   * Set whether or not the ratio is shown.\n   */\n  setRatioed(ratioed) {\n    this.ratioed = !!ratioed;\n    return this;\n  }\n\n  /**\n   * Set the tuplet to be displayed either on the top or bottom of the stave\n   */\n  setTupletLocation(location) {\n    if (!location) {\n      location = Tuplet.LOCATION_TOP;\n    } else if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n      throw new Vex.RERR('BadArgument', 'Invalid tuplet location: ' + location);\n    }\n\n    this.location = location;\n    return this;\n  }\n\n  getNotes() {\n    return this.notes;\n  }\n\n  getNoteCount() {\n    return this.num_notes;\n  }\n\n  beatsOccupiedDeprecationWarning() {\n    const msg = [\n      'beats_occupied has been deprecated as an ',\n      'option for tuplets. Please use notes_occupied ',\n      'instead. Calls to getBeatsOccupied and ',\n      'setBeatsOccupied should now be routed to ',\n      'getNotesOccupied and setNotesOccupied instead',\n    ].join('');\n\n    if (console && console.warn) { // eslint-disable-line no-console\n      console.warn(msg); // eslint-disable-line no-console\n    } else if (console) {\n      console.log(msg); // eslint-disable-line no-console\n    }\n  }\n\n  getBeatsOccupied() {\n    this.beatsOccupiedDeprecationWarning();\n    return this.getNotesOccupied();\n  }\n\n  setBeatsOccupied(beats) {\n    this.beatsOccupiedDeprecationWarning();\n    return this.setNotesOccupied(beats);\n  }\n\n  getNotesOccupied() {\n    return this.notes_occupied;\n  }\n\n  setNotesOccupied(notes) {\n    this.detach();\n    this.notes_occupied = notes;\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  resolveGlyphs() {\n    this.num_glyphs = [];\n    let n = this.num_notes;\n    while (n >= 1) {\n      this.num_glyphs.push(new Glyph('v' + (n % 10), this.point));\n      n = parseInt(n / 10, 10);\n    }\n\n    this.denom_glyphs = [];\n    n = this.notes_occupied;\n    while (n >= 1) {\n      this.denom_glyphs.push(new Glyph('v' + (n % 10), this.point));\n      n = parseInt(n / 10, 10);\n    }\n  }\n\n  // determine how many tuplets are nested within this tuplet\n  // on the same side (above/below), to calculate a y\n  // offset for this tuplet:\n  getNestedTupletCount() {\n    const location = this.location;\n    const first_note = this.notes[0];\n    let maxTupletCount = countTuplets(first_note, location);\n    let minTupletCount = countTuplets(first_note, location);\n\n    // Count the tuplets that are on the same side (above/below)\n    // as this tuplet:\n    function countTuplets(note, location) {\n      return note.tupletStack.filter(tuplet => tuplet.location === location).length;\n    }\n\n    this.notes.forEach(note => {\n      const tupletCount = countTuplets(note, location);\n      maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n      minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n    });\n\n    return maxTupletCount - minTupletCount;\n  }\n\n  // determine the y position of the tuplet:\n  getYPosition() {\n    // offset the tuplet for any nested tuplets between\n    // it and the notes:\n    const nested_tuplet_y_offset =\n      this.getNestedTupletCount() *\n      Tuplet.NESTING_OFFSET *\n      -this.location;\n\n    // offset the tuplet for any manual y_offset:\n    const y_offset = this.options.y_offset || 0;\n\n    // now iterate through the notes and find our highest\n    // or lowest locations, to form a base y_pos\n    const first_note = this.notes[0];\n    let y_pos;\n    if (this.location === Tuplet.LOCATION_TOP) {\n      y_pos = first_note.getStave().getYForLine(0) - 15;\n      // y_pos = first_note.getStemExtents().topY - 10;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        const top_y = this.notes[i].getStemDirection() === Stem.UP\n          ? this.notes[i].getStemExtents().topY - 10\n          : this.notes[i].getStemExtents().baseY - 20;\n\n        if (top_y < y_pos) {\n          y_pos = top_y;\n        }\n      }\n    } else {\n      y_pos = first_note.getStave().getYForLine(4) + 20;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        const bottom_y = this.notes[i].getStemDirection() === Stem.UP\n          ? this.notes[i].getStemExtents().baseY + 20\n          : this.notes[i].getStemExtents().topY + 10;\n        if (bottom_y > y_pos) {\n          y_pos = bottom_y;\n        }\n      }\n    }\n\n    return y_pos + nested_tuplet_y_offset + y_offset;\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    // determine x value of left bound of tuplet\n    const first_note = this.notes[0];\n    const last_note = this.notes[this.notes.length - 1];\n\n    if (!this.bracketed) {\n      this.x_pos = first_note.getStemX();\n      this.width = last_note.getStemX() - this.x_pos;\n    } else {\n      this.x_pos = first_note.getTieLeftX() - 5;\n      this.width = last_note.getTieRightX() - this.x_pos + 5;\n    }\n\n    // determine y value for tuplet\n    this.y_pos = this.getYPosition();\n\n    const addGlyphWidth = (width, glyph) => width + glyph.getMetrics().width;\n\n    // calculate total width of tuplet notation\n    let width = this.num_glyphs.reduce(addGlyphWidth, 0);\n    if (this.ratioed) {\n      width = this.denom_glyphs.reduce(addGlyphWidth, width);\n      width += this.point * 0.32;\n    }\n\n    const notation_center_x = this.x_pos + (this.width / 2);\n    const notation_start_x = notation_center_x - (width / 2);\n\n    // draw bracket if the tuplet is not beamed\n    if (this.bracketed) {\n      const line_width = this.width / 2 - width / 2 - 5;\n\n      // only draw the bracket if it has positive length\n      if (line_width > 0) {\n        this.context.fillRect(this.x_pos, this.y_pos, line_width, 1);\n        this.context.fillRect(\n          this.x_pos + this.width / 2 + width / 2 + 5,\n          this.y_pos,\n          line_width,\n          1\n        );\n        this.context.fillRect(\n          this.x_pos,\n          this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM),\n          1,\n          this.location * 10\n        );\n        this.context.fillRect(\n          this.x_pos + this.width,\n          this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM),\n          1,\n          this.location * 10\n        );\n      }\n    }\n\n    // draw numerator glyphs\n    let x_offset = 0;\n    this.num_glyphs.forEach(glyph => {\n      glyph.render(this.context, notation_start_x + x_offset, this.y_pos + (this.point / 3) - 2);\n      x_offset += glyph.getMetrics().width;\n    });\n\n    // display colon and denominator if the ratio is to be shown\n    if (this.ratioed) {\n      const colon_x = notation_start_x + x_offset + this.point * 0.16;\n      const colon_radius = this.point * 0.06;\n      this.context.beginPath();\n      this.context.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, true);\n      this.context.closePath();\n      this.context.fill();\n      this.context.beginPath();\n      this.context.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, true);\n      this.context.closePath();\n      this.context.fill();\n      x_offset += this.point * 0.32;\n      this.denom_glyphs.forEach(glyph => {\n        glyph.render(this.context, notation_start_x + x_offset, this.y_pos + (this.point / 3) - 2);\n        x_offset += glyph.getMetrics().width;\n      });\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `Beams` that span over a set of `StemmableNotes`.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tuplet } from './tuplet';\nimport { Stem } from './stem';\n\nfunction calculateStemDirection(notes) {\n  let lineSum = 0;\n  notes.forEach(note => {\n    if (note.keyProps) {\n      note.keyProps.forEach(keyProp => {\n        lineSum += (keyProp.line - 3);\n      });\n    }\n  });\n\n  if (lineSum >= 0) {\n    return Stem.DOWN;\n  }\n  return Stem.UP;\n}\n\nconst getStemSlope = (firstNote, lastNote) => {\n  const firstStemTipY = firstNote.getStemExtents().topY;\n  const firstStemX = firstNote.getStemX();\n  const lastStemTipY = lastNote.getStemExtents().topY;\n  const lastStemX = lastNote.getStemX();\n  return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n};\n\nexport class Beam extends Element {\n  // Gets the default beam groups for a provided time signature.\n  // Attempts to guess if the time signature is not found in table.\n  // Currently this is fairly naive.\n  static getDefaultBeamGroups(time_sig) {\n    if (!time_sig || time_sig === 'c') {\n      time_sig = '4/4';\n    }\n\n    const defaults = {\n      '1/2': ['1/2'],\n      '2/2': ['1/2'],\n      '3/2': ['1/2'],\n      '4/2': ['1/2'],\n\n      '1/4': ['1/4'],\n      '2/4': ['1/4'],\n      '3/4': ['1/4'],\n      '4/4': ['1/4'],\n\n      '1/8': ['1/8'],\n      '2/8': ['2/8'],\n      '3/8': ['3/8'],\n      '4/8': ['2/8'],\n\n      '1/16': ['1/16'],\n      '2/16': ['2/16'],\n      '3/16': ['3/16'],\n      '4/16': ['2/16'],\n    };\n\n    const groups = defaults[time_sig];\n\n    if (groups === undefined) {\n      // If no beam groups found, naively determine\n      // the beam groupings from the time signature\n      const beatTotal = parseInt(time_sig.split('/')[0], 10);\n      const beatValue = parseInt(time_sig.split('/')[1], 10);\n\n      const tripleMeter = beatTotal % 3 === 0;\n\n      if (tripleMeter) {\n        return [new Fraction(3, beatValue)];\n      } else if (beatValue > 4) {\n        return [new Fraction(2, beatValue)];\n      } else if (beatValue <= 4) {\n        return [new Fraction(1, beatValue)];\n      }\n    } else {\n      return groups.map(group => new Fraction().parse(group));\n    }\n\n    return [new Fraction(1, 4)];\n  }\n\n  // A helper function to automatically build basic beams for a voice. For more\n  // complex auto-beaming use `Beam.generateBeams()`.\n  //\n  // Parameters:\n  // * `voice` - The voice to generate the beams for\n  // * `stem_direction` - A stem direction to apply to the entire voice\n  // * `groups` - An array of `Fraction` representing beat groupings for the beam\n  static applyAndGetBeams(voice, stem_direction, groups) {\n    return Beam.generateBeams(voice.getTickables(), {\n      groups,\n      stem_direction,\n    });\n  }\n\n  // A helper function to autimatically build beams for a voice with\n  // configuration options.\n  //\n  // Example configuration object:\n  //\n  // ```\n  // config = {\n  //   groups: [new Vex.Flow.Fraction(2, 8)],\n  //   stem_direction: -1,\n  //   beam_rests: true,\n  //   beam_middle_only: true,\n  //   show_stemlets: false\n  // };\n  // ```\n  //\n  // Parameters:\n  // * `notes` - An array of notes to create the beams for\n  // * `config` - The configuration object\n  //    * `groups` - Array of `Fractions` that represent the beat structure to beam the notes\n  //    * `stem_direction` - Set to apply the same direction to all notes\n  //    * `beam_rests` - Set to `true` to include rests in the beams\n  //    * `beam_middle_only` - Set to `true` to only beam rests in the middle of the beat\n  //    * `show_stemlets` - Set to `true` to draw stemlets for rests\n  //    * `maintain_stem_directions` - Set to `true` to not apply new stem directions\n  //\n  static generateBeams(notes, config) {\n    if (!config) config = {};\n\n    if (!config.groups || !config.groups.length) {\n      config.groups = [new Fraction(2, 8)];\n    }\n\n    // Convert beam groups to tick amounts\n    const tickGroups = config.groups.map(group => {\n      if (!group.multiply) {\n        throw new Vex.RuntimeError('InvalidBeamGroups',\n          'The beam groups must be an array of Vex.Flow.Fractions');\n      }\n      return group.clone().multiply(Flow.RESOLUTION, 1);\n    });\n\n    const unprocessedNotes = notes;\n    let currentTickGroup = 0;\n    let noteGroups = [];\n    let currentGroup = [];\n\n    function getTotalTicks(vf_notes) {\n      return vf_notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n    }\n\n    function nextTickGroup() {\n      if (tickGroups.length - 1 > currentTickGroup) {\n        currentTickGroup += 1;\n      } else {\n        currentTickGroup = 0;\n      }\n    }\n\n    function createGroups() {\n      let nextGroup = [];\n\n      unprocessedNotes.forEach(unprocessedNote => {\n        nextGroup = [];\n        if (unprocessedNote.shouldIgnoreTicks()) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          return; // Ignore untickables (like bar notes)\n        }\n\n        currentGroup.push(unprocessedNote);\n        const ticksPerGroup = tickGroups[currentTickGroup].clone();\n        const totalTicks = getTotalTicks(currentGroup);\n\n        // Double the amount of ticks in a group, if it's an unbeamable tuplet\n        const unbeamable = Flow.durationToNumber(unprocessedNote.duration) < 8;\n        if (unbeamable && unprocessedNote.tuplet) {\n          ticksPerGroup.numerator *= 2;\n        }\n\n        // If the note that was just added overflows the group tick total\n        if (totalTicks.greaterThan(ticksPerGroup)) {\n          // If the overflow note can be beamed, start the next group\n          // with it. Unbeamable notes leave the group overflowed.\n          if (!unbeamable) {\n            nextGroup.push(currentGroup.pop());\n          }\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        } else if (totalTicks.equals(ticksPerGroup)) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        }\n      });\n\n      // Adds any remainder notes\n      if (currentGroup.length > 0) {\n        noteGroups.push(currentGroup);\n      }\n    }\n\n    function getBeamGroups() {\n      return noteGroups.filter(group => {\n        if (group.length > 1) {\n          let beamable = true;\n          group.forEach(note => {\n            if (note.getIntrinsicTicks() >= Flow.durationToTicks('4')) {\n              beamable = false;\n            }\n          });\n          return beamable;\n        }\n        return false;\n      });\n    }\n\n    // Splits up groups by Rest\n    function sanitizeGroups() {\n      const sanitizedGroups = [];\n      noteGroups.forEach(group => {\n        let tempGroup = [];\n        group.forEach((note, index, group) => {\n          const isFirstOrLast = index === 0 || index === group.length - 1;\n          const prevNote = group[index - 1];\n\n          const breaksOnEachRest = !config.beam_rests && note.isRest();\n          const breaksOnFirstOrLastRest = (config.beam_rests &&\n            config.beam_middle_only && note.isRest() && isFirstOrLast);\n\n          let breakOnStemChange = false;\n          if (config.maintain_stem_directions && prevNote &&\n            !note.isRest() && !prevNote.isRest()) {\n            const prevDirection = prevNote.getStemDirection();\n            const currentDirection = note.getStemDirection();\n            breakOnStemChange = currentDirection !== prevDirection;\n          }\n\n          const isUnbeamableDuration = parseInt(note.duration, 10) < 8;\n\n          // Determine if the group should be broken at this note\n          const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest ||\n            breakOnStemChange || isUnbeamableDuration;\n\n          if (shouldBreak) {\n            // Add current group\n            if (tempGroup.length > 0) {\n              sanitizedGroups.push(tempGroup);\n            }\n\n            // Start a new group. Include the current note if the group\n            // was broken up by stem direction, as that note needs to start\n            // the next group of notes\n            tempGroup = breakOnStemChange ? [note] : [];\n          } else {\n            // Add note to group\n            tempGroup.push(note);\n          }\n        });\n\n        // If there is a remaining group, add it as well\n        if (tempGroup.length > 0) {\n          sanitizedGroups.push(tempGroup);\n        }\n      });\n\n      noteGroups = sanitizedGroups;\n    }\n\n    function formatStems() {\n      noteGroups.forEach(group => {\n        let stemDirection;\n        if (config.maintain_stem_directions) {\n          const note = findFirstNote(group);\n          stemDirection = note ? note.getStemDirection() : Stem.UP;\n        } else {\n          if (config.stem_direction) {\n            stemDirection = config.stem_direction;\n          } else {\n            stemDirection = calculateStemDirection(group);\n          }\n        }\n        applyStemDirection(group, stemDirection);\n      });\n    }\n\n    function findFirstNote(group) {\n      for (let i = 0; i < group.length; i++) {\n        const note = group[i];\n        if (!note.isRest()) {\n          return note;\n        }\n      }\n\n      return false;\n    }\n\n    function applyStemDirection(group, direction) {\n      group.forEach(note => {\n        note.setStemDirection(direction);\n      });\n    }\n\n    // Get all of the tuplets in all of the note groups\n    function getTuplets() {\n      const uniqueTuplets = [];\n\n      // Go through all of the note groups and inspect for tuplets\n      noteGroups.forEach(group => {\n        let tuplet = null;\n        group.forEach(note => {\n          if (note.tuplet && (tuplet !== note.tuplet)) {\n            tuplet = note.tuplet;\n            uniqueTuplets.push(tuplet);\n          }\n        });\n      });\n      return uniqueTuplets;\n    }\n\n\n    // Using closures to store the variables throughout the various functions\n    // IMO Keeps it this process lot cleaner - but not super consistent with\n    // the rest of the API's style - Silverwolf90 (Cyril)\n    createGroups();\n    sanitizeGroups();\n    formatStems();\n\n    // Get the notes to be beamed\n    const beamedNoteGroups = getBeamGroups();\n\n    // Get the tuplets in order to format them accurately\n    const allTuplets = getTuplets();\n\n    // Create a Vex.Flow.Beam from each group of notes to be beamed\n    const beams = [];\n    beamedNoteGroups.forEach(group => {\n      const beam = new Beam(group);\n\n      if (config.show_stemlets) {\n        beam.render_options.show_stemlets = true;\n      }\n      if (config.secondary_breaks) {\n        beam.render_options.secondary_break_ticks = Flow.durationToTicks(config.secondary_breaks);\n      }\n      if (config.flat_beams === true) {\n        beam.render_options.flat_beams = true;\n        beam.render_options.flat_beam_offset = config.flat_beam_offset;\n      }\n      beams.push(beam);\n    });\n\n    // Reformat tuplets\n    allTuplets.forEach(tuplet => {\n      // Set the tuplet location based on the stem direction\n      const direction = tuplet.notes[0].stem_direction === Stem.DOWN ?\n        Tuplet.LOCATION_BOTTOM : Tuplet.LOCATION_TOP;\n      tuplet.setTupletLocation(direction);\n\n      // If any of the notes in the tuplet are not beamed, draw a bracket.\n      let bracketed = false;\n      for (let i = 0; i < tuplet.notes.length; i++) {\n        const note = tuplet.notes[i];\n        if (note.beam === null) {\n          bracketed = true;\n          break;\n        }\n      }\n      tuplet.setBracketed(bracketed);\n    });\n\n    return beams;\n  }\n\n  constructor(notes, auto_stem) {\n    super();\n    this.setAttribute('type', 'Beam');\n\n    if (!notes || notes === []) {\n      throw new Vex.RuntimeError('BadArguments', 'No notes provided for beam.');\n    }\n\n    if (notes.length === 1) {\n      throw new Vex.RuntimeError('BadArguments', 'Too few notes for beam.');\n    }\n\n    // Validate beam line, direction and ticks.\n    this.ticks = notes[0].getIntrinsicTicks();\n\n    if (this.ticks >= Flow.durationToTicks('4')) {\n      throw new Vex.RuntimeError('BadArguments',\n        'Beams can only be applied to notes shorter than a quarter note.');\n    }\n\n    let i; // shared iterator\n    let note;\n\n    this.stem_direction = Stem.UP;\n\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (note.hasStem()) {\n        this.stem_direction = note.getStemDirection();\n        break;\n      }\n    }\n\n    let stem_direction = this.stem_direction;\n    // Figure out optimal stem direction based on given notes\n    if (auto_stem && notes[0].getCategory() === 'stavenotes') {\n      stem_direction = calculateStemDirection(notes);\n    } else if (auto_stem && notes[0].getCategory() === 'tabnotes') {\n      // Auto Stem TabNotes\n      const stem_weight = notes.reduce((memo, note) => memo + note.stem_direction, 0);\n\n      stem_direction = stem_weight > -1 ? Stem.UP : Stem.DOWN;\n    }\n\n    // Apply stem directions and attach beam to notes\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (auto_stem) {\n        note.setStemDirection(stem_direction);\n        this.stem_direction = stem_direction;\n      }\n      note.setBeam(this);\n    }\n\n    this.postFormatted = false;\n    this.notes = notes;\n    this.beam_count = this.getBeamCount();\n    this.break_on_indices = [];\n    this.render_options = {\n      beam_width: 5,\n      max_slope: 0.25,\n      min_slope: -0.25,\n      slope_iterations: 20,\n      slope_cost: 100,\n      show_stemlets: false,\n      stemlet_extension: 7,\n      partial_beam_length: 10,\n      flat_beams: false,\n      min_flat_beam_offset: 15,\n    };\n  }\n\n  // Get the notes in this beam\n  getNotes() { return this.notes; }\n\n  // Get the max number of beams in the set of notes\n  getBeamCount() {\n    const beamCounts = this.notes.map(note => note.getGlyph().beam_count);\n\n    const maxBeamCount = beamCounts.reduce((max, beamCount) => beamCount > max ? beamCount : max);\n\n    return maxBeamCount;\n  }\n\n  // Set which note `indices` to break the secondary beam at\n  breakSecondaryAt(indices) {\n    this.break_on_indices = indices;\n    return this;\n  }\n\n  // Return the y coordinate for linear function\n  getSlopeY(x, first_x_px, first_y_px, slope) {\n    return first_y_px + ((x - first_x_px) * slope);\n  }\n\n  // Calculate the best possible slope for the provided notes\n  calculateSlope() {\n    const {\n      notes,\n      stem_direction: stemDirection,\n      render_options: { max_slope, min_slope, slope_iterations, slope_cost },\n    } = this;\n\n    const firstNote = notes[0];\n    const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n    const increment = (max_slope - min_slope) / slope_iterations;\n    let minCost = Number.MAX_VALUE;\n    let bestSlope = 0;\n    let yShift = 0;\n\n    // iterate through slope values to find best weighted fit\n    for (let slope = min_slope; slope <= max_slope; slope += increment) {\n      let totalStemExtension = 0;\n      let yShiftTemp = 0;\n\n      // iterate through notes, calculating y shift and stem extension\n      for (let i = 1; i < notes.length; ++i) {\n        const note = notes[i];\n        const adjustedStemTipY = this.getSlopeY(\n          note.getStemX(),\n          firstNote.getStemX(),\n          firstNote.getStemExtents().topY,\n          slope\n        ) + yShiftTemp;\n\n        const stemTipY = note.getStemExtents().topY;\n        // beam needs to be shifted up to accommodate note\n        if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n          const diff = Math.abs(stemTipY - adjustedStemTipY);\n          yShiftTemp += diff * -stemDirection;\n          totalStemExtension += diff * i;\n        } else { // beam overshoots note, account for the difference\n          totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n        }\n      }\n\n      // most engraving books suggest aiming for a slope about half the angle of the\n      // difference between the first and last notes' stem length;\n      const idealSlope = initialSlope / 2;\n      const distanceFromIdeal = Math.abs(idealSlope - slope);\n\n      // This tries to align most beams to something closer to the idealSlope, but\n      // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n      const cost = slope_cost * distanceFromIdeal + Math.abs(totalStemExtension);\n\n      // update state when a more ideal slope is found\n      if (cost < minCost) {\n        minCost = cost;\n        bestSlope = slope;\n        yShift = yShiftTemp;\n      }\n    }\n\n    this.slope = bestSlope;\n    this.y_shift = yShift;\n  }\n\n  // Calculate a slope and y-shift for flat beams\n  calculateFlatSlope() {\n    const {\n      notes, stem_direction,\n      render_options: { beam_width, min_flat_beam_offset, flat_beam_offset },\n    } = this;\n\n    // If a flat beam offset has not yet been supplied or calculated,\n    // generate one based on the notes in this particular note group\n    let total = 0;\n    let extremeY = 0;  // Store the highest or lowest note here\n    let extremeBeamCount = 0;  // The beam count of the extreme note\n    let currentExtreme = 0;\n    for (let i = 0; i < notes.length; i++) {\n      // Total up all of the offsets so we can average them out later\n      const note = notes[i];\n      const stemTipY = note.getStemExtents().topY;\n      total += stemTipY;\n\n      // Store the highest (stems-up) or lowest (stems-down) note so the\n      //  offset can be adjusted in case the average isn't enough\n      if (stem_direction === Stem.DOWN && currentExtreme < stemTipY) {\n        currentExtreme = stemTipY;\n        extremeY = Math.max(...note.getYs());\n        extremeBeamCount = note.getBeamCount();\n      } else if (\n        stem_direction === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)\n      ) {\n        currentExtreme = stemTipY;\n        extremeY = Math.min(...note.getYs());\n        extremeBeamCount = note.getBeamCount();\n      }\n    }\n\n    // Average the offsets to try and come up with a reasonable one that\n    //  works for all of the notes in the beam group.\n    let offset = total / notes.length;\n\n    // In case the average isn't long enough, add or subtract some more\n    //  based on the highest or lowest note (again, based on the stem\n    //  direction). This also takes into account the added height due to\n    //  the width of the beams.\n    const beamWidth = beam_width * 1.5;\n    const extremeTest = min_flat_beam_offset + (extremeBeamCount * beamWidth);\n    const newOffset = extremeY + (extremeTest * -stem_direction);\n    if (stem_direction === Stem.DOWN && offset < newOffset) {\n      offset = extremeY + extremeTest;\n    } else if (stem_direction === Stem.UP && offset > newOffset) {\n      offset = extremeY - extremeTest;\n    }\n\n    if (!flat_beam_offset) {\n      // Set the offset for the group based on the calculations above.\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.DOWN && offset > flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.UP && offset < flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    }\n\n    // for flat beams, the slope and y_shift are simply 0\n    this.slope = 0;\n    this.y_shift = 0;\n  }\n\n  getBeamYToDraw() {\n    const firstNote = this.notes[0];\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    let beamY = firstStemTipY;\n\n    // For flat beams, set the first and last Y to the offset, rather than\n    //  using the note's stem extents.\n    if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n      beamY = this.render_options.flat_beam_offset;\n    }\n    return beamY;\n  }\n\n  // Create new stems for the notes in the beam, so that each stem\n  // extends into the beams.\n  applyStemExtensions() {\n    const {\n      notes, slope, y_shift, stem_direction, beam_count,\n      render_options: {\n        show_stemlets,\n        stemlet_extension,\n        beam_width,\n      },\n    } = this;\n\n    const firstNote = notes[0];\n    const firstStemTipY = this.getBeamYToDraw();\n    const firstStemX = firstNote.getStemX();\n\n    for (let i = 0; i < notes.length; ++i) {\n      const note = notes[i];\n      const stemX = note.getStemX();\n      const { topY: stemTipY } = note.getStemExtents();\n      const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + y_shift;\n      const preBeamExtension = note.getStem().getExtension();\n      const beamExtension = stem_direction === Stem.UP\n        ? stemTipY - beamedStemTipY\n        : beamedStemTipY - stemTipY;\n\n      note.stem.setExtension(preBeamExtension + beamExtension);\n      note.stem.renderHeightAdjustment = -Stem.WIDTH / 2;\n\n      if (note.isRest() && show_stemlets) {\n        const beamWidth = beam_width;\n        const totalBeamWidth = ((beam_count - 1) * beamWidth * 1.5) + beamWidth;\n        note.stem\n          .setVisibility(true)\n          .setStemlet(true, totalBeamWidth + stemlet_extension);\n      }\n    }\n  }\n\n  // Get the x coordinates for the beam lines of specific `duration`\n  getBeamLines(duration) {\n    const beam_lines = [];\n    let beam_started = false;\n    let current_beam = null;\n    const partial_beam_length = this.render_options.partial_beam_length;\n    let previous_should_break = false;\n    let tick_tally = 0;\n    for (let i = 0; i < this.notes.length; ++i) {\n      const note = this.notes[i];\n\n      // See if we need to break secondary beams on this note.\n      const ticks = note.ticks.value();\n      tick_tally += ticks;\n      let should_break = false;\n\n      // 8th note beams are always drawn.\n      if (parseInt(duration, 10) >= 8) {\n        // First, check to see if any indices were set up through breakSecondaryAt()\n        should_break = this.break_on_indices.indexOf(i) !== -1;\n\n        // If the secondary breaks were auto-configured in the render options,\n        //  handle that as well.\n        if (this.render_options.secondary_break_ticks && tick_tally >=\n          this.render_options.secondary_break_ticks) {\n          tick_tally = 0;\n          should_break = true;\n        }\n      }\n      const note_gets_beam = note.getIntrinsicTicks() < Flow.durationToTicks(duration);\n\n      const stem_x = note.getStemX() - (Stem.WIDTH / 2);\n\n      // Check to see if the next note in the group will get a beam at this\n      //  level. This will help to inform the partial beam logic below.\n      const next_note = this.notes[i + 1];\n      const beam_next = next_note && next_note.getIntrinsicTicks() < Flow.durationToTicks(duration);\n      if (note_gets_beam) {\n        // This note gets a beam at the current level\n        if (beam_started) {\n          // We're currently in the middle of a beam. Just continue it on to\n          //  the stem X of the current note.\n          current_beam = beam_lines[beam_lines.length - 1];\n          current_beam.end = stem_x;\n\n          // If a secondary beam break is set up, end the beam right now.\n          if (should_break) {\n            beam_started = false;\n            if (next_note && !beam_next && current_beam.end === null) {\n              // This note gets a beam,.but the next one does not. This means\n              //  we need a partial pointing right.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          }\n        } else {\n          // No beam started yet. Start a new one.\n          current_beam = { start: stem_x, end: null };\n          beam_started = true;\n          if (!beam_next) {\n            // The next note doesn't get a beam. Draw a partial.\n            if ((previous_should_break || i === 0) && next_note) {\n              // This is the first note (but not the last one), or it is\n              //  following a secondary break. Draw a partial to the right.\n              current_beam.end = current_beam.start + partial_beam_length;\n            } else {\n              // By default, draw a partial to the left.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          } else if (should_break) {\n            // This note should have a secondary break after it. Even though\n            //  we just started a beam, it needs to end immediately.\n            current_beam.end = current_beam.start - partial_beam_length;\n            beam_started = false;\n          }\n          beam_lines.push(current_beam);\n        }\n      } else {\n        // The current note does not get a beam.\n        beam_started = false;\n      }\n\n      // Store the secondary break flag to inform the partial beam logic in\n      //  the next iteration of the loop.\n      previous_should_break = should_break;\n    }\n\n    // Add a partial beam pointing left if this is the last note in the group\n    const last_beam = beam_lines[beam_lines.length - 1];\n    if (last_beam && last_beam.end === null) {\n      last_beam.end = last_beam.start - partial_beam_length;\n    }\n    return beam_lines;\n  }\n\n  // Render the stems for each notes\n  drawStems() {\n    this.notes.forEach(note => {\n      if (note.getStem()) {\n        note.getStem().setContext(this.context).draw();\n      }\n    }, this);\n  }\n\n  // Render the beam lines\n  drawBeamLines() {\n    this.checkContext();\n\n    const valid_beam_durations = ['4', '8', '16', '32', '64'];\n\n    const firstNote = this.notes[0];\n    let beamY = this.getBeamYToDraw();\n    const firstStemX = firstNote.getStemX();\n    const beamThickness = this.render_options.beam_width * this.stem_direction;\n\n    // Draw the beams.\n    for (let i = 0; i < valid_beam_durations.length; ++i) {\n      const duration = valid_beam_durations[i];\n      const beamLines = this.getBeamLines(duration);\n\n      for (let j = 0; j < beamLines.length; ++j) {\n        const beam_line = beamLines[j];\n        const startBeamX = beam_line.start;\n\n        const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n        const lastBeamX = beam_line.end;\n        const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n\n        this.context.beginPath();\n        this.context.moveTo(startBeamX, startBeamY);\n        this.context.lineTo(startBeamX, startBeamY + beamThickness);\n        this.context.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n        this.context.lineTo(lastBeamX + 1, lastBeamY);\n        this.context.closePath();\n        this.context.fill();\n      }\n\n      beamY += beamThickness * 1.5;\n    }\n  }\n\n  // Pre-format the beam\n  preFormat() { return this; }\n\n  // Post-format the beam. This can only be called after\n  // the notes in the beam have both `x` and `y` values. ie: they've\n  // been formatted and have staves\n  postFormat() {\n    if (this.postFormatted) return;\n\n    // Calculate a smart slope if we're not forcing the beams to be flat.\n    if (this.notes[0].getCategory() === 'tabnotes' || this.render_options.flat_beams) {\n      this.calculateFlatSlope();\n    } else {\n      this.calculateSlope();\n    }\n    this.applyStemExtensions();\n\n    this.postFormatted = true;\n  }\n\n  // Render the beam to the canvas context\n  draw() {\n    this.checkContext();\n    this.setRendered();\n    if (this.unbeamable) return;\n\n    if (!this.postFormatted) {\n      this.postFormat();\n    }\n\n    this.drawStems();\n    this.applyStyle();\n    this.drawBeamLines();\n    this.restoreStyle();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the main Voice class. It's mainly a container\n// object to group `Tickables` for formatting.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\n\nexport class Voice extends Element {\n  // Modes allow the addition of ticks in three different ways:\n  //\n  // STRICT: This is the default. Ticks must fill the voice.\n  // SOFT:   Ticks can be added without restrictions.\n  // FULL:   Ticks do not need to fill the voice, but can't exceed the maximum\n  //         tick length.\n  static get Mode() {\n    return {\n      STRICT: 1,\n      SOFT: 2,\n      FULL: 3,\n    };\n  }\n\n  constructor(time) {\n    super();\n    this.setAttribute('type', 'Voice');\n\n    // Time signature shortcut: \"4/4\", \"3/8\", etc.\n    if (typeof(time) === 'string') {\n      const match = time.match(/(\\d+)\\/(\\d+)/);\n      if (match) {\n        time = {\n          num_beats: match[1],\n          beat_value: match[2],\n          resolution: Flow.RESOLUTION,\n        };\n      }\n    }\n\n    // Default time sig is 4/4\n    this.time = Vex.Merge({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }, time);\n\n    // Recalculate total ticks.\n    this.totalTicks = new Fraction(\n      this.time.num_beats * (this.time.resolution / this.time.beat_value), 1);\n\n    this.resolutionMultiplier = 1;\n\n    // Set defaults\n    this.tickables = [];\n    this.ticksUsed = new Fraction(0, 1);\n    this.smallestTickCount = this.totalTicks.clone();\n    this.largestTickWidth = 0;\n    this.stave = null;\n    // Do we care about strictly timed notes\n    this.mode = Voice.Mode.STRICT;\n\n    // This must belong to a VoiceGroup\n    this.voiceGroup = null;\n  }\n\n  // Get the total ticks in the voice\n  getTotalTicks() { return this.totalTicks; }\n\n  // Get the total ticks used in the voice by all the tickables\n  getTicksUsed() { return this.ticksUsed; }\n\n  // Get the largest width of all the tickables\n  getLargestTickWidth() { return this.largestTickWidth; }\n\n  // Get the tick count for the shortest tickable\n  getSmallestTickCount() { return this.smallestTickCount; }\n\n  // Get the tickables in the voice\n  getTickables() { return this.tickables; }\n\n  // Get/set the voice mode, use a value from `Voice.Mode`\n  getMode() { return this.mode; }\n  setMode(mode) { this.mode = mode; return this; }\n\n  // Get the resolution multiplier for the voice\n  getResolutionMultiplier() { return this.resolutionMultiplier; }\n\n  // Get the actual tick resolution for the voice\n  getActualResolution() { return this.resolutionMultiplier * this.time.resolution; }\n\n  // Set the voice's stave\n  setStave(stave) {\n    this.stave = stave;\n    this.boundingBox = null; // Reset bounding box so we can reformat\n    return this;\n  }\n\n  // Get the bounding box for the voice\n  getBoundingBox() {\n    let stave;\n    let boundingBox;\n    let bb;\n    let i;\n\n    if (!this.boundingBox) {\n      if (!this.stave) throw new Vex.RERR('NoStave', \"Can't get bounding box without stave.\");\n      stave = this.stave;\n      boundingBox = null;\n\n      for (i = 0; i < this.tickables.length; ++i) {\n        this.tickables[i].setStave(stave);\n\n        bb = this.tickables[i].getBoundingBox();\n        if (!bb) continue;\n\n        boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n      }\n\n      this.boundingBox = boundingBox;\n    }\n    return this.boundingBox;\n  }\n\n  // Every tickable must be associated with a voiceGroup. This allows formatters\n  // and preformatters to associate them with the right modifierContexts.\n  getVoiceGroup() {\n    if (!this.voiceGroup) {\n      throw new Vex.RERR('NoVoiceGroup', 'No voice group for voice.');\n    }\n\n    return this.voiceGroup;\n  }\n\n  // Set the voice group\n  setVoiceGroup(g) { this.voiceGroup = g; return this; }\n\n  // Set the voice mode to strict or soft\n  setStrict(strict) {\n    this.mode = strict ? Voice.Mode.STRICT : Voice.Mode.SOFT;\n    return this;\n  }\n\n  // Determine if the voice is complete according to the voice mode\n  isComplete() {\n    if (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) {\n      return this.ticksUsed.equals(this.totalTicks);\n    } else {\n      return true;\n    }\n  }\n\n  // Add a tickable to the voice\n  addTickable(tickable) {\n    if (!tickable.shouldIgnoreTicks()) {\n      const ticks = tickable.getTicks();\n\n      // Update the total ticks for this line.\n      this.ticksUsed.add(ticks);\n\n      if (\n        (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) &&\n        this.ticksUsed.greaterThan(this.totalTicks)\n      ) {\n        this.ticksUsed.subtract(ticks);\n        throw new Vex.RERR('BadArgument', 'Too many ticks.');\n      }\n\n      // Track the smallest tickable for formatting.\n      if (ticks.lessThan(this.smallestTickCount)) {\n        this.smallestTickCount = ticks.clone();\n      }\n\n      this.resolutionMultiplier = this.ticksUsed.denominator;\n\n      // Expand total ticks using denominator from ticks used.\n      this.totalTicks.add(0, this.ticksUsed.denominator);\n    }\n\n    // Add the tickable to the line.\n    this.tickables.push(tickable);\n    tickable.setVoice(this);\n    return this;\n  }\n\n  // Add an array of tickables to the voice.\n  addTickables(tickables) {\n    for (let i = 0; i < tickables.length; ++i) {\n      this.addTickable(tickables[i]);\n    }\n\n    return this;\n  }\n\n  // Preformats the voice by applying the voice's stave to each note.\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    this.tickables.forEach((tickable) => {\n      if (!tickable.getStave()) {\n        tickable.setStave(this.stave);\n      }\n    });\n\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Render the voice onto the canvas `context` and an optional `stave`.\n  // If `stave` is omitted, it is expected that the notes have staves\n  // already set.\n  draw(context = this.context, stave = this.stave) {\n    this.setRendered();\n    let boundingBox = null;\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n\n      // Set the stave if provided\n      if (stave) tickable.setStave(stave);\n\n      if (!tickable.getStave()) {\n        throw new Vex.RuntimeError(\n          'MissingStave', 'The voice cannot draw tickables without staves.'\n        );\n      }\n\n      if (i === 0) boundingBox = tickable.getBoundingBox();\n\n      if (i > 0 && boundingBox) {\n        const tickable_bb = tickable.getBoundingBox();\n        if (tickable_bb) boundingBox.mergeWith(tickable_bb);\n      }\n\n      tickable.setContext(context);\n      tickable.draw();\n    }\n\n    this.boundingBox = boundingBox;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Glyph } from './glyph';\n\nfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n  if (\n    type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n    type !== StaveConnector.type.BOLD_DOUBLE_RIGHT\n  ) {\n    throw new Vex.RERR(\n      'InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.'\n    );\n  }\n\n  let x_shift = 3;\n  let variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n  const thickLineOffset = 2; // For aesthetics\n\n  if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n    x_shift = -5; // Flips the side of the thin line\n    variableWidth = 3;\n  }\n\n  // Thin line\n  ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n  // Thick line\n  ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\n\nexport class StaveConnector extends Element {\n  // SINGLE_LEFT and SINGLE are the same value for compatibility\n  // with older versions of vexflow which didn't have right sided\n  // stave connectors\n  static get type() {\n    return {\n      SINGLE_RIGHT: 0,\n      SINGLE_LEFT: 1,\n      SINGLE: 1,\n      DOUBLE: 2,\n      BRACE: 3,\n      BRACKET: 4,\n      BOLD_DOUBLE_LEFT: 5,\n      BOLD_DOUBLE_RIGHT: 6,\n      THIN_DOUBLE: 7,\n      NONE: 8,\n    };\n  }\n\n  static get typeString() {\n    return {\n      singleRight: StaveConnector.type.SINGLE_RIGHT,\n      singleLeft: StaveConnector.type.SINGLE_LEFT,\n      single: StaveConnector.type.SINGLE,\n      double: StaveConnector.type.DOUBLE,\n      brace: StaveConnector.type.BRACE,\n      bracket: StaveConnector.type.BRACKET,\n      boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n      boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n      thinDouble: StaveConnector.type.THIN_DOUBLE,\n      none: StaveConnector.type.NONE,\n    };\n  }\n\n  constructor(top_stave, bottom_stave) {\n    super();\n    this.setAttribute('type', 'StaveConnector');\n\n    this.thickness = Flow.STAVE_LINE_THICKNESS;\n    this.width = 3;\n    this.top_stave = top_stave;\n    this.bottom_stave = bottom_stave;\n    this.type = StaveConnector.type.DOUBLE;\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    };\n    // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n    // 2. Offset BRACE type not to overlap with another StaveConnector\n    this.x_shift = 0;\n    this.texts = [];\n  }\n\n  setType(type) {\n    type = typeof(type) === 'string'\n      ? StaveConnector.typeString[type]\n      : type;\n\n    if (type >= StaveConnector.type.SINGLE_RIGHT && type <= StaveConnector.type.NONE) {\n      this.type = type;\n    }\n    return this;\n  }\n\n  setText(text, options) {\n    this.texts.push({\n      content: text,\n      options: Vex.Merge({ shift_x: 0, shift_y: 0 }, options),\n    });\n    return this;\n  }\n\n  setFont(font) {\n    Vex.Merge(this.font, font);\n  }\n\n  setXShift(x_shift) {\n    if (typeof x_shift !== 'number') {\n      throw Vex.RERR('InvalidType', 'x_shift must be a Number');\n    }\n\n    this.x_shift = x_shift;\n    return this;\n  }\n\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    let topY = this.top_stave.getYForLine(0);\n    let botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) +\n      this.thickness;\n    let width = this.width;\n    let topX = this.top_stave.getX();\n\n    const isRightSidedConnector = (\n      this.type === StaveConnector.type.SINGLE_RIGHT ||\n      this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n      this.type === StaveConnector.type.THIN_DOUBLE\n    );\n\n    if (isRightSidedConnector) {\n      topX = this.top_stave.getX() + this.top_stave.width;\n    }\n\n    let attachment_height = botY - topY;\n    switch (this.type) {\n      case StaveConnector.type.SINGLE:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_LEFT:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_RIGHT:\n        width = 1;\n        break;\n      case StaveConnector.type.DOUBLE:\n        topX -= (this.width + 2);\n        break;\n      case StaveConnector.type.BRACE: {\n        width = 12;\n        // May need additional code to draw brace\n        const x1 = this.top_stave.getX() - 2 + this.x_shift;\n        const y1 = topY;\n        const x3 = x1;\n        const y3 = botY;\n        const x2 = x1 - width;\n        const y2 = y1 + attachment_height / 2.0;\n        const cpx1 = x2 - (0.90 * width);\n        const cpy1 = y1 + (0.2 * attachment_height);\n        const cpx2 = x1 + (1.10 * width);\n        const cpy2 = y2 - (0.135 * attachment_height);\n        const cpx3 = cpx2;\n        const cpy3 = y2 + (0.135 * attachment_height);\n        const cpx4 = cpx1;\n        const cpy4 = y3 - (0.2 * attachment_height);\n        const cpx5 = x2 - width;\n        const cpy5 = cpy4;\n        const cpx6 = x1 + (0.40 * width);\n        const cpy6 = y2 + (0.135 * attachment_height);\n        const cpx7 = cpx6;\n        const cpy7 = y2 - (0.135 * attachment_height);\n        const cpx8 = cpx5;\n        const cpy8 = cpy1;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n        ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n        ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n        ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n        ctx.fill();\n        ctx.stroke();\n        break;\n      } case StaveConnector.type.BRACKET:\n        topY -= 4;\n        botY += 4;\n        attachment_height = botY - topY;\n        Glyph.renderGlyph(ctx, topX - 5, topY - 3, 40, 'v1b', true);\n        Glyph.renderGlyph(ctx, topX - 5, botY + 3, 40, 'v10', true);\n        topX -= (this.width + 2);\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_LEFT:\n        drawBoldDoubleLine(ctx, this.type, topX + this.x_shift, topY, botY);\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n        drawBoldDoubleLine(ctx, this.type, topX, topY, botY);\n        break;\n      case StaveConnector.type.THIN_DOUBLE:\n        width = 1;\n        break;\n      case StaveConnector.type.NONE:\n        break;\n      default:\n        throw new Vex.RERR(\n          'InvalidType', `The provided StaveConnector.type (${this.type}) is invalid`\n        );\n    }\n\n    if (\n      this.type !== StaveConnector.type.BRACE &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n      this.type !== StaveConnector.type.NONE\n    ) {\n      ctx.fillRect(topX, topY, width, attachment_height);\n    }\n\n    // If the connector is a thin double barline, draw the paralell line\n    if (this.type === StaveConnector.type.THIN_DOUBLE) {\n      ctx.fillRect(topX - 3, topY, width, attachment_height);\n    }\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    // Add stave connector text\n    for (let i = 0; i < this.texts.length; i++) {\n      const text = this.texts[i];\n      const text_width = ctx.measureText('' + text.content).width;\n      const x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n      const y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 +\n        text.options.shift_y;\n\n      ctx.fillText('' + text.content, x, y + 4);\n    }\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// The tickable interface. Tickables are things that sit on a score and\n// have a duration, i.e., they occupy space in the musical rendering dimension.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\n\nexport class Tickable extends Element {\n  constructor() {\n    super();\n    this.setAttribute('type', 'Tickable');\n\n    // These properties represent the duration of\n    // this tickable element.\n    this.ticks = new Fraction(0, 1);\n    this.intrinsicTicks = 0;\n    this.tickMultiplier = new Fraction(1, 1);\n\n    this.width = 0;\n    this.x_shift = 0; // Shift from tick context\n    this.voice = null;\n    this.tickContext = null;\n    this.modifierContext = null;\n    this.modifiers = [];\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.tuplet = null;\n    this.tupletStack = [];\n\n    this.align_center = false;\n    this.center_x_shift = 0; // Shift from tick context if center aligned\n\n    // This flag tells the formatter to ignore this tickable during\n    // formatting and justification. It is set by tickables such as BarNote.\n    this.ignore_ticks = false;\n\n    // This is a space for an external formatting class or function to maintain\n    // metrics.\n    this.formatterMetrics = {\n      // The freedom of a tickable is the distance it can move without colliding\n      // with neighboring elements. A formatter can set these values during its\n      // formatting pass, which a different formatter can then use to fine tune.\n      freedom: { left: 0, right: 0 },\n\n      // The simplified rational duration of this tick as a string. It can be\n      // used as an index to a map or hashtable.\n      duration: '',\n\n      // The number of formatting iterations undergone.\n      iterations: 0,\n\n      // The space in pixels allocated by this formatter, along with the mean space\n      // for tickables of this duration, and the deviation from the mean.\n      space: {\n        used: 0,\n        mean: 0,\n        deviation: 0,\n      },\n    };\n  }\n\n  reset() { return this; }\n  getTicks() { return this.ticks; }\n  shouldIgnoreTicks() { return this.ignore_ticks; }\n  getWidth() { return this.width; }\n\n  getFormatterMetrics() { return this.formatterMetrics; }\n\n  setXShift(x) { this.x_shift = x; }\n  getCenterXShift() {\n    if (this.isCenterAligned()) {\n      return this.center_x_shift;\n    }\n\n    return 0;\n  }\n  isCenterAligned() { return this.align_center; }\n  setCenterAlignment(align_center) {\n    this.align_center = align_center;\n    return this;\n  }\n\n  // Every tickable must be associated with a voice. This allows formatters\n  // and preFormatter to associate them with the right modifierContexts.\n  getVoice() {\n    if (!this.voice) throw new Vex.RERR('NoVoice', 'Tickable has no voice.');\n    return this.voice;\n  }\n  setVoice(voice) { this.voice = voice; }\n  getTuplet() { return this.tuplet; }\n\n  /*\n   * resetTuplet\n   * @param tuplet -- the specific tuplet to reset\n   *   if this is not provided, all tuplets are reset.\n   * @returns this\n   *\n   * Removes any prior tuplets from the tick calculation and\n   * resets the intrinsic tick value to\n   */\n  resetTuplet(tuplet) {\n    let noteCount;\n    let notesOccupied;\n    if (tuplet) {\n      const i = this.tupletStack.indexOf(tuplet);\n      if (i !== -1) {\n        this.tupletStack.splice(i, 1);\n        noteCount = tuplet.getNoteCount();\n        notesOccupied = tuplet.getNotesOccupied();\n\n        // Revert old multiplier by inverting numerator & denom.:\n        this.applyTickMultiplier(noteCount, notesOccupied);\n      }\n      return this;\n    }\n\n    while (this.tupletStack.length) {\n      tuplet = this.tupletStack.pop();\n      noteCount = tuplet.getNoteCount();\n      notesOccupied = tuplet.getNotesOccupied();\n\n      // Revert old multiplier by inverting numerator & denom.:\n      this.applyTickMultiplier(noteCount, notesOccupied);\n    }\n    return this;\n  }\n\n  setTuplet(tuplet) {\n    // Attach to new tuplet\n\n    if (tuplet) {\n      this.tupletStack.push(tuplet);\n\n      const noteCount = tuplet.getNoteCount();\n      const notesOccupied = tuplet.getNotesOccupied();\n\n      this.applyTickMultiplier(notesOccupied, noteCount);\n    }\n\n    this.tuplet = tuplet;\n\n    return this;\n  }\n\n  /** optional, if tickable has modifiers **/\n  addToModifierContext(mc) {\n    this.modifierContext = mc;\n    // Add modifiers to modifier context (if any)\n    this.preFormatted = false;\n  }\n\n  /** optional, if tickable has modifiers **/\n  addModifier(mod) {\n    this.modifiers.push(mod);\n    this.preFormatted = false;\n    return this;\n  }\n  getModifiers() {\n    return this.modifiers;\n  }\n  setTickContext(tc) {\n    this.tickContext = tc;\n    this.preFormatted = false;\n  }\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.width = 0;\n    if (this.modifierContext) {\n      this.modifierContext.preFormat();\n      this.width += this.modifierContext.getWidth();\n    }\n  }\n  postFormat() {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n  getIntrinsicTicks() {\n    return this.intrinsicTicks;\n  }\n  setIntrinsicTicks(intrinsicTicks) {\n    this.intrinsicTicks = intrinsicTicks;\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n  getTickMultiplier() {\n    return this.tickMultiplier;\n  }\n  applyTickMultiplier(numerator, denominator) {\n    this.tickMultiplier.multiply(numerator, denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n  setDuration(duration) {\n    const ticks = duration.numerator * (Flow.RESOLUTION / duration.denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(ticks);\n    this.intrinsicTicks = this.ticks.value();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements an abstract interface for notes and chords that\n// are rendered on a stave. Notes have some common properties: All of them\n// have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n//\n// Some notes have stems, heads, dots, etc. Most notational elements that\n// surround a note are called *modifiers*, and every note has an associated\n// array of them. All notes also have a rendering context and belong to a stave.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Tickable } from './tickable';\n\nexport class Note extends Tickable {\n  static get CATEGORY() { return 'note'; }\n  static get STAVEPADDING() { return 12; }\n\n  // Debug helper. Displays various note metrics for the given\n  // note.\n  static plotMetrics(ctx, note, yPos) {\n    const metrics = note.getMetrics();\n    const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.extraLeftPx;\n    const xPre1 = note.getAbsoluteX() - metrics.extraLeftPx;\n    const xAbs = note.getAbsoluteX();\n    const xPost1 = note.getAbsoluteX() + metrics.noteWidth;\n    const xPost2 = note.getAbsoluteX() + metrics.noteWidth + metrics.extraRightPx;\n    const xEnd = note.getAbsoluteX()\n      + metrics.noteWidth\n      + metrics.extraRightPx\n      + metrics.modRightPx;\n    const xFreedomRight = xEnd + note.getFormatterMetrics().freedom.right;\n\n    const xWidth = xEnd - xStart;\n    ctx.save();\n    ctx.setFont('Arial', 8, '');\n    ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n\n    const y = (yPos + 7);\n    function stroke(x1, x2, color, yy = y) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(3);\n      ctx.moveTo(x1 + note.getXShift(), yy);\n      ctx.lineTo(x2 + note.getXShift(), yy);\n      ctx.stroke();\n    }\n\n    stroke(xStart, xPre1, 'red');\n    stroke(xPre1, xAbs, '#999');\n    stroke(xAbs, xPost1, 'green');\n    stroke(xPost1, xPost2, '#999');\n    stroke(xPost2, xEnd, 'red');\n    stroke(xEnd, xFreedomRight, '#DD0');\n    stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n    Vex.drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n\n    const formatterMetrics = note.getFormatterMetrics();\n    if (formatterMetrics.iterations > 0) {\n      const spaceDeviation = formatterMetrics.space.deviation;\n      const prefix = spaceDeviation >= 0 ? '+' : '';\n      ctx.setFillStyle('red');\n      ctx.fillText(prefix + Math.round(spaceDeviation),\n        xAbs + note.getXShift(), yPos - 10);\n    }\n    ctx.restore();\n  }\n\n  // Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n  // positioning and layout.\n  // To create a new note you need to provide a `note_struct`, which consists\n  // of the following fields:\n  //\n  // `type`: The note type (e.g., `r` for rest, `s` for slash notes, etc.)\n  // `dots`: The number of dots, which affects the duration.\n  // `duration`: The time length (e.g., `q` for quarter, `h` for half, `8` for eighth etc.)\n  //\n  // The range of values for these parameters are available in `src/tables.js`.\n  constructor(note_struct) {\n    super();\n    this.setAttribute('type', 'Note');\n\n    if (!note_struct) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Note must have valid initialization data to identify duration and type.'\n      );\n    }\n\n    // Parse `note_struct` and get note properties.\n    const initData = Flow.parseNoteData(note_struct);\n    if (!initData) {\n      throw new Vex.RuntimeError(\n        'BadArguments', `Invalid note initialization object: ${JSON.stringify(note_struct)}`\n      );\n    }\n\n    // Set note properties from parameters.\n    this.duration = initData.duration;\n    this.dots = initData.dots;\n    this.noteType = initData.type;\n\n    if (note_struct.duration_override) {\n      // Custom duration\n      this.setDuration(note_struct.duration_override);\n    } else {\n      // Default duration\n      this.setIntrinsicTicks(initData.ticks);\n    }\n\n    this.modifiers = [];\n\n    // Get the glyph code for this note from the font.\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (this.positions && (typeof (this.positions) !== 'object' || !this.positions.length)) {\n      throw new Vex.RuntimeError('BadArguments', 'Note keys must be array type.');\n    }\n\n    // Note to play for audio players.\n    this.playNote = null;\n\n    // Positioning contexts used by the Formatter.\n    this.tickContext = null;    // The current tick context.\n    this.modifierContext = null;\n    this.ignore_ticks = false;\n\n    // Positioning variables\n    this.width = 0;             // Width in pixels calculated after preFormat\n    this.extraLeftPx = 0;       // Extra room on left for offset note head\n    this.extraRightPx = 0;      // Extra room on right for offset note head\n    this.x_shift = 0;           // X shift from tick context X\n    this.left_modPx = 0;        // Max width of left modifiers\n    this.right_modPx = 0;       // Max width of right modifiers\n    this.voice = null;          // The voice that this note is in\n    this.preFormatted = false;  // Is this note preFormatted?\n    this.ys = [];               // list of y coordinates for each note\n    // we need to hold on to these for ties and beams.\n\n    if (note_struct.align_center) {\n      this.setCenterAlignment(note_struct.align_center);\n    }\n\n    // The render surface.\n    this.stave = null;\n    this.render_options = {\n      annotation_spacing: 5,\n      stave_padding: Note.STAVEPADDING,\n    };\n  }\n\n  // Get and set the play note, which is arbitrary data that can be used by an\n  // audio player.\n  getPlayNote() { return this.playNote; }\n  setPlayNote(note) { this.playNote = note; return this; }\n\n  // Don't play notes by default, call them rests. This is also used by things like\n  // beams and dots for positioning.\n  isRest() { return false; }\n\n  // TODO(0xfe): Why is this method here?\n  addStroke(index, stroke) {\n    stroke.setNote(this);\n    stroke.setIndex(index);\n    this.modifiers.push(stroke);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Get and set the target stave.\n  getStave() { return this.stave; }\n  setStave(stave) {\n    this.stave = stave;\n    this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n    this.context = this.stave.context;\n    return this;\n  }\n\n  // `Note` is not really a modifier, but is used in\n  // a `ModifierContext`.\n  getCategory() { return Note.CATEGORY; }\n\n  // Set the rendering context for the note.\n  setContext(context) { this.context = context; return this; }\n\n  // Get and set spacing to the left and right of the notes.\n  getExtraLeftPx() { return this.extraLeftPx; }\n  getExtraRightPx() { return this.extraRightPx; }\n  setExtraLeftPx(x) { this.extraLeftPx = x; return this; }\n  setExtraRightPx(x) { this.extraRightPx = x; return this; }\n\n  // Returns true if this note has no duration (e.g., bar notes, spacers, etc.)\n  shouldIgnoreTicks() { return this.ignore_ticks; }\n\n  // Get the stave line number for the note.\n  getLineNumber() { return 0; }\n\n  // Get the stave line number for rest.\n  getLineForRest() { return 0; }\n\n  // Get the glyph associated with this note.\n  getGlyph() { return this.glyph; }\n\n  getGlyphWidth() {\n    return this.glyph.getWidth(this.render_options.glyph_font_scale);\n  }\n\n  // Set and get Y positions for this note. Each Y value is associated with\n  // an individual pitch/key within the note/chord.\n  setYs(ys) { this.ys = ys; return this; }\n  getYs() {\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-values calculated for this note.');\n    }\n\n    return this.ys;\n  }\n\n  // Get the Y position of the space above the stave onto which text can\n  // be rendered.\n  getYForTopText(text_line) {\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', 'No stave attached to this note.');\n    }\n\n    return this.stave.getYForTopText(text_line);\n  }\n\n  // Get a `BoundingBox` for this note.\n  getBoundingBox() { return null; }\n\n  // Returns the voice that this note belongs in.\n  getVoice() {\n    if (!this.voice) throw new Vex.RERR('NoVoice', 'Note has no voice.');\n    return this.voice;\n  }\n\n  // Attach this note to `voice`.\n  setVoice(voice) {\n    this.voice = voice;\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Get and set the `TickContext` for this note.\n  getTickContext() { return this.tickContext; }\n  setTickContext(tc) {\n    this.tickContext = tc;\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Accessors for the note type.\n  getDuration() { return this.duration; }\n  isDotted() { return (this.dots > 0); }\n  hasStem() { return false; }\n  getDots() { return this.dots; }\n  getNoteType() { return this.noteType; }\n  setBeam() { return this; } // ignore parameters\n\n  // Attach this note to a modifier context.\n  setModifierContext(mc) { this.modifierContext = mc; return this; }\n\n  // Attach a modifier to this note.\n  addModifier(modifier, index = 0) {\n    modifier.setNote(this);\n    modifier.setIndex(index);\n    this.modifiers.push(modifier);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Get the coordinates for where modifiers begin.\n  getModifierStartXY() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    return {\n      x: this.getAbsoluteX(),\n      y: this.ys[0],\n    };\n  }\n\n  // Get bounds and metrics for this note.\n  //\n  // Returns a struct with fields:\n  // `width`: The total width of the note (including modifiers.)\n  // `noteWidth`: The width of the note head only.\n  // `left_shift`: The horizontal displacement of the note.\n  // `modLeftPx`: Start `X` for left modifiers.\n  // `modRightPx`: Start `X` for right modifiers.\n  // `extraLeftPx`: Extra space on left of note.\n  // `extraRightPx`: Extra space on right of note.\n  getMetrics() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n    }\n\n    let modLeftPx = 0;\n    let modRightPx = 0;\n    if (this.modifierContext != null) {\n      modLeftPx = this.modifierContext.state.left_shift;\n      modRightPx = this.modifierContext.state.right_shift;\n    }\n\n    const width = this.getWidth();\n    return {\n      width,\n      noteWidth: width - modLeftPx - modRightPx - this.extraLeftPx - this.extraRightPx,\n      left_shift: this.x_shift, // TODO(0xfe): Make style consistent\n\n      // Modifiers, accidentals etc.\n      modLeftPx,\n      modRightPx,\n\n      // Displaced note head on left or right.\n      extraLeftPx: this.extraLeftPx,\n      extraRightPx: this.extraRightPx,\n    };\n  }\n\n  // Get and set width of note. Used by the formatter for positioning.\n  setWidth(width) { this.width = width; }\n  getWidth() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n    }\n\n    return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n  }\n\n  // Displace note by `x` pixels. Used by the formatter.\n  setXShift(x) { this.x_shift = x; return this; }\n  getXShift() { return this.x_shift; }\n\n  // Get `X` position of this tick context.\n  getX() {\n    if (!this.tickContext) {\n      throw new Vex.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n    }\n\n    return this.tickContext.getX() + this.x_shift;\n  }\n\n  // Get the absolute `X` position of this note's tick context. This\n  // excludes x_shift, so you'll need to factor it in if you're\n  // looking for the post-formatted x-position.\n  getAbsoluteX() {\n    if (!this.tickContext) {\n      throw new Vex.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n    }\n\n    // Position note to left edge of tick context.\n    let x = this.tickContext.getX();\n    if (this.stave) {\n      x += this.stave.getNoteStartX() + this.render_options.stave_padding;\n    }\n\n    if (this.isCenterAligned()) {\n      x += this.getCenterXShift();\n    }\n\n    return x;\n  }\n  setPreFormatted(value) {\n    this.preFormatted = value;\n\n    // Maintain the width of left and right modifiers in pixels.\n    if (this.preFormatted) {\n      const extra = this.tickContext.getExtraPx();\n      this.left_modPx = Math.max(this.left_modPx, extra.left);\n      this.right_modPx = Math.max(this.right_modPx, extra.right);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `NoteHeads`. `NoteHeads` are typically not manipulated\n// directly, but used internally in `StaveNote`.\n//\n// See `tests/notehead_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`.\nfunction L(...args) { if (NoteHead.DEBUG) Vex.L('Vex.Flow.NoteHead', args); }\n\n// Draw slashnote head manually. No glyph exists for this.\n//\n// Parameters:\n// * `ctx`: the Canvas context\n// * `duration`: the duration of the note. ex: \"4\"\n// * `x`: the x coordinate to draw at\n// * `y`: the y coordinate to draw at\n// * `stem_direction`: the direction of the stem\nfunction drawSlashNoteHead(ctx, duration, x, y, stem_direction, staveSpace) {\n  const width = Flow.SLASH_NOTEHEAD_WIDTH;\n  ctx.save();\n  ctx.setLineWidth(Flow.STEM_WIDTH);\n\n  let fill = false;\n\n  if (Flow.durationToNumber(duration) > 2) {\n    fill = true;\n  }\n\n  if (!fill) x -= (Flow.STEM_WIDTH / 2) * stem_direction;\n\n  ctx.beginPath();\n  ctx.moveTo(x, y + staveSpace);\n  ctx.lineTo(x, y + 1);\n  ctx.lineTo(x + width, y - staveSpace);\n  ctx.lineTo(x + width, y);\n  ctx.lineTo(x, y + staveSpace);\n  ctx.closePath();\n\n  if (fill) {\n    ctx.fill();\n  } else {\n    ctx.stroke();\n  }\n\n  if (Flow.durationToFraction(duration).equals(0.5)) {\n    const breve_lines = [-3, -1, width + 1, width + 3];\n    for (let i = 0; i < breve_lines.length; i++) {\n      ctx.beginPath();\n      ctx.moveTo(x + breve_lines[i], y - 10);\n      ctx.lineTo(x + breve_lines[i], y + 11);\n      ctx.stroke();\n    }\n  }\n\n  ctx.restore();\n}\n\nexport class NoteHead extends Note {\n  static get CATEGORY() { return 'notehead'; }\n\n  constructor(head_options) {\n    super(head_options);\n    this.setAttribute('type', 'NoteHead');\n\n    this.index = head_options.index;\n    this.x = head_options.x || 0;\n    this.y = head_options.y || 0;\n    this.note_type = head_options.note_type;\n    this.duration = head_options.duration;\n    this.displaced = head_options.displaced || false;\n    this.stem_direction = head_options.stem_direction || StaveNote.STEM_UP;\n    this.line = head_options.line;\n\n    // Get glyph code based on duration and note type. This could be\n    // regular notes, rests, or other custom codes.\n    this.glyph = Flow.durationToGlyph(this.duration, this.note_type);\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `No glyph found for duration '${this.duration}' and type '${this.note_type}'`);\n    }\n\n    this.glyph_code = this.glyph.code_head;\n    this.x_shift = head_options.x_shift;\n    if (head_options.custom_glyph_code) {\n      this.custom_glyph = true;\n      this.glyph_code = head_options.custom_glyph_code;\n    }\n\n    this.style = head_options.style;\n    this.slashed = head_options.slashed;\n\n    Vex.Merge(this.render_options, {\n      // font size for note heads\n      glyph_font_scale: head_options.glyph_font_scale || Flow.DEFAULT_NOTATION_FONT_SCALE,\n      // number of stroke px to the left and right of head\n      stroke_px: 3,\n    });\n\n    this.setWidth(this.glyph.getWidth(this.render_options.glyph_font_scale));\n  }\n\n  getCategory() { return NoteHead.CATEGORY; }\n\n  // Get the width of the notehead\n  getWidth() { return this.width; }\n\n  // Determine if the notehead is displaced\n  isDisplaced() { return this.displaced === true; }\n\n  // Get the glyph data\n  getGlyph() { return this.glyph; }\n\n  // Set the X coordinate\n  setX(x) { this.x = x; return this; }\n\n  // get/set the Y coordinate\n  getY() { return this.y; }\n  setY(y) { this.y = y;  return this; }\n\n  // Get/set the stave line the notehead is placed on\n  getLine() { return this.line; }\n  setLine(line) { this.line = line; return this; }\n\n  // Get the canvas `x` coordinate position of the notehead.\n  getAbsoluteX() {\n    // If the note has not been preformatted, then get the static x value\n    // Otherwise, it's been formatted and we should use it's x value relative\n    // to its tick context\n    const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n\n    // For a more natural displaced notehead, we adjust the displacement amount\n    // by half the stem width in order to maintain a slight overlap with the stem\n    const displacementStemAdjustment = (Stem.WIDTH / 2);\n\n    return x + (this.displaced\n      ? (this.width - displacementStemAdjustment) * this.stem_direction\n      : 0\n    );\n  }\n\n  // Get the `BoundingBox` for the `NoteHead`\n  getBoundingBox() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n\n    const spacing = this.stave.getSpacingBetweenLines();\n    const half_spacing = spacing / 2;\n    const min_y = this.y - half_spacing;\n\n    return new Flow.BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n  }\n\n  // Set notehead to a provided `stave`\n  setStave(stave) {\n    const line = this.getLine();\n\n    this.stave = stave;\n    this.setY(stave.getYForNote(line));\n    this.context = this.stave.context;\n    return this;\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    const width = this.getWidth() + this.extraLeftPx + this.extraRightPx;\n\n    this.setWidth(width);\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  // Draw the notehead\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const ctx = this.context;\n    const head_x = this.getAbsoluteX();\n    const y = this.y;\n\n    L(\"Drawing note head '\", this.note_type, this.duration, \"' at\", head_x, y);\n\n    // Begin and end positions for head.\n    const stem_direction = this.stem_direction;\n    const glyph_font_scale = this.render_options.glyph_font_scale;\n\n    if (this.style) {\n      this.applyStyle(ctx);\n    }\n\n    if (this.note_type === 's') {\n      const staveSpace = this.stave.getSpacingBetweenLines();\n      drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n    } else {\n      Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code);\n    }\n\n    if (this.style) {\n      this.restoreStyle(ctx);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Stem } from './stem';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\n\nexport class StemmableNote extends Note {\n  constructor(note_struct) {\n    super(note_struct);\n    this.setAttribute('type', 'StemmableNote');\n\n    this.stem = null;\n    this.stemExtensionOverride = null;\n    this.beam = null;\n  }\n\n  // Get and set the note's `Stem`\n  getStem() { return this.stem; }\n  setStem(stem) { this.stem = stem; return this; }\n\n  // Builds and sets a new stem\n  buildStem() {\n    const stem = new Stem();\n    this.setStem(stem);\n    return this;\n  }\n\n  buildFlag() {\n    const { glyph, beam } = this;\n    const shouldRenderFlag = beam === null;\n\n    if (glyph && glyph.flag && shouldRenderFlag) {\n      const flagCode = this.getStemDirection() === Stem.DOWN\n        ? glyph.code_flag_downstem\n        : glyph.code_flag_upstem;\n\n      this.flag = new Glyph(flagCode, this.render_options.glyph_font_scale);\n    }\n  }\n\n  // Get the full length of stem\n  getStemLength() {\n    return Stem.HEIGHT + this.getStemExtension();\n  }\n\n  // Get the number of beams for this duration\n  getBeamCount() {\n    const glyph = this.getGlyph();\n\n    if (glyph) {\n      return glyph.beam_count;\n    } else {\n      return 0;\n    }\n  }\n\n  // Get the minimum length of stem\n  getStemMinumumLength() {\n    const frac = Flow.durationToFraction(this.duration);\n    let length = frac.value() <= 1 ? 0 : 20;\n    // if note is flagged, cannot shorten beam\n    switch (this.duration) {\n      case '8':\n        if (this.beam == null) length = 35;\n        break;\n      case '16':\n        length = this.beam == null ? 35 : 25;\n        break;\n      case '32':\n        length = this.beam == null ? 45 : 35;\n        break;\n      case '64':\n        length = this.beam == null ? 50 : 40;\n        break;\n      case '128':\n        length = this.beam == null ? 55 : 45;\n        break;\n      default:\n        break;\n    }\n    return length;\n  }\n\n  // Get/set the direction of the stem\n  getStemDirection() { return this.stem_direction; }\n  setStemDirection(direction) {\n    if (!direction) direction = Stem.UP;\n    if (direction !== Stem.UP && direction !== Stem.DOWN) {\n      throw new Vex.RERR('BadArgument', `Invalid stem direction: ${direction}`);\n    }\n\n    this.stem_direction = direction;\n    if (this.stem) {\n      this.stem.setDirection(direction);\n      this.stem.setExtension(this.getStemExtension());\n    }\n\n    this.reset();\n    if (this.flag) {\n      this.buildFlag();\n    }\n\n    this.beam = null;\n    if (this.preFormatted) {\n      this.preFormat();\n    }\n    return this;\n  }\n\n  // Get the `x` coordinate of the stem\n  getStemX() {\n    const x_begin = this.getAbsoluteX() + this.x_shift;\n    const x_end = this.getAbsoluteX() + this.x_shift + this.getGlyphWidth();\n    const stem_x = this.stem_direction === Stem.DOWN ? x_begin : x_end;\n    return stem_x;\n  }\n\n  // Get the `x` coordinate for the center of the glyph.\n  // Used for `TabNote` stems and stemlets over rests\n  getCenterGlyphX() {\n    return this.getAbsoluteX() + this.x_shift + (this.getGlyphWidth() / 2);\n  }\n\n  // Get the stem extension for the current duration\n  getStemExtension() {\n    const glyph = this.getGlyph();\n\n    if (this.stemExtensionOverride != null) {\n      return this.stemExtensionOverride;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.stem_up_extension\n        : glyph.stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Set the stem length to a specific. Will override the default length.\n  setStemLength(height) {\n    this.stemExtensionOverride = (height - Stem.HEIGHT);\n    return this;\n  }\n\n  // Get the top and bottom `y` values of the stem.\n  getStemExtents() {\n    return this.stem.getExtents();\n  }\n\n  // Sets the current note's beam\n  setBeam(beam) { this.beam = beam; return this; }\n\n  // Get the `y` value for the top/bottom modifiers at a specific `textLine`\n  getYForTopText(textLine) {\n    const extents = this.getStemExtents();\n    if (this.hasStem()) {\n      return Math.min(\n        this.stave.getYForTopText(textLine),\n        extents.topY - (this.render_options.annotation_spacing * (textLine + 1))\n      );\n    } else {\n      return this.stave.getYForTopText(textLine);\n    }\n  }\n\n  getYForBottomText(textLine) {\n    const extents = this.getStemExtents();\n    if (this.hasStem()) {\n      return Math.max(\n        this.stave.getYForTopText(textLine),\n        extents.baseY + (this.render_options.annotation_spacing * (textLine))\n      );\n    } else {\n      return this.stave.getYForBottomText(textLine);\n    }\n  }\n\n  hasFlag() {\n    return Flow.durationToGlyph(this.duration).flag && !this.beam;\n  }\n\n  // Post format the note\n  postFormat() {\n    if (this.beam) this.beam.postFormat();\n\n    this.postFormatted = true;\n\n    return this;\n  }\n\n  // Render the stem onto the canvas\n  drawStem(stem_struct) {\n    this.checkContext();\n    this.setRendered();\n\n    this.setStem(new Stem(stem_struct));\n    this.stem.setContext(this.context).draw();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// `Modifier` is an abstract interface for notational elements that modify\n// a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n//\n// For a `Modifier` instance to be positioned correctly, it must be part of\n// a `ModifierContext`. All modifiers in the same context are rendered relative to\n// one another.\n//\n// Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n// in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n// `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\n// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n// function L(...args) { if (Modifier.DEBUG) Vex.L('Vex.Flow.Modifier', args); }\n\nexport class Modifier extends Element {\n  static get CATEGORY() { return 'none'; }\n\n  // Modifiers can be positioned almost anywhere, relative to a note.\n  static get Position() {\n    return {\n      LEFT: 1,\n      RIGHT: 2,\n      ABOVE: 3,\n      BELOW: 4,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      above: Modifier.Position.ABOVE,\n      below: Modifier.Position.BELOW,\n      left: Modifier.Position.LEFT,\n      right: Modifier.Position.RIGHT,\n    };\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'Modifier');\n\n    this.width = 0;\n\n    // Modifiers are attached to a note and an index. An index is a\n    // specific head in a chord.\n    this.note = null;\n    this.index = null;\n\n    // The `text_line` is reserved space above or below a stave.\n    this.text_line = 0;\n    this.position = Modifier.Position.LEFT;\n    this.modifier_context = null;\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.spacingFromNextModifier = 0;\n  }\n\n  // Every modifier has a category. The `ModifierContext` uses this to determine\n  // the type and order of the modifiers.\n  getCategory() { return Modifier.CATEGORY; }\n\n  // Get and set modifier widths.\n  getWidth() { return this.width; }\n  setWidth(width) { this.width = width; return this; }\n\n  // Get and set attached note (`StaveNote`, `TabNote`, etc.)\n  getNote() { return this.note; }\n  setNote(note) { this.note = note; return this; }\n\n  // Get and set note index, which is a specific note in a chord.\n  getIndex() { return this.index; }\n  setIndex(index) { this.index = index; return this; }\n\n  // Every modifier must be part of a `ModifierContext`.\n  getModifierContext() { return this.modifier_context; }\n  setModifierContext(c) { this.modifier_context = c; return this; }\n\n  // Get and set articulation position.\n  getPosition() { return this.position; }\n  setPosition(position) {\n    this.position = typeof(position) === 'string'\n      ? Modifier.PositionString[position]\n      : position;\n    return this;\n  }\n\n  // Set the `text_line` for the modifier.\n  setTextLine(line) { this.text_line = line; return this; }\n\n  // Shift modifier down `y` pixels. Negative values shift up.\n  setYShift(y) { this.y_shift = y; return this; }\n\n  setSpacingFromNextModifier(x) {\n    this.spacingFromNextModifier = x;\n  }\n\n  getSpacingFromNextModifier() { return this.spacingFromNextModifier; }\n\n  // Shift modifier `x` pixels in the direction of the modifier. Negative values\n  // shift reverse.\n  setXShift(x) {\n    this.x_shift = 0;\n    if (this.position === Modifier.Position.LEFT) {\n      this.x_shift -= x;\n    } else {\n      this.x_shift += x;\n    }\n  }\n  getXShift() { return this.x_shift; }\n\n  // Render the modifier onto the canvas.\n  draw() {\n    this.checkContext();\n    throw new Vex.RERR('MethodNotImplemented', 'draw() not implemented for this modifier.');\n  }\n\n  // aligns sub notes of NoteSubGroup (or GraceNoteGroup) to the main note with correct x-offset\n  alignSubNotesWithNote(subNotes, note) {\n    // Shift over the tick contexts of each note\n    const tickContext = note.getTickContext();\n    const extraPx = tickContext.getExtraPx();\n    const subNoteXOffset = tickContext.getX() - extraPx.left - extraPx.extraLeft\n      + this.getSpacingFromNextModifier();\n\n    subNotes.forEach((subNote) => {\n      const subTickContext = subNote.getTickContext();\n      subNote.setStave(note.stave);\n      subTickContext.setXOffset(subNoteXOffset); // don't touch baseX to avoid shift each render\n    });\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements dot modifiers for notes.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\n\nexport class Dot extends Modifier {\n  static get CATEGORY() { return 'dots'; }\n\n  // Arrange dots inside a ModifierContext.\n  static format(dots, state) {\n    const right_shift = state.right_shift;\n    const dot_spacing = 1;\n\n    if (!dots || dots.length === 0) return false;\n\n    const dot_list = [];\n    const max_shift_map = {};\n    for (let i = 0; i < dots.length; ++i) {\n      const dot = dots[i];\n      const note = dot.getNote();\n\n      let props;\n      let shift;\n      // Only StaveNote has .getKeyProps()\n      if (typeof note.getKeyProps === 'function') {\n        props = note.getKeyProps()[dot.getIndex()];\n        shift = (props.displaced ? note.getExtraRightPx() : 0);\n      } else { // Else it's a TabNote\n        props = { line: 0.5 }; // Shim key props for dot placement\n        shift = 0;\n      }\n\n      const note_id = note.getAttribute('id');\n      dot_list.push({ line: props.line, note, note_id, dot });\n      max_shift_map[note_id] = Math.max(max_shift_map[note_id] || shift, shift);\n    }\n\n    // Sort dots by line number.\n    dot_list.sort((a, b) => b.line - a.line);\n\n    let dot_shift = right_shift;\n    let x_width = 0;\n    let last_line = null;\n    let last_note = null;\n    let prev_dotted_space = null;\n    let half_shiftY = 0;\n\n    for (let i = 0; i < dot_list.length; ++i) {\n      const { dot, note, note_id, line } = dot_list[i];\n\n      // Reset the position of the dot every line.\n      if (line !== last_line || note !== last_note) {\n        dot_shift = max_shift_map[note_id];\n      }\n\n      if (!note.isRest() && line !== last_line) {\n        if (Math.abs(line % 1) === 0.5) {\n          // note is on a space, so no dot shift\n          half_shiftY = 0;\n        } else {\n          // note is on a line, so shift dot to space above the line\n          half_shiftY = 0.5;\n          if (last_note != null &&\n              !last_note.isRest() && last_line - line === 0.5) {\n            // previous note on a space, so shift dot to space below the line\n            half_shiftY = -0.5;\n          } else if (line + half_shiftY === prev_dotted_space) {\n            // previous space is dotted, so shift dot to space below the line\n            half_shiftY = -0.5;\n          }\n        }\n      }\n\n      // convert half_shiftY to a multiplier for dots.draw()\n      if (note.isRest()) {\n        dot.dot_shiftY += -half_shiftY;\n      } else {\n        dot.dot_shiftY = -half_shiftY;\n      }\n      prev_dotted_space = line + half_shiftY;\n\n      dot.setXShift(dot_shift);\n      dot_shift += dot.getWidth() + dot_spacing; // spacing\n      x_width = (dot_shift > x_width) ? dot_shift : x_width;\n      last_line = line;\n      last_note = note;\n    }\n\n    // Update state.\n    state.right_shift += x_width;\n    return true;\n  }\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    super();\n    this.setAttribute('type', 'Dot');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.RIGHT;\n\n    this.radius = 2;\n    this.setWidth(5);\n    this.dot_shiftY = 0;\n  }\n\n  getCategory() { return Dot.CATEGORY; }\n\n  setNote(note) {\n    this.note = note;\n\n    if (this.note.getCategory() === 'gracenotes') {\n      this.radius *= 0.50;\n      this.setWidth(3);\n    }\n  }\n\n  setDotShiftY(y) { this.dot_shiftY = y; return this; }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    if (!this.note || this.index === null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw dot without a note and index.\");\n    }\n\n    const lineSpace = this.note.stave.options.spacing_between_lines_px;\n\n    const start = this.note.getModifierStartXY(this.position, this.index,\n      { forceFlagRight: true });\n\n    // Set the starting y coordinate to the base of the stem for TabNotes\n    if (this.note.getCategory() === 'tabnotes') {\n      start.y = this.note.getStemExtents().baseY;\n    }\n\n    const x = (start.x + this.x_shift) + this.width - this.radius;\n    const y = start.y + this.y_shift + (this.dot_shiftY * lineSpace);\n    const ctx = this.context;\n\n    ctx.beginPath();\n    ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\n    ctx.fill();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// *Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.*\n//\n// See `tests/stavenote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { BoundingBox } from './boundingbox';\nimport { Stem } from './stem';\nimport { NoteHead } from './notehead';\nimport { StemmableNote } from './stemmablenote';\nimport { Modifier } from './modifier';\nimport { Dot } from './dot';\n\n// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\nfunction L(...args) { if (StaveNote.DEBUG) Vex.L('Vex.Flow.StaveNote', args); }\n\nconst getStemAdjustment = (note) => Stem.WIDTH / (2 * -note.getStemDirection());\n\nconst isInnerNoteIndex = (note, index) =>\n  index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\n\n// Helper methods for rest positioning in ModifierContext.\nfunction shiftRestVertical(rest, note, dir) {\n  const delta = (note.isrest ? 0.0 : 1.0) * dir;\n\n  rest.line += delta;\n  rest.maxLine += delta;\n  rest.minLine += delta;\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) + (delta));\n}\n\n// Called from formatNotes :: center a rest between two notes\nfunction centerRest(rest, noteU, noteL) {\n  const delta = rest.line - Vex.MidLine(noteU.minLine, noteL.maxLine);\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n  rest.line -= delta;\n  rest.maxLine -= delta;\n  rest.minLine -= delta;\n}\n\nexport class StaveNote extends StemmableNote {\n  static get CATEGORY() { return 'stavenotes'; }\n  static get STEM_UP() { return Stem.UP; }\n  static get STEM_DOWN() { return Stem.DOWN; }\n  static get DEFAULT_LEDGER_LINE_OFFSET() { return 3; }\n\n  // ## Static Methods\n  //\n  // Format notes inside a ModifierContext.\n  static format(notes, state) {\n    if (!notes || notes.length < 2) return false;\n\n    // FIXME: VexFlow will soon require that a stave be set before formatting.\n    // Which, according to the below condition, means that following branch will\n    // always be taken and the rest of this function is dead code.\n    //\n    // Problematically, `Formatter#formatByY` was not designed to work for more\n    // than 2 voices (although, doesn't throw on this condition, just tries\n    // to power through).\n    //\n    // Based on the above:\n    //   * 2 voices can be formatted *with or without* a stave being set but\n    //     the output will be different\n    //   * 3 voices can only be formatted *without* a stave\n    if (notes[0].getStave()) {\n      return StaveNote.formatByY(notes, state);\n    }\n\n    const notesList = [];\n\n    for (let i = 0; i < notes.length; i++) {\n      const props = notes[i].getKeyProps();\n      const line = props[0].line;\n      let minL = props[props.length - 1].line;\n      const stemDirection = notes[i].getStemDirection();\n      const stemMax = notes[i].getStemLength() / 10;\n      const stemMin = notes[i].getStemMinumumLength() / 10;\n\n      let maxL;\n      if (notes[i].isRest()) {\n        maxL = line + notes[i].glyph.line_above;\n        minL = line - notes[i].glyph.line_below;\n      } else {\n        maxL = stemDirection === 1\n          ? props[props.length - 1].line + stemMax\n          : props[props.length - 1].line;\n\n        minL = stemDirection === 1\n          ? props[0].line\n          : props[0].line - stemMax;\n      }\n\n      notesList.push({\n        line: props[0].line, // note/rest base line\n        maxLine: maxL, // note/rest upper bounds line\n        minLine: minL, // note/rest lower bounds line\n        isrest: notes[i].isRest(),\n        stemDirection,\n        stemMax, // Maximum (default) note stem length;\n        stemMin, // minimum note stem length\n        voice_shift: notes[i].getVoiceShiftWidth(),\n        is_displaced: notes[i].isDisplaced(), // note manually displaced\n        note: notes[i],\n      });\n    }\n\n    const voices = notesList.length;\n\n    let noteU = notesList[0];\n    const noteM = voices > 2 ? notesList[1] : null;\n    let noteL = voices > 2 ? notesList[2] : notesList[1];\n\n    // for two voice backward compatibility, ensure upper voice is stems up\n    // for three voices, the voices must be in order (upper, middle, lower)\n    if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n      noteU = notesList[1];\n      noteL = notesList[0];\n    }\n\n    const voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n    let xShift = 0;\n    let stemDelta;\n\n    // Test for two voice note intersection\n    if (voices === 2) {\n      const lineSpacing = noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n      // if top voice is a middle voice, check stem intersection with lower voice\n      if (noteU.stemDirection === noteL.stemDirection &&\n        noteU.minLine <= noteL.maxLine) {\n        if (!noteU.isrest) {\n          stemDelta = Math.abs(noteU.line - (noteL.maxLine + 0.5));\n          stemDelta = Math.max(stemDelta, noteU.stemMin);\n          noteU.minLine = noteU.line - stemDelta;\n          noteU.note.setStemLength(stemDelta * 10);\n        }\n      }\n      if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n        if (noteU.isrest) {\n          // shift rest up\n          shiftRestVertical(noteU, noteL, 1);\n        } else if (noteL.isrest) {\n          // shift rest down\n          shiftRestVertical(noteL, noteU, -1);\n        } else {\n          xShift = voiceXShift;\n          if (noteU.stemDirection === noteL.stemDirection) {\n            // upper voice is middle voice, so shift it right\n            noteU.note.setXShift(xShift + 3);\n          } else {\n            // shift lower voice right\n            noteL.note.setXShift(xShift);\n          }\n        }\n      }\n\n      // format complete\n      return true;\n    }\n\n    // Check middle voice stem intersection with lower voice\n    if (noteM !== null && noteM.minLine < noteL.maxLine + 0.5) {\n      if (!noteM.isrest) {\n        stemDelta = Math.abs(noteM.line - (noteL.maxLine + 0.5));\n        stemDelta = Math.max(stemDelta, noteM.stemMin);\n        noteM.minLine = noteM.line - stemDelta;\n        noteM.note.setStemLength(stemDelta * 10);\n      }\n    }\n\n    // For three voices, test if rests can be repositioned\n    //\n    // Special case 1 :: middle voice rest between two notes\n    //\n    if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n      if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n        const restHeight = noteM.maxLine - noteM.minLine;\n        const space = noteU.minLine - noteL.maxLine;\n        if (restHeight < space) {\n          // center middle voice rest between the upper and lower voices\n          centerRest(noteM, noteU, noteL);\n        } else {\n          xShift = voiceXShift + 3;    // shift middle rest right\n          noteM.note.setXShift(xShift);\n        }\n        // format complete\n        return true;\n      }\n    }\n\n    // Special case 2 :: all voices are rests\n    if (noteU.isrest && noteM.isrest && noteL.isrest) {\n      // Shift upper voice rest up\n      shiftRestVertical(noteU, noteM, 1);\n      // Shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n      // format complete\n      return true;\n    }\n\n    // Test if any other rests can be repositioned\n    if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n      // Shift middle voice rest up\n      shiftRestVertical(noteM, noteL, 1);\n    }\n    if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n      // Shift middle voice rest down\n      shiftRestVertical(noteM, noteU, -1);\n    }\n    if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n      // shift upper voice rest up;\n      shiftRestVertical(noteU, noteM, 1);\n    }\n    if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n      // shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n    }\n\n    // If middle voice intersects upper or lower voice\n    if ((!noteU.isrest && !noteM.isrest && noteU.minLine <= noteM.maxLine + 0.5) ||\n      (!noteM.isrest && !noteL.isrest && noteM.minLine <= noteL.maxLine)) {\n      xShift = voiceXShift + 3;      // shift middle note right\n      noteM.note.setXShift(xShift);\n    }\n\n    return true;\n  }\n\n  static formatByY(notes, state) {\n    // NOTE: this function does not support more than two voices per stave\n    // use with care.\n    let hasStave = true;\n\n    for (let i = 0; i < notes.length; i++) {\n      hasStave = hasStave && notes[i].getStave() != null;\n    }\n\n    if (!hasStave) {\n      throw new Vex.RERR(\n        'Stave Missing',\n        'All notes must have a stave - Vex.Flow.ModifierContext.formatMultiVoice!'\n      );\n    }\n\n    let xShift = 0;\n\n    for (let i = 0; i < notes.length - 1; i++) {\n      let topNote = notes[i];\n      let bottomNote = notes[i + 1];\n\n      if (topNote.getStemDirection() === Stem.DOWN) {\n        topNote = notes[i + 1];\n        bottomNote = notes[i];\n      }\n\n      const topKeys = topNote.getKeyProps();\n      const bottomKeys = bottomNote.getKeyProps();\n\n      const HALF_NOTEHEAD_HEIGHT = 0.5;\n\n      // `keyProps` and `stave.getYForLine` have different notions of a `line`\n      // so we have to convert the keyProps value by subtracting 5.\n      // See https://github.com/0xfe/vexflow/wiki/Development-Gotchas\n      //\n      // We also extend the y for each note by a half notehead because the\n      // notehead's origin is centered\n      const topNotBottomY = topNote\n        .getStave()\n        .getYForLine(5 - topKeys[0].line + HALF_NOTEHEAD_HEIGHT);\n\n      const bottomNoteTopY = bottomNote\n        .getStave()\n        .getYForLine(5 - bottomKeys[bottomKeys.length - 1].line - HALF_NOTEHEAD_HEIGHT);\n\n      const areNotesColliding = bottomNoteTopY - topNotBottomY < 0;\n\n      if (areNotesColliding) {\n        xShift = topNote.getVoiceShiftWidth() + 2;\n        bottomNote.setXShift(xShift);\n      }\n    }\n\n    state.right_shift += xShift;\n  }\n\n  static postFormat(notes) {\n    if (!notes) return false;\n\n    notes.forEach(note => note.postFormat());\n\n    return true;\n  }\n\n  constructor(noteStruct) {\n    super(noteStruct);\n    this.setAttribute('type', 'StaveNote');\n\n    this.keys = noteStruct.keys;\n    this.clef = noteStruct.clef;\n    this.octave_shift = noteStruct.octave_shift;\n    this.beam = null;\n\n    // Pull note rendering properties\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `Invalid note initialization data (No glyph found): ${JSON.stringify(noteStruct)}`\n      );\n    }\n\n    // if true, displace note to right\n    this.displaced = false;\n    this.dot_shiftY = 0;\n    // per-pitch properties\n    this.keyProps = [];\n    // for displaced ledger lines\n    this.use_default_head_x = false;\n\n    // Drawing\n    this.note_heads = [];\n    this.modifiers = [];\n\n    Vex.Merge(this.render_options, {\n      // font size for note heads and rests\n      glyph_font_scale: noteStruct.glyph_font_scale || Flow.DEFAULT_NOTATION_FONT_SCALE,\n      // number of stroke px to the left and right of head\n      stroke_px: noteStruct.stroke_px || StaveNote.DEFAULT_LEDGER_LINE_OFFSET,\n    });\n\n    this.calculateKeyProps();\n    this.buildStem();\n\n    // Set the stem direction\n    if (noteStruct.auto_stem) {\n      this.autoStem();\n    } else {\n      this.setStemDirection(noteStruct.stem_direction);\n    }\n    this.reset();\n    this.buildFlag();\n  }\n\n  reset() {\n    super.reset();\n\n    // Save prior noteHead styles & reapply them after making new noteheads.\n    const noteHeadStyles = this.note_heads.map(noteHead => noteHead.getStyle());\n    this.buildNoteHeads();\n    this.note_heads.forEach((noteHead, index) => noteHead.setStyle(noteHeadStyles[index]));\n\n    if (this.stave) {\n      this.note_heads.forEach(head => head.setStave(this.stave));\n    }\n    this.calcExtraPx();\n  }\n\n  getCategory() { return StaveNote.CATEGORY; }\n\n  // Builds a `Stem` for the note\n  buildStem() {\n    const glyph = this.getGlyph();\n\n    this.setStem(new Stem({\n      stem_up_y_offset: glyph.stem_up_y_offset,\n      stem_down_y_offset: glyph.stem_down_y_offset,\n      hide: !!this.isRest(),\n    }));\n  }\n\n  // Builds a `NoteHead` for each key in the note\n  buildNoteHeads() {\n    this.note_heads = [];\n    const stemDirection = this.getStemDirection();\n    const keys = this.getKeys();\n\n    let lastLine = null;\n    let lineDiff = null;\n    let displaced = false;\n\n    // Draw notes from bottom to top.\n\n    // For down-stem notes, we draw from top to bottom.\n    let start;\n    let end;\n    let step;\n    if (stemDirection === Stem.UP) {\n      start = 0;\n      end = keys.length;\n      step = 1;\n    } else if (stemDirection === Stem.DOWN) {\n      start = keys.length - 1;\n      end = -1;\n      step = -1;\n    }\n\n    for (let i = start; i !== end; i += step) {\n      const noteProps = this.keyProps[i];\n      const line = noteProps.line;\n\n      // Keep track of last line with a note head, so that consecutive heads\n      // are correctly displaced.\n      if (lastLine === null) {\n        lastLine = line;\n      } else {\n        lineDiff = Math.abs(lastLine - line);\n        if (lineDiff === 0 || lineDiff === 0.5) {\n          displaced = !displaced;\n        } else {\n          displaced = false;\n          this.use_default_head_x = true;\n        }\n      }\n      lastLine = line;\n\n      const notehead = new NoteHead({\n        duration: this.duration,\n        note_type: this.noteType,\n        displaced,\n        stem_direction: stemDirection,\n        custom_glyph_code: noteProps.code,\n        glyph_font_scale: this.render_options.glyph_font_scale,\n        x_shift: noteProps.shift_right,\n        line: noteProps.line,\n      });\n\n      this.note_heads[i] = notehead;\n    }\n  }\n\n  // Automatically sets the stem direction based on the keys in the note\n  autoStem() {\n    // Figure out optimal stem direction based on given notes\n    this.minLine = this.keyProps[0].line;\n    this.maxLine = this.keyProps[this.keyProps.length - 1].line;\n\n    const MIDDLE_LINE = 3;\n    const decider = (this.minLine + this.maxLine) / 2;\n    const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n\n    this.setStemDirection(stemDirection);\n  }\n\n  // Calculates and stores the properties for each key in the note\n  calculateKeyProps() {\n    let lastLine = null;\n    for (let i = 0; i < this.keys.length; ++i) {\n      const key = this.keys[i];\n\n      // All rests use the same position on the line.\n      // if (this.glyph.rest) key = this.glyph.position;\n      if (this.glyph.rest) this.glyph.position = key;\n\n      const options = { octave_shift: this.octave_shift || 0 };\n      const props = Flow.keyProperties(key, this.clef, options);\n\n      if (!props) {\n        throw new Vex.RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n      }\n\n      // Override line placement for default rests\n      if (props.key === 'R') {\n        if (this.duration === '1' || this.duration === 'w') {\n          props.line = 4;\n        } else {\n          props.line = 3;\n        }\n      }\n\n      // Calculate displacement of this note\n      const line = props.line;\n      if (lastLine === null) {\n        lastLine = line;\n      } else {\n        if (Math.abs(lastLine - line) === 0.5) {\n          this.displaced = true;\n          props.displaced = true;\n\n          // Have to mark the previous note as\n          // displaced as well, for modifier placement\n          if (this.keyProps.length > 0) {\n            this.keyProps[i - 1].displaced = true;\n          }\n        }\n      }\n\n      lastLine = line;\n      this.keyProps.push(props);\n    }\n\n    // Sort the notes from lowest line to highest line\n    lastLine = -Infinity;\n    this.keyProps.forEach(key => {\n      if (key.line < lastLine) {\n        Vex.W(\n          'Unsorted keys in note will be sorted. ' +\n          'See https://github.com/0xfe/vexflow/issues/104 for details.'\n        );\n      }\n      lastLine = key.line;\n    });\n    this.keyProps.sort((a, b) => a.line - b.line);\n  }\n\n  // Get the `BoundingBox` for the entire note\n  getBoundingBox() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n\n    const { width: w, modLeftPx, extraLeftPx } = this.getMetrics();\n    const x = this.getAbsoluteX() - modLeftPx - extraLeftPx;\n\n    let minY = 0;\n    let maxY = 0;\n    const halfLineSpacing = this.getStave().getSpacingBetweenLines() / 2;\n    const lineSpacing = halfLineSpacing * 2;\n\n    if (this.isRest()) {\n      const y = this.ys[0];\n      const frac = Flow.durationToFraction(this.duration);\n      if (frac.equals(1) || frac.equals(2)) {\n        minY = y - halfLineSpacing;\n        maxY = y + halfLineSpacing;\n      } else {\n        minY = y - (this.glyph.line_above * lineSpacing);\n        maxY = y + (this.glyph.line_below * lineSpacing);\n      }\n    } else if (this.glyph.stem) {\n      const ys = this.getStemExtents();\n      ys.baseY += halfLineSpacing * this.stem_direction;\n      minY = Math.min(ys.topY, ys.baseY);\n      maxY = Math.max(ys.topY, ys.baseY);\n    } else {\n      minY = null;\n      maxY = null;\n\n      for (let i = 0; i < this.ys.length; ++i) {\n        const yy = this.ys[i];\n        if (i === 0) {\n          minY = yy;\n          maxY = yy;\n        } else {\n          minY = Math.min(yy, minY);\n          maxY = Math.max(yy, maxY);\n        }\n      }\n      minY -= halfLineSpacing;\n      maxY += halfLineSpacing;\n    }\n\n    return new BoundingBox(x, minY, w, maxY - minY);\n  }\n\n  // Gets the line number of the top or bottom note in the chord.\n  // If `isTopNote` is `true` then get the top note\n  getLineNumber(isTopNote) {\n    if (!this.keyProps.length) {\n      throw new Vex.RERR(\n        'NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\"\n      );\n    }\n\n    let resultLine = this.keyProps[0].line;\n\n    // No precondition assumed for sortedness of keyProps array\n    for (let i = 0; i < this.keyProps.length; i++) {\n      const thisLine = this.keyProps[i].line;\n      if (isTopNote) {\n        if (thisLine > resultLine) resultLine = thisLine;\n      } else {\n        if (thisLine < resultLine) resultLine = thisLine;\n      }\n    }\n\n    return resultLine;\n  }\n\n  // Determine if current note is a rest\n  isRest() { return this.glyph.rest; }\n\n  // Determine if the current note is a chord\n  isChord() { return !this.isRest() && this.keys.length > 1; }\n\n  // Determine if the `StaveNote` has a stem\n  hasStem() { return this.glyph.stem; }\n\n  hasFlag() {\n    return super.hasFlag() && !this.isRest();\n  }\n\n  getStemX() {\n    if (this.noteType === 'r') {\n      return this.getCenterGlyphX();\n    } else {\n      // We adjust the origin of the stem because we want the stem left-aligned\n      // with the notehead if stemmed-down, and right-aligned if stemmed-up\n      return super.getStemX() + getStemAdjustment(this);\n    }\n  }\n\n  // Get the `y` coordinate for text placed on the top/bottom of a\n  // note at a desired `text_line`\n  getYForTopText(textLine) {\n    const extents = this.getStemExtents();\n    return Math.min(\n      this.stave.getYForTopText(textLine),\n      extents.topY - (this.render_options.annotation_spacing * (textLine + 1))\n    );\n  }\n  getYForBottomText(textLine) {\n    const extents = this.getStemExtents();\n    return Math.max(\n      this.stave.getYForTopText(textLine),\n      extents.baseY + (this.render_options.annotation_spacing * (textLine))\n    );\n  }\n\n  // Sets the current note to the provided `stave`. This applies\n  // `y` values to the `NoteHeads`.\n  setStave(stave) {\n    super.setStave(stave);\n\n    const ys = this.note_heads.map(notehead => {\n      notehead.setStave(stave);\n      return notehead.getY();\n    });\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      const { y_top, y_bottom } = this.getNoteHeadBounds();\n      this.stem.setYBounds(y_top, y_bottom);\n    }\n\n    return this;\n  }\n\n  // Get the pitches in the note\n  getKeys() { return this.keys; }\n\n  // Get the properties for all the keys in the note\n  getKeyProps() {\n    return this.keyProps;\n  }\n\n  // Check if note is shifted to the right\n  isDisplaced() {\n    return this.displaced;\n  }\n\n  // Sets whether shift note to the right. `displaced` is a `boolean`\n  setNoteDisplaced(displaced) {\n    this.displaced = displaced;\n    return this;\n  }\n\n  // Get the starting `x` coordinate for a `StaveTie`\n  getTieRightX() {\n    let tieStartX = this.getAbsoluteX();\n    tieStartX += this.getGlyphWidth() + this.x_shift + this.extraRightPx;\n    if (this.modifierContext) tieStartX += this.modifierContext.getExtraRightPx();\n    return tieStartX;\n  }\n\n  // Get the ending `x` coordinate for a `StaveTie`\n  getTieLeftX() {\n    let tieEndX = this.getAbsoluteX();\n    tieEndX += this.x_shift - this.extraLeftPx;\n    return tieEndX;\n  }\n\n  // Get the stave line on which to place a rest\n  getLineForRest() {\n    let restLine = this.keyProps[0].line;\n    if (this.keyProps.length > 1) {\n      const lastLine = this.keyProps[this.keyProps.length - 1].line;\n      const top = Math.max(restLine, lastLine);\n      const bot = Math.min(restLine, lastLine);\n      restLine = Vex.MidLine(top, bot);\n    }\n\n    return restLine;\n  }\n\n  // Get the default `x` and `y` coordinates for the provided `position`\n  // and key `index`\n  getModifierStartXY(position, index, options) {\n    options = options || {};\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n    let x = 0;\n    if (position === LEFT) {\n      // extra_left_px\n      // FIXME: What are these magic numbers?\n      x = -1 * 2;\n    } else if (position === RIGHT) {\n      // extra_right_px\n      // FIXME: What is this magical +2?\n      x = this.getGlyphWidth() + this.x_shift + 2;\n\n      if (this.stem_direction === Stem.UP && this.hasFlag() &&\n        (options.forceFlagRight || isInnerNoteIndex(this, index))) {\n        x += this.flag.getMetrics().width;\n      }\n    } else if (position === BELOW || position === ABOVE) {\n      x = this.getGlyphWidth() / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Sets the style of the complete StaveNote, including all keys\n  // and the stem.\n  setStyle(style) {\n    super.setStyle(style);\n    this.note_heads.forEach(notehead => notehead.setStyle(style));\n    this.stem.setStyle(style);\n  }\n\n  setStemStyle(style) {\n    const stem = this.getStem();\n    stem.setStyle(style);\n  }\n  getStemStyle() { return this.stem.getStyle(); }\n\n  setLedgerLineStyle(style) { this.ledgerLineStyle = style; }\n  getLedgerLineStyle() { return this.ledgerLineStyle; }\n\n  setFlagStyle(style) { this.flagStyle = style; }\n  getFlagStyle() { return this.flagStyle; }\n\n  // Sets the notehead at `index` to the provided coloring `style`.\n  //\n  // `style` is an `object` with the following properties: `shadowColor`,\n  // `shadowBlur`, `fillStyle`, `strokeStyle`\n  setKeyStyle(index, style) {\n    this.note_heads[index].setStyle(style);\n    return this;\n  }\n\n  setKeyLine(index, line) {\n    this.keyProps[index].line = line;\n    this.reset();\n    return this;\n  }\n\n  getKeyLine(index) {\n    return this.keyProps[index].line;\n  }\n\n  // Add self to modifier context. `mContext` is the `ModifierContext`\n  // to be added to.\n  addToModifierContext(mContext) {\n    this.setModifierContext(mContext);\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addModifier(this.modifiers[i]);\n    }\n    this.modifierContext.addModifier(this);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Generic function to add modifiers to a note\n  //\n  // Parameters:\n  // * `index`: The index of the key that we're modifying\n  // * `modifier`: The modifier to add\n  addModifier(index, modifier) {\n    modifier.setNote(this);\n    modifier.setIndex(index);\n    this.modifiers.push(modifier);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Helper function to add an accidental to a key\n  addAccidental(index, accidental) {\n    return this.addModifier(index, accidental);\n  }\n\n  // Helper function to add an articulation to a key\n  addArticulation(index, articulation) {\n    return this.addModifier(index, articulation);\n  }\n\n  // Helper function to add an annotation to a key\n  addAnnotation(index, annotation) {\n    return this.addModifier(index, annotation);\n  }\n\n  // Helper function to add a dot on a specific key\n  addDot(index) {\n    const dot = new Dot();\n    dot.setDotShiftY(this.glyph.dot_shiftY);\n    this.dots++;\n    return this.addModifier(index, dot);\n  }\n\n  // Convenience method to add dot to all keys in note\n  addDotToAll() {\n    for (let i = 0; i < this.keys.length; ++i) {\n      this.addDot(i);\n    }\n    return this;\n  }\n\n  // Get all accidentals in the `ModifierContext`\n  getAccidentals() {\n    return this.modifierContext.getModifiers('accidentals');\n  }\n\n  // Get all dots in the `ModifierContext`\n  getDots() {\n    return this.modifierContext.getModifiers('dots');\n  }\n\n  // Get the width of the note if it is displaced. Used for `Voice`\n  // formatting\n  getVoiceShiftWidth() {\n    // TODO: may need to accomodate for dot here.\n    return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n  }\n\n  // Calculates and sets the extra pixels to the left or right\n  // if the note is displaced.\n  calcExtraPx() {\n    this.setExtraLeftPx(\n      this.displaced && this.stem_direction === Stem.DOWN\n        ? this.getGlyphWidth()\n        : 0\n    );\n\n    // For upstems with flags, the extra space is unnecessary, since it's taken\n    // up by the flag.\n    this.setExtraRightPx(\n      !this.hasFlag() && this.displaced && this.stem_direction === Stem.UP\n        ? this.getGlyphWidth()\n        : 0\n    );\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return;\n    if (this.modifierContext) this.modifierContext.preFormat();\n\n    let width = this.getGlyphWidth() + this.extraLeftPx + this.extraRightPx;\n\n    // For upward flagged notes, the width of the flag needs to be added\n    if (this.glyph.flag && this.beam === null && this.stem_direction === Stem.UP) {\n      width += this.getGlyphWidth();\n    }\n\n    this.setWidth(width);\n    this.setPreFormatted(true);\n  }\n\n  /**\n   * @typedef {Object} noteHeadBounds\n   * @property {number} y_top the highest notehead bound\n   * @property {number} y_bottom the lowest notehead bound\n   * @property {number|Null} displaced_x the starting x for displaced noteheads\n   * @property {number|Null} non_displaced_x the starting x for non-displaced noteheads\n   * @property {number} highest_line the highest notehead line in traditional music line\n   *  numbering (bottom line = 1, top line = 5)\n   * @property {number} lowest_line the lowest notehead line\n   * @property {number|false} highest_displaced_line the highest staff line number\n   *   for a displaced notehead\n   * @property {number|false} lowest_displaced_line\n   * @property {number} highest_non_displaced_line\n   * @property {number} lowest_non_displaced_line\n   */\n\n  /**\n   * Get the staff line and y value for the highest & lowest noteheads\n   * @returns {noteHeadBounds}\n   */\n  getNoteHeadBounds() {\n    // Top and bottom Y values for stem.\n    let yTop = null;\n    let yBottom = null;\n    let nonDisplacedX = null;\n    let displacedX = null;\n\n    let highestLine = this.stave.getNumLines();\n    let lowestLine = 1;\n    let highestDisplacedLine = false;\n    let lowestDisplacedLine = false;\n    let highestNonDisplacedLine = highestLine;\n    let lowestNonDisplacedLine = lowestLine;\n\n    this.note_heads.forEach(notehead => {\n      const line = notehead.getLine();\n      const y = notehead.getY();\n\n      if (yTop === null || y < yTop) {\n        yTop = y;\n      }\n\n      if (yBottom === null || y > yBottom) {\n        yBottom = y;\n      }\n\n      if (displacedX === null && notehead.isDisplaced()) {\n        displacedX = notehead.getAbsoluteX();\n      }\n\n      if (nonDisplacedX === null && !notehead.isDisplaced()) {\n        nonDisplacedX = notehead.getAbsoluteX();\n      }\n\n      highestLine = line > highestLine ? line : highestLine;\n      lowestLine = line < lowestLine ? line : lowestLine;\n\n      if (notehead.isDisplaced()) {\n        highestDisplacedLine = (highestDisplacedLine === false) ?\n          line : Math.max(line, highestDisplacedLine);\n        lowestDisplacedLine = (lowestDisplacedLine === false) ?\n          line : Math.min(line, lowestDisplacedLine);\n      } else {\n        highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n        lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n      }\n    }, this);\n\n    return {\n      y_top: yTop,\n      y_bottom: yBottom,\n      displaced_x: displacedX,\n      non_displaced_x: nonDisplacedX,\n      highest_line: highestLine,\n      lowest_line: lowestLine,\n      highest_displaced_line: highestDisplacedLine,\n      lowest_displaced_line: lowestDisplacedLine,\n      highest_non_displaced_line: highestNonDisplacedLine,\n      lowest_non_displaced_line: lowestNonDisplacedLine,\n    };\n  }\n\n  // Get the starting `x` coordinate for the noteheads\n  getNoteHeadBeginX() {\n    return this.getAbsoluteX() + this.x_shift;\n  }\n\n  // Get the ending `x` coordinate for the noteheads\n  getNoteHeadEndX() {\n    const xBegin = this.getNoteHeadBeginX();\n    return xBegin + this.getGlyphWidth();\n  }\n\n  // Draw the ledger lines between the stave and the highest/lowest keys\n  drawLedgerLines() {\n    const {\n      stave, glyph,\n      render_options: { stroke_px },\n      context: ctx,\n    } = this;\n\n    const width = glyph.getWidth() + (stroke_px * 2);\n    const doubleWidth = 2 * (glyph.getWidth() + stroke_px) - (Stem.WIDTH / 2);\n\n    if (this.isRest()) return;\n    if (!ctx) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const {\n      highest_line,\n      lowest_line,\n      highest_displaced_line,\n      highest_non_displaced_line,\n      lowest_displaced_line,\n      lowest_non_displaced_line,\n      displaced_x,\n      non_displaced_x,\n    } = this.getNoteHeadBounds();\n\n    const min_x = Math.min(displaced_x, non_displaced_x);\n\n    const drawLedgerLine = (y, normal, displaced) => {\n      let x;\n      if (displaced && normal) x = min_x - stroke_px;\n      else if (normal) x = non_displaced_x - stroke_px;\n      else x = displaced_x - stroke_px;\n      const ledgerWidth = (normal && displaced) ? doubleWidth : width;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + ledgerWidth, y);\n      ctx.stroke();\n    };\n\n    const style = Object.assign({}, stave.getStyle() || {}, this.getLedgerLineStyle() || {});\n    this.applyStyle(ctx, style);\n\n    // Draw ledger lines below the staff:\n    for (let line = 6; line <= highest_line; ++line) {\n      const normal = (non_displaced_x !== null) && (line <= highest_non_displaced_line);\n      const displaced = (displaced_x !== null) && (line <= highest_displaced_line);\n      drawLedgerLine(stave.getYForNote(line), normal, displaced);\n    }\n\n    // Draw ledger lines above the staff:\n    for (let line = 0; line >= lowest_line; --line) {\n      const normal = (non_displaced_x !== null) && (line >= lowest_non_displaced_line);\n      const displaced = (displaced_x !== null) && (line >= lowest_displaced_line);\n      drawLedgerLine(stave.getYForNote(line), normal, displaced);\n    }\n\n    this.restoreStyle(ctx, style);\n  }\n\n  // Draw all key modifiers\n  drawModifiers() {\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const ctx = this.context;\n    ctx.openGroup('modifiers');\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const modifier = this.modifiers[i];\n      const notehead = this.note_heads[modifier.getIndex()];\n      const noteheadStyle = notehead.getStyle();\n      notehead.applyStyle(ctx, noteheadStyle);\n      modifier.setContext(ctx);\n      modifier.draw();\n      notehead.restoreStyle(ctx, noteheadStyle);\n    }\n    ctx.closeGroup();\n  }\n\n  // Draw the flag for the note\n  drawFlag() {\n    const { stem, beam, context: ctx } = this;\n\n    if (!ctx) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const shouldRenderFlag = beam === null;\n    const glyph = this.getGlyph();\n\n    if (glyph.flag && shouldRenderFlag) {\n      const { y_top, y_bottom } = this.getNoteHeadBounds();\n      const noteStemHeight = stem.getHeight();\n      const flagX = this.getStemX();\n      // FIXME: What's with the magic +/- 2\n      const flagY = this.getStemDirection() === Stem.DOWN\n        // Down stems have flags on the left\n        ? y_top - noteStemHeight + 2\n        // Up stems have flags on the eft.\n        : y_bottom - noteStemHeight - 2;\n\n      // Draw the Flag\n      ctx.openGroup('flag', null, { pointerBBox: true });\n      this.applyStyle(ctx, this.getFlagStyle() || false);\n      this.flag.render(ctx, flagX, flagY);\n      this.restoreStyle(ctx, this.getFlagStyle() || false);\n      ctx.closeGroup();\n    }\n  }\n\n  // Draw the NoteHeads\n  drawNoteHeads() {\n    this.note_heads.forEach(notehead => {\n      this.context.openGroup('notehead', null, { pointerBBox: true });\n      notehead.setContext(this.context).draw();\n      this.context.closeGroup();\n    });\n  }\n\n  // Render the stem onto the canvas\n  drawStem(stemStruct) {\n    // GCR TODO: I can't find any context in which this is called with the stemStruct\n    // argument in the codebase or tests. Nor can I find a case where super.drawStem\n    // is called at all. Perhaps these should be removed?\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    if (stemStruct) {\n      this.setStem(new Stem(stemStruct));\n    }\n\n    this.context.openGroup('stem', null, { pointerBBox: true });\n    this.stem.setContext(this.context).draw();\n    this.context.closeGroup();\n  }\n\n  // Draws all the `StaveNote` parts. This is the main drawing method.\n  draw() {\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    const xBegin = this.getNoteHeadBeginX();\n    const shouldRenderStem = this.hasStem() && !this.beam;\n\n    // Format note head x positions\n    this.note_heads.forEach(notehead => notehead.setX(xBegin));\n\n    // Format stem x positions\n    const stemX = this.getStemX();\n    this.stem.setNoteHeadXBounds(stemX, stemX);\n\n    L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n\n    // Draw each part of the note\n    this.drawLedgerLines();\n\n    // Apply the overall style -- may be contradicted by local settings:\n    this.applyStyle();\n    this.setAttribute('el', this.context.openGroup('stavenote', this.getAttribute('id')));\n    this.context.openGroup('note', null, { pointerBBox: true });\n    if (shouldRenderStem) this.drawStem();\n    this.drawNoteHeads();\n    this.drawFlag();\n    this.context.closeGroup();\n    this.drawModifiers();\n    this.context.closeGroup();\n    this.restoreStyle();\n    this.setRendered();\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n// Author Larry Kuhns 2013\n// Class to draws string numbers into the notation.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\n\n/**\n * @constructor\n */\nexport class FretHandFinger extends Modifier {\n  static get CATEGORY() { return 'frethandfinger'; }\n\n  // Arrange fingerings inside a ModifierContext.\n  static format(nums, state) {\n    const { left_shift, right_shift } = state;\n    const num_spacing = 1;\n\n    if (!nums || nums.length === 0) return false;\n\n    const nums_list = [];\n    let prev_note = null;\n    let shiftLeft = 0;\n    let shiftRight = 0;\n\n    for (let i = 0; i < nums.length; ++i) {\n      const num = nums[i];\n      const note = num.getNote();\n      const pos = num.getPosition();\n      const props = note.getKeyProps()[num.getIndex()];\n      if (note !== prev_note) {\n        for (let n = 0; n < note.keys.length; ++n) {\n          const props_tmp = note.getKeyProps()[n];\n          if (left_shift === 0) {\n            shiftLeft = props_tmp.displaced ? note.getExtraLeftPx() : shiftLeft;\n          }\n          if (right_shift === 0) {\n            shiftRight = props_tmp.displaced ? note.getExtraRightPx() : shiftRight;\n          }\n        }\n        prev_note = note;\n      }\n\n      nums_list.push({\n        note,\n        num,\n        pos,\n        line: props.line,\n        shiftL: shiftLeft,\n        shiftR: shiftRight,\n      });\n    }\n\n    // Sort fingernumbers by line number.\n    nums_list.sort((a, b) => b.line - a.line);\n\n    let numShiftL = 0;\n    let numShiftR = 0;\n    let xWidthL = 0;\n    let xWidthR = 0;\n    let lastLine = null;\n    let lastNote = null;\n\n    for (let i = 0; i < nums_list.length; ++i) {\n      let num_shift = 0;\n      const { note, pos, num, line, shiftL, shiftR } = nums_list[i];\n\n      // Reset the position of the string number every line.\n      if (line !== lastLine || note !== lastNote) {\n        numShiftL = left_shift + shiftL;\n        numShiftR = right_shift + shiftR;\n      }\n\n      const numWidth = num.getWidth() + num_spacing;\n      if (pos === Modifier.Position.LEFT) {\n        num.setXShift(left_shift + numShiftL);\n        num_shift = left_shift + numWidth; // spacing\n        xWidthL = num_shift > xWidthL ? num_shift : xWidthL;\n      } else if (pos === Modifier.Position.RIGHT) {\n        num.setXShift(numShiftR);\n        num_shift = shiftRight + numWidth; // spacing\n        xWidthR = num_shift > xWidthR ? num_shift : xWidthR;\n      }\n      lastLine = line;\n      lastNote = note;\n    }\n\n    state.left_shift += xWidthL;\n    state.right_shift += xWidthR;\n\n    return true;\n  }\n\n  constructor(number) {\n    super();\n    this.setAttribute('type', 'FretHandFinger');\n\n    this.note = null;\n    this.index = null;\n    this.finger = number;\n    this.width = 7;\n    this.position = Modifier.Position.LEFT;  // Default position above stem or note head\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.x_offset = 0;       // Horizontal offset from default\n    this.y_offset = 0;       // Vertical offset from default\n    this.font = {\n      family: 'sans-serif',\n      size: 9,\n      weight: 'bold',\n    };\n  }\n  getCategory() { return FretHandFinger.CATEGORY; }\n  setFretHandFinger(number) { this.finger = number; return this; }\n  setOffsetX(x) { this.x_offset = x; return this; }\n  setOffsetY(y) { this.y_offset = y; return this; }\n\n  draw() {\n    this.checkContext();\n\n    if (!this.note || this.index == null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\n    }\n\n    this.setRendered();\n    const ctx = this.context;\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let dot_x = start.x + this.x_shift + this.x_offset;\n    let dot_y = start.y + this.y_shift + this.y_offset + 5;\n\n    switch (this.position) {\n      case Modifier.Position.ABOVE:\n        dot_x -= 4;\n        dot_y -= 12;\n        break;\n      case Modifier.Position.BELOW:\n        dot_x -= 2;\n        dot_y += 10;\n        break;\n      case Modifier.Position.LEFT:\n        dot_x -= this.width;\n        break;\n      case Modifier.Position.RIGHT:\n        dot_x += 1;\n        break;\n      default:\n        throw new Vex.RERR('InvalidPostion', `The position ${this.position} does not exist`);\n    }\n\n    ctx.save();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    ctx.fillText('' + this.finger, dot_x, dot_y);\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements some standard music theory routines.\n\nimport { Vex } from './vex';\n\nexport class Music {\n  static get NUM_TONES() {\n    return 12;\n  }\n\n  static get roots() {\n    return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n  }\n\n  static get root_values() {\n    return [0, 2, 4, 5, 7, 9, 11];\n  }\n\n  static get root_indices() {\n    return {\n      'c': 0,\n      'd': 1,\n      'e': 2,\n      'f': 3,\n      'g': 4,\n      'a': 5,\n      'b': 6,\n    };\n  }\n\n  static get canonical_notes() {\n    return [\n      'c', 'c#', 'd', 'd#',\n      'e', 'f', 'f#', 'g',\n      'g#', 'a', 'a#', 'b',\n    ];\n  }\n\n  static get diatonic_intervals() {\n    return [\n      'unison', 'm2', 'M2', 'm3', 'M3',\n      'p4', 'dim5', 'p5', 'm6', 'M6',\n      'b7', 'M7', 'octave',\n    ];\n  }\n\n  static get diatonic_accidentals() {\n    return {\n      'unison': { note: 0, accidental: 0 },\n      'm2': { note: 1, accidental: -1 },\n      'M2': { note: 1, accidental: 0 },\n      'm3': { note: 2, accidental: -1 },\n      'M3': { note: 2, accidental: 0 },\n      'p4': { note: 3, accidental: 0 },\n      'dim5': { note: 4, accidental: -1 },\n      'p5': { note: 4, accidental: 0 },\n      'm6': { note: 5, accidental: -1 },\n      'M6': { note: 5, accidental: 0 },\n      'b7': { note: 6, accidental: -1 },\n      'M7': { note: 6, accidental: 0 },\n      'octave': { note: 7, accidental: 0 },\n    };\n  }\n\n  static get intervals() {\n    return {\n      'u': 0, 'unison': 0,\n      'm2': 1, 'b2': 1, 'min2': 1, 'S': 1, 'H': 1,\n      '2': 2, 'M2': 2, 'maj2': 2, 'T': 2, 'W': 2,\n      'm3': 3, 'b3': 3, 'min3': 3,\n      'M3': 4, '3': 4, 'maj3': 4,\n      '4': 5, 'p4': 5,\n      '#4': 6, 'b5': 6, 'aug4': 6, 'dim5': 6,\n      '5': 7, 'p5': 7,\n      '#5': 8, 'b6': 8, 'aug5': 8,\n      '6': 9, 'M6': 9, 'maj6': 9,\n      'b7': 10, 'm7': 10, 'min7': 10, 'dom7': 10,\n      'M7': 11, 'maj7': 11,\n      '8': 12, 'octave': 12,\n    };\n  }\n\n  static get scales() {\n    return {\n      major: [2, 2, 1, 2, 2, 2, 1],\n      dorian: [2, 1, 2, 2, 2, 1, 2],\n      mixolydian: [2, 2, 1, 2, 2, 1, 2],\n      minor: [2, 1, 2, 2, 1, 2, 2],\n    };\n  }\n\n  static get scaleTypes() {\n    return {\n      'M': Music.scales.major,\n      'm': Music.scales.minor,\n    };\n  }\n\n  static get accidentals() {\n    return ['bb', 'b', 'n', '#', '##'];\n  }\n\n  static get noteValues() {\n    return {\n      'c': { root_index: 0, int_val: 0 },\n      'cn': { root_index: 0, int_val: 0 },\n      'c#': { root_index: 0, int_val: 1 },\n      'c##': { root_index: 0, int_val: 2 },\n      'cb': { root_index: 0, int_val: 11 },\n      'cbb': { root_index: 0, int_val: 10 },\n      'd': { root_index: 1, int_val: 2 },\n      'dn': { root_index: 1, int_val: 2 },\n      'd#': { root_index: 1, int_val: 3 },\n      'd##': { root_index: 1, int_val: 4 },\n      'db': { root_index: 1, int_val: 1 },\n      'dbb': { root_index: 1, int_val: 0 },\n      'e': { root_index: 2, int_val: 4 },\n      'en': { root_index: 2, int_val: 4 },\n      'e#': { root_index: 2, int_val: 5 },\n      'e##': { root_index: 2, int_val: 6 },\n      'eb': { root_index: 2, int_val: 3 },\n      'ebb': { root_index: 2, int_val: 2 },\n      'f': { root_index: 3, int_val: 5 },\n      'fn': { root_index: 3, int_val: 5 },\n      'f#': { root_index: 3, int_val: 6 },\n      'f##': { root_index: 3, int_val: 7 },\n      'fb': { root_index: 3, int_val: 4 },\n      'fbb': { root_index: 3, int_val: 3 },\n      'g': { root_index: 4, int_val: 7 },\n      'gn': { root_index: 4, int_val: 7 },\n      'g#': { root_index: 4, int_val: 8 },\n      'g##': { root_index: 4, int_val: 9 },\n      'gb': { root_index: 4, int_val: 6 },\n      'gbb': { root_index: 4, int_val: 5 },\n      'a': { root_index: 5, int_val: 9 },\n      'an': { root_index: 5, int_val: 9 },\n      'a#': { root_index: 5, int_val: 10 },\n      'a##': { root_index: 5, int_val: 11 },\n      'ab': { root_index: 5, int_val: 8 },\n      'abb': { root_index: 5, int_val: 7 },\n      'b': { root_index: 6, int_val: 11 },\n      'bn': { root_index: 6, int_val: 11 },\n      'b#': { root_index: 6, int_val: 0 },\n      'b##': { root_index: 6, int_val: 1 },\n      'bb': { root_index: 6, int_val: 10 },\n      'bbb': { root_index: 6, int_val: 9 },\n    };\n  }\n\n  isValidNoteValue(note) {\n    if (note == null || note < 0 || note >= Music.NUM_TONES) {\n      return false;\n    }\n    return true;\n  }\n\n  isValidIntervalValue(interval) {\n    return this.isValidNoteValue(interval);\n  }\n\n  getNoteParts(noteString) {\n    if (!noteString || noteString.length < 1) {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    if (noteString.length > 3) {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    const note = noteString.toLowerCase();\n\n    const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n    const match = regex.exec(note);\n\n    if (match != null) {\n      const root = match[1];\n      const accidental = match[2];\n\n      return {\n        root,\n        accidental,\n      };\n    } else {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n  }\n\n  getKeyParts(keyString) {\n    if (!keyString || keyString.length < 1) {\n      throw new Vex.RERR('BadArguments', 'Invalid key: ' + keyString);\n    }\n\n    const key = keyString.toLowerCase();\n\n    // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n    const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n    const match = regex.exec(key);\n\n    if (match != null) {\n      const root = match[1];\n      const accidental = match[2];\n      let type = match[3];\n\n      // Unspecified type implies major\n      if (!type) type = 'M';\n\n      return {\n        root,\n        accidental,\n        type,\n      };\n    } else {\n      throw new Vex.RERR('BadArguments', `Invalid key: ${keyString}`);\n    }\n  }\n\n  getNoteValue(noteString) {\n    const value = Music.noteValues[noteString];\n    if (value == null) {\n      throw new Vex.RERR('BadArguments', `Invalid note name: ${noteString}`);\n    }\n\n    return value.int_val;\n  }\n\n  getIntervalValue(intervalString) {\n    const value = Music.intervals[intervalString];\n    if (value == null) {\n      throw new Vex.RERR('BadArguments', `Invalid interval name: ${intervalString}`);\n    }\n\n    return value;\n  }\n\n  getCanonicalNoteName(noteValue) {\n    if (!this.isValidNoteValue(noteValue)) {\n      throw new Vex.RERR('BadArguments', `Invalid note value: ${noteValue}`);\n    }\n\n    return Music.canonical_notes[noteValue];\n  }\n\n  getCanonicalIntervalName(intervalValue) {\n    if (!this.isValidIntervalValue(intervalValue)) {\n      throw new Vex.RERR('BadArguments', `Invalid interval value: ${intervalValue}`);\n    }\n\n    return Music.diatonic_intervals[intervalValue];\n  }\n\n  /* Given a note, interval, and interval direction, product the\n   * relative note.\n   */\n  getRelativeNoteValue(noteValue, intervalValue, direction) {\n    if (direction == null) direction = 1;\n\n    if (direction !== 1 && direction !== -1) {\n      throw new Vex.RERR('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    let sum = (noteValue + (direction * intervalValue)) % Music.NUM_TONES;\n    if (sum < 0) sum += Music.NUM_TONES;\n\n    return sum;\n  }\n\n  getRelativeNoteName(root, noteValue) {\n    const parts = this.getNoteParts(root);\n    const rootValue = this.getNoteValue(parts.root);\n    let interval = noteValue - rootValue;\n\n    if (Math.abs(interval) > Music.NUM_TONES - 3) {\n      let multiplier = 1;\n      if (interval > 0) multiplier = -1;\n\n      // Possibly wrap around. (Add +1 for modulo operator)\n      const reverse_interval = (((noteValue + 1) + (rootValue + 1)) %\n        Music.NUM_TONES) * multiplier;\n\n      if (Math.abs(reverse_interval) > 2) {\n        throw new Vex.RERR('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n      } else {\n        interval = reverse_interval;\n      }\n    }\n\n    if (Math.abs(interval) > 2) {\n      throw new Vex.RERR('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n    }\n\n    let relativeNoteName = parts.root;\n    if (interval > 0) {\n      for (let i = 1; i <= interval; ++i) {\n        relativeNoteName += '#';\n      }\n    } else if (interval < 0) {\n      for (let i = -1; i >= interval; --i) {\n        relativeNoteName += 'b';\n      }\n    }\n\n    return relativeNoteName;\n  }\n\n  /* Return scale tones, given intervals. Each successive interval is\n   * relative to the previous one, e.g., Major Scale:\n   *\n   *   TTSTTTS = [2,2,1,2,2,2,1]\n   *\n   * When used with key = 0, returns C scale (which is isomorphic to\n   * interval list).\n   */\n  getScaleTones(key, intervals) {\n    const tones = [key];\n\n    let nextNote = key;\n    for (let i = 0; i < intervals.length; i += 1) {\n      nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n      if (nextNote !== key) tones.push(nextNote);\n    }\n\n    return tones;\n  }\n\n  /* Returns the interval of a note, given a diatonic scale.\n   *\n   * E.g., Given the scale C, and the note E, returns M3\n   */\n  getIntervalBetween(note1, note2, direction) {\n    if (direction == null) direction = 1;\n\n    if (direction !== 1 && direction !== -1) {\n      throw new Vex.RERR('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n      throw new Vex.RERR('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n    }\n\n    let difference = direction === 1\n      ? note2 - note1\n      : note1 - note2;\n\n    if (difference < 0) difference += Music.NUM_TONES;\n\n    return difference;\n  }\n\n  // Create a scale map that represents the pitch state for a\n  // `keySignature`. For example, passing a `G` to `keySignature` would\n  // return a scale map with every note naturalized except for `F` which\n  // has an `F#` state.\n  createScaleMap(keySignature) {\n    const keySigParts = this.getKeyParts(keySignature);\n    const scaleName = Music.scaleTypes[keySigParts.type];\n\n    let keySigString = keySigParts.root;\n    if (keySigParts.accidental) keySigString += keySigParts.accidental;\n\n    if (!scaleName) throw new Vex.RERR('BadArguments', 'Unsupported key type: ' + keySignature);\n\n    const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n    const noteLocation = Music.root_indices[keySigParts.root];\n\n    const scaleMap = {};\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n      let noteName = this.getRelativeNoteName(rootName, scale[i]);\n\n      if (noteName.length === 1) {\n        noteName += 'n';\n      }\n\n      scaleMap[rootName] = noteName;\n    }\n\n    return scaleMap;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// @author Greg Ristow (modifications)\n//\n// ## Description\n//\n// This file implements accidentals as modifiers that can be attached to\n// notes. Support is included for both western and microtonal accidentals.\n//\n// See `tests/accidental_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Fraction } from './fraction';\nimport { Flow } from './tables';\nimport { Music } from './music';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`.\nfunction L(...args) { if (Accidental.DEBUG) Vex.L('Vex.Flow.Accidental', args); }\n\nconst getGlyphWidth = glyph => glyph.getMetrics().width;\n\n// An `Accidental` inherits from `Modifier`, and is formatted within a\n// `ModifierContext`.\nexport class Accidental extends Modifier {\n  static get CATEGORY() { return 'accidentals'; }\n\n  // Arrange accidentals inside a ModifierContext.\n  static format(accidentals, state) {\n    const noteheadAccidentalPadding = 1;\n    const leftShift = state.left_shift + noteheadAccidentalPadding;\n    const accidentalSpacing = 3;\n\n    // If there are no accidentals, we needn't format their positions\n    if (!accidentals || accidentals.length === 0) return;\n\n    const accList = [];\n    let prevNote = null;\n    let shiftL = 0;\n\n    // First determine the accidentals' Y positions from the note.keys\n    let propsTemp;\n    for (let i = 0; i < accidentals.length; ++i) {\n      const acc = accidentals[i];\n      const note = acc.getNote();\n      const stave = note.getStave();\n      const props = note.getKeyProps()[acc.getIndex()];\n      if (note !== prevNote) {\n        // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          propsTemp = note.getKeyProps()[n];\n          shiftL = propsTemp.displaced ? note.getExtraLeftPx() : shiftL;\n        }\n        prevNote = note;\n      }\n      if (stave !== null) {\n        const lineSpace = stave.options.spacing_between_lines_px;\n        const y = stave.getYForLine(props.line);\n        const accLine = Math.round(y / lineSpace * 2) / 2;\n        accList.push({ y, line: accLine, shift: shiftL, acc, lineSpace });\n      } else {\n        accList.push({ line: props.line, shift: shiftL, acc });\n      }\n    }\n\n    // Sort accidentals by line number.\n    accList.sort((a, b) => b.line - a.line);\n\n    // FIXME: Confusing name. Each object in this array has a property called `line`.\n    // So if this is a list of lines, you end up with: `line.line` which is very awkward.\n    const lineList = [];\n\n    // amount by which all accidentals must be shifted right or left for\n    // stem flipping, notehead shifting concerns.\n    let accShift = 0;\n    let previousLine = null;\n\n    // Create an array of unique line numbers (lineList) from accList\n    for (let i = 0; i < accList.length; i++) {\n      const acc = accList[i];\n\n      // if this is the first line, or a new line, add a lineList\n      if (previousLine === null || previousLine !== acc.line) {\n        lineList.push({\n          line: acc.line,\n          flatLine: true,\n          dblSharpLine: true,\n          numAcc: 0,\n          width: 0,\n        });\n      }\n      // if this accidental is not a flat, the accidental needs 3.0 lines lower\n      // clearance instead of 2.5 lines for b or bb.\n      // FIXME: Naming could use work. acc.acc is very awkward\n      if (acc.acc.type !== 'b' && acc.acc.type !== 'bb') {\n        lineList[lineList.length - 1].flatLine = false;\n      }\n\n      // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n      if (acc.acc.type !== '##') {\n        lineList[lineList.length - 1].dblSharpLine = false;\n      }\n\n      // Track how many accidentals are on this line:\n      lineList[lineList.length - 1].numAcc++;\n\n      // Track the total x_offset needed for this line which will be needed\n      // for formatting lines w/ multiple accidentals:\n\n      // width = accidental width + universal spacing between accidentals\n      lineList[lineList.length - 1].width += acc.acc.getWidth() + accidentalSpacing;\n\n      // if this accShift is larger, use it to keep first column accidentals in the same line\n      accShift = acc.shift > accShift ? acc.shift : accShift;\n\n      previousLine = acc.line;\n    }\n\n    // ### Place Accidentals in Columns\n    //\n    // Default to a classic triangular layout (middle accidental farthest left),\n    // but follow exceptions as outlined in G. Read's _Music Notation_ and\n    // Elaine Gould's _Behind Bars_.\n    //\n    // Additionally, this implements different vertical collision rules for\n    // flats (only need 2.5 lines clearance below) and double sharps (only\n    // need 2.5 lines of clearance above or below).\n    //\n    // Classic layouts and exception patterns are found in the 'tables.js'\n    // in 'Vex.Flow.accidentalColumnsTable'\n    //\n    // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n    // using as few columns as possible for the verticle structure.\n    //\n    // TODO (?): Allow column to be specified for an accidental at run-time?\n\n    let totalColumns = 0;\n\n    // establish the boundaries for a group of notes with clashing accidentals:\n    for (let i = 0; i < lineList.length; i++) {\n      let noFurtherConflicts = false;\n      const groupStart = i;\n      let groupEnd = i;\n\n      while (groupEnd + 1 < lineList.length && !noFurtherConflicts) {\n        // if this note conflicts with the next:\n        if (this.checkCollision(lineList[groupEnd], lineList[groupEnd + 1])) {\n          // include the next note in the group:\n          groupEnd++;\n        } else {\n          noFurtherConflicts = true;\n        }\n      }\n\n      // Gets an a line from the `lineList`, relative to the current group\n      const getGroupLine = (index) => lineList[groupStart + index];\n      const getGroupLines = (indexes) => indexes.map(getGroupLine);\n      const lineDifference = (indexA, indexB) => {\n        const [a, b] = getGroupLines([indexA, indexB]).map(item => item.line);\n        return a - b;\n      };\n\n      const notColliding = (...indexPairs) =>\n        indexPairs\n          .map(getGroupLines)\n          .every(lines => !this.checkCollision(...lines));\n\n      // Set columns for the lines in this group:\n      const groupLength = groupEnd - groupStart + 1;\n\n      // Set the accidental column for each line of the group\n      let endCase = this.checkCollision(lineList[groupStart], lineList[groupEnd]) ? 'a' : 'b';\n\n      switch (groupLength) {\n        case 3:\n          if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n            endCase = 'second_on_bottom';\n          }\n          break;\n        case 4:\n          if (notColliding([0, 2], [1, 3])) {\n            endCase = 'spaced_out_tetrachord';\n          }\n          break;\n        case 5:\n          if (endCase === 'b' && notColliding([1, 3])) {\n            endCase = 'spaced_out_pentachord';\n            if (notColliding([0, 2], [2, 4])) {\n              endCase = 'very_spaced_out_pentachord';\n            }\n          }\n          break;\n        case 6:\n          if (notColliding([0, 3], [1, 4], [2, 5])) {\n            endCase = 'spaced_out_hexachord';\n          }\n          if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n            endCase = 'very_spaced_out_hexachord';\n          }\n          break;\n        default:\n          break;\n      }\n\n      let groupMember;\n      let column;\n      // If the group contains more than seven members, use ascending parallel lines\n      // of accidentals, using as few columns as possible while avoiding collisions.\n      if (groupLength >= 7) {\n        // First, determine how many columns to use:\n        let patternLength = 2;\n        let collisionDetected = true;\n        while (collisionDetected === true) {\n          collisionDetected = false;\n          for (let line = 0; line + patternLength < lineList.length; line++) {\n            if (this.checkCollision(lineList[line], lineList[line + patternLength])) {\n              collisionDetected = true;\n              patternLength++;\n              break;\n            }\n          }\n        }\n        // Then, assign a column to each line of accidentals\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = ((groupMember - i) % patternLength) + 1;\n          lineList[groupMember].column = column;\n          totalColumns = (totalColumns > column) ? totalColumns : column;\n        }\n\n        // Otherwise, if the group contains fewer than seven members, use the layouts from\n        // the accidentalsColumnsTable housed in tables.js.\n      } else {\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = Flow.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n          lineList[groupMember].column = column;\n          totalColumns = (totalColumns > column) ? totalColumns : column;\n        }\n      }\n\n      // Increment i to the last note that was set, so that if a lower set of notes\n      // does not conflict at all with this group, it can have its own classic shape.\n      i = groupEnd;\n    }\n\n    // ### Convert Columns to x_offsets\n    //\n    // This keeps columns aligned, even if they have different accidentals within them\n    // which sometimes results in a larger x_offset than is an accidental might need\n    // to preserve the symmetry of the accidental shape.\n    //\n    // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n    // music with complex chord clusters.\n    //\n    // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n    // parallel columns.\n\n    // track each column's max width, which will be used as initial shift of later columns:\n    const columnWidths = [];\n    const columnXOffsets = [];\n    for (let i = 0; i <= totalColumns; i++) {\n      columnWidths[i] = 0;\n      columnXOffsets[i] = 0;\n    }\n\n    columnWidths[0] = accShift + leftShift;\n    columnXOffsets[0] = accShift + leftShift;\n\n    // Fill columnWidths with widest needed x-space;\n    // this is what keeps the columns parallel.\n    lineList.forEach(line => {\n      if (line.width > columnWidths[line.column]) columnWidths[line.column] = line.width;\n    });\n\n    for (let i = 1; i < columnWidths.length; i++) {\n      // this column's offset = this column's width + previous column's offset\n      columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n    }\n\n    const totalShift = columnXOffsets[columnXOffsets.length - 1];\n    // Set the xShift for each accidental according to column offsets:\n    let accCount = 0;\n    lineList.forEach(line => {\n      let lineWidth = 0;\n      const lastAccOnLine = accCount + line.numAcc;\n      // handle all of the accidentals on a given line:\n      for (accCount; accCount < lastAccOnLine; accCount++) {\n        const xShift = (columnXOffsets[line.column - 1] + lineWidth);\n        accList[accCount].acc.setXShift(xShift);\n        // keep track of the width of accidentals we've added so far, so that when\n        // we loop, we add space for them.\n        lineWidth += accList[accCount].acc.getWidth() + accidentalSpacing;\n        L('Line, accCount, shift: ', line.line, accCount, xShift);\n      }\n    });\n\n    // update the overall layout with the full width of the accidental shapes:\n    state.left_shift += totalShift;\n  }\n\n  // Helper function to determine whether two lines of accidentals collide vertically\n  static checkCollision(line1, line2) {\n    let clearance = line2.line - line1.line;\n    let clearanceRequired = 3;\n    // But less clearance is required for certain accidentals: b, bb and ##.\n    if (clearance > 0) { // then line 2 is on top\n      clearanceRequired = (line2.flatLine || line2.dblSharpLine) ? 2.5 : 3.0;\n      if (line1.dblSharpLine) clearance -= 0.5;\n    } else { // line 1 is on top\n      clearanceRequired = (line1.flatLine || line1.dblSharpLine) ? 2.5 : 3.0;\n      if (line2.dblSharpLine) clearance -= 0.5;\n    }\n    const collision = Math.abs(clearance) < clearanceRequired;\n    L('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n    return collision;\n  }\n\n  // Use this method to automatically apply accidentals to a set of `voices`.\n  // The accidentals will be remembered between all the voices provided.\n  // Optionally, you can also provide an initial `keySignature`.\n  static applyAccidentals(voices, keySignature) {\n    const tickPositions = [];\n    const tickNoteMap = {};\n\n    // Sort the tickables in each voice by their tick position in the voice\n    voices.forEach(voice => {\n      const tickPosition = new Fraction(0, 1);\n      const notes = voice.getTickables();\n      notes.forEach(note => {\n        if (note.shouldIgnoreTicks()) return;\n\n        const notesAtPosition = tickNoteMap[tickPosition.value()];\n\n        if (!notesAtPosition) {\n          tickPositions.push(tickPosition.value());\n          tickNoteMap[tickPosition.value()] = [note];\n        } else {\n          notesAtPosition.push(note);\n        }\n\n        tickPosition.add(note.getTicks());\n      });\n    });\n\n    const music = new Music();\n\n    // Default key signature is C major\n    if (!keySignature) keySignature = 'C';\n\n    // Get the scale map, which represents the current state of each pitch\n    const scaleMap = music.createScaleMap(keySignature);\n\n    tickPositions.forEach(tick => {\n      const notes = tickNoteMap[tick];\n\n      // Array to store all pitches that modified accidental states\n      // at this tick position\n      const modifiedPitches = [];\n\n      const processNote = (note) => {\n        if (note.isRest() || note.shouldIgnoreTicks()) return;\n\n        // Go through each key and determine if an accidental should be\n        // applied\n        note.keys.forEach((keyString, keyIndex) => {\n          const key = music.getNoteParts(keyString.split('/')[0]);\n\n          // Force a natural for every key without an accidental\n          const accidentalString = key.accidental || 'n';\n          const pitch = key.root + accidentalString;\n\n          // Determine if the current pitch has the same accidental\n          // as the scale state\n          const sameAccidental = scaleMap[key.root] === pitch;\n\n          // Determine if an identical pitch in the chord already\n          // modified the accidental state\n          const previouslyModified = modifiedPitches.indexOf(pitch) > -1;\n\n          // Add the accidental to the StaveNote\n          if (!sameAccidental || (sameAccidental && previouslyModified)) {\n            // Modify the scale map so that the root pitch has an\n            // updated state\n            scaleMap[key.root] = pitch;\n\n            // Create the accidental\n            const accidental = new Accidental(accidentalString);\n\n            // Attach the accidental to the StaveNote\n            note.addAccidental(keyIndex, accidental);\n\n            // Add the pitch to list of pitches that modified accidentals\n            modifiedPitches.push(pitch);\n          }\n        });\n\n        // process grace notes\n        note.getModifiers().forEach(modifier => {\n          if (modifier.getCategory() === 'gracenotegroups') {\n            modifier.getGraceNotes().forEach(processNote);\n          }\n        });\n      };\n\n      notes.forEach(processNote);\n    });\n  }\n\n  // Create accidental. `type` can be a value from the\n  // `Vex.Flow.accidentalCodes.accidentals` table in `tables.js`. For\n  // example: `#`, `##`, `b`, `n`, etc.\n  constructor(type = null) {\n    super();\n    this.setAttribute('type', 'Accidental');\n\n    L('New accidental: ', type);\n\n    this.note = null;\n    // The `index` points to a specific note in a chord.\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.LEFT;\n\n    this.render_options = {\n      // Font size for glyphs\n      font_scale: 38,\n\n      // Length of stroke across heads above or below the stave.\n      stroke_px: 3,\n\n      // Padding between accidental and parentheses on each side\n      parenLeftPadding: 2,\n      parenRightPadding: 2,\n    };\n\n    this.accidental = Flow.accidentalCodes(this.type);\n    if (!this.accidental) {\n      throw new Vex.RERR('ArgumentError', `Unknown accidental type: ${type}`);\n    }\n\n    // Cautionary accidentals have parentheses around them\n    this.cautionary = false;\n    this.parenLeft = null;\n    this.parenRight = null;\n\n    this.reset();\n  }\n\n  reset() {\n    const fontScale = this.render_options.font_scale;\n    this.glyph = new Glyph(this.accidental.code, fontScale);\n    this.glyph.setOriginX(1.0);\n\n    if (this.cautionary) {\n      this.parenLeft = new Glyph(Flow.accidentalCodes('{').code, fontScale);\n      this.parenRight = new Glyph(Flow.accidentalCodes('}').code, fontScale);\n      this.parenLeft.setOriginX(1.0);\n      this.parenRight.setOriginX(1.0);\n    }\n  }\n\n  getCategory() { return Accidental.CATEGORY; }\n\n  getWidth() {\n    const parenWidth = this.cautionary\n      ? (\n        getGlyphWidth(this.parenLeft) +\n        getGlyphWidth(this.parenRight) +\n        this.render_options.parenLeftPadding +\n        this.render_options.parenRightPadding\n      )\n      : 0;\n\n    return getGlyphWidth(this.glyph) + parenWidth;\n  }\n\n  // Attach this accidental to `note`, which must be a `StaveNote`.\n  setNote(note) {\n    if (!note) {\n      throw new Vex.RERR('ArgumentError', `Bad note value: ${note}`);\n    }\n\n    this.note = note;\n\n    // Accidentals attached to grace notes are rendered smaller.\n    if (this.note.getCategory() === 'gracenotes') {\n      this.render_options.font_scale = 25;\n      this.reset();\n    }\n  }\n\n  // If called, draws parenthesis around accidental.\n  setAsCautionary() {\n    this.cautionary = true;\n    this.render_options.font_scale = 28;\n    this.reset();\n    return this;\n  }\n\n  // Render accidental onto canvas.\n  draw() {\n    const {\n      context,\n      type, position, note, index, cautionary,\n      x_shift, y_shift,\n      glyph, parenLeft, parenRight,\n      render_options: { parenLeftPadding, parenRightPadding },\n    } = this;\n\n    this.checkContext();\n\n    if (!(note && (index != null))) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw accidental without a note and index.\");\n    }\n\n    // Figure out the start `x` and `y` coordinates for note and index.\n    const start = note.getModifierStartXY(position, index);\n    let accX = start.x + x_shift;\n    const accY = start.y + y_shift;\n    L('Rendering: ', type, accX, accY);\n\n    if (!cautionary) {\n      glyph.render(context, accX, accY);\n    } else {\n      // Render the accidental in parentheses.\n      parenRight.render(context, accX, accY);\n      accX -= getGlyphWidth(parenRight);\n      accX -= parenRightPadding;\n      accX -= this.accidental.parenRightPaddingAdjustment;\n      glyph.render(context, accX, accY);\n      accX -= getGlyphWidth(glyph);\n      accX -= parenLeftPadding;\n      parenLeft.render(context, accX, accY);\n    }\n\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2016\n//\n// ## Description\n//\n// This file implements `NoteSubGroup` which is used to format and\n// render notes as a `Modifier`\n// ex) ClefNote, TimeSigNote and BarNote.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Formatter } from './formatter';\nimport { Voice } from './voice';\n\nexport class NoteSubGroup extends Modifier {\n  static get CATEGORY() { return 'notesubgroup'; }\n\n  // Arrange groups inside a `ModifierContext`\n  static format(groups, state) {\n    if (!groups || groups.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < groups.length; ++i) {\n      const group = groups[i];\n      group.preFormat();\n      width += group.getWidth();\n    }\n\n    state.left_shift += width;\n    return true;\n  }\n\n  constructor(subNotes) {\n    super();\n    this.setAttribute('type', 'NoteSubGroup');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.LEFT;\n    this.subNotes = subNotes;\n    this.subNotes.forEach(subNote => { subNote.ignore_ticks = false; });\n    this.width = 0;\n    this.preFormatted = false;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }).setStrict(false);\n\n    this.voice.addTickables(this.subNotes);\n\n    return this;\n  }\n\n  getCategory() { return NoteSubGroup.CATEGORY; }\n\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  setNote(note) {\n    this.note = note;\n  }\n  setWidth(width) {\n    this.width = width;\n  }\n  getWidth() {\n    return this.width;\n  }\n\n  draw() {\n    this.checkContext();\n\n    const note = this.getNote();\n\n    if (!(note && (this.index !== null))) {\n      throw new Vex.RuntimeError('NoAttachedNote',\n        \"Can't draw notes without a parent note and parent note index.\");\n    }\n\n    this.setRendered();\n    this.alignSubNotesWithNote(this.subNotes, note); // Modifier function\n\n    // Draw notes\n    this.subNotes.forEach(subNote => subNote.setContext(this.context).draw());\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\nexport class StaveTie extends Element {\n  constructor(notes, text) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveTie');\n    this.notes = notes;\n    this.context = null;\n    this.text = text;\n    this.direction = null;\n\n    this.render_options = {\n      cp1: 8,      // Curve control point 1\n      cp2: 12,      // Curve control point 2\n      text_shift_x: 0,\n      first_x_shift: 0,\n      last_x_shift: 0,\n      y_shift: 7,\n      tie_spacing: 0,\n      font: { family: 'Arial', size: 10, style: '' },\n    };\n\n    this.font = this.render_options.font;\n    this.setNotes(notes);\n  }\n\n  setFont(font) { this.font = font; return this; }\n  setDirection(direction) { this.direction = direction; return this; }\n\n  /**\n   * Set the notes to attach this tie to.\n   *\n   * @param {!Object} notes The notes to tie up.\n   */\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Tie needs to have either first_note or last_note set.'\n      );\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new Vex.RuntimeError('BadArguments', 'Tied notes must have similar index sizes');\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial() {\n    return (!this.first_note || !this.last_note);\n  }\n\n  renderTie(params) {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.context;\n    let cp1 = this.render_options.cp1;\n    let cp2 = this.render_options.cp2;\n\n    if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n      cp1 = 2; cp2 = 8;\n    }\n\n    const first_x_shift = this.render_options.first_x_shift;\n    const last_x_shift = this.render_options.last_x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    for (let i = 0; i < this.first_indices.length; ++i) {\n      const cp_x = ((params.last_x_px + last_x_shift) +\n          (params.first_x_px + first_x_shift)) / 2;\n      const first_y_px = params.first_ys[this.first_indices[i]] + y_shift;\n      const last_y_px = params.last_ys[this.last_indices[i]] + y_shift;\n\n      if (isNaN(first_y_px) || isNaN(last_y_px)) {\n        throw new Vex.RERR('BadArguments', 'Bad indices for tie rendering.');\n      }\n\n      const top_cp_y = ((first_y_px + last_y_px) / 2) + (cp1 * params.direction);\n      const bottom_cp_y = ((first_y_px + last_y_px) / 2) + (cp2 * params.direction);\n\n      ctx.beginPath();\n      ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n      ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n      ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n      ctx.closePath();\n      ctx.fill();\n    }\n  }\n\n  renderText(first_x_px, last_x_px) {\n    if (!this.text) return;\n    let center_x = (first_x_px + last_x_px) / 2;\n    center_x -= this.context.measureText(this.text).width / 2;\n\n    this.context.save();\n    this.context.setFont(this.font.family, this.font.size, this.font.style);\n    this.context.fillText(\n      this.text,\n      center_x + this.render_options.text_shift_x,\n      (this.first_note || this.last_note).getStave().getYForTopText() - 1\n    );\n    this.context.restore();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n\n    let first_x_px;\n    let last_x_px;\n    let first_ys;\n    let last_ys;\n    let stem_direction;\n    if (first_note) {\n      first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n      stem_direction = first_note.getStemDirection();\n      first_ys = first_note.getYs();\n    } else {\n      first_x_px = last_note.getStave().getTieStartX();\n      first_ys = last_note.getYs();\n      this.first_indices = this.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n      stem_direction = last_note.getStemDirection();\n      last_ys = last_note.getYs();\n    } else {\n      last_x_px = first_note.getStave().getTieEndX();\n      last_ys = first_note.getYs();\n      this.last_indices = this.first_indices;\n    }\n\n    if (this.direction) {\n      stem_direction = this.direction;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: stem_direction,\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n","// / [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { StaveTie } from './stavetie';\n\nexport class TabTie extends StaveTie {\n  static createHammeron(notes) {\n    return new TabTie(notes, 'H');\n  }\n\n  static createPulloff(notes) {\n    return new TabTie(notes, 'P');\n  }\n\n  constructor(notes, text) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super(notes, text);\n    this.setAttribute('type', 'TabTie');\n\n    this.render_options.cp1 = 9;\n    this.render_options.cp2 = 11;\n    this.render_options.y_shift = 3;\n\n    this.setNotes(notes);\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n    let first_x_px;\n    let last_x_px;\n    let first_ys;\n    let last_ys;\n\n    if (first_note) {\n      first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n      first_ys = first_note.getYs();\n    } else {\n      first_x_px = last_note.getStave().getTieStartX();\n      first_ys = last_note.getYs();\n      this.first_indices = this.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n      last_ys = last_note.getYs();\n    } else {\n      last_x_px = first_note.getStave().getTieEndX();\n      last_ys = first_note.getYs();\n      this.last_indices = this.first_indices;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: -1, // Tab tie's are always face up.\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Formatter } from './formatter';\nimport { Voice } from './voice';\nimport { Beam } from './beam';\nimport { StaveTie } from './stavetie';\nimport { TabTie } from './tabtie';\nimport { StaveNote } from './stavenote';\n\n// To enable logging for this class. Set `Vex.Flow.GraceNoteGroup.DEBUG` to `true`.\nfunction L(...args) { if (GraceNoteGroup.DEBUG) Vex.L('Vex.Flow.GraceNoteGroup', args); }\n\nexport class GraceNoteGroup extends Modifier {\n  static get CATEGORY() { return 'gracenotegroups'; }\n\n  // Arrange groups inside a `ModifierContext`\n  static format(gracenote_groups, state) {\n    const group_spacing_stave = 4;\n    const group_spacing_tab = 0;\n\n    if (!gracenote_groups || gracenote_groups.length === 0) return false;\n\n    const group_list = [];\n    let prev_note = null;\n    let shiftL = 0;\n\n    for (let i = 0; i < gracenote_groups.length; ++i) {\n      const gracenote_group = gracenote_groups[i];\n      const note = gracenote_group.getNote();\n      const is_stavenote = (note.getCategory() === StaveNote.CATEGORY);\n      const spacing = (is_stavenote ? group_spacing_stave : group_spacing_tab);\n\n      if (is_stavenote && note !== prev_note) {\n        // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          const props_tmp = note.getKeyProps()[n];\n          shiftL = (props_tmp.displaced ? note.getExtraLeftPx() : shiftL);\n        }\n        prev_note = note;\n      }\n\n      group_list.push({ shift: shiftL, gracenote_group, spacing });\n    }\n\n    // If first note left shift in case it is displaced\n    let group_shift = group_list[0].shift;\n    let formatWidth;\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      gracenote_group.preFormat();\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      group_shift = Math.max(formatWidth, group_shift);\n    }\n\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      gracenote_group.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift));\n    }\n\n    state.left_shift += group_shift;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // `GraceNoteGroup` inherits from `Modifier` and is placed inside a\n  // `ModifierContext`.\n  constructor(grace_notes, show_slur) {\n    super();\n    this.setAttribute('type', 'GraceNoteGroup');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.LEFT;\n    this.grace_notes = grace_notes;\n    this.width = 0;\n\n    this.preFormatted = false;\n\n    this.show_slur = show_slur;\n    this.slur = null;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }).setStrict(false);\n\n    this.render_options = {\n      slur_y_shift: 0,\n    };\n\n    this.beams = [];\n\n    this.voice.addTickables(this.grace_notes);\n\n    return this;\n  }\n\n  getCategory() { return GraceNoteGroup.CATEGORY; }\n\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  beamNotes(grace_notes) {\n    grace_notes = grace_notes || this.grace_notes;\n    if (grace_notes.length > 1) {\n      const beam = new Beam(grace_notes);\n\n      beam.render_options.beam_width = 3;\n      beam.render_options.partial_beam_length = 4;\n\n      this.beams.push(beam);\n    }\n\n    return this;\n  }\n\n  setNote(note) {\n    this.note = note;\n  }\n  setWidth(width) {\n    this.width = width;\n  }\n  getWidth() {\n    return this.width;\n  }\n  getGraceNotes() {\n    return this.grace_notes;\n  }\n  draw() {\n    this.checkContext();\n\n    const note = this.getNote();\n\n    L('Drawing grace note group for:', note);\n\n    if (!(note && (this.index !== null))) {\n      throw new Vex.RuntimeError('NoAttachedNote',\n        \"Can't draw grace note without a parent note and parent note index.\");\n    }\n\n    this.setRendered();\n    this.alignSubNotesWithNote(this.getGraceNotes(), note); // Modifier function\n\n    // Draw notes\n    this.grace_notes.forEach(graceNote => {\n      graceNote.setContext(this.context).draw();\n    });\n\n    // Draw beam\n    this.beams.forEach(beam => {\n      beam.setContext(this.context).draw();\n    });\n\n    if (this.show_slur) {\n      // Create and draw slur\n      const is_stavenote = (this.getNote().getCategory() === StaveNote.CATEGORY);\n      const TieClass = (is_stavenote ? StaveTie : TabTie);\n\n      this.slur = new TieClass({\n        last_note: this.grace_notes[0],\n        first_note: note,\n        first_indices: [0],\n        last_indices: [0],\n      });\n\n      this.slur.render_options.cp2 = 12;\n      this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n      this.slur.setContext(this.context).draw();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// ## Description\n// This file implements the `Stroke` class which renders chord strokes\n// that can be arpeggiated, brushed, rasquedo, etc.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\n\nexport class Stroke extends Modifier {\n  static get CATEGORY() { return 'strokes'; }\n  static get Type() {\n    return {\n      BRUSH_DOWN: 1,\n      BRUSH_UP: 2,\n      ROLL_DOWN: 3, // Arpeggiated chord\n      ROLL_UP: 4,   // Arpeggiated chord\n      RASQUEDO_DOWN: 5,\n      RASQUEDO_UP: 6,\n      ARPEGGIO_DIRECTIONLESS: 7, // Arpeggiated chord without upwards or downwards arrow\n    };\n  }\n\n  // Arrange strokes inside `ModifierContext`\n  static format(strokes, state) {\n    const left_shift = state.left_shift;\n    const stroke_spacing = 0;\n\n    if (!strokes || strokes.length === 0) return this;\n\n    const strokeList = strokes.map((stroke) => {\n      const note = stroke.getNote();\n      if (note instanceof StaveNote) {\n        const { line, displaced } = note.getKeyProps()[stroke.getIndex()];\n        const shift = displaced ? note.getExtraLeftPx() : 0;\n        return { line, shift, stroke };\n      } else {\n        const { str: string } = note.getPositions()[stroke.getIndex()];\n        return { line: string, shift: 0, stroke };\n      }\n    });\n\n    const strokeShift = left_shift;\n\n    // There can only be one stroke .. if more than one, they overlay each other\n    const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\n      stroke.setXShift(strokeShift + shift);\n      return Math.max(stroke.getWidth() + stroke_spacing, xShift);\n    }, 0);\n\n    state.left_shift += xShift;\n    return true;\n  }\n\n  constructor(type, options) {\n    super();\n    this.setAttribute('type', 'Stroke');\n\n    this.note = null;\n    this.options = Vex.Merge({}, options);\n\n    // multi voice - span stroke across all voices if true\n    this.all_voices = 'all_voices' in this.options ? this.options.all_voices : true;\n\n    // multi voice - end note of stroke, set in draw()\n    this.note_end = null;\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.LEFT;\n\n    this.render_options = {\n      font_scale: 38,\n      stroke_px: 3,\n      stroke_spacing: 10,\n    };\n\n    this.font = {\n      family: 'serif',\n      size: 10,\n      weight: 'bold italic',\n    };\n\n    this.setXShift(0);\n    this.setWidth(10);\n  }\n\n  getCategory() { return Stroke.CATEGORY; }\n  getPosition() { return this.position; }\n  addEndNote(note) { this.note_end = note; return this; }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    if (!(this.note && (this.index != null))) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw stroke without a note and index.\");\n    }\n\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let ys = this.note.getYs();\n    let topY = start.y;\n    let botY = start.y;\n    const x = start.x - 5;\n    const line_space = this.note.stave.options.spacing_between_lines_px;\n\n    const notes = this.getModifierContext().getModifiers(this.note.getCategory());\n    for (let i = 0; i < notes.length; i++) {\n      ys = notes[i].getYs();\n      for (let n = 0; n < ys.length; n++) {\n        if (this.note === notes[i] || this.all_voices) {\n          topY = Vex.Min(topY, ys[n]);\n          botY = Vex.Max(botY, ys[n]);\n        }\n      }\n    }\n\n    let arrow;\n    let arrow_shift_x;\n    let arrow_y;\n    let text_shift_x;\n    let text_y;\n    switch (this.type) {\n      case Stroke.Type.BRUSH_DOWN:\n        arrow = 'vc3';\n        arrow_shift_x = -3;\n        arrow_y = topY - (line_space / 2) + 10;\n        botY += (line_space / 2);\n        break;\n      case Stroke.Type.BRUSH_UP:\n        arrow = 'v11';\n        arrow_shift_x = 0.5;\n        arrow_y = botY + (line_space / 2);\n        topY -= (line_space / 2);\n        break;\n      case Stroke.Type.ROLL_DOWN:\n      case Stroke.Type.RASQUEDO_DOWN:\n        arrow = 'vc3';\n        arrow_shift_x = -3;\n        text_shift_x = this.x_shift + arrow_shift_x - 2;\n        if (this.note instanceof StaveNote) {\n          topY += 1.5 * line_space;\n          if ((botY - topY) % 2 !== 0) {\n            botY += 0.5 * line_space;\n          } else {\n            botY += line_space;\n          }\n          arrow_y = topY - line_space;\n          text_y = botY + line_space + 2;\n        } else {\n          topY += 1.5 * line_space;\n          botY += line_space;\n          arrow_y = topY - 0.75 * line_space;\n          text_y = botY + 0.25 * line_space;\n        }\n        break;\n      case Stroke.Type.ROLL_UP:\n      case Stroke.Type.RASQUEDO_UP:\n        arrow = 'v52';\n        arrow_shift_x = -4;\n        text_shift_x = this.x_shift + arrow_shift_x - 1;\n        if (this.note instanceof StaveNote) {\n          arrow_y = line_space / 2;\n          topY += 0.5 * line_space;\n          if ((botY - topY) % 2 === 0) {\n            botY += line_space / 2;\n          }\n          arrow_y = botY + 0.5 * line_space;\n          text_y = topY - 1.25 * line_space;\n        } else {\n          topY += 0.25 * line_space;\n          botY += 0.5 * line_space;\n          arrow_y = botY + 0.25 * line_space;\n          text_y = topY - line_space;\n        }\n        break;\n      case Stroke.Type.ARPEGGIO_DIRECTIONLESS:\n        topY += 0.5 * line_space;\n        botY += line_space; // * 0.5 can lead to slight underlap instead of overlap sometimes\n        break;\n      default:\n        throw new Vex.RERR('InvalidType', `The stroke type ${this.type} does not exist`);\n    }\n\n    // Draw the stroke\n    if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n      this.context.fillRect(x + this.x_shift, topY, 1, botY - topY);\n    } else {\n      if (this.note instanceof StaveNote) {\n        for (let i = topY; i <= botY; i += line_space) {\n          Glyph.renderGlyph(\n            this.context,\n            x + this.x_shift - 4,\n            i,\n            this.render_options.font_scale,\n            'va3'\n          );\n        }\n      } else {\n        let i;\n        for (i = topY; i <= botY; i += 10) {\n          Glyph.renderGlyph(\n            this.context,\n            x + this.x_shift - 4,\n            i,\n            this.render_options.font_scale,\n            'va3'\n          );\n        }\n        if (this.type === Stroke.Type.RASQUEDO_DOWN) {\n          text_y = i + 0.25 * line_space;\n        }\n      }\n    }\n\n    if (this.type === Stroke.Type.ARPEGGIO_DIRECTIONLESS) {\n      return; // skip drawing arrow heads or text\n    }\n\n    // Draw the arrow head\n    Glyph.renderGlyph(\n      this.context,\n      x + this.x_shift + arrow_shift_x,\n      arrow_y,\n      this.render_options.font_scale,\n      arrow\n    );\n\n    // Draw the rasquedo \"R\"\n    if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\n      this.context.save();\n      this.context.setFont(this.font.family, this.font.size, this.font.weight);\n      this.context.fillText('R', x + text_shift_x, text_y);\n      this.context.restore();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// ## Description\n// This file implements the `StringNumber` class which renders string\n// number annotations beside notes.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Renderer } from './renderer';\nimport { StaveNote } from './stavenote';\n\nexport class StringNumber extends Modifier {\n  static get CATEGORY() { return 'stringnumber'; }\n\n  // ## Static Methods\n  // Arrange string numbers inside a `ModifierContext`\n  static format(nums, state) {\n    const left_shift = state.left_shift;\n    const right_shift = state.right_shift;\n    const num_spacing = 1;\n\n    if (!nums || nums.length === 0) return this;\n\n    const nums_list = [];\n    let prev_note = null;\n    let shift_left = 0;\n    let shift_right = 0;\n\n    let i;\n    let num;\n    let note;\n    let pos;\n    let props_tmp;\n    for (i = 0; i < nums.length; ++i) {\n      num = nums[i];\n      note = num.getNote();\n\n      for (i = 0; i < nums.length; ++i) {\n        num = nums[i];\n        note = num.getNote();\n        pos = num.getPosition();\n        const props = note.getKeyProps()[num.getIndex()];\n\n        if (note !== prev_note) {\n          for (let n = 0; n < note.keys.length; ++n) {\n            props_tmp = note.getKeyProps()[n];\n            if (left_shift === 0) {\n              shift_left = props_tmp.displaced ? note.getExtraLeftPx() : shift_left;\n            }\n            if (right_shift === 0) {\n              shift_right = props_tmp.displaced ? note.getExtraRightPx() : shift_right;\n            }\n          }\n          prev_note = note;\n        }\n\n        nums_list.push({\n          pos,\n          note,\n          num,\n          line: props.line,\n          shiftL: shift_left,\n          shiftR: shift_right,\n        });\n      }\n    }\n\n    // Sort string numbers by line number.\n    nums_list.sort((a, b) => b.line - a.line);\n\n    // TODO: This variable never gets assigned to anything. Is that a bug or can this be removed?\n    let num_shiftL = 0; // eslint-disable-line\n    let num_shiftR = 0;\n    let x_widthL = 0;\n    let x_widthR = 0;\n    let last_line = null;\n    let last_note = null;\n    for (i = 0; i < nums_list.length; ++i) {\n      let num_shift = 0;\n      note = nums_list[i].note;\n      pos = nums_list[i].pos;\n      num = nums_list[i].num;\n      const line = nums_list[i].line;\n      const shiftL = nums_list[i].shiftL;\n      const shiftR = nums_list[i].shiftR;\n\n      // Reset the position of the string number every line.\n      if (line !== last_line || note !== last_note) {\n        num_shiftL = left_shift + shiftL;\n        num_shiftR = right_shift + shiftR;\n      }\n\n      const num_width = num.getWidth() + num_spacing;\n      if (pos === Modifier.Position.LEFT) {\n        num.setXShift(left_shift);\n        num_shift = shift_left + num_width; // spacing\n        x_widthL = (num_shift > x_widthL) ? num_shift : x_widthL;\n      } else if (pos === Modifier.Position.RIGHT) {\n        num.setXShift(num_shiftR);\n        num_shift += num_width; // spacing\n        x_widthR = (num_shift > x_widthR) ? num_shift : x_widthR;\n      }\n      last_line = line;\n      last_note = note;\n    }\n\n    state.left_shift += x_widthL;\n    state.right_shift += x_widthR;\n    return true;\n  }\n\n  constructor(number) {\n    super();\n    this.setAttribute('type', 'StringNumber');\n\n    this.note = null;\n    this.last_note = null;\n    this.index = null;\n    this.string_number = number;\n    this.setWidth(20); // ???\n    this.position = Modifier.Position.ABOVE; // Default position above stem or note head\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.x_offset = 0; // Horizontal offset from default\n    this.y_offset = 0; // Vertical offset from default\n    this.dashed = true; // true - draw dashed extension  false - no extension\n    this.leg = Renderer.LineEndType.NONE;   // draw upward/downward leg at the of extension line\n    this.radius = 8;\n    this.font = {\n      family: 'sans-serif',\n      size: 10,\n      weight: 'bold',\n    };\n  }\n  getCategory() { return StringNumber.CATEGORY; }\n  getNote() { return this.note; }\n  setNote(note) { this.note = note; return this; }\n  getIndex() { return this.index; }\n  setIndex(index) { this.index = index; return this; }\n\n  setLineEndType(leg) {\n    if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\n      this.leg = leg;\n    }\n    return this;\n  }\n\n  setStringNumber(number) { this.string_number = number; return this; }\n  setOffsetX(x) { this.x_offset = x; return this; }\n  setOffsetY(y) { this.y_offset = y; return this; }\n  setLastNote(note) { this.last_note = note; return this; }\n  setDashed(dashed) { this.dashed = dashed; return this; }\n\n  draw() {\n    const ctx = this.checkContext();\n    if (!(this.note && (this.index != null))) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\n    }\n    this.setRendered();\n\n    const line_space = this.note.stave.options.spacing_between_lines_px;\n\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let dot_x = (start.x + this.x_shift + this.x_offset);\n    let dot_y = start.y + this.y_shift + this.y_offset;\n\n    switch (this.position) {\n      case Modifier.Position.ABOVE:\n      case Modifier.Position.BELOW: {\n        const stem_ext = this.note.getStemExtents();\n        let top = stem_ext.topY;\n        let bottom = stem_ext.baseY + 2;\n\n        if (this.note.stem_direction === StaveNote.STEM_DOWN) {\n          top = stem_ext.baseY;\n          bottom = stem_ext.topY - 2;\n        }\n\n        if (this.position === Modifier.Position.ABOVE) {\n          dot_y = this.note.hasStem()\n            ? top - (line_space * 1.75)\n            : start.y - (line_space * 1.75);\n        } else {\n          dot_y = this.note.hasStem()\n            ? bottom + (line_space * 1.5)\n            : start.y + (line_space * 1.75);\n        }\n\n        dot_y += this.y_shift + this.y_offset;\n\n        break;\n      } case Modifier.Position.LEFT:\n        dot_x -= (this.radius / 2) + 5;\n        break;\n      case Modifier.Position.RIGHT:\n        dot_x += (this.radius / 2) + 6;\n        break;\n      default:\n        throw new Vex.RERR(\n          'InvalidPosition', `The position ${this.position} is invalid`\n        );\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\n    ctx.lineWidth = 1.5;\n    ctx.stroke();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const x = dot_x - ctx.measureText(this.string_number).width / 2;\n    ctx.fillText('' + this.string_number, x, dot_y + 4.5);\n\n    if (this.last_note != null) {\n      const end = this.last_note.getStemX() - this.note.getX() + 5;\n      ctx.strokeStyle = '#000000';\n      ctx.lineCap = 'round';\n      ctx.lineWidth = 0.6;\n      if (this.dashed) {\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\n      } else {\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\n      }\n\n      let len;\n      let pattern;\n      switch (this.leg) {\n        case Renderer.LineEndType.UP:\n          len = -10;\n          pattern = this.dashed ? [3, 3] : [3, 0];\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n          break;\n        case Renderer.LineEndType.DOWN:\n          len = 10;\n          pattern = this.dashed ? [3, 3] : [3, 0];\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n          break;\n        default:\n          break;\n      }\n    }\n\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns.\n//\n// ## Description\n//\n// This file implements articulations and accents as modifiers that can be\n// attached to notes. The complete list of articulations is available in\n// `tables.js` under `Vex.Flow.articulationCodes`.\n//\n// See `tests/articulation_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\n\n// To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`.\nfunction L(...args) { if (Articulation.DEBUG) Vex.L('Vex.Flow.Articulation', args); }\n\nconst { ABOVE, BELOW } = Modifier.Position;\n\nconst roundToNearestHalf = (mathFn, value) => mathFn(value / 0.5) * 0.5;\n\n// This includes both staff and ledger lines\nconst isWithinLines = (line, position) => position === ABOVE ? line <= 5 : line >= 1;\n\nconst getRoundingFunction = (line, position) => {\n  if (isWithinLines(line, position)) {\n    if (position === ABOVE) {\n      return Math.ceil;\n    } else {\n      return Math.floor;\n    }\n  } else {\n    return Math.round;\n  }\n};\n\nconst snapLineToStaff = (canSitBetweenLines, line, position, offsetDirection) => {\n  // Initially, snap to nearest staff line or space\n  const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n  const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n  const onStaffLine = snappedLine % 1 === 0;\n\n  if (canSnapToStaffSpace && onStaffLine) {\n    const HALF_STAFF_SPACE = 0.5;\n    return snappedLine + (HALF_STAFF_SPACE * -offsetDirection);\n  } else {\n    return snappedLine;\n  }\n};\n\nconst isStaveNote = (note) => {\n  const noteCategory = note.getCategory();\n  return noteCategory === 'stavenotes' || noteCategory === 'gracenotes';\n};\n\nconst getTopY = (note, textLine) => {\n  const stave = note.getStave();\n  const stemDirection = note.getStemDirection();\n  const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n\n  if (isStaveNote(note)) {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return stemBaseY;\n      }\n    } else {\n      return Math.min(...note.getYs());\n    }\n  } else if (note.getCategory() === 'tabnotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return stave.getYForTopText(textLine);\n      }\n    } else {\n      return stave.getYForTopText(textLine);\n    }\n  } else {\n    throw new Vex.RERR(\n      'UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes'\n    );\n  }\n};\n\nconst getBottomY = (note, textLine) => {\n  const stave = note.getStave();\n  const stemDirection = note.getStemDirection();\n  const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n\n  if (isStaveNote(note)) {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemBaseY;\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return Math.max(...note.getYs());\n    }\n  } else if (note.getCategory() === 'tabnotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stave.getYForBottomText(textLine);\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return stave.getYForBottomText(textLine);\n    }\n  } else {\n    throw new Vex.RERR(\n      'UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes'\n    );\n  }\n};\n\n// Gets the initial offset of the articulation from the y value of the starting position.\n// This is required because the top/bottom text positions already have spacing applied to\n// provide a \"visually pleasent\" default position. However the y values provided from\n// the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n// normalizes this asymmetry.\nconst getInitialOffset = (note, position) => {\n  const isOnStemTip = (\n    (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n    (position === BELOW && note.getStemDirection() === Stem.DOWN)\n  );\n\n  if (isStaveNote(note)) {\n    if (note.hasStem() && isOnStemTip) {\n      return 0.5;\n    } else {\n      // this amount is larger than the stem-tip offset because we start from\n      // the center of the notehead\n      return 1;\n    }\n  } else {\n    if (note.hasStem() && isOnStemTip) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n};\n\nexport class Articulation extends Modifier {\n  static get CATEGORY() { return 'articulations'; }\n  static get INITIAL_OFFSET() { return -0.5; }\n\n  // FIXME:\n  // Most of the complex formatting logic (ie: snapping to space) is\n  // actually done in .render(). But that logic belongs in this method.\n  //\n  // Unfortunately, this isn't possible because, by this point, stem lengths\n  // have not yet been finalized. Finalized stem lengths are required to determine the\n  // initial position of any stem-side articulation.\n  //\n  // This indicates that all objects should have their stave set before being\n  // formatted. It can't be an optional if you want accurate vertical positioning.\n  // Consistently positioned articulations that play nice with other modifiers\n  // won't be possible until we stop relying on render-time formatting.\n  //\n  // Ideally, when this function has completed, the vertical articulation positions\n  // should be ready to render without further adjustment. But the current state\n  // is far from this ideal.\n  static format(articulations, state) {\n    if (!articulations || articulations.length === 0) return false;\n\n    const isAbove = artic => artic.getPosition() === ABOVE;\n    const isBelow = artic => artic.getPosition() === BELOW;\n    const margin = 0.5;\n    const getIncrement = (articulation, line, position) =>\n      roundToNearestHalf(\n        getRoundingFunction(line, position),\n        (articulation.glyph.getMetrics().height / 10) + margin\n      );\n\n    articulations\n      .filter(isAbove)\n      .forEach(articulation => {\n        articulation.setTextLine(state.top_text_line);\n        state.top_text_line += getIncrement(articulation, state.top_text_line, ABOVE);\n      });\n\n    articulations\n      .filter(isBelow)\n      .forEach(articulation => {\n        articulation.setTextLine(state.text_line);\n        state.text_line += getIncrement(articulation, state.text_line, BELOW);\n      });\n\n    const width = articulations\n      .map(articulation => articulation.getWidth())\n      .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  static easyScoreHook({ articulations }, note, builder) {\n    if (!articulations) return;\n\n    const articNameToCode = {\n      staccato: 'a.',\n      tenuto: 'a-',\n    };\n\n    articulations\n      .split(',')\n      .map(articString => articString.trim().split('.'))\n      .map(([name, position]) => {\n        const artic = { type: articNameToCode[name] };\n        if (position) artic.position = Modifier.PositionString[position];\n        return builder.getFactory().Articulation(artic);\n      })\n      .map(artic => note.addModifier(0, artic));\n  }\n\n  // Create a new articulation of type `type`, which is an entry in\n  // `Vex.Flow.articulationCodes` in `tables.js`.\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Articulation');\n\n    this.note = null;\n    this.index = null;\n    this.type = type;\n    this.position = BELOW;\n    this.render_options = {\n      font_scale: 38,\n    };\n\n    this.articulation = Flow.articulationCodes(this.type);\n    if (!this.articulation) {\n      throw new Vex.RERR('ArgumentError', `Articulation not found: ${this.type}`);\n    }\n\n    this.glyph = new Glyph(this.articulation.code, this.render_options.font_scale);\n\n    this.setWidth(this.glyph.getMetrics().width);\n  }\n\n  getCategory() { return Articulation.CATEGORY; }\n\n  // Render articulation in position next to note.\n  draw() {\n    const {\n      note, index, position, glyph,\n      articulation: { between_lines: canSitBetweenLines },\n      text_line: textLine,\n      context: ctx,\n    } = this;\n\n    this.checkContext();\n\n    if (!note || index == null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Articulation without a note and index.\");\n    }\n\n    this.setRendered();\n\n    const stave = note.getStave();\n    const staffSpace = stave.getSpacingBetweenLines();\n    const isTab = note.getCategory() === 'tabnotes';\n\n    // Articulations are centered over/under the note head.\n    const { x } = note.getModifierStartXY(position, index);\n    const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n\n    const initialOffset = getInitialOffset(note, position);\n\n    let y = {\n      [ABOVE]: () => {\n        glyph.setOrigin(0.5, 1);\n        const y = getTopY(note, textLine) - ((textLine + initialOffset) * staffSpace);\n        return shouldSitOutsideStaff\n          ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y)\n          : y;\n      },\n      [BELOW]: () => {\n        glyph.setOrigin(0.5, 0);\n        const y = getBottomY(note, textLine) + ((textLine + initialOffset) * staffSpace);\n        return shouldSitOutsideStaff\n          ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y)\n          : y;\n      },\n    }[position]();\n\n    if (!isTab) {\n      const offsetDirection = position === ABOVE ? -1 : +1;\n      const noteLine = isTab ? note.positions[index].str : note.getKeyProps()[index].line;\n      const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n      const articLine = distanceFromNote + noteLine;\n      const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n\n      if (isWithinLines(snappedLine, position)) glyph.setOrigin(0.5, 0.5);\n\n      y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection;\n    }\n\n    L(`Rendering articulation at (x: ${x}, y: ${y})`);\n\n    glyph.render(ctx, x, y);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\n\nimport { Vex } from './vex';\nimport { Tickable } from './tickable';\nimport { Fraction } from './fraction';\n\nexport class TickContext extends Tickable {\n  static getNextContext(tContext) {\n    const contexts = tContext.tContexts;\n    const index = contexts.indexOf(tContext);\n\n    return contexts[index + 1];\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'TickContext');\n    this.currentTick = new Fraction(0, 1);\n    this.maxTicks = new Fraction(0, 1);\n    this.minTicks = null;\n    this.padding = 3;     // padding on each side (width += padding * 2)\n    this.x = 0;\n    this.xBase = 0;        // base x position without xOffset\n    this.xOffset = 0;      // xBase and xOffset are an alternative way to describe x (x = xB + xO)\n    this.tickables = [];   // Notes, tabs, chords, lyrics.\n    this.notePx = 0;       // width of widest note in this context\n    this.extraLeftPx = 0;  // Extra left pixels for modifers & displace notes\n    this.extraRightPx = 0; // Extra right pixels for modifers & displace notes\n    this.tContexts = [];   // Parent array of tick contexts\n  }\n\n  getX() { return this.x; }\n  setX(x) { this.x = x; this.xBase = x; this.xOffset = 0; return this; }\n  getXBase() { return this.xBase; } // use of xBase and xOffset is optional, avoids offset creep\n  setXBase(xBase) { this.xBase = xBase; this.x = xBase + this.xOffset; }\n  getXOffset() { return this.xOffset; }\n  setXOffset(xOffset) { this.xOffset = xOffset; this.x = this.xBase + xOffset; }\n  getWidth() { return this.width + (this.padding * 2); }\n  setPadding(padding) { this.padding = padding; return this; }\n  getMaxTicks() { return this.maxTicks; }\n  getMinTicks() { return this.minTicks; }\n  getTickables() { return this.tickables; }\n\n  getCenterAlignedTickables() {\n    return this.tickables.filter(tickable => tickable.isCenterAligned());\n  }\n\n  // Get widths context, note and left/right modifiers for formatting\n  getMetrics() {\n    const { width, notePx, extraLeftPx, extraRightPx } = this;\n    return { width, notePx, extraLeftPx, extraRightPx };\n  }\n\n  getCurrentTick() { return this.currentTick; }\n  setCurrentTick(tick) {\n    this.currentTick = tick;\n    this.preFormatted = false;\n  }\n\n  // ### DEPRECATED ###\n  // Get left & right pixels used for modifiers. THIS METHOD IS DEPRECATED. Use\n  // the getMetrics() method instead!\n  getExtraPx() {\n    let left_shift = 0;\n    let right_shift = 0;\n    let extraLeftPx = 0;\n    let extraRightPx = 0;\n    for (let i = 0; i < this.tickables.length; i++) {\n      extraLeftPx = Math.max(this.tickables[i].extraLeftPx || 0, extraLeftPx);\n      extraRightPx = Math.max(this.tickables[i].extraRightPx || 0, extraRightPx);\n      const mContext = this.tickables[i].modifierContext;\n      if (mContext && mContext != null) {\n        left_shift = Math.max(left_shift, mContext.state.left_shift);\n        right_shift = Math.max(right_shift, mContext.state.right_shift);\n      }\n    }\n    return {\n      left: left_shift,\n      right: right_shift,\n      extraLeft: extraLeftPx,\n      extraRight: extraRightPx,\n    };\n  }\n\n  addTickable(tickable) {\n    if (!tickable) {\n      throw new Vex.RERR('BadArgument', 'Invalid tickable added.');\n    }\n\n    if (!tickable.shouldIgnoreTicks()) {\n      this.ignore_ticks = false;\n\n      const ticks = tickable.getTicks();\n\n      if (ticks.greaterThan(this.maxTicks)) {\n        this.maxTicks = ticks.clone();\n      }\n\n      if (this.minTicks == null) {\n        this.minTicks = ticks.clone();\n      } else if (ticks.lessThan(this.minTicks)) {\n        this.minTicks = ticks.clone();\n      }\n    }\n\n    tickable.setTickContext(this);\n    this.tickables.push(tickable);\n    this.preFormatted = false;\n    return this;\n  }\n\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n      tickable.preFormat();\n      const metrics = tickable.getMetrics();\n\n      // Maintain max extra pixels from all tickables in the context\n      this.extraLeftPx = Math.max(this.extraLeftPx, metrics.extraLeftPx + metrics.modLeftPx);\n      this.extraRightPx = Math.max(this.extraRightPx, metrics.extraRightPx + metrics.modRightPx);\n\n      // Maintain the widest note for all tickables in the context\n      this.notePx = Math.max(this.notePx, metrics.noteWidth);\n\n      // Recalculate the tick context total width\n      this.width = this.notePx + this.extraLeftPx + this.extraRightPx;\n    }\n\n    return this;\n  }\n\n  postFormat() {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements ornaments as modifiers that can be\n// attached to notes. The complete list of ornaments is available in\n// `tables.js` under `Vex.Flow.ornamentCodes`.\n//\n// See `tests/ornament_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { TickContext } from './tickcontext';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`.\nfunction L(...args) { if (Ornament.DEBUG) Vex.L('Vex.Flow.Ornament', args); }\n\nexport class Ornament extends Modifier {\n  static get CATEGORY() { return 'ornaments'; }\n\n  // ## Static Methods\n  // Arrange ornaments inside `ModifierContext`\n  static format(ornaments, state) {\n    if (!ornaments || ornaments.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < ornaments.length; ++i) {\n      const ornament = ornaments[i];\n      const increment = 2;\n\n      width = Math.max(ornament.getWidth(), width);\n\n      if (ornament.getPosition() === Modifier.Position.ABOVE) {\n        ornament.setTextLine(state.top_text_line);\n        state.top_text_line += increment;\n      } else {\n        ornament.setTextLine(state.text_line);\n        state.text_line += increment;\n      }\n    }\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  // Create a new ornament of type `type`, which is an entry in\n  // `Vex.Flow.ornamentCodes` in `tables.js`.\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Ornament');\n\n    this.note = null;\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.ABOVE;\n    this.delayed = false;\n\n    this.accidentalUpper = null;\n    this.accidentalLower = null;\n\n    this.render_options = {\n      font_scale: 38,\n      accidentalLowerPadding: 3,\n      accidentalUpperPadding: 3,\n    };\n\n    this.ornament = Flow.ornamentCodes(this.type);\n    if (!this.ornament) {\n      throw new Vex.RERR('ArgumentError', `Ornament not found: '${this.type}'`);\n    }\n\n    this.glyph = new Glyph(this.ornament.code, this.render_options.font_scale);\n    this.glyph.setOrigin(0.5, 1.0); // FIXME: SMuFL won't require a vertical origin shift\n  }\n\n  getCategory() { return Ornament.CATEGORY; }\n\n  // Set whether the ornament is to be delayed\n  setDelayed(delayed) { this.delayed = delayed; return this; }\n\n  // Set the upper accidental for the ornament\n  setUpperAccidental(accid) {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalUpper = new Glyph(Flow.accidentalCodes(accid).code, scale);\n    this.accidentalUpper.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  // Set the lower accidental for the ornament\n  setLowerAccidental(accid) {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalLower = new Glyph(Flow.accidentalCodes(accid).code, scale);\n    this.accidentalLower.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  // Render ornament in position next to note.\n  draw() {\n    this.checkContext();\n\n    if (!this.note || this.index == null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Ornament without a note and index.\");\n    }\n\n    this.setRendered();\n\n    const ctx = this.context;\n    const stemDir = this.note.getStemDirection();\n    const stave = this.note.getStave();\n\n    // Get stem extents\n    const stemExtents = this.note.getStem().getExtents();\n    let y = stemDir === StaveNote.STEM_DOWN ? stemExtents.baseY : stemExtents.topY;\n\n    // TabNotes don't have stems attached to them. Tab stems are rendered\n    // outside the stave.\n    if (this.note.getCategory() === 'tabnotes') {\n      if (this.note.hasStem()) {\n        if (stemDir === StaveNote.STEM_DOWN) {\n          y = stave.getYForTopText(this.text_line);\n        }\n      } else { // Without a stem\n        y = stave.getYForTopText(this.text_line);\n      }\n    }\n\n    const isPlacedOnNoteheadSide = stemDir === StaveNote.STEM_DOWN;\n    const spacing = stave.getSpacingBetweenLines();\n    let lineSpacing = 1;\n\n    // Beamed stems are longer than quarter note stems, adjust accordingly\n    if (!isPlacedOnNoteheadSide && this.note.beam) {\n      lineSpacing += 0.5;\n    }\n\n    const totalSpacing = spacing * (this.text_line + lineSpacing);\n    const glyphYBetweenLines = y - totalSpacing;\n\n    // Get initial coordinates for the modifier position\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let glyphX = start.x;\n    let glyphY = Math.min(stave.getYForTopText(this.text_line), glyphYBetweenLines);\n    glyphY += this.y_shift;\n\n    // Ajdust x position if ornament is delayed\n    if (this.delayed) {\n      let delayXShift = 0;\n      if (this.delayXShift !== undefined) {\n        delayXShift = this.delayXShift;\n      } else {\n        delayXShift += this.glyph.getMetrics().width / 2;\n        const nextContext = TickContext.getNextContext(this.note.getTickContext());\n        if (nextContext) {\n          delayXShift += (nextContext.getX() - glyphX) * 0.5;\n        } else {\n          delayXShift += (stave.x + stave.width - glyphX) * 0.5;\n        }\n        this.delayXShift = delayXShift;\n      }\n      glyphX += delayXShift;\n    }\n\n    L('Rendering ornament: ', this.ornament, glyphX, glyphY);\n\n    if (this.accidentalLower) {\n      this.accidentalLower.render(ctx, glyphX, glyphY);\n      glyphY -= this.accidentalLower.getMetrics().height;\n      glyphY -= this.render_options.accidentalLowerPadding;\n    }\n\n    this.glyph.render(ctx, glyphX, glyphY);\n    glyphY -= this.glyph.getMetrics().height;\n\n    if (this.accidentalUpper) {\n      glyphY -= this.render_options.accidentalUpperPadding;\n      this.accidentalUpper.render(ctx, glyphX, glyphY);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements text annotations as modifiers that can be attached to\n// notes.\n//\n// See `tests/annotation_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\n\n// To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`.\nfunction L(...args) { if (Annotation.DEBUG) Vex.L('Vex.Flow.Annotation', args); }\n\nexport class Annotation extends Modifier {\n  static get CATEGORY() { return 'annotations'; }\n\n  // Text annotations can be positioned and justified relative to the note.\n  static get Justify() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n      CENTER_STEM: 4,\n    };\n  }\n\n  static get JustifyString() {\n    return {\n      left: Annotation.Justify.LEFT,\n      right: Annotation.Justify.RIGHT,\n      center: Annotation.Justify.CENTER,\n      centerStem: Annotation.Justify.CENTER_STEM,\n    };\n  }\n\n  static get VerticalJustify() {\n    return {\n      TOP: 1,\n      CENTER: 2,\n      BOTTOM: 3,\n      CENTER_STEM: 4,\n    };\n  }\n\n  static get VerticalJustifyString() {\n    return {\n      above: Annotation.VerticalJustify.TOP,\n      top: Annotation.VerticalJustify.TOP,\n      below: Annotation.VerticalJustify.BOTTOM,\n      bottom: Annotation.VerticalJustify.BOTTOM,\n      center: Annotation.VerticalJustify.CENTER,\n      centerStem: Annotation.VerticalJustify.CENTER_STEM,\n    };\n  }\n\n  // Arrange annotations within a `ModifierContext`\n  static format(annotations, state) {\n    if (!annotations || annotations.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < annotations.length; ++i) {\n      const annotation = annotations[i];\n      width = Math.max(annotation.getWidth(), width);\n      if (annotation.getPosition() === Modifier.Position.ABOVE) {\n        annotation.setTextLine(state.top_text_line);\n        state.top_text_line++;\n      } else {\n        annotation.setTextLine(state.text_line);\n        state.text_line++;\n      }\n    }\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // Annotations inherit from `Modifier` and is positioned correctly when\n  // in a `ModifierContext`.\n  // Create a new `Annotation` with the string `text`.\n  constructor(text) {\n    super();\n    this.setAttribute('type', 'Annotation');\n\n    this.note = null;\n    this.index = null;\n    this.text = text;\n    this.justification = Annotation.Justify.CENTER;\n    this.vert_justification = Annotation.VerticalJustify.TOP;\n    this.font = {\n      family: 'Arial',\n      size: 10,\n      weight: '',\n    };\n\n    // The default width is calculated from the text.\n    this.setWidth(Flow.textWidth(text));\n  }\n\n  getCategory() { return Annotation.CATEGORY; }\n\n  // Set font family, size, and weight. E.g., `Arial`, `10pt`, `Bold`.\n  setFont(family, size, weight) {\n    this.font = { family, size, weight };\n    return this;\n  }\n\n  // Set vertical position of text (above or below stave). `just` must be\n  // a value in `Annotation.VerticalJustify`.\n  setVerticalJustification(just) {\n    this.vert_justification = typeof (just) === 'string'\n      ? Annotation.VerticalJustifyString[just]\n      : just;\n    return this;\n  }\n\n  // Get and set horizontal justification. `justification` is a value in\n  // `Annotation.Justify`.\n  getJustification() { return this.justification; }\n  setJustification(just) {\n    this.justification = typeof (just) === 'string'\n      ? Annotation.JustifyString[just]\n      : just;\n    return this;\n  }\n\n  // Render text beside the note.\n  draw() {\n    this.checkContext();\n\n    if (!this.note) {\n      throw new Vex.RERR(\n        'NoNoteForAnnotation', \"Can't draw text annotation without an attached note.\"\n      );\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(Modifier.Position.ABOVE,\n      this.index);\n\n    // We're changing context parameters. Save current state.\n    this.context.save();\n    this.context.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = this.context.measureText(this.text).width;\n\n    // Estimate text height to be the same as the width of an 'm'.\n    //\n    // This is a hack to work around the inability to measure text height\n    // in HTML5 Canvas (and SVG).\n    const text_height = this.context.measureText('m').width;\n    let x;\n    let y;\n\n    if (this.justification === Annotation.Justify.LEFT) {\n      x = start.x;\n    } else if (this.justification === Annotation.Justify.RIGHT) {\n      x = start.x - text_width;\n    } else if (this.justification === Annotation.Justify.CENTER) {\n      x = start.x - text_width / 2;\n    } else /* CENTER_STEM */ {\n      x = this.note.getStemX() - text_width / 2;\n    }\n\n    let stem_ext;\n    let spacing;\n    const has_stem = this.note.hasStem();\n    const stave = this.note.getStave();\n\n    // The position of the text varies based on whether or not the note\n    // has a stem.\n    if (has_stem) {\n      stem_ext = this.note.getStem().getExtents();\n      spacing = stave.getSpacingBetweenLines();\n    }\n\n    if (this.vert_justification === Annotation.VerticalJustify.BOTTOM) {\n      // HACK: We need to compensate for the text's height since its origin\n      // is bottom-right.\n      y = stave.getYForBottomText(this.text_line + Flow.TEXT_HEIGHT_OFFSET_HACK);\n      if (has_stem) {\n        const stem_base = (this.note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY);\n        y = Math.max(y, stem_base + (spacing * (this.text_line + 2)));\n      }\n    } else if (this.vert_justification === Annotation.VerticalJustify.CENTER) {\n      const yt = this.note.getYForTopText(this.text_line) - 1;\n      const yb = stave.getYForBottomText(this.text_line);\n      y = yt + (yb - yt) / 2 + text_height / 2;\n    } else if (this.vert_justification === Annotation.VerticalJustify.TOP) {\n      y = Math.min(stave.getYForTopText(this.text_line), this.note.getYs()[0] - 10);\n      if (has_stem) {\n        y = Math.min(y, (stem_ext.topY - 5) - (spacing * this.text_line));\n      }\n    } else /* CENTER_STEM */ {\n      const extents = this.note.getStemExtents();\n      y = extents.topY + (extents.baseY - extents.topY) / 2 +\n        text_height / 2;\n    }\n\n    L('Rendering annotation: ', this.text, x, y);\n    this.context.fillText(this.text, x, y);\n    this.context.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements tablature bends.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\n/**\n   @param text Text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n   @param release If true, render a release. (DEPRECATED)\n   @param phrase If set, ignore \"text\" and \"release\", and use the more\n                 sophisticated phrase specified.\n\n   Example of a phrase:\n\n     [{\n       type: UP,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: DOWN,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: UP,\n       text: \"half\"\n       width: 8;\n     },\n     {\n       type: UP,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: DOWN,\n       text: \"1 1/2\"\n       width: 8;\n     }]\n */\nexport class Bend extends Modifier {\n  static get CATEGORY() { return 'bends'; }\n\n  static get UP() {\n    return 0;\n  }\n  static get DOWN() {\n    return 1;\n  }\n\n  // ## Static Methods\n  // Arrange bends in `ModifierContext`\n  static format(bends, state) {\n    if (!bends || bends.length === 0) return false;\n\n    let last_width = 0;\n    // Bends are always on top.\n    const text_line = state.top_text_line;\n\n    // Format Bends\n    for (let i = 0; i < bends.length; ++i) {\n      const bend = bends[i];\n      bend.setXShift(last_width);\n      last_width = bend.getWidth();\n      bend.setTextLine(text_line);\n    }\n\n    state.right_shift += last_width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  // ## Prototype Methods\n  constructor(text, release, phrase) {\n    super();\n    this.setAttribute('type', 'Bend');\n\n    this.text = text;\n    this.x_shift = 0;\n    this.release = release || false;\n    this.font = '10pt Arial';\n    this.render_options = {\n      line_width: 1.5,\n      line_style: '#777777',\n      bend_width: 8,\n      release_width: 8,\n    };\n\n    if (phrase) {\n      this.phrase = phrase;\n    } else {\n      // Backward compatibility\n      this.phrase = [{ type: Bend.UP, text: this.text }];\n      if (this.release) this.phrase.push({ type: Bend.DOWN, text: '' });\n    }\n\n    this.updateWidth();\n  }\n\n  getCategory() { return Bend.CATEGORY; }\n\n  setXShift(value) {\n    this.x_shift = value;\n    this.updateWidth();\n  }\n  setFont(font) { this.font = font; return this; }\n  getText() { return this.text; }\n  updateWidth() {\n    const that = this;\n\n    function measure_text(text) {\n      let text_width;\n      if (that.context) {\n        text_width = that.context.measureText(text).width;\n      } else {\n        text_width = Flow.textWidth(text);\n      }\n\n      return text_width;\n    }\n\n    let total_width = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if ('width' in bend) {\n        total_width += bend.width;\n      } else {\n        const additional_width = (bend.type === Bend.UP) ?\n          this.render_options.bend_width : this.render_options.release_width;\n\n        bend.width = Vex.Max(additional_width, measure_text(bend.text)) + 3;\n        bend.draw_width = bend.width / 2;\n        total_width += bend.width;\n      }\n    }\n\n    this.setWidth(total_width + this.x_shift);\n    return this;\n  }\n  draw() {\n    this.checkContext();\n    if (!(this.note && (this.index != null))) {\n      throw new Vex.RERR('NoNoteForBend', \"Can't draw bend without a note or index.\");\n    }\n\n    this.setRendered();\n\n    const start = this.note.getModifierStartXY(Modifier.Position.RIGHT,\n      this.index);\n    start.x += 3;\n    start.y += 0.5;\n    const x_shift = this.x_shift;\n\n    const ctx = this.context;\n    const bend_height = this.note.getStave().getYForTopText(this.text_line) + 3;\n    const annotation_y = this.note.getStave().getYForTopText(this.text_line) - 1;\n    const that = this;\n\n    function renderBend(x, y, width, height) {\n      const cp_x = x + width;\n      const cp_y = y;\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(that.render_options.line_width);\n      ctx.setStrokeStyle(that.render_options.line_style);\n      ctx.setFillStyle(that.render_options.line_style);\n      ctx.moveTo(x, y);\n      ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    function renderRelease(x, y, width, height) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(that.render_options.line_width);\n      ctx.setStrokeStyle(that.render_options.line_style);\n      ctx.setFillStyle(that.render_options.line_style);\n      ctx.moveTo(x, height);\n      ctx.quadraticCurveTo(\n        x + width, height,\n        x + width, y);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    function renderArrowHead(x, y, direction) {\n      const width = 4;\n      const dir = direction || 1;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x - width, y + width * dir);\n      ctx.lineTo(x + width, y + width * dir);\n      ctx.closePath();\n      ctx.fill();\n    }\n\n    function renderText(x, text) {\n      ctx.save();\n      ctx.setRawFont(that.font);\n      const render_x = x - (ctx.measureText(text).width / 2);\n      ctx.fillText(text, render_x, annotation_y);\n      ctx.restore();\n    }\n\n    let last_bend = null;\n    let last_drawn_width = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if (i === 0) bend.draw_width += x_shift;\n\n      last_drawn_width = bend.draw_width +\n        (last_bend ? last_bend.draw_width : 0) -\n        (i === 1 ? x_shift : 0);\n      if (bend.type === Bend.UP) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderArrowHead(start.x, bend_height);\n        }\n\n        renderBend(start.x, start.y, last_drawn_width, bend_height);\n      }\n\n      if (bend.type === Bend.DOWN) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (last_bend && last_bend.type === Bend.DOWN) {\n          renderArrowHead(start.x, start.y, -1);\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (last_bend === null) {\n          last_drawn_width = bend.draw_width;\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n      }\n\n      renderText(start.x + last_drawn_width, bend.text);\n      last_bend = bend;\n      last_bend.x = start.x;\n\n      start.x += last_drawn_width;\n    }\n\n    // Final arrowhead and text\n    if (last_bend.type === Bend.UP) {\n      renderArrowHead(last_bend.x + last_drawn_width, bend_height);\n    } else if (last_bend.type === Bend.DOWN) {\n      renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements vibratos.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Bend } from './bend';\n\nexport class Vibrato extends Modifier {\n  static get CATEGORY() { return 'vibratos'; }\n\n  // ## Static Methods\n  // Arrange vibratos inside a `ModifierContext`.\n  static format(vibratos, state, context) {\n    if (!vibratos || vibratos.length === 0) return false;\n\n    // Vibratos are always on top.\n    let text_line = state.top_text_line;\n    let width = 0;\n    let shift = state.right_shift - 7;\n\n    // If there's a bend, drop the text line\n    const bends = context.getModifiers(Bend.CATEGORY);\n    if (bends && bends.length > 0) {\n      text_line--;\n    }\n\n    // Format Vibratos\n    for (let i = 0; i < vibratos.length; ++i) {\n      const vibrato = vibratos[i];\n      vibrato.setXShift(shift);\n      vibrato.setTextLine(text_line);\n      width += vibrato.getWidth();\n      shift += width;\n    }\n\n    state.right_shift += width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  // ## Prototype Methods\n  constructor() {\n    super();\n    this.setAttribute('type', 'Vibrato');\n\n    this.position = Modifier.Position.RIGHT;\n    this.render_options = {\n      harsh: false,\n      vibrato_width: 20,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n\n    this.setVibratoWidth(this.render_options.vibrato_width);\n  }\n  getCategory() { return Vibrato.CATEGORY; }\n  setHarsh(harsh) { this.render_options.harsh = harsh; return this; }\n  setVibratoWidth(width) {\n    this.render_options.vibrato_width = width;\n    this.setWidth(width);\n    return this;\n  }\n\n  draw() {\n    const ctx = this.checkContext();\n\n    if (!this.note) {\n      throw new Vex.RERR('NoNoteForVibrato', \"Can't draw vibrato without an attached note.\");\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n\n    const vx = start.x + this.x_shift;\n    const vy = this.note.getYForTopText(this.text_line) + 2;\n\n    Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n  }\n\n  // Static rendering method that can be called from\n  // other classes (e.g. VibratoBracket)\n  static renderVibrato(ctx, x, y, opts) {\n    const { harsh, vibrato_width, wave_width, wave_girth, wave_height } = opts;\n    const num_waves = vibrato_width / wave_width;\n\n    ctx.beginPath();\n\n    let i;\n    if (harsh) {\n      ctx.moveTo(x, y + wave_girth + 1);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x + wave_width, y - (wave_height / 2));\n        x += wave_width;\n        ctx.lineTo(x + wave_width, y + (wave_height / 2));\n        x += wave_width;\n      }\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x - wave_width, (y - (wave_height / 2)) + wave_girth + 1);\n        x -= wave_width;\n        ctx.lineTo(x - wave_width, (y + (wave_height / 2)) + wave_girth + 1);\n        x -= wave_width;\n      }\n      ctx.fill();\n    } else {\n      ctx.moveTo(x, y + wave_girth);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(x + (wave_width / 2), y - (wave_height / 2), x + wave_width, y);\n        x += wave_width;\n        ctx.quadraticCurveTo(x + (wave_width / 2), y + (wave_height / 2), x + wave_width, y);\n        x += wave_width;\n      }\n\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(\n          x - (wave_width / 2),\n          (y + (wave_height / 2)) + wave_girth,\n          x - wave_width, y + wave_girth);\n        x -= wave_width;\n        ctx.quadraticCurveTo(\n          x - (wave_width / 2),\n          (y - (wave_height / 2)) + wave_girth,\n          x - wave_width, y + wave_girth);\n        x -= wave_width;\n      }\n      ctx.fill();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements various types of modifiers to notes (e.g. bends,\n// fingering positions etc.)\n\nimport { Vex } from './vex';\nimport { StaveNote } from './stavenote';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { Accidental } from './accidental';\nimport { NoteSubGroup } from './notesubgroup';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { Stroke } from './strokes';\nimport { StringNumber } from './stringnumber';\nimport { Articulation } from './articulation';\nimport { Ornament } from './ornament';\nimport { Annotation } from './annotation';\nimport { Bend } from './bend';\nimport { Vibrato } from './vibrato';\n\n// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\nfunction L(...args) { if (ModifierContext.DEBUG) Vex.L('Vex.Flow.ModifierContext', args); }\n\nexport class ModifierContext {\n  constructor() {\n    // Current modifiers\n    this.modifiers = {};\n\n    // Formatting data.\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.width = 0;\n    this.spacing = 0;\n    this.state = {\n      left_shift: 0,\n      right_shift: 0,\n      text_line: 0,\n      top_text_line: 0,\n    };\n\n    // Add new modifiers to this array. The ordering is significant -- lower\n    // modifiers are formatted and rendered before higher ones.\n    this.PREFORMAT = [\n      StaveNote,\n      Dot,\n      FretHandFinger,\n      Accidental,\n      Stroke,\n      GraceNoteGroup,\n      NoteSubGroup,\n      StringNumber,\n      Articulation,\n      Ornament,\n      Annotation,\n      Bend,\n      Vibrato,\n    ];\n\n    // If post-formatting is required for an element, add it to this array.\n    this.POSTFORMAT = [StaveNote];\n  }\n\n  addModifier(modifier) {\n    const type = modifier.getCategory();\n    if (!this.modifiers[type]) this.modifiers[type] = [];\n    this.modifiers[type].push(modifier);\n    modifier.setModifierContext(this);\n    this.preFormatted = false;\n    return this;\n  }\n\n  getModifiers(type) { return this.modifiers[type]; }\n  getWidth() { return this.width; }\n  getExtraLeftPx() { return this.state.left_shift; }\n  getExtraRightPx() { return this.state.right_shift; }\n  getState() { return this.state; }\n\n  getMetrics() {\n    if (!this.formatted) {\n      throw new Vex.RERR('UnformattedModifier', 'Unformatted modifier has no metrics.');\n    }\n\n    return {\n      width: this.state.left_shift + this.state.right_shift + this.spacing,\n      spacing: this.spacing,\n      extra_left_px: this.state.left_shift,\n      extra_right_px: this.state.right_shift,\n    };\n  }\n\n  preFormat() {\n    if (this.preFormatted) return;\n    this.PREFORMAT.forEach((modifier) => {\n      L('Preformatting ModifierContext: ', modifier.CATEGORY);\n      modifier.format(this.getModifiers(modifier.CATEGORY), this.state, this);\n    });\n\n    // Update width of this modifier context\n    this.width = this.state.left_shift + this.state.right_shift;\n    this.preFormatted = true;\n  }\n\n  postFormat() {\n    if (this.postFormatted) return;\n    this.POSTFORMAT.forEach((modifier) => {\n      L('Postformatting ModifierContext: ', modifier.CATEGORY);\n      modifier.postFormat(this.getModifiers(modifier.CATEGORY), this);\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the formatting and layout algorithms that are used\n// to position notes in a voice. The algorithm can align multiple voices both\n// within a stave, and across multiple staves.\n//\n// To do this, the formatter breaks up voices into a grid of rational-valued\n// `ticks`, to which each note is assigned. Then, minimum widths are assigned\n// to each tick based on the widths of the notes and modifiers in that tick. This\n// establishes the smallest amount of space required for each tick.\n//\n// Finally, the formatter distributes the left over space proportionally to\n// all the ticks, setting the `x` values of the notes in each tick.\n//\n// See `tests/formatter_tests.js` for usage examples. The helper functions included\n// here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n\nimport { Vex } from './vex';\nimport { Beam } from './beam';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\nimport { Voice } from './voice';\nimport { StaveConnector } from './staveconnector';\nimport { StaveNote } from './stavenote';\nimport { Note } from './note';\nimport { ModifierContext } from './modifiercontext';\nimport { TickContext } from './tickcontext';\n\n// To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\nfunction L(...args) { if (Formatter.DEBUG) Vex.L('Vex.Flow.Formatter', args); }\n\n// Helper function to locate the next non-rest note(s).\nfunction lookAhead(notes, restLine, i, compare) {\n  // If no valid next note group, nextRestLine is same as current.\n  let nextRestLine = restLine;\n\n  // Get the rest line for next valid non-rest note group.\n  for (i += 1; i < notes.length; i += 1) {\n    const note = notes[i];\n    if (!note.isRest() && !note.shouldIgnoreTicks()) {\n      nextRestLine = note.getLineForRest();\n      break;\n    }\n  }\n\n  // Locate the mid point between two lines.\n  if (compare && restLine !== nextRestLine) {\n    const top = Math.max(restLine, nextRestLine);\n    const bot = Math.min(restLine, nextRestLine);\n    nextRestLine = Vex.MidLine(top, bot);\n  }\n  return nextRestLine;\n}\n\n// Take an array of `voices` and place aligned tickables in the same context. Returns\n// a mapping from `tick` to `ContextType`, a list of `tick`s, and the resolution\n// multiplier.\n//\n// Params:\n// * `voices`: Array of `Voice` instances.\n// * `ContextType`: A context class (e.g., `ModifierContext`, `TickContext`)\n// * `addToContext`: Function to add tickable to context.\nfunction createContexts(voices, ContextType, addToContext) {\n  if (!voices || !voices.length) {\n    throw new Vex.RERR('BadArgument', 'No voices to format');\n  }\n\n  // Find out highest common multiple of resolution multipliers.\n  // The purpose of this is to find out a common denominator\n  // for all fractional tick values in all tickables of all voices,\n  // so that the values can be expanded and the numerator used\n  // as an integer tick value.\n  const totalTicks = voices[0].getTotalTicks();\n  const resolutionMultiplier = voices.reduce((resolutionMultiplier, voice) => {\n    if (!voice.getTotalTicks().equals(totalTicks)) {\n      throw new Vex.RERR(\n        'TickMismatch', 'Voices should have same total note duration in ticks.'\n      );\n    }\n\n    if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n      throw new Vex.RERR(\n        'IncompleteVoice', 'Voice does not have enough notes.'\n      );\n    }\n\n    return Math.max(\n      resolutionMultiplier,\n      Fraction.LCM(resolutionMultiplier, voice.getResolutionMultiplier())\n    );\n  }, 1);\n\n  // Initialize tick maps.\n  const tickToContextMap = {};\n  const tickList = [];\n  const contexts = [];\n\n  // For each voice, extract notes and create a context for every\n  // new tick that hasn't been seen before.\n  voices.forEach(voice => {\n    // Use resolution multiplier as denominator to expand ticks\n    // to suitable integer values, so that no additional expansion\n    // of fractional tick values is needed.\n    const ticksUsed = new Fraction(0, resolutionMultiplier);\n\n    voice.getTickables().forEach(tickable => {\n      const integerTicks = ticksUsed.numerator;\n\n      // If we have no tick context for this tick, create one.\n      if (!tickToContextMap[integerTicks]) {\n        const newContext = new ContextType();\n        contexts.push(newContext);\n        tickToContextMap[integerTicks] = newContext;\n      }\n\n      // Add this tickable to the TickContext.\n      addToContext(tickable, tickToContextMap[integerTicks]);\n\n      // Maintain a sorted list of tick contexts.\n      tickList.push(integerTicks);\n      ticksUsed.add(tickable.getTicks());\n    });\n  });\n\n  return {\n    map: tickToContextMap,\n    array: contexts,\n    list: Vex.SortAndUnique(tickList, (a, b) => a - b, (a, b) => a === b),\n    resolutionMultiplier,\n  };\n}\n\nexport class Formatter {\n  // Helper function to layout \"notes\" one after the other without\n  // regard for proportions. Useful for tests and debugging.\n  static SimpleFormat(notes, x = 0, { paddingBetween = 10 } = {}) {\n    notes.reduce((x, note) => {\n      note.addToModifierContext(new ModifierContext());\n      const tick = new TickContext().addTickable(note).preFormat();\n      const extra = tick.getExtraPx();\n      tick.setX(x + extra.left);\n\n      return x + tick.getWidth() + extra.right + paddingBetween;\n    }, x);\n  }\n\n  // Helper function to plot formatter debug info.\n  static plotDebugging(ctx, formatter, xPos, y1, y2) {\n    const x = xPos + Note.STAVEPADDING;\n    const contextGaps = formatter.contextGaps;\n    function stroke(x1, x2, color) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(1);\n      ctx.fillRect(x1, y1, x2 - x1, y2 - y1);\n    }\n\n    ctx.save();\n    ctx.setFont('Arial', 8, '');\n\n    contextGaps.gaps.forEach(gap => {\n      stroke(x + gap.x1, x + gap.x2, '#aaa');\n      // Vex.drawDot(ctx, xPos + gap.x1, yPos, 'blue');\n      ctx.fillText(Math.round(gap.x2 - gap.x1), x + gap.x1, y2 + 12);\n    });\n\n    ctx.fillText(Math.round(contextGaps.total) + 'px', x - 20, y2 + 12);\n    ctx.setFillStyle('red');\n\n    ctx.fillText('Loss: ' +\n      formatter.lossHistory.map(loss => Math.round(loss)), x - 20, y2 + 22);\n    ctx.restore();\n  }\n\n  // Helper function to format and draw a single voice. Returns a bounding\n  // box for the notation.\n  //\n  // Parameters:\n  // * `ctx` - The rendering context\n  // * `stave` - The stave to which to draw (`Stave` or `TabStave`)\n  // * `notes` - Array of `Note` instances (`StaveNote`, `TextNote`, `TabNote`, etc.)\n  // * `params` - One of below:\n  //    * Setting `autobeam` only `(context, stave, notes, true)` or\n  //      `(ctx, stave, notes, {autobeam: true})`\n  //    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n  //    * Setting both a struct is needed `(context, stave, notes, {\n  //      autobeam: true, align_rests: true})`\n  //\n  // `autobeam` automatically generates beams for the notes.\n  // `align_rests` aligns rests with nearby notes.\n  static FormatAndDraw(ctx, stave, notes, params) {\n    const options = {\n      auto_beam: false,\n      align_rests: false,\n    };\n\n    if (typeof params === 'object') {\n      Vex.Merge(options, params);\n    } else if (typeof params === 'boolean') {\n      options.auto_beam = params;\n    }\n\n    // Start by creating a voice and adding all the notes to it.\n    const voice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(notes);\n\n    // Then create beams, if requested.\n    const beams = options.auto_beam ? Beam.applyAndGetBeams(voice) : [];\n\n    // Instantiate a `Formatter` and format the notes.\n    new Formatter()\n      .joinVoices([voice], { align_rests: options.align_rests })\n      .formatToStave([voice], stave, { align_rests: options.align_rests, stave });\n\n    // Render the voice and beams to the stave.\n    voice.setStave(stave).draw(ctx, stave);\n    beams.forEach(beam => beam.setContext(ctx).draw());\n\n    // Return the bounding box of the voice.\n    return voice.getBoundingBox();\n  }\n\n  // Helper function to format and draw aligned tab and stave notes in two\n  // separate staves.\n  //\n  // Parameters:\n  // * `ctx` - The rendering context\n  // * `tabstave` - A `TabStave` instance on which to render `TabNote`s.\n  // * `stave` - A `Stave` instance on which to render `Note`s.\n  // * `notes` - Array of `Note` instances for the stave (`StaveNote`, `BarNote`, etc.)\n  // * `tabnotes` - Array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n  // * `autobeam` - Automatically generate beams.\n  // * `params` - A configuration object:\n  //    * `autobeam` automatically generates beams for the notes.\n  //    * `align_rests` aligns rests with nearby notes.\n  static FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autobeam, params) {\n    const opts = {\n      auto_beam: autobeam,\n      align_rests: false,\n    };\n\n    if (typeof params === 'object') {\n      Vex.Merge(opts, params);\n    } else if (typeof params === 'boolean') {\n      opts.auto_beam = params;\n    }\n\n    // Create a `4/4` voice for `notes`.\n    const notevoice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(notes);\n\n    // Create a `4/4` voice for `tabnotes`.\n    const tabvoice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(tabnotes);\n\n    // Then create beams, if requested.\n    const beams = opts.auto_beam ? Beam.applyAndGetBeams(notevoice) : [];\n\n    // Instantiate a `Formatter` and align tab and stave notes.\n    new Formatter()\n      .joinVoices([notevoice], { align_rests: opts.align_rests })\n      .joinVoices([tabvoice])\n      .formatToStave([notevoice, tabvoice], stave, { align_rests: opts.align_rests });\n\n    // Render voices and beams to staves.\n    notevoice.draw(ctx, stave);\n    tabvoice.draw(ctx, tabstave);\n    beams.forEach(beam => beam.setContext(ctx).draw());\n\n    // Draw a connector between tab and note staves.\n    new StaveConnector(stave, tabstave).setContext(ctx).draw();\n  }\n\n  // Auto position rests based on previous/next note positions.\n  //\n  // Params:\n  // * `notes`: An array of notes.\n  // * `alignAllNotes`: If set to false, only aligns non-beamed notes.\n  // * `alignTuplets`: If set to false, ignores tuplets.\n  static AlignRestsToNotes(notes, alignAllNotes, alignTuplets) {\n    notes.forEach((note, index) => {\n      if (note instanceof StaveNote && note.isRest()) {\n        if (note.tuplet && !alignTuplets) return;\n\n        // If activated rests not on default can be rendered as specified.\n        const position = note.getGlyph().position.toUpperCase();\n        if (position !== 'R/4' && position !== 'B/4') return;\n\n        if (alignAllNotes || note.beam != null) {\n          // Align rests with previous/next notes.\n          const props = note.getKeyProps()[0];\n          if (index === 0) {\n            props.line = lookAhead(notes, props.line, index, false);\n            note.setKeyLine(0, props.line);\n          } else if (index > 0 && index < notes.length) {\n            // If previous note is a rest, use its line number.\n            let restLine;\n            if (notes[index - 1].isRest()) {\n              restLine = notes[index - 1].getKeyProps()[0].line;\n              props.line = restLine;\n            } else {\n              restLine = notes[index - 1].getLineForRest();\n              // Get the rest line for next valid non-rest note group.\n              props.line = lookAhead(notes, restLine, index, true);\n            }\n            note.setKeyLine(0, props.line);\n          }\n        }\n      }\n    });\n\n    return this;\n  }\n\n  constructor() {\n    // Minimum width required to render all the notes in the voices.\n    this.minTotalWidth = 0;\n\n    // This is set to `true` after `minTotalWidth` is calculated.\n    this.hasMinTotalWidth = false;\n\n    // Total number of ticks in the voice.\n    this.totalTicks = new Fraction(0, 1);\n\n    // Arrays of tick and modifier contexts.\n    this.tickContexts = null;\n    this.modiferContexts = null;\n\n    // Gaps between contexts, for free movement of notes post\n    // formatting.\n    this.contextGaps = {\n      total: 0,\n      gaps: [],\n    };\n\n    this.voices = [];\n  }\n\n  // Find all the rests in each of the `voices` and align them\n  // to neighboring notes. If `alignAllNotes` is `false`, then only\n  // align non-beamed notes.\n  alignRests(voices, alignAllNotes) {\n    if (!voices || !voices.length) {\n      throw new Vex.RERR('BadArgument', 'No voices to format rests');\n    }\n\n    voices.forEach(voice =>\n      Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n  }\n\n  // Calculate the minimum width required to align and format `voices`.\n  preCalculateMinTotalWidth(voices) {\n    // Cache results.\n    if (this.hasMinTotalWidth) return this.minTotalWidth;\n\n    // Create tick contexts if not already created.\n    if (!this.tickContexts) {\n      if (!voices) {\n        throw new Vex.RERR(\n          'BadArgument', \"'voices' required to run preCalculateMinTotalWidth\"\n        );\n      }\n\n      this.createTickContexts(voices);\n    }\n\n    const { list: contextList, map: contextMap } = this.tickContexts;\n\n    // Go through each tick context and calculate total width.\n    this.minTotalWidth = contextList\n      .map(tick => {\n        const context = contextMap[tick];\n        context.preFormat();\n        return context.getWidth();\n      })\n      .reduce((a, b) => a + b, 0);\n\n    this.hasMinTotalWidth = true;\n\n    return this.minTotalWidth;\n  }\n\n  // Get minimum width required to render all voices. Either `format` or\n  // `preCalculateMinTotalWidth` must be called before this method.\n  getMinTotalWidth() {\n    if (!this.hasMinTotalWidth) {\n      throw new Vex.RERR(\n        'NoMinTotalWidth',\n        \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\"\n      );\n    }\n\n    return this.minTotalWidth;\n  }\n\n  // Create `ModifierContext`s for each tick in `voices`.\n  createModifierContexts(voices) {\n    const contexts = createContexts(\n      voices,\n      ModifierContext,\n      (tickable, context) => tickable.addToModifierContext(context)\n    );\n\n    this.modiferContexts = contexts;\n    return contexts;\n  }\n\n  // Create `TickContext`s for each tick in `voices`. Also calculate the\n  // total number of ticks in voices.\n  createTickContexts(voices) {\n    const contexts = createContexts(\n      voices,\n      TickContext,\n      (tickable, context) => context.addTickable(tickable)\n    );\n\n    contexts.array.forEach(context => {\n      context.tContexts = contexts.array;\n    });\n\n    this.totalTicks = voices[0].getTicksUsed().clone();\n    this.tickContexts = contexts;\n    return contexts;\n  }\n\n  // This is the core formatter logic. Format voices and justify them\n  // to `justifyWidth` pixels. `renderingContext` is required to justify elements\n  // that can't retreive widths without a canvas. This method sets the `x` positions\n  // of all the tickables/notes in the formatter.\n  preFormat(justifyWidth = 0, renderingContext, voices, stave) {\n    // Initialize context maps.\n    const contexts = this.tickContexts;\n    const { list: contextList, map: contextMap, resolutionMultiplier } = contexts;\n\n    // If voices and a stave were provided, set the Stave for each voice\n    // and preFormat to apply Y values to the notes;\n    if (voices && stave) {\n      voices.forEach(voice => voice.setStave(stave).preFormat());\n    }\n\n    // Now distribute the ticks to each tick context, and assign them their\n    // own X positions.\n    let x = 0;\n    let shift = 0;\n    const centerX = justifyWidth / 2;\n    this.minTotalWidth = 0;\n\n    // Pass 1: Give each note maximum width requested by context.\n    contextList.forEach((tick) => {\n      const context = contextMap[tick];\n      if (renderingContext) context.setContext(renderingContext);\n\n      // Make sure that all tickables in this context have calculated their\n      // space requirements.\n      context.preFormat();\n\n      const width = context.getWidth();\n      this.minTotalWidth += width;\n\n      const metrics = context.getMetrics();\n      x = x + shift + metrics.extraLeftPx;\n      context.setX(x);\n\n      // Calculate shift for the next tick.\n      shift = width - metrics.extraLeftPx;\n    });\n\n    this.minTotalWidth = x + shift;\n    this.hasMinTotalWidth = true;\n\n    // No justification needed. End formatting.\n    if (justifyWidth <= 0) return;\n\n    // Pass 2: Take leftover width, and distribute it to proportionately to\n    // all notes.\n    const remainingX = justifyWidth - this.minTotalWidth;\n    const leftoverPxPerTick = remainingX / (this.totalTicks.value() * resolutionMultiplier);\n    let spaceAccum = 0;\n\n    contextList.forEach((tick, index) => {\n      const prevTick = contextList[index - 1] || 0;\n      const context = contextMap[tick];\n      const tickSpace = (tick - prevTick) * leftoverPxPerTick;\n\n      spaceAccum += tickSpace;\n      context.setX(context.getX() + spaceAccum);\n\n      // Move center aligned tickables to middle\n      context\n        .getCenterAlignedTickables()\n        .forEach(tickable => { // eslint-disable-line\n          tickable.center_x_shift = centerX - context.getX();\n        });\n    });\n\n    // Just one context. Done formatting.\n    if (contextList.length === 1) return;\n\n    this.justifyWidth = justifyWidth;\n    this.lossHistory = [];\n    this.evaluate();\n  }\n\n  // Calculate the total cost of this formatting decision.\n  evaluate() {\n    const justifyWidth = this.justifyWidth;\n    // Calculate available slack per tick context. This works out how much freedom\n    // to move a context has in either direction, without affecting other notes.\n    this.contextGaps = { total: 0, gaps: [] };\n    this.tickContexts.list.forEach((tick, index) => {\n      if (index === 0) return;\n      const prevTick = this.tickContexts.list[index - 1];\n      const prevContext = this.tickContexts.map[prevTick];\n      const context = this.tickContexts.map[tick];\n      const prevMetrics = prevContext.getMetrics();\n\n      const insideRightEdge = prevContext.getX() + prevMetrics.width;\n      const insideLeftEdge = context.getX();\n      const gap = insideLeftEdge - insideRightEdge;\n      this.contextGaps.total += gap;\n      this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n\n      // Tell the tick contexts how much they can reposition themselves.\n      context.getFormatterMetrics().freedom.left = gap;\n      prevContext.getFormatterMetrics().freedom.right = gap;\n    });\n\n    // Calculate mean distance in each voice for each duration type, then calculate\n    // how far each note is from the mean.\n    const durationStats = this.durationStats = {};\n\n    function updateStats(duration, space) {\n      const stats = durationStats[duration];\n      if (stats === undefined) {\n        durationStats[duration] = { mean: space, count: 1 };\n      } else {\n        stats.count += 1;\n        stats.mean = (stats.mean + space) / 2;\n      }\n    }\n\n    this.voices.forEach(voice => {\n      voice.getTickables().forEach((note, i, notes) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getMetrics();\n        const formatterMetrics = note.getFormatterMetrics();\n        const leftNoteEdge = note.getX() + metrics.noteWidth +\n          metrics.modRightPx + metrics.extraRightPx;\n        let space = 0;\n\n        if (i < (notes.length - 1)) {\n          const rightNote = notes[i + 1];\n          const rightMetrics = rightNote.getMetrics();\n          const rightNoteEdge = rightNote.getX() -\n            rightMetrics.modLeftPx - rightMetrics.extraLeftPx;\n\n          space = rightNoteEdge - leftNoteEdge;\n          formatterMetrics.space.used = rightNote.getX() - note.getX();\n          rightNote.getFormatterMetrics().freedom.left = space;\n        } else {\n          space = justifyWidth - leftNoteEdge;\n          formatterMetrics.space.used = justifyWidth - note.getX();\n        }\n\n        formatterMetrics.freedom.right = space;\n        updateStats(duration, formatterMetrics.space.used);\n      });\n    });\n\n    // Calculate how much each note deviates from the mean. Loss function is square\n    // root of the sum of squared deviations.\n    let totalDeviation = 0;\n    this.voices.forEach(voice => {\n      voice.getTickables().forEach((note) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getFormatterMetrics();\n        metrics.iterations += 1;\n        metrics.space.deviation = metrics.space.used - durationStats[duration].mean;\n        metrics.duration = duration;\n        metrics.space.mean = durationStats[duration].mean;\n\n        totalDeviation += Math.pow(durationStats[duration].mean, 2);\n      });\n    });\n\n    this.totalCost = Math.sqrt(totalDeviation);\n    this.lossHistory.push(this.totalCost);\n    return this;\n  }\n\n  // Run a single iteration of rejustification. At a high level, this method calculates\n  // the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n  // attempt to reduce the cost. You can call this method multiple times until it finds\n  // and oscillates around a global minimum.\n  tune() {\n    const sum = (means) => means.reduce((a, b) => a + b);\n\n    // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n    // on adjacent tickcontexts.\n    function move(current, prev, next, shift) {\n      current.setX(current.getX() + shift);\n      current.getFormatterMetrics().freedom.left += shift;\n      current.getFormatterMetrics().freedom.right -= shift;\n\n      if (prev) prev.getFormatterMetrics().freedom.right += shift;\n      if (next) next.getFormatterMetrics().freedom.left -= shift;\n    }\n\n    let shift = 0;\n    this.tickContexts.list.forEach((tick, index, list) => {\n      const context = this.tickContexts.map[tick];\n      const prevContext = (index > 0) ? this.tickContexts.map[list[index - 1]] : null;\n      const nextContext = (index < list.length - 1) ? this.tickContexts.map[list[index + 1]] : null;\n\n      move(context, prevContext, nextContext, shift);\n\n      const cost = -sum(\n        context.getTickables().map(t => t.getFormatterMetrics().space.deviation));\n\n      if (cost > 0) {\n        shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n      } else if (cost < 0) {\n        if (nextContext) {\n          shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n        } else {\n          shift = 0;\n        }\n      }\n\n      const minShift = Math.min(5, Math.abs(shift));\n      shift = shift > 0 ? minShift : -minShift;\n    });\n\n    return this.evaluate();\n  }\n\n  // This is the top-level call for all formatting logic completed\n  // after `x` *and* `y` values have been computed for the notes\n  // in the voices.\n  postFormat() {\n    const postFormatContexts = (contexts) =>\n      contexts.list.forEach(tick => contexts.map[tick].postFormat());\n\n    postFormatContexts(this.modiferContexts);\n    postFormatContexts(this.tickContexts);\n\n    return this;\n  }\n\n  // Take all `voices` and create `ModifierContext`s out of them. This tells\n  // the formatters that the voices belong on a single stave.\n  joinVoices(voices) {\n    this.createModifierContexts(voices);\n    this.hasMinTotalWidth = false;\n    return this;\n  }\n\n  // Align rests in voices, justify the contexts, and position the notes\n  // so voices are aligned and ready to render onto the stave. This method\n  // mutates the `x` positions of all tickables in `voices`.\n  //\n  // Voices are full justified to fit in `justifyWidth` pixels.\n  //\n  // Set `options.context` to the rendering context. Set `options.align_rests`\n  // to true to enable rest alignment.\n  format(voices, justifyWidth, options) {\n    const opts = {\n      align_rests: false,\n      context: null,\n      stave: null,\n    };\n\n    Vex.Merge(opts, options);\n    this.voices = voices;\n    this.alignRests(voices, opts.align_rests);\n    this.createTickContexts(voices);\n    this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n\n    // Only postFormat if a stave was supplied for y value formatting\n    if (opts.stave) this.postFormat();\n\n    return this;\n  }\n\n  // This method is just like `format` except that the `justifyWidth` is inferred\n  // from the `stave`.\n  formatToStave(voices, stave, options) {\n    const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - 10;\n    L('Formatting voices to width: ', justifyWidth);\n    const opts = { context: stave.getContext() };\n    Vex.Merge(opts, options);\n    return this.format(voices, justifyWidth, opts);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A base class for stave modifiers (e.g. clefs, key signatures)\n\nimport { Element } from './element';\n\nexport class StaveModifier extends Element {\n  static get Position() {\n    return {\n      LEFT: 1,\n      RIGHT: 2,\n      ABOVE: 3,\n      BELOW: 4,\n      BEGIN: 5,\n      END: 6,\n    };\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'StaveModifier');\n\n    this.padding = 10;\n    this.position = StaveModifier.Position.ABOVE;\n    this.layoutMetrics = null;\n  }\n\n  getPosition() { return this.position; }\n  setPosition(position) { this.position = position; return this; }\n  getStave() { return this.stave; }\n  setStave(stave) { this.stave = stave; return this; }\n  getWidth() { return this.width; }\n  setWidth(width) { this.width = width; return this; }\n  getX() { return this.x; }\n  setX(x) { this.x = x; return this; }\n  getCategory() { return ''; }\n  makeSpacer(padding) {\n    // TODO(0xfe): Return an instance of type `Spacer` based on `GhostNote`\n    // instead of this hack.\n\n    return {\n      getContext() { return true; },\n      setStave() {},\n      renderToStave() {},\n      getMetrics() {\n        return { width: padding };\n      },\n    };\n  }\n  placeGlyphOnLine(glyph, stave, line) {\n    glyph.setYShift(stave.getYForLine(line) - stave.getYForGlyphs());\n  }\n  getPadding(index) {\n    return (index !== undefined && index < 2 ? 0 : this.padding);\n  }\n  setPadding(padding) { this.padding = padding; return this; }\n  setLayoutMetrics(layoutMetrics) {\n    this.layoutMetrics = layoutMetrics;\n    return this;\n  }\n  getLayoutMetrics() {\n    return this.layoutMetrics;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author Larry Kuhns 2011\n\nimport { Flow } from './tables';\nimport { StaveModifier } from './stavemodifier';\n\nexport class Barline extends StaveModifier {\n  static get CATEGORY() { return 'barlines'; }\n  static get type() {\n    return {\n      SINGLE: 1,\n      DOUBLE: 2,\n      END: 3,\n      REPEAT_BEGIN: 4,\n      REPEAT_END: 5,\n      REPEAT_BOTH: 6,\n      NONE: 7,\n    };\n  }\n\n  static get typeString() {\n    return {\n      single: Barline.type.SINGLE,\n      double: Barline.type.DOUBLE,\n      end: Barline.type.END,\n      repeatBegin: Barline.type.REPEAT_BEGIN,\n      repeatEnd: Barline.type.REPEAT_END,\n      repeatBoth: Barline.type.REPEAT_BOTH,\n      none: Barline.type.NONE,\n    };\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Barline');\n    this.thickness = Flow.STAVE_LINE_THICKNESS;\n\n    const TYPE = Barline.type;\n    this.widths = {};\n    this.widths[TYPE.SINGLE] = 5;\n    this.widths[TYPE.DOUBLE] = 5;\n    this.widths[TYPE.END] = 5;\n    this.widths[TYPE.REPEAT_BEGIN] = 5;\n    this.widths[TYPE.REPEAT_END] = 5;\n    this.widths[TYPE.REPEAT_BOTH] = 5;\n    this.widths[TYPE.NONE] = 5;\n\n    this.paddings = {};\n    this.paddings[TYPE.SINGLE] = 0;\n    this.paddings[TYPE.DOUBLE] = 0;\n    this.paddings[TYPE.END] = 0;\n    this.paddings[TYPE.REPEAT_BEGIN] = 15;\n    this.paddings[TYPE.REPEAT_END] = 15;\n    this.paddings[TYPE.REPEAT_BOTH] = 15;\n    this.paddings[TYPE.NONE] = 0;\n\n    this.layoutMetricsMap = {};\n    this.layoutMetricsMap[TYPE.SINGLE] = {\n      xMin: 0,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.DOUBLE] = {\n      xMin: -3,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.END] = {\n      xMin: -5,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.REPEAT_END] = {\n      xMin: -10,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.REPEAT_BEGIN] = {\n      xMin: -2,\n      xMax: 10,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.REPEAT_BOTH] = {\n      xMin: -10,\n      xMax: 10,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.NONE] = {\n      xMin: 0,\n      xMax: 0,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setType(type);\n  }\n  getCategory() { return Barline.CATEGORY; }\n  getType() { return this.type; }\n  setType(type) {\n    this.type = typeof(type) === 'string'\n      ? Barline.typeString[type]\n      : type;\n\n    this.setWidth(this.widths[this.type]);\n    this.setPadding(this.paddings[this.type]);\n    this.setLayoutMetrics(this.layoutMetricsMap[this.type]);\n    return this;\n  }\n\n  // Draw barlines\n  draw(stave) {\n    stave.checkContext();\n    this.setRendered();\n\n    switch (this.type) {\n      case Barline.type.SINGLE:\n        this.drawVerticalBar(stave, this.x, false);\n        break;\n      case Barline.type.DOUBLE:\n        this.drawVerticalBar(stave, this.x, true);\n        break;\n      case Barline.type.END:\n        this.drawVerticalEndBar(stave, this.x);\n        break;\n      case Barline.type.REPEAT_BEGIN:\n        // If the barline is shifted over (in front of clef/time/key)\n        // Draw vertical bar at the beginning.\n        this.drawRepeatBar(stave, this.x, true);\n        if (stave.getX() !== this.x) {\n          this.drawVerticalBar(stave, stave.getX());\n        }\n\n        break;\n      case Barline.type.REPEAT_END:\n        this.drawRepeatBar(stave, this.x, false);\n        break;\n      case Barline.type.REPEAT_BOTH:\n        this.drawRepeatBar(stave, this.x, false);\n        this.drawRepeatBar(stave, this.x, true);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n  }\n\n  drawVerticalBar(stave, x, double_bar) {\n    stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    if (double_bar) {\n      stave.context.fillRect(x - 3, topY, 1, botY - topY);\n    }\n    stave.context.fillRect(x, topY, 1, botY - topY);\n  }\n\n  drawVerticalEndBar(stave, x) {\n    stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    stave.context.fillRect(x - 5, topY, 1, botY - topY);\n    stave.context.fillRect(x - 2, topY, 3, botY - topY);\n  }\n\n  drawRepeatBar(stave, x, begin) {\n    stave.checkContext();\n\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    let x_shift = 3;\n\n    if (!begin) {\n      x_shift = -5;\n    }\n\n    stave.context.fillRect(x + x_shift, topY, 1, botY - topY);\n    stave.context.fillRect(x - 2, topY, 3, botY - topY);\n\n    const dot_radius = 2;\n\n    // Shift dots left or right\n    if (begin) {\n      x_shift += 4;\n    } else {\n      x_shift -= 4;\n    }\n\n    const dot_x = (x + x_shift) + (dot_radius / 2);\n\n    // calculate the y offset based on number of stave lines\n    let y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n    y_offset = (y_offset / 2) - (stave.getSpacingBetweenLines() / 2);\n    let dot_y = topY + y_offset + (dot_radius / 2);\n\n    // draw the top repeat dot\n    stave.context.beginPath();\n    stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    stave.context.fill();\n\n    // draw the bottom repeat dot\n    dot_y += stave.getSpacingBetweenLines();\n    stave.context.beginPath();\n    stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    stave.context.fill();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class Repetition extends StaveModifier {\n  static get CATEGORY() { return 'repetitions'; }\n  static get type() {\n    return {\n      NONE: 1,         // no coda or segno\n      CODA_LEFT: 2,    // coda at beginning of stave\n      CODA_RIGHT: 3,   // coda at end of stave\n      SEGNO_LEFT: 4,   // segno at beginning of stave\n      SEGNO_RIGHT: 5,  // segno at end of stave\n      DC: 6,           // D.C. at end of stave\n      DC_AL_CODA: 7,   // D.C. al coda at end of stave\n      DC_AL_FINE: 8,   // D.C. al Fine end of stave\n      DS: 9,           // D.S. at end of stave\n      DS_AL_CODA: 10,  // D.S. al coda at end of stave\n      DS_AL_FINE: 11,  // D.S. al Fine at end of stave\n      FINE: 12,        // Fine at end of stave\n    };\n  }\n\n  constructor(type, x, y_shift) {\n    super();\n    this.setAttribute('type', 'Repetition');\n\n    this.symbol_type = type;\n    this.x = x;\n    this.x_shift = 0;\n    this.y_shift = y_shift;\n    this.font = {\n      family: 'times',\n      size: 12,\n      weight: 'bold italic',\n    };\n  }\n\n  getCategory() { return Repetition.CATEGORY; }\n  setShiftX(x) { this.x_shift = x; return this; }\n  setShiftY(y) { this.y_shift = y; return this; }\n\n  draw(stave, x) {\n    this.setRendered();\n\n    switch (this.symbol_type) {\n      case Repetition.type.CODA_RIGHT:\n        this.drawCodaFixed(stave, x + stave.width);\n        break;\n      case Repetition.type.CODA_LEFT:\n        this.drawSymbolText(stave, x, 'Coda', true);\n        break;\n      case Repetition.type.SEGNO_LEFT:\n        this.drawSignoFixed(stave, x);\n        break;\n      case Repetition.type.SEGNO_RIGHT:\n        this.drawSignoFixed(stave, x + stave.width);\n        break;\n      case Repetition.type.DC:\n        this.drawSymbolText(stave, x, 'D.C.', false);\n        break;\n      case Repetition.type.DC_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.C. al', true);\n        break;\n      case Repetition.type.DC_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n        break;\n      case Repetition.type.DS:\n        this.drawSymbolText(stave, x, 'D.S.', false);\n        break;\n      case Repetition.type.DS_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.S. al', true);\n        break;\n      case Repetition.type.DS_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n        break;\n      case Repetition.type.FINE:\n        this.drawSymbolText(stave, x, 'Fine', false);\n        break;\n      default:\n        break;\n    }\n\n    return this;\n  }\n\n  drawCodaFixed(stave, x) {\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 40, 'v4d', true);\n    return this;\n  }\n\n  drawSignoFixed(stave, x) {\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 30, 'v8c', true);\n    return this;\n  }\n\n  drawSymbolText(stave, x, text, draw_coda) {\n    const ctx = stave.checkContext();\n\n    ctx.save();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    // Default to right symbol\n    let text_x = 0 + this.x_shift;\n    let symbol_x = x + this.x_shift;\n    if (this.symbol_type === Repetition.type.CODA_LEFT) {\n      // Offset Coda text to right of stave beginning\n      text_x = this.x + stave.options.vertical_bar_width;\n      symbol_x = text_x + ctx.measureText(text).width + 12;\n    } else {\n      // Offset Signo text to left stave end\n      symbol_x = this.x + x + stave.width - 5 + this.x_shift;\n      text_x = symbol_x - + ctx.measureText(text).width - 12;\n    }\n\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    if (draw_coda) {\n      Glyph.renderGlyph(ctx, symbol_x, y, 40, 'v4d', true);\n    }\n\n    ctx.fillText(text, text_x, y + 5);\n    ctx.restore();\n\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\n\nexport class StaveSection extends StaveModifier {\n  static get CATEGORY() { return 'stavesection'; }\n\n  constructor(section, x, shift_y) {\n    super();\n    this.setAttribute('type', 'StaveSection');\n\n    this.setWidth(16);\n    this.section = section;\n    this.x = x;\n    this.shift_x = 0;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'sans-serif',\n      size: 12,\n      weight: 'bold',\n    };\n  }\n\n  getCategory() { return StaveSection.CATEGORY; }\n  setStaveSection(section) { this.section = section; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n  draw(stave, shift_x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.section).width;\n    let width = text_width + 6;  // add left & right padding\n    if (width < 18) width = 18;\n    const height = 20;\n    //  Seems to be a good default y\n    const y = stave.getYForTopText(3) + this.shift_y;\n    let x = this.x + shift_x;\n    ctx.beginPath();\n    ctx.lineWidth = 2;\n    ctx.rect(x, y, width, height);\n    ctx.stroke();\n    x += (width - text_width) / 2;\n    ctx.fillText('' + this.section, x, y + 16);\n    ctx.restore();\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Radosaw Eichler 2012\n\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class StaveTempo extends StaveModifier {\n  static get CATEGORY() { return 'stavetempo'; }\n\n  constructor(tempo, x, shift_y) {\n    super();\n    this.setAttribute('type', 'StaveTempo');\n\n    this.tempo = tempo;\n    this.position = Modifier.Position.ABOVE;\n    this.x = x;\n    this.shift_x = 10;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'times',\n      size: 14,\n      weight: 'bold',\n    };\n    this.render_options = {\n      glyph_font_scale: 30,  // font size for note\n    };\n  }\n  getCategory() { return StaveTempo.CATEGORY; }\n  setTempo(tempo) { this.tempo = tempo; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n\n  draw(stave, shift_x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    const options = this.render_options;\n    // FIXME: What does the '38' mean? Why 38? Is that supposed to\n    // be the default font size for standard notation?\n    const scale = options.glyph_font_scale / 38;\n    const name = this.tempo.name;\n    const duration = this.tempo.duration;\n    const dots = this.tempo.dots;\n    const bpm = this.tempo.bpm;\n    const font = this.font;\n    let x = this.x + this.shift_x + shift_x;\n    const y = stave.getYForTopText(1) + this.shift_y;\n\n    ctx.save();\n\n    if (name) {\n      ctx.setFont(font.family, font.size, font.weight);\n      ctx.fillText(name, x, y);\n      x += ctx.measureText(name).width;\n    }\n\n    if (duration && bpm) {\n      ctx.setFont(font.family, font.size, 'normal');\n\n      if (name) {\n        x += ctx.measureText(' ').width;\n        ctx.fillText('(', x, y);\n        x += ctx.measureText('(').width;\n      }\n\n      const code = Flow.durationToGlyph(duration);\n\n      x += 3 * scale;\n      Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, code.code_head);\n      x += code.getWidth() * scale;\n\n      // Draw stem and flags\n      if (code.stem) {\n        let stem_height = 30;\n\n        if (code.beam_count) stem_height += 3 * (code.beam_count - 1);\n\n        stem_height *= scale;\n\n        const y_top = y - stem_height;\n        ctx.fillRect(x - scale, y_top, scale, stem_height);\n\n        if (code.flag) {\n          Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale, code.code_flag_upstem);\n\n          if (!dots) x += 6 * scale;\n        }\n      }\n\n      // Draw dot\n      for (let i = 0; i < dots; i++) {\n        x += 6 * scale;\n        ctx.beginPath();\n        ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n        ctx.fill();\n      }\n\n      ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n    }\n\n    ctx.restore();\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `TextNote` is a notation element that is positioned in time. Generally\n// meant for objects that sit above/below the staff and inline with each other.\n// Examples of this would be such as dynamics, lyrics, chord changes, etc.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Note } from './note';\nimport { Glyph } from './glyph';\n\nexport class TextNote extends Note {\n  static get Justification() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n    };\n  }\n\n  // Glyph data\n  static get GLYPHS() {\n    return {\n      'segno': {\n        code: 'v8c',\n        point: 40,\n        x_shift: 0,\n        y_shift: -10,\n        // width: 10 // optional\n      },\n      'tr': {\n        code: 'v1f',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'mordent_upper': {\n        code: 'v1e',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'mordent_lower': {\n        code: 'v45',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'f': {\n        code: 'vba',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'p': {\n        code: 'vbf',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'm': {\n        code: 'v62',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      's': {\n        code: 'v4a',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'z': {\n        code: 'v80',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'coda': {\n        code: 'v4d',\n        point: 40,\n        x_shift: 0,\n        y_shift: -8,\n        // width: 10 // optional\n      },\n      'pedal_open': {\n        code: 'v36',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'pedal_close': {\n        code: 'v5d',\n        point: 40,\n        x_shift: 0,\n        y_shift: 3,\n      },\n      'caesura_straight': {\n        code: 'v34',\n        point: 40,\n        x_shift: 0,\n        y_shift: 2,\n      },\n      'caesura_curved': {\n        code: 'v4b',\n        point: 40,\n        x_shift: 0,\n        y_shift: 2,\n      },\n      'breath': {\n        code: 'v6c',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'tick': {\n        code: 'v6f',\n        point: 50,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'turn': {\n        code: 'v72',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'turn_inverted': {\n        code: 'v33',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n\n      // DEPRECATED - please use \"mordent_upper\" or \"mordent_lower\"\n      'mordent': {\n        code: 'v1e',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n    };\n  }\n\n  constructor(text_struct) {\n    super(text_struct);\n    this.setAttribute('type', 'TextNote');\n\n    // Note properties\n    this.text = text_struct.text;\n    this.superscript = text_struct.superscript;\n    this.subscript = text_struct.subscript;\n    this.glyph_type = text_struct.glyph;\n    this.glyph = null;\n    this.font = {\n      family: 'Arial',\n      size: 12,\n      weight: '',\n    };\n\n    // Set font\n    if (text_struct.font) this.font = text_struct.font;\n\n    // Determine and set initial note width. Note that the text width is\n    // an approximation and isn't very accurate. The only way to accurately\n    // measure the length of text is with `canvasmeasureText()`\n    if (this.glyph_type) {\n      const struct = TextNote.GLYPHS[this.glyph_type];\n      if (!struct) throw new Vex.RERR('Invalid glyph type: ' + this.glyph_type);\n\n      this.glyph = new Glyph(struct.code, struct.point, { cache: false });\n\n      if (struct.width) {\n        this.setWidth(struct.width);\n      } else {\n        this.setWidth(this.glyph.getMetrics().width);\n      }\n\n      this.glyph_struct = struct;\n    } else {\n      this.setWidth(Flow.textWidth(this.text));\n    }\n    this.line = text_struct.line || 0;\n    this.smooth = text_struct.smooth || false;\n    this.ignore_ticks = text_struct.ignore_ticks || false;\n    this.justification = TextNote.Justification.LEFT;\n  }\n\n  // Set the horizontal justification of the TextNote\n  setJustification(just) {\n    this.justification = just;\n    return this;\n  }\n\n  // Set the Stave line on which the note should be placed\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    this.checkContext();\n\n    if (this.preFormatted) return;\n\n    if (this.smooth) {\n      this.setWidth(0);\n    } else {\n      if (this.glyph) {\n        // Width already set.\n      } else {\n        this.setWidth(this.context.measureText(this.text).width);\n      }\n    }\n\n    if (this.justification === TextNote.Justification.CENTER) {\n      this.extraLeftPx = this.width / 2;\n    } else if (this.justification === TextNote.Justification.RIGHT) {\n      this.extraLeftPx = this.width;\n    }\n\n    this.setPreFormatted(true);\n  }\n\n  // Renders the TextNote\n  draw() {\n    this.checkContext();\n\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n\n    this.setRendered();\n    const ctx = this.context;\n    let x = this.getAbsoluteX();\n    if (this.justification === TextNote.Justification.CENTER) {\n      x -= this.getWidth() / 2;\n    } else if (this.justification === TextNote.Justification.RIGHT) {\n      x -= this.getWidth();\n    }\n\n    let y;\n    if (this.glyph) {\n      y = this.stave.getYForLine(this.line + -3);\n      this.glyph.render(\n        this.context,\n        x + this.glyph_struct.x_shift,\n        y + this.glyph_struct.y_shift\n      );\n    } else {\n      y = this.stave.getYForLine(this.line + -3);\n      this.applyStyle(ctx);\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.text, x, y);\n\n      // Width of the letter M gives us the approximate height of the text\n      const height = ctx.measureText('M').width;\n      // Get accurate width of text\n      const width = ctx.measureText(this.text).width;\n\n      // Write superscript\n      if (this.superscript) {\n        ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n        ctx.fillText(this.superscript, x + width + 2, y - (height / 2.2));\n      }\n\n      // Write subscript\n      if (this.subscript) {\n        ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n        ctx.fillText(this.subscript, x + width + 2, y + (height / 2.2) - 1);\n      }\n\n      this.restoreStyle(ctx);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { Vex } from './vex';\nimport { StaveModifier } from './stavemodifier';\nimport { TextNote } from './textnote';\n\nexport class StaveText extends StaveModifier {\n  static get CATEGORY() { return 'stavetext'; }\n\n  constructor(text, position, options) {\n    super();\n    this.setAttribute('type', 'StaveText');\n\n    this.setWidth(16);\n    this.text = text;\n    this.position = position;\n    this.options = {\n      shift_x: 0,\n      shift_y: 0,\n      justification: TextNote.Justification.CENTER,\n    };\n    Vex.Merge(this.options, options);\n\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    };\n  }\n\n  getCategory() { return StaveText.CATEGORY; }\n  setStaveText(text) { this.text = text; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n\n  setFont(font) {\n    Vex.Merge(this.font, font);\n  }\n\n  setText(text) {\n    this.text = text;\n  }\n\n  draw(stave) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.text).width;\n\n    let x;\n    let y;\n    const Position = StaveModifier.Position;\n    const Justification = TextNote.Justification;\n    switch (this.position) {\n      case Position.LEFT:\n      case Position.RIGHT:\n        y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n        if (this.position === Position.LEFT) {\n          x = stave.getX() - text_width - 24 + this.options.shift_x;\n        } else {\n          x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n        }\n        break;\n      case Position.ABOVE:\n      case Position.BELOW:\n        x = stave.getX() + this.options.shift_x;\n        if (this.options.justification === Justification.CENTER) {\n          x += stave.getWidth() / 2 - text_width / 2;\n        } else if (this.options.justification === Justification.RIGHT) {\n          x += stave.getWidth() - text_width;\n        }\n\n        if (this.position === Position.ABOVE) {\n          y = stave.getYForTopText(2) + this.options.shift_y;\n        } else {\n          y = stave.getYForBottomText(2) + this.options.shift_y;\n        }\n        break;\n      default:\n        throw new Vex.RERR('InvalidPosition', 'Value Must be in Modifier.Position.');\n    }\n\n    ctx.fillText('' + this.text, x, y + 4);\n    ctx.restore();\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n// Co-author: Benjamin W. Bohl\n//\n// ## Description\n//\n// This file implements various types of clefs that can be rendered on a stave.\n//\n// See `tests/clef_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`.\nfunction L(...args) { if (Clef.DEBUG) Vex.L('Vex.Flow.Clef', args); }\n\nexport class Clef extends StaveModifier {\n  static get CATEGORY() { return 'clefs'; }\n\n  // Every clef name is associated with a glyph code from the font file\n  // and a default stave line number.\n  static get types() {\n    return {\n      'treble': {\n        code: 'v83',\n        line: 3,\n      },\n      'bass': {\n        code: 'v79',\n        line: 1,\n      },\n      'alto': {\n        code: 'vad',\n        line: 2,\n      },\n      'tenor': {\n        code: 'vad',\n        line: 1,\n      },\n      'percussion': {\n        code: 'v59',\n        line: 2,\n      },\n      'soprano': {\n        code: 'vad',\n        line: 4,\n      },\n      'mezzo-soprano': {\n        code: 'vad',\n        line: 3,\n      },\n      'baritone-c': {\n        code: 'vad',\n        line: 0,\n      },\n      'baritone-f': {\n        code: 'v79',\n        line: 2,\n      },\n      'subbass': {\n        code: 'v79',\n        line: 0,\n      },\n      'french': {\n        code: 'v83',\n        line: 4,\n      },\n      'tab': {\n        code: 'v2f',\n      },\n    };\n  }\n\n  // Sizes affect the point-size of the clef.\n  static get sizes() {\n    return {\n      'default': 40,\n      'small': 32,\n    };\n  }\n\n  // Annotations attach to clefs -- such as \"8\" for octave up or down.\n  static get annotations() {\n    return {\n      '8va': {\n        code: 'v8',\n        sizes: {\n          'default': {\n            point: 20,\n            attachments: {\n              'treble': {\n                line: -1.2,\n                x_shift: 11,\n              },\n            },\n          },\n          'small': {\n            point: 18,\n            attachments: {\n              'treble': {\n                line: -0.4,\n                x_shift: 8,\n              },\n            },\n          },\n        },\n      },\n      '8vb': {\n        code: 'v8',\n        sizes: {\n          'default': {\n            point: 20,\n            attachments: {\n              'treble': {\n                line: 6.3,\n                x_shift: 10,\n              },\n              'bass': {\n                line: 4,\n                x_shift: 1,\n              },\n            },\n          },\n          'small': {\n            point: 18,\n            attachments: {\n              'treble': {\n                line: 5.8,\n                x_shift: 6,\n              },\n              'bass': {\n                line: 3.5,\n                x_shift: 0.5,\n              },\n            },\n          },\n        },\n      },\n    };\n  }\n\n  // Create a new clef. The parameter `clef` must be a key from\n  // `Clef.types`.\n  constructor(type, size, annotation) {\n    super();\n    this.setAttribute('type', 'Clef');\n\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setType(type, size, annotation);\n    this.setWidth(this.glyph.getMetrics().width);\n    L('Creating clef:', type);\n  }\n\n  getCategory() { return Clef.CATEGORY; }\n\n  setType(type, size, annotation) {\n    this.type = type;\n    this.clef = Clef.types[type];\n    if (size === undefined) {\n      this.size = 'default';\n    } else {\n      this.size = size;\n    }\n    this.clef.point = Clef.sizes[this.size];\n    this.glyph = new Glyph(this.clef.code, this.clef.point);\n\n    // If an annotation, such as 8va, is specified, add it to the Clef object.\n    if (annotation !== undefined) {\n      const anno_dict = Clef.annotations[annotation];\n      this.annotation = {\n        code: anno_dict.code,\n        point: anno_dict.sizes[this.size].point,\n        line: anno_dict.sizes[this.size].attachments[this.type].line,\n        x_shift: anno_dict.sizes[this.size].attachments[this.type].x_shift,\n      };\n\n      this.attachment = new Glyph(this.annotation.code, this.annotation.point);\n      this.attachment.metrics.x_max = 0;\n      this.attachment.setXShift(this.annotation.x_shift);\n    } else {\n      this.annotation = undefined;\n    }\n\n    return this;\n  }\n\n  getWidth() {\n    if (this.type === 'tab' && !this.stave) {\n      throw new Vex.RERR('ClefError', \"Can't get width without stave.\");\n    }\n\n    return this.width;\n  }\n\n  setStave(stave) {\n    this.stave = stave;\n\n    if (this.type !== 'tab') return this;\n\n    let glyphScale;\n    let glyphOffset;\n    const numLines = this.stave.getOptions().num_lines;\n    switch (numLines) {\n      case 8:\n        glyphScale = 55;\n        glyphOffset = 14;\n        break;\n      case 7:\n        glyphScale = 47;\n        glyphOffset = 8;\n        break;\n      case 6:\n        glyphScale = 40;\n        glyphOffset = 1;\n        break;\n      case 5:\n        glyphScale = 30;\n        glyphOffset = -6;\n        break;\n      case 4:\n        glyphScale = 23;\n        glyphOffset = -12;\n        break;\n      default:\n        throw new Vex.RERR('ClefError', `Invalid number of lines: ${numLines}`);\n    }\n\n    this.glyph.setPoint(glyphScale);\n    this.glyph.setYShift(glyphOffset);\n\n    return this;\n  }\n\n  draw() {\n    if (!this.x) throw new Vex.RERR('ClefError', \"Can't draw clef without x.\");\n    if (!this.stave) throw new Vex.RERR('ClefError', \"Can't draw clef without stave.\");\n    this.setRendered();\n\n    this.glyph.setStave(this.stave);\n    this.glyph.setContext(this.stave.context);\n    if (this.clef.line !== undefined) {\n      this.placeGlyphOnLine(this.glyph, this.stave, this.clef.line);\n    }\n\n    this.glyph.renderToStave(this.x);\n\n    if (this.annotation !== undefined) {\n      this.placeGlyphOnLine(this.attachment, this.stave, this.annotation.line);\n      this.attachment.setStave(this.stave);\n      this.attachment.setContext(this.stave.context);\n      this.attachment.renderToStave(this.x);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class KeySignature extends StaveModifier {\n  static get CATEGORY() { return 'keysignatures'; }\n\n  // Space between natural and following accidental depending\n  // on vertical position\n  static get accidentalSpacing() {\n    return {\n      '#': {\n        above: 6,\n        below: 4,\n      },\n      'b': {\n        above: 4,\n        below: 7,\n      },\n      'n': {\n        above: 4,\n        below: 1,\n      },\n      '##': {\n        above: 6,\n        below: 4,\n      },\n      'bb': {\n        above: 4,\n        below: 7,\n      },\n      'db': {\n        above: 4,\n        below: 7,\n      },\n      'd': {\n        above: 4,\n        below: 7,\n      },\n      'bbs': {\n        above: 4,\n        below: 7,\n      },\n      '++': {\n        above: 6,\n        below: 4,\n      },\n      '+': {\n        above: 6,\n        below: 4,\n      },\n      '+-': {\n        above: 6,\n        below: 4,\n      },\n      '++-': {\n        above: 6,\n        below: 4,\n      },\n      'bs': {\n        above: 4,\n        below: 10,\n      },\n      'bss': {\n        above: 4,\n        below: 10,\n      },\n    };\n  }\n\n  // Create a new Key Signature based on a `key_spec`\n  constructor(keySpec, cancelKeySpec, alterKeySpec) {\n    super();\n    this.setAttribute('type', 'KeySignature');\n\n    this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.glyphFontScale = 38; // TODO(0xFE): Should this match StaveNote?\n    this.glyphs = [];\n    this.xPositions = []; // relative to this.x\n    this.paddingForced = false;\n  }\n\n  getCategory() { return KeySignature.CATEGORY; }\n\n  // Add an accidental glyph to the `KeySignature` instance which represents\n  // the provided `acc`. If `nextAcc` is also provided, the appropriate\n  // spacing will be included in the glyph's position\n  convertToGlyph(acc, nextAcc) {\n    const accGlyphData = Flow.accidentalCodes(acc.type);\n    const glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n\n    // Determine spacing between current accidental and the next accidental\n    let extraWidth = 1;\n    if (acc.type === 'n' && nextAcc) {\n      const spacing = KeySignature.accidentalSpacing[nextAcc.type];\n      if (spacing) {\n        const isAbove = nextAcc.line >= acc.line;\n        extraWidth = isAbove ? spacing.above : spacing.below;\n      }\n    }\n\n    // Place the glyph on the stave\n    this.placeGlyphOnLine(glyph, this.stave, acc.line);\n    this.glyphs.push(glyph);\n\n    const xPosition = this.xPositions[this.xPositions.length - 1];\n    const glyphWidth = glyph.getMetrics().width + extraWidth;\n    // Store the next accidental's x position\n    this.xPositions.push(xPosition + glyphWidth);\n    // Expand size of key signature\n    this.width += glyphWidth;\n  }\n\n  // Cancel out a key signature provided in the `spec` parameter. This will\n  // place appropriate natural accidentals before the key signature.\n  cancelKey(spec) {\n    this.formatted = false;\n    this.cancelKeySpec = spec;\n\n    return this;\n  }\n\n  convertToCancelAccList(spec) {\n    // Get the accidental list for the cancelled key signature\n    const cancel_accList = Flow.keySignature(spec);\n\n    // If the cancelled key has a different accidental type, ie: # vs b\n    const different_types = this.accList.length > 0\n      && cancel_accList.length > 0\n      && cancel_accList[0].type !== this.accList[0].type;\n\n    // Determine how many naturals needed to add\n    const naturals = different_types\n      ? cancel_accList.length\n      : cancel_accList.length - this.accList.length;\n\n    // Return if no naturals needed\n    if (naturals < 1) return;\n\n    // Get the line position for each natural\n    const cancelled = [];\n    for (let i = 0; i < naturals; i++) {\n      let index = i;\n      if (!different_types) {\n        index = cancel_accList.length - naturals + i;\n      }\n\n      const acc = cancel_accList[index];\n      cancelled.push({ type: 'n', line: acc.line });\n    }\n\n    // Combine naturals with main accidental list for the key signature\n    this.accList = cancelled.concat(this.accList);\n  }\n\n  // Deprecated\n  addToStave(stave) {\n    this.paddingForced = true;\n    stave.addModifier(this);\n\n    return this;\n  }\n\n  // Apply the accidental staff line placement based on the `clef` and\n  // the  accidental `type` for the key signature ('# or 'b').\n  convertAccLines(clef, type) {\n    let offset = 0.0; // if clef === \"treble\"\n    let customLines; // when clef doesn't follow treble key sig shape\n\n    switch (clef) {\n      // Treble & Subbass both have offsets of 0, so are not included.\n      case 'soprano':\n        if (type === '#') customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n        else offset = -1;\n        break;\n      case 'mezzo-soprano':\n        if (type === 'b') customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n        else offset = 1.5;\n        break;\n      case 'alto':\n        offset = 0.5;\n        break;\n      case 'tenor':\n        if (type === '#') customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n        else offset = -0.5;\n        break;\n      case 'baritone-f':\n      case 'baritone-c':\n        if (type === 'b') customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n        else offset = 2;\n        break;\n      case 'bass':\n      case 'french':\n        offset = 1;\n        break;\n      default:\n        break;\n    }\n\n    // If there's a special case, assign those lines/spaces:\n    let i;\n    if (typeof customLines !== 'undefined') {\n      for (i = 0; i < this.accList.length; ++i) {\n        this.accList[i].line = customLines[i];\n      }\n    } else if (offset !== 0) {\n      for (i = 0; i < this.accList.length; ++i) {\n        this.accList[i].line += offset;\n      }\n    }\n  }\n\n  getPadding(index) {\n    if (!this.formatted) this.format();\n\n    return (\n      this.glyphs.length === 0 || (!this.paddingForced && index < 2) ?\n        0 : this.padding\n    );\n  }\n\n  getWidth() {\n    if (!this.formatted) this.format();\n\n    return this.width;\n  }\n\n  setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n    this.formatted = false;\n    this.keySpec = keySpec;\n    this.cancelKeySpec = cancelKeySpec;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  // Alter the accidentals of a key spec one by one.\n  // Each alteration is a new accidental that replaces the\n  // original accidental (or the canceled one).\n  alterKey(alterKeySpec) {\n    this.formatted = false;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  convertToAlterAccList(alterKeySpec) {\n    const max = Math.min(alterKeySpec.length, this.accList.length);\n    for (let i = 0; i < max; ++i) {\n      if (alterKeySpec[i]) {\n        this.accList[i].type = alterKeySpec[i];\n      }\n    }\n  }\n\n  format() {\n    if (!this.stave) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n    }\n\n    this.width = 0;\n    this.glyphs = [];\n    this.xPositions = [0]; // initialize with initial x position\n    this.accList = Flow.keySignature(this.keySpec);\n    if (this.cancelKeySpec) {\n      this.convertToCancelAccList(this.cancelKeySpec);\n    }\n    const firstAccidentalType = this.accList.length > 0 ? this.accList[0].type : null;\n    if (this.alterKeySpec) {\n      this.convertToAlterAccList(this.alterKeySpec);\n    }\n\n    if (this.accList.length > 0) {\n      this.convertAccLines(this.stave.clef, firstAccidentalType);\n      for (let i = 0; i < this.accList.length; ++i) {\n        this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n      }\n    }\n\n    this.formatted = true;\n  }\n\n  draw() {\n    if (!this.x) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n    }\n\n    if (!this.formatted) this.format();\n    this.setRendered();\n\n    for (let i = 0; i < this.glyphs.length; i++) {\n      const glyph = this.glyphs[i];\n      const x = this.x + this.xPositions[i];\n      glyph.setStave(this.stave);\n      glyph.setContext(this.stave.context);\n      glyph.renderToStave(x);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\n\nimport { Vex } from './vex';\nimport { Glyph } from './glyph';\nimport { StaveModifier } from './stavemodifier';\n\nconst assertIsValidFraction = (timeSpec) => {\n  const numbers = timeSpec.split('/').filter(number => number !== '');\n\n  if (numbers.length !== 2) {\n    throw new Vex.RERR(\n      'BadTimeSignature',\n      `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`\n    );\n  }\n\n  numbers.forEach(number => {\n    if (isNaN(Number(number))) {\n      throw new Vex.RERR(\n        'BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain two valid numbers.`\n      );\n    }\n  });\n};\n\nexport class TimeSignature extends StaveModifier {\n  static get CATEGORY() { return 'timesignatures'; }\n\n  static get glyphs() {\n    return {\n      'C': {\n        code: 'v41',\n        point: 40,\n        line: 2,\n      },\n      'C|': {\n        code: 'vb6',\n        point: 40,\n        line: 2,\n      },\n    };\n  }\n\n  constructor(timeSpec = null, customPadding = 15, validate_args = true) {\n    super();\n    this.setAttribute('type', 'TimeSignature');\n    this.validate_args = validate_args;\n\n    if (timeSpec === null) return;\n\n    const padding = customPadding;\n\n    this.point = 40;\n    this.topLine = 2;\n    this.bottomLine = 4;\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setTimeSig(timeSpec);\n    this.setWidth(this.timeSig.glyph.getMetrics().width);\n    this.setPadding(padding);\n  }\n\n  getCategory() { return TimeSignature.CATEGORY; }\n\n  parseTimeSpec(timeSpec) {\n    if (timeSpec === 'C' || timeSpec === 'C|') {\n      const { line, code, point } = TimeSignature.glyphs[timeSpec];\n      return {\n        line,\n        num: false,\n        glyph: new Glyph(code, point),\n      };\n    }\n\n    if (this.validate_args) {\n      assertIsValidFraction(timeSpec);\n    }\n\n    const [topDigits, botDigits] = timeSpec\n      .split('/')\n      .map(number => number.split(''));\n\n    return {\n      num: true,\n      glyph: this.makeTimeSignatureGlyph(topDigits, botDigits),\n    };\n  }\n\n  makeTimeSignatureGlyph(topDigits, botDigits) {\n    const glyph = new Glyph('v0', this.point);\n    glyph.topGlyphs = [];\n    glyph.botGlyphs = [];\n\n    let topWidth = 0;\n    for (let i = 0; i < topDigits.length; ++i) {\n      const num = topDigits[i];\n      const topGlyph = new Glyph('v' + num, this.point);\n\n      glyph.topGlyphs.push(topGlyph);\n      topWidth += topGlyph.getMetrics().width;\n    }\n\n    let botWidth = 0;\n    for (let i = 0; i < botDigits.length; ++i) {\n      const num = botDigits[i];\n      const botGlyph = new Glyph('v' + num, this.point);\n\n      glyph.botGlyphs.push(botGlyph);\n      botWidth += botGlyph.getMetrics().width;\n    }\n\n    const width = topWidth > botWidth ? topWidth : botWidth;\n    const xMin = glyph.getMetrics().x_min;\n\n    glyph.getMetrics = () => ({\n      x_min: xMin,\n      x_max: xMin + width,\n      width,\n    });\n\n    const topStartX = (width - topWidth) / 2.0;\n    const botStartX = (width - botWidth) / 2.0;\n\n    const that = this;\n    glyph.renderToStave = function renderToStave(x) {\n      let start_x = x + topStartX;\n      for (let i = 0; i < this.topGlyphs.length; ++i) {\n        const glyph = this.topGlyphs[i];\n        Glyph.renderOutline(\n          this.context,\n          glyph.metrics.outline,\n          glyph.scale,\n          start_x + glyph.x_shift,\n          this.stave.getYForLine(that.topLine) + 1\n        );\n        start_x += glyph.getMetrics().width;\n      }\n\n      start_x = x + botStartX;\n      for (let i = 0; i < this.botGlyphs.length; ++i) {\n        const glyph = this.botGlyphs[i];\n        that.placeGlyphOnLine(glyph, this.stave, glyph.line);\n        Glyph.renderOutline(\n          this.context,\n          glyph.metrics.outline,\n          glyph.scale,\n          start_x + glyph.x_shift,\n          this.stave.getYForLine(that.bottomLine) + 1\n        );\n        start_x += glyph.getMetrics().width;\n      }\n    };\n\n    return glyph;\n  }\n\n  getTimeSig() {\n    return this.timeSig;\n  }\n\n  setTimeSig(timeSpec) {\n    this.timeSig = this.parseTimeSpec(timeSpec);\n    return this;\n  }\n\n  draw() {\n    if (!this.x) {\n      throw new Vex.RERR('TimeSignatureError', \"Can't draw time signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new Vex.RERR('TimeSignatureError', \"Can't draw time signature without stave.\");\n    }\n\n    this.setRendered();\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setContext(this.stave.context);\n    this.placeGlyphOnLine(this.timeSig.glyph, this.stave, this.timeSig.line);\n    this.timeSig.glyph.renderToStave(this.x);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\n\nexport class Volta extends StaveModifier {\n  static get CATEGORY() { return 'voltas'; }\n  static get type() {\n    return {\n      NONE: 1,\n      BEGIN: 2,\n      MID: 3,\n      END: 4,\n      BEGIN_END: 5,\n    };\n  }\n\n  constructor(type, number, x, y_shift) {\n    super();\n    this.setAttribute('type', 'Volta');\n    this.volta = type;\n    this.x = x;\n    this.y_shift = y_shift;\n    this.number = number;\n    this.font = {\n      family: 'sans-serif',\n      size: 9,\n      weight: 'bold',\n    };\n  }\n\n  getCategory() { return Volta.CATEGORY; }\n  setShiftY(y) { this.y_shift = y; return this; }\n\n  draw(stave, x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    let width = stave.width;\n    const top_y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    const vert_height = 1.5 * stave.options.spacing_between_lines_px;\n    switch (this.volta) {\n      case Volta.type.BEGIN:\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        break;\n      case Volta.type.END:\n        width -= 5;\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      case Volta.type.BEGIN_END:\n        width -= 3;\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      default:\n        break;\n    }\n    // If the beginning of a volta, draw measure number\n    if (this.volta === Volta.type.BEGIN || this.volta === Volta.type.BEGIN_END) {\n      ctx.save();\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n      ctx.restore();\n    }\n\n    ctx.fillRect(this.x + x, top_y, width, 1);\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Barline } from './stavebarline';\nimport { StaveModifier } from './stavemodifier';\nimport { Repetition } from './staverepetition';\nimport { StaveSection } from './stavesection';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { BoundingBox } from './boundingbox';\nimport { Clef } from './clef';\nimport { KeySignature } from './keysignature';\nimport { TimeSignature } from './timesignature';\nimport { Volta } from './stavevolta';\n\nexport class Stave extends Element {\n  constructor(x, y, width, options) {\n    super();\n    this.setAttribute('type', 'Stave');\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.formatted = false;\n    this.start_x = x + 5;\n    this.end_x = x + width;\n    this.modifiers = [];  // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n    this.measure = 0;\n    this.clef = 'treble';\n    this.font = {\n      family: 'sans-serif',\n      size: 8,\n      weight: '',\n    };\n    this.options = {\n      vertical_bar_width: 10,       // Width around vertical bar end-marker\n      glyph_spacing_px: 10,\n      num_lines: 5,\n      fill_style: '#999999',\n      left_bar: true,               // draw vertical bar on left\n      right_bar: true,               // draw vertical bar on right\n      spacing_between_lines_px: 10, // in pixels\n      space_above_staff_ln: 4,      // in staff lines\n      space_below_staff_ln: 4,      // in staff lines\n      top_text_position: 1,          // in staff lines\n    };\n    this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n    Vex.Merge(this.options, options);\n\n    this.resetLines();\n\n    const BARTYPE = Barline.type;\n    // beg bar\n    this.addModifier(new Barline(this.options.left_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n    // end bar\n    this.addEndModifier(new Barline(this.options.right_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n  }\n\n  space(spacing) { return this.options.spacing_between_lines_px * spacing; }\n\n  resetLines() {\n    this.options.line_config = [];\n    for (let i = 0; i < this.options.num_lines; i++) {\n      this.options.line_config.push({ visible: true });\n    }\n    this.height = (this.options.num_lines + this.options.space_above_staff_ln) *\n      this.options.spacing_between_lines_px;\n    this.options.bottom_text_position = this.options.num_lines;\n  }\n\n  getOptions() { return this.options; }\n\n  setNoteStartX(x) {\n    if (!this.formatted) this.format();\n\n    this.start_x = x;\n    return this;\n  }\n  getNoteStartX() {\n    if (!this.formatted) this.format();\n\n    return this.start_x;\n  }\n\n  getNoteEndX() {\n    if (!this.formatted) this.format();\n\n    return this.end_x;\n  }\n  getTieStartX() { return this.start_x; }\n  getTieEndX() { return this.x + this.width; }\n  getX() { return this.x; }\n  getNumLines() { return this.options.num_lines; }\n  setNumLines(lines) {\n    this.options.num_lines = parseInt(lines, 10);\n    this.resetLines();\n    return this;\n  }\n  setY(y) { this.y = y; return this; }\n\n  getTopLineTopY() {\n    return this.getYForLine(0) - (Flow.STAVE_LINE_THICKNESS / 2);\n  }\n  getBottomLineBottomY() {\n    return this.getYForLine(this.getNumLines() - 1) + (Flow.STAVE_LINE_THICKNESS / 2);\n  }\n\n  setX(x) {\n    const shift = x - this.x;\n    this.formatted = false;\n    this.x = x;\n    this.start_x += shift;\n    this.end_x += shift;\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const mod = this.modifiers[i];\n      if (mod.x !== undefined) {\n        mod.x += shift;\n      }\n    }\n    return this;\n  }\n\n  setWidth(width) {\n    this.formatted = false;\n    this.width = width;\n    this.end_x = this.x + width;\n\n    // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n    // this.modifiers[1].setX(this.end_x);\n    return this;\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  getStyle() {\n    return Object.assign({\n      fillStyle: this.options.fill_style,\n      strokeStyle: this.options.fill_style, // yes, this is correct for legacy compatibility\n      lineWidth: Flow.STAVE_LINE_THICKNESS,\n    }, this.style || {});\n  }\n\n  setMeasure(measure) { this.measure = measure; return this; }\n\n  /**\n   * Gets the pixels to shift from the beginning of the stave\n   * following the modifier at the provided index\n   * @param  {Number} index The index from which to determine the shift\n   * @return {Number}       The amount of pixels shifted\n   */\n  getModifierXShift(index = 0) {\n    if (typeof index !== 'number') {\n      throw new Vex.RERR('InvalidIndex', 'Must be of number type');\n    }\n\n    if (!this.formatted) this.format();\n\n    if (this.getModifiers(StaveModifier.Position.BEGIN).length === 1) {\n      return 0;\n    }\n\n    let start_x = this.start_x - this.x;\n    const begBarline = this.modifiers[0];\n    if (begBarline.getType() === Barline.type.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n      start_x -= begBarline.getWidth();\n    }\n\n    return start_x;\n  }\n\n  // Coda & Segno Symbol functions\n  setRepetitionTypeLeft(type, y) {\n    this.modifiers.push(new Repetition(type, this.x, y));\n    return this;\n  }\n\n  setRepetitionTypeRight(type, y) {\n    this.modifiers.push(new Repetition(type, this.x, y));\n    return this;\n  }\n\n  // Volta functions\n  setVoltaType(type, number_t, y) {\n    this.modifiers.push(new Volta(type, number_t, this.x, y));\n    return this;\n  }\n\n  // Section functions\n  setSection(section, y) {\n    this.modifiers.push(new StaveSection(section, this.x, y));\n    return this;\n  }\n\n  // Tempo functions\n  setTempo(tempo, y) {\n    this.modifiers.push(new StaveTempo(tempo, this.x, y));\n    return this;\n  }\n\n  // Text functions\n  setText(text, position, options) {\n    this.modifiers.push(new StaveText(text, position, options));\n    return this;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  getSpacingBetweenLines() {\n    return this.options.spacing_between_lines_px;\n  }\n\n  getBoundingBox() {\n    return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n  }\n\n  getBottomY() {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const score_bottom = this.getYForLine(options.num_lines) +\n      (options.space_below_staff_ln * spacing);\n\n    return score_bottom;\n  }\n\n  getBottomLineY() {\n    return this.getYForLine(this.options.num_lines);\n  }\n\n  // This returns the y for the *center* of a staff line\n  getYForLine(line) {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n\n    const y = this.y + (line * spacing) + (headroom * spacing);\n\n    return y;\n  }\n\n  getLineForY(y) {\n    // Does the reverse of getYForLine - somewhat dumb and just calls\n    // getYForLine until the right value is reaches\n\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    return ((y - this.y) / spacing) - headroom;\n  }\n\n  getYForTopText(line) {\n    const l = line || 0;\n    return this.getYForLine(-l - this.options.top_text_position);\n  }\n\n  getYForBottomText(line) {\n    const l = line || 0;\n    return this.getYForLine(this.options.bottom_text_position + l);\n  }\n\n  getYForNote(line) {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    const y = this.y + (headroom * spacing) + (5 * spacing) - (line * spacing);\n\n    return y;\n  }\n\n  getYForGlyphs() {\n    return this.getYForLine(3);\n  }\n\n  addModifier(modifier, position) {\n    if (position !== undefined) {\n      modifier.setPosition(position);\n    }\n\n    modifier.setStave(this);\n    this.formatted = false;\n    this.modifiers.push(modifier);\n    return this;\n  }\n\n  addEndModifier(modifier) {\n    this.addModifier(modifier, StaveModifier.Position.END);\n    return this;\n  }\n\n  // Bar Line functions\n  setBegBarType(type) {\n    // Only valid bar types at beginning of stave is none, single or begin repeat\n    const { SINGLE, REPEAT_BEGIN, NONE } = Barline.type;\n    if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n      this.modifiers[0].setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setEndBarType(type) {\n    // Repeat end not valid at end of stave\n    if (type !== Barline.type.REPEAT_BEGIN) {\n      this.modifiers[1].setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setClef(clefSpec, size, annotation, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    this.clef = clefSpec;\n    const clefs = this.getModifiers(position, Clef.CATEGORY);\n    if (clefs.length === 0) {\n      this.addClef(clefSpec, size, annotation, position);\n    } else {\n      clefs[0].setType(clefSpec, size, annotation);\n    }\n\n    return this;\n  }\n\n  setEndClef(clefSpec, size, annotation) {\n    this.setClef(clefSpec, size, annotation, StaveModifier.Position.END);\n    return this;\n  }\n\n  setKeySignature(keySpec, cancelKeySpec, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    const keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n    if (keySignatures.length === 0) {\n      this.addKeySignature(keySpec, cancelKeySpec, position);\n    } else {\n      keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n    }\n\n    return this;\n  }\n\n  setEndKeySignature(keySpec, cancelKeySpec) {\n    this.setKeySignature(keySpec, cancelKeySpec, StaveModifier.Position.END);\n    return this;\n  }\n\n  setTimeSignature(timeSpec, customPadding, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n    if (timeSignatures.length === 0) {\n      this.addTimeSignature(timeSpec, customPadding, position);\n    } else {\n      timeSignatures[0].setTimeSig(timeSpec);\n    }\n\n    return this;\n  }\n\n  setEndTimeSignature(timeSpec, customPadding) {\n    this.setTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n    return this;\n  }\n\n  addKeySignature(keySpec, cancelKeySpec, position) {\n    this.addModifier(new KeySignature(keySpec, cancelKeySpec), position);\n    return this;\n  }\n\n  addClef(clef, size, annotation, position) {\n    if (position === undefined || position === StaveModifier.Position.BEGIN) {\n      this.clef = clef;\n    }\n\n    this.addModifier(new Clef(clef, size, annotation), position);\n    return this;\n  }\n\n  addEndClef(clef, size, annotation) {\n    this.addClef(clef, size, annotation, StaveModifier.Position.END);\n    return this;\n  }\n\n  addTimeSignature(timeSpec, customPadding, position) {\n    this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n    return this;\n  }\n\n  addEndTimeSignature(timeSpec, customPadding) {\n    this.addTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n    return this;\n  }\n\n  // Deprecated\n  addTrebleGlyph() {\n    this.addClef('treble');\n    return this;\n  }\n\n  getModifiers(position, category) {\n    if (position === undefined) return this.modifiers;\n\n    return this.modifiers.filter(modifier =>\n      position === modifier.getPosition() &&\n      (category === undefined || category === modifier.getCategory())\n    );\n  }\n\n  sortByCategory(items, order) {\n    for (let i = items.length - 1; i >= 0; i--) {\n      for (let j = 0; j < i; j++) {\n        if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n          const temp = items[j];\n          items[j] = items[j + 1];\n          items[j + 1] = temp;\n        }\n      }\n    }\n  }\n\n  format() {\n    const begBarline = this.modifiers[0];\n    const endBarline = this.modifiers[1];\n\n    const begModifiers = this.getModifiers(StaveModifier.Position.BEGIN);\n    const endModifiers = this.getModifiers(StaveModifier.Position.END);\n\n    this.sortByCategory(begModifiers, {\n      barlines: 0, clefs: 1, keysignatures: 2, timesignatures: 3,\n    });\n\n    this.sortByCategory(endModifiers, {\n      timesignatures: 0, keysignatures: 1, barlines: 2, clefs: 3,\n    });\n\n    if (begModifiers.length > 1 &&\n      begBarline.getType() === Barline.type.REPEAT_BEGIN) {\n      begModifiers.push(begModifiers.splice(0, 1)[0]);\n      begModifiers.splice(0, 0, new Barline(Barline.type.SINGLE));\n    }\n\n    if (endModifiers.indexOf(endBarline) > 0) {\n      endModifiers.splice(0, 0, new Barline(Barline.type.NONE));\n    }\n\n    let width;\n    let padding;\n    let modifier;\n    let offset = 0;\n    let x = this.x;\n    for (let i = 0; i < begModifiers.length; i++) {\n      modifier = begModifiers[i];\n      padding = modifier.getPadding(i + offset);\n      width = modifier.getWidth();\n\n      x += padding;\n      modifier.setX(x);\n      x += width;\n\n      if (padding + width === 0) offset--;\n    }\n\n    this.start_x = x;\n    x = this.x + this.width;\n\n    const widths = {\n      left: 0,\n      right: 0,\n      paddingRight: 0,\n      paddingLeft: 0,\n    };\n\n    let lastBarlineIdx = 0;\n\n    for (let i = 0; i < endModifiers.length; i++) {\n      modifier = endModifiers[i];\n      lastBarlineIdx = (modifier.getCategory() === 'barlines') ? i : lastBarlineIdx;\n\n      widths.right = 0;\n      widths.left = 0;\n      widths.paddingRight = 0;\n      widths.paddingLeft = 0;\n      const layoutMetrics = modifier.getLayoutMetrics();\n\n      if (layoutMetrics) {\n        if (i !== 0) {\n          widths.right = layoutMetrics.xMax || 0;\n          widths.paddingRight = layoutMetrics.paddingRight || 0;\n        }\n        widths.left = (-layoutMetrics.xMin) || 0;\n        widths.paddingLeft = layoutMetrics.paddingLeft || 0;\n\n        if (i === endModifiers.length - 1) {\n          widths.paddingLeft = 0;\n        }\n      } else {\n        widths.paddingRight = modifier.getPadding(i - lastBarlineIdx);\n        if (i !== 0) {\n          widths.right = modifier.getWidth();\n        }\n        if (i === 0) {\n          widths.left = modifier.getWidth();\n        }\n      }\n      x -= widths.paddingRight;\n      x -= widths.right;\n\n      modifier.setX(x);\n\n      x -= widths.left;\n      x -= widths.paddingLeft;\n    }\n\n    this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n    this.formatted = true;\n  }\n\n  /**\n   * All drawing functions below need the context to be set.\n   */\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    if (!this.formatted) this.format();\n\n    const num_lines = this.options.num_lines;\n    const width = this.width;\n    const x = this.x;\n    let y;\n\n    // Render lines\n    for (let line = 0; line < num_lines; line++) {\n      y = this.getYForLine(line);\n\n      this.applyStyle();\n      if (this.options.line_config[line].visible) {\n        this.context.beginPath();\n        this.context.moveTo(x, y);\n        this.context.lineTo(x + width, y);\n        this.context.stroke();\n      }\n      this.restoreStyle();\n    }\n\n    // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n    for (let i = 0; i < this.modifiers.length; i++) {\n      // Only draw modifier if it has a draw function\n      if (typeof this.modifiers[i].draw === 'function') {\n        this.modifiers[i].draw(this, this.getModifierXShift(i));\n      }\n    }\n\n    // Render measure numbers\n    if (this.measure > 0) {\n      this.context.save();\n      this.context.setFont(this.font.family, this.font.size, this.font.weight);\n      const text_width = this.context.measureText('' + this.measure).width;\n      y = this.getYForTopText(0) + 3;\n      this.context.fillText('' + this.measure, this.x - text_width / 2, y);\n      this.context.restore();\n    }\n\n    return this;\n  }\n\n  // Draw Simple barlines for backward compatability\n  // Do not delete - draws the beginning bar of the stave\n  drawVertical(x, isDouble) {\n    this.drawVerticalFixed(this.x + x, isDouble);\n  }\n\n  drawVerticalFixed(x, isDouble) {\n    this.checkContext();\n\n    const top_line = this.getYForLine(0);\n    const bottom_line = this.getYForLine(this.options.num_lines - 1);\n    if (isDouble) {\n      this.context.fillRect(x - 3, top_line, 1, bottom_line - top_line + 1);\n    }\n    this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n  }\n\n  drawVerticalBar(x) {\n    this.drawVerticalBarFixed(this.x + x, false);\n  }\n\n  drawVerticalBarFixed(x) {\n    this.checkContext();\n\n    const top_line = this.getYForLine(0);\n    const bottom_line = this.getYForLine(this.options.num_lines - 1);\n    this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n  }\n\n  /**\n   * Get the current configuration for the Stave.\n   * @return {Array} An array of configuration objects.\n   */\n  getConfigForLines() {\n    return this.options.line_config;\n  }\n\n  /**\n   * Configure properties of the lines in the Stave\n   * @param line_number The index of the line to configure.\n   * @param line_config An configuration object for the specified line.\n   * @throws Vex.RERR \"StaveConfigError\" When the specified line number is out of\n   *   range of the number of lines specified in the constructor.\n   */\n  setConfigForLine(line_number, line_config) {\n    if (line_number >= this.options.num_lines || line_number < 0) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        'The line number must be within the range of the number of lines in the Stave.'\n      );\n    }\n\n    if (line_config.visible === undefined) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        \"The line configuration object is missing the 'visible' property.\"\n      );\n    }\n\n    if (typeof (line_config.visible) !== 'boolean') {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        \"The line configuration objects 'visible' property must be true or false.\"\n      );\n    }\n\n    this.options.line_config[line_number] = line_config;\n\n    return this;\n  }\n\n  /**\n   * Set the staff line configuration array for all of the lines at once.\n   * @param lines_configuration An array of line configuration objects.  These objects\n   *   are of the same format as the single one passed in to setLineConfiguration().\n   *   The caller can set null for any line config entry if it is desired that the default be used\n   * @throws Vex.RERR \"StaveConfigError\" When the lines_configuration array does not have\n   *   exactly the same number of elements as the num_lines configuration object set in\n   *   the constructor.\n   */\n  setConfigForLines(lines_configuration) {\n    if (lines_configuration.length !== this.options.num_lines) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        'The length of the lines configuration array must match the number of lines in the Stave'\n      );\n    }\n\n    // Make sure the defaults are present in case an incomplete set of\n    //  configuration options were supplied.\n    // eslint-disable-next-line\n    for (const line_config in lines_configuration) {\n      // Allow 'null' to be used if the caller just wants the default for a particular node.\n      if (!lines_configuration[line_config]) {\n        lines_configuration[line_config] = this.options.line_config[line_config];\n      }\n      Vex.Merge(this.options.line_config[line_config], lines_configuration[line_config]);\n    }\n\n    this.options.line_config = lines_configuration;\n\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Stave } from './stave';\n\nexport class TabStave extends Stave {\n  constructor(x, y, width, options) {\n    const tab_options = {\n      spacing_between_lines_px: 13,\n      num_lines: 6,\n      top_text_position: 1,\n    };\n\n    Vex.Merge(tab_options, options);\n    super(x, y, width, tab_options);\n    this.setAttribute('type', 'TabStave');\n  }\n\n  getYForGlyphs() {\n    return this.getYForLine(2.5);\n  }\n\n  // Deprecated\n  addTabGlyph() {\n    this.addClef('tab');\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.js` for usage examples\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Dot } from './dot';\nimport { Glyph } from './glyph';\n\n// Gets the unused strings grouped together if consecutive.\n//\n// Parameters:\n// * num_lines - The number of lines\n// * strings_used - An array of numbers representing which strings have fret positions\nfunction getUnusedStringGroups(num_lines, strings_used) {\n  const stem_through = [];\n  let group = [];\n  for (let string = 1; string <= num_lines; string++) {\n    const is_used = strings_used.indexOf(string) > -1;\n\n    if (!is_used) {\n      group.push(string);\n    } else {\n      stem_through.push(group);\n      group = [];\n    }\n  }\n  if (group.length > 0) stem_through.push(group);\n\n  return stem_through;\n}\n\n// Gets groups of points that outline the partial stem lines\n// between fret positions\n//\n// Parameters:\n// * stem_Y - The `y` coordinate the stem is located on\n// * unused_strings - An array of groups of unused strings\n// * stave - The stave to use for reference\n// * stem_direction - The direction of the stem\nfunction getPartialStemLines(stem_y, unused_strings, stave, stem_direction) {\n  const up_stem = stem_direction !== 1;\n  const down_stem = stem_direction !== -1;\n\n  const line_spacing = stave.getSpacingBetweenLines();\n  const total_lines = stave.getNumLines();\n\n  const stem_lines = [];\n\n  unused_strings.forEach(strings => {\n    const containsLastString = strings.indexOf(total_lines) > -1;\n    const containsFirstString =  strings.indexOf(1) > -1;\n\n    if ((up_stem && containsFirstString) ||\n       (down_stem && containsLastString)) {\n      return;\n    }\n\n    // If there's only one string in the group, push a duplicate value.\n    // We do this because we need 2 strings to convert into upper/lower y\n    // values.\n    if (strings.length === 1) {\n      strings.push(strings[0]);\n    }\n\n    const line_ys = [];\n    // Iterate through each group string and store it's y position\n    strings.forEach((string, index, strings) => {\n      const isTopBound = string === 1;\n      const isBottomBound = string === total_lines;\n\n      // Get the y value for the appropriate staff line,\n      // we adjust for a 0 index array, since string numbers are index 1\n      let y = stave.getYForLine(string - 1);\n\n      // Unless the string is the first or last, add padding to each side\n      // of the line\n      if (index === 0 && !isTopBound) {\n        y -= line_spacing / 2 - 1;\n      } else if (index === strings.length - 1 && !isBottomBound) {\n        y += line_spacing / 2 - 1;\n      }\n\n      // Store the y value\n      line_ys.push(y);\n\n      // Store a subsequent y value connecting this group to the main\n      // stem above/below the stave if it's the top/bottom string\n      if (stem_direction === 1 && isTopBound) {\n        line_ys.push(stem_y - 2);\n      } else if (stem_direction === -1 && isBottomBound) {\n        line_ys.push(stem_y + 2);\n      }\n    });\n\n    // Add the sorted y values to the\n    stem_lines.push(line_ys.sort((a, b) => a - b));\n  });\n\n  return stem_lines;\n}\n\nexport class TabNote extends StemmableNote {\n  static get CATEGORY() { return 'tabnotes'; }\n\n  // Initialize the TabNote with a `tab_struct` full of properties\n  // and whether to `draw_stem` when rendering the note\n  constructor(tab_struct, draw_stem) {\n    super(tab_struct);\n    this.setAttribute('type', 'TabNote');\n\n    this.ghost = false; // Renders parenthesis around notes\n    // Note properties\n    //\n    // The fret positions in the note. An array of `{ str: X, fret: X }`\n    this.positions = tab_struct.positions;\n\n    // Render Options\n    Vex.Merge(this.render_options, {\n      // font size for note heads and rests\n      glyph_font_scale: Flow.DEFAULT_TABLATURE_FONT_SCALE,\n      // Flag to draw a stem\n      draw_stem,\n      // Flag to draw dot modifiers\n      draw_dots: draw_stem,\n      // Flag to extend the main stem through the stave and fret positions\n      draw_stem_through_stave: false,\n      // vertical shift from stave line\n      y_shift: 0,\n      // normal glyph scale\n      scale: 1.0,\n      // default tablature font\n      font: '10pt Arial',\n    });\n\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `Invalid note initialization data (No glyph found): ${JSON.stringify(tab_struct)}`\n      );\n    }\n\n    this.buildStem();\n\n    if (tab_struct.stem_direction) {\n      this.setStemDirection(tab_struct.stem_direction);\n    } else {\n      this.setStemDirection(Stem.UP);\n    }\n\n    // Renders parenthesis around notes\n    this.ghost = false;\n    this.updateWidth();\n  }\n\n  reset() {\n    if (this.stave) this.setStave(this.stave);\n  }\n\n  // The ModifierContext category\n  getCategory() { return TabNote.CATEGORY; }\n\n  // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n  // Often used for indicating frets that are being bent to\n  setGhost(ghost) {\n    this.ghost = ghost;\n    this.updateWidth();\n    return this;\n  }\n\n  // Determine if the note has a stem\n  hasStem() { return this.render_options.draw_stem; }\n\n  // Get the default stem extension for the note\n  getStemExtension() {\n    const glyph = this.getGlyph();\n\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.tabnote_stem_up_extension\n        : glyph.tabnote_stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Add a dot to the note\n  addDot() {\n    const dot = new Dot();\n    this.dots += 1;\n    return this.addModifier(dot, 0);\n  }\n\n  // Calculate and store the width of the note\n  updateWidth() {\n    this.glyphs = [];\n    this.width = 0;\n    for (let i = 0; i < this.positions.length; ++i) {\n      let fret = this.positions[i].fret;\n      if (this.ghost) fret = '(' + fret + ')';\n      const glyph = Flow.tabToGlyph(fret, this.render_options.scale);\n      this.glyphs.push(glyph);\n      this.width = Math.max(glyph.getWidth(), this.width);\n    }\n    // For some reason we associate a notehead glyph with a TabNote, and this\n    // glyph is used for certain width calculations. Of course, this is totally\n    // incorrect since a notehead is a poor approximation for the dimensions of\n    // a fret number which can have multiple digits. As a result, we must\n    // overwrite getWidth() to return the correct width\n    this.glyph.getWidth = () => this.width;\n  }\n\n  // Set the `stave` to the note\n  setStave(stave) {\n    super.setStave(stave);\n    this.context = stave.context;\n\n    // Calculate the fret number width based on font used\n    let i;\n    if (this.context) {\n      const ctx = this.context;\n      this.width = 0;\n      for (i = 0; i < this.glyphs.length; ++i) {\n        const glyph = this.glyphs[i];\n        const text = '' + glyph.text;\n        if (text.toUpperCase() !== 'X') {\n          ctx.save();\n          ctx.setRawFont(this.render_options.font);\n          glyph.width = ctx.measureText(text).width;\n          ctx.restore();\n          glyph.getWidth = () => glyph.width;\n        }\n        this.width = Math.max(glyph.getWidth(), this.width);\n      }\n      this.glyph.getWidth = () => this.width;\n    }\n\n    // we subtract 1 from `line` because getYForLine expects a 0-based index,\n    // while the position.str is a 1-based index\n    const ys = this.positions.map(({ str: line }) => stave.getYForLine(line - 1));\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      this.stem.setYBounds(this.getStemY(), this.getStemY());\n    }\n\n    return this;\n  }\n\n  // Get the fret positions for the note\n  getPositions() { return this.positions; }\n\n  // Add self to the provided modifier context `mc`\n  addToModifierContext(mc) {\n    this.setModifierContext(mc);\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addModifier(this.modifiers[i]);\n    }\n    this.modifierContext.addModifier(this);\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Get the `x` coordinate to the right of the note\n  getTieRightX() {\n    let tieStartX = this.getAbsoluteX();\n    const note_glyph_width = this.glyph.getWidth();\n    tieStartX += note_glyph_width / 2;\n    tieStartX += (-this.width / 2) + this.width + 2;\n\n    return tieStartX;\n  }\n\n  // Get the `x` coordinate to the left of the note\n  getTieLeftX() {\n    let tieEndX = this.getAbsoluteX();\n    const note_glyph_width = this.glyph.getWidth();\n    tieEndX += note_glyph_width / 2;\n    tieEndX -= (this.width / 2) + 2;\n\n    return tieEndX;\n  }\n\n  // Get the default `x` and `y` coordinates for a modifier at a specific\n  // `position` at a fret position `index`\n  getModifierStartXY(position, index) {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    let x = 0;\n    if (position === Modifier.Position.LEFT) {\n      x = -1 * 2;  // extra_left_px\n    } else if (position === Modifier.Position.RIGHT) {\n      x = this.width + 2; // extra_right_px\n    } else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n      const note_glyph_width = this.glyph.getWidth();\n      x = note_glyph_width / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Get the default line for rest\n  getLineForRest() { return this.positions[0].str; }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return;\n    if (this.modifierContext) this.modifierContext.preFormat();\n    // width is already set during init()\n    this.setPreFormatted(true);\n  }\n\n  // Get the x position for the stem\n  getStemX() { return this.getCenterGlyphX(); }\n\n  // Get the y position for the stem\n  getStemY() {\n    const num_lines = this.stave.getNumLines();\n\n    // The decimal staff line amounts provide optimal spacing between the\n    // fret number and the stem\n    const stemUpLine = -0.5;\n    const stemDownLine = num_lines - 0.5;\n    const stemStartLine = Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n\n    return this.stave.getYForLine(stemStartLine);\n  }\n\n  // Get the stem extents for the tabnote\n  getStemExtents() {\n    return this.stem.getExtents();\n  }\n\n  // Draw the fal onto the context\n  drawFlag() {\n    const {\n      beam, glyph, context, stem, stem_direction,\n      render_options: { draw_stem, glyph_font_scale },\n    } = this;\n\n    const shouldDrawFlag = beam == null && draw_stem;\n\n    // Now it's the flag's turn.\n    if (glyph.flag && shouldDrawFlag) {\n      const flag_x = this.getStemX() + 1;\n      const flag_y = this.getStemY() - stem.getHeight();\n\n      const flag_code = stem_direction === Stem.DOWN\n        ? glyph.code_flag_downstem // Down stems have flags on the left.\n        : glyph.code_flag_upstem;\n\n      // Draw the Flag\n      Glyph.renderGlyph(context, flag_x, flag_y, glyph_font_scale, flag_code);\n    }\n  }\n\n  // Render the modifiers onto the context\n  drawModifiers() {\n    // Draw the modifiers\n    this.modifiers.forEach((modifier) => {\n      // Only draw the dots if enabled\n      if (modifier.getCategory() === 'dots' && !this.render_options.draw_dots) return;\n\n      modifier.setContext(this.context);\n      modifier.draw();\n    });\n  }\n\n  // Render the stem extension through the fret positions\n  drawStemThrough() {\n    const stem_x = this.getStemX();\n    const stem_y = this.getStemY();\n    const ctx = this.context;\n\n    const stem_through = this.render_options.draw_stem_through_stave;\n    const draw_stem = this.render_options.draw_stem;\n    if (draw_stem && stem_through) {\n      const total_lines = this.stave.getNumLines();\n      const strings_used = this.positions.map(position => position.str);\n\n      const unused_strings = getUnusedStringGroups(total_lines, strings_used);\n      const stem_lines = getPartialStemLines(\n        stem_y,\n        unused_strings,\n        this.getStave(),\n        this.getStemDirection()\n      );\n\n      ctx.save();\n      ctx.setLineWidth(Stem.WIDTH);\n      stem_lines.forEach(bounds => {\n        if (bounds.length === 0) return;\n\n        ctx.beginPath();\n        ctx.moveTo(stem_x, bounds[0]);\n        ctx.lineTo(stem_x, bounds[bounds.length - 1]);\n        ctx.stroke();\n        ctx.closePath();\n      });\n      ctx.restore();\n    }\n  }\n\n  // Render the fret positions onto the context\n  drawPositions() {\n    const ctx = this.context;\n    const x = this.getAbsoluteX();\n    const ys = this.ys;\n    for (let i = 0; i < this.positions.length; ++i) {\n      const y = ys[i] + this.render_options.y_shift;\n      const glyph = this.glyphs[i];\n\n      // Center the fret text beneath the notation note head\n      const note_glyph_width = this.glyph.getWidth();\n      const tab_x = x + (note_glyph_width / 2) - (glyph.getWidth() / 2);\n\n      // FIXME: Magic numbers.\n      ctx.clearRect(tab_x - 2, y - 3, glyph.getWidth() + 4, 6);\n\n      if (glyph.code) {\n        Glyph.renderGlyph(ctx, tab_x, y,\n          this.render_options.glyph_font_scale * this.render_options.scale,\n          glyph.code);\n      } else {\n        ctx.save();\n        ctx.setRawFont(this.render_options.font);\n        const text = glyph.text.toString();\n        ctx.fillText(text, tab_x, y + 5 * this.render_options.scale);\n        ctx.restore();\n      }\n    }\n  }\n\n  // The main rendering function for the entire note\n  draw() {\n    this.checkContext();\n\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    this.setRendered();\n    const render_stem = this.beam == null && this.render_options.draw_stem;\n\n    this.drawPositions();\n    this.drawStemThrough();\n\n    const stem_x = this.getStemX();\n\n    this.stem.setNoteHeadXBounds(stem_x, stem_x);\n\n    if (render_stem) {\n      this.context.openGroup('stem', null, { pointerBBox: true });\n      this.stem.setContext(this.context).draw();\n      this.context.closeGroup();\n    }\n\n    this.drawFlag();\n    this.drawModifiers();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Balazs Forian-Szabo\n//\n// ## Description\n//\n// This file implements `VibratoBrackets`\n// that renders vibrato effect between two notes.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Vibrato } from './vibrato';\n\n// To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`.\nfunction L(...args) { if (VibratoBracket.DEBUG) Vex.L('Vex.Flow.VibratoBracket', args); }\n\nexport class VibratoBracket extends Element {\n  // bracket_data = {\n  //   start: Vex.Flow.Note (optional)\n  //   stop: Vex.Flow.Note (optional)\n  // };\n  // Either the stop or start note must be set, or both of them.\n  // A null value for the start or stop note indicates that the vibrato\n  // is drawn from the beginning or until the end of the stave accordingly.\n  constructor(bracket_data) {\n    super();\n    this.setAttribute('type', 'VibratoBracket');\n\n    this.start = bracket_data.start;\n    this.stop = bracket_data.stop;\n\n    this.line = 1;\n\n    this.render_options = {\n      harsh: false,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n  }\n\n  // Set line position of the vibrato bracket\n  setLine(line) { this.line = line; return this; }\n  setHarsh(harsh) { this.render_options.harsh = harsh; return this; }\n\n  // Draw the vibrato bracket on the rendering context\n  draw() {\n    const ctx = this.context;\n    this.setRendered();\n\n    const y = (this.start)\n      ? this.start.getStave().getYForTopText(this.line)\n      : this.stop.getStave().getYForTopText(this.line);\n\n    // If start note is not set then vibrato will be drawn\n    // from the beginning of the stave\n    const start_x = (this.start)\n      ? this.start.getAbsoluteX()\n      : this.stop.getStave().getTieStartX();\n\n    // If stop note is not set then vibrato will be drawn\n    // until the end of the stave\n    const stop_x = (this.stop)\n      ? this.stop.getAbsoluteX() - this.stop.getWidth() - 5\n      : this.start.getStave().getTieEndX() - 10;\n\n    this.render_options.vibrato_width = stop_x - start_x;\n\n    L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n\n    Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements multiple measure rests\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Glyph } from './glyph';\nimport { NoteHead } from './notehead';\nimport { StaveModifier } from './stavemodifier';\nimport { TimeSignature } from './timesignature';\n\nlet semibrave_rest;\nfunction get_semibrave_rest() {\n  if (!semibrave_rest) {\n    const notehead = new NoteHead({ duration: 'w', note_type: 'r' });\n    semibrave_rest = {\n      glyph_font_scale: notehead.render_options.glyph_font_scale,\n      glyph_code: notehead.glyph_code,\n      width: notehead.getWidth(),\n    };\n  }\n  return semibrave_rest;\n}\n\nexport class MultiMeasureRest extends Element {\n  // Parameters:\n  // * `number_of_measures` - Number of measures.\n  // * `options` - The options object.\n  //   * `show_number` - Show number of measures string or not.\n  //   * `number_line` -  Staff line to render the number of measures string.\n  //   * `number_glyph_point` - Size of the number of measures string glyphs.\n  //   * `padding_left` - Left padding from stave x.\n  //   * `padding_right` - Right padding from stave end x.\n  //   * `line` - Staff line to render rest line or rest symbols.\n  //   * `spacing_between_lines_px` - Spacing between staff lines to\n  // resolve serif height or {2-bar and 4-bar}rest symbol height.\n  //   * `line_thickness` - Rest line thickness.\n  //   * `serif_thickness` - Rest serif line thickness.\n  //   * `use_symbols` - Use rest symbols or not.\n  //   * `symbol_spacing` - Spacing between each rest symbol glyphs.\n  //   * `semibrave_rest_glyph_scale` - Size of the semibrave(1-bar) rest symbol.\n  constructor(number_of_measures, options) {\n    super();\n    this.setAttribute('type', 'MultiMeasureRest');\n\n    this.render_options = {\n      show_number: true,\n      number_line: -0.5,\n      number_glyph_point: 40, // same as TimeSignature.\n\n      padding_left: undefined,\n      padding_right: undefined,\n\n      line: 2,\n\n      spacing_between_lines_px: 10, // same as Stave.\n\n      line_thickness: undefined,\n      serif_thickness: 2,\n\n      use_symbols: false,\n      symbol_spacing: undefined,\n\n      /* same as NoteHead. */\n      semibrave_rest_glyph_scale: Flow.DEFAULT_NOTATION_FONT_SCALE,\n    };\n    Vex.Merge(this.render_options, options);\n\n    this.number_of_measures = number_of_measures;\n    this.xs = {\n      left: NaN,\n      right: NaN,\n    };\n  }\n\n  getXs() {\n    return this.xs;\n  }\n\n  setStave(stave) {\n    this.stave = stave;\n    return this;\n  }\n\n  getStave() {\n    return this.stave;\n  }\n\n  drawLine(ctx, left, right, sbl) {\n    const y = this.stave.getYForLine(this.render_options.line);\n    const padding = (right - left) * 0.1;\n\n    left += padding;\n    right -= padding;\n\n    const serif = {\n      thickness: this.render_options.serif_thickness,\n      height: sbl,\n    };\n    let lineThicknessHalf = sbl * 0.25;\n    if (!isNaN(this.render_options.line_thickness)) {\n      lineThicknessHalf = this.render_options.line_thickness * 0.5;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(left, y - sbl);\n    ctx.lineTo(left + serif.thickness, y - sbl);\n    ctx.lineTo(left + serif.thickness, y - lineThicknessHalf);\n    ctx.lineTo(right - serif.thickness, y - lineThicknessHalf);\n    ctx.lineTo(right - serif.thickness, y - sbl);\n    ctx.lineTo(right, y - sbl);\n    ctx.lineTo(right, y + sbl);\n    ctx.lineTo(right - serif.thickness, y + sbl);\n    ctx.lineTo(right - serif.thickness, y + lineThicknessHalf);\n    ctx.lineTo(left + serif.thickness, y + lineThicknessHalf);\n    ctx.lineTo(left + serif.thickness, y + sbl);\n    ctx.lineTo(left, y + sbl);\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  drawSymbols(ctx, left, right, sbl) {\n    const n4 = Math.floor(this.number_of_measures / 4);\n    const n = this.number_of_measures % 4;\n    const n2 = Math.floor(n / 2);\n    const n1 = n % 2;\n\n    const semibrave_rest = get_semibrave_rest();\n    const semibrave_rest_width = semibrave_rest.width *\n      (this.render_options.semibrave_rest_glyph_scale / semibrave_rest.glyph_font_scale);\n    const glyphs = {\n      2: {\n        width: semibrave_rest_width * 0.5,\n        height: sbl,\n      },\n      1: {\n        width: semibrave_rest_width,\n      },\n    };\n\n    let spacing = semibrave_rest_width * 1.35;\n    if (!isNaN(this.render_options.symbol_spacing)) {\n      spacing = this.render_options.symbol_spacing;\n    }\n\n    const width = (n4 * glyphs[2].width) + (n2 * glyphs[2].width)\n      + (n1 * glyphs[1].width) + ((n4 + n2 + n1 - 1) * spacing);\n    let x = left + ((right - left) * 0.5) - (width * 0.5);\n    const yTop = this.stave.getYForLine(this.render_options.line - 1);\n    const yMiddle = this.stave.getYForLine(this.render_options.line);\n    const yBottom = this.stave.getYForLine(this.render_options.line + 1);\n\n    ctx.save();\n    ctx.setStrokeStyle('none');\n    ctx.setLineWidth(0);\n\n    for (let i = 0; i < n4; ++i) {\n      ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n      ctx.fillRect(x, yBottom - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n      x += glyphs[2].width + spacing;\n    }\n    for (let i = 0; i < n2; ++i) {\n      ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n      x += glyphs[2].width + spacing;\n    }\n    for (let i = 0; i < n1; ++i) {\n      Glyph.renderGlyph(ctx, x, yTop, this.render_options.semibrave_rest_glyph_scale,\n        semibrave_rest.glyph_code);\n      x += glyphs[1].width + spacing;\n    }\n\n    ctx.restore();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const ctx = this.context;\n    const stave = this.stave;\n    const sbl = this.render_options.spacing_between_lines_px;\n\n    let left = stave.getNoteStartX();\n    let right = stave.getNoteEndX();\n\n    // FIXME: getNoteStartX() returns x+5(barline width) and\n    // getNoteEndX() returns x + width(no barline width) by default. how to fix?\n    const begModifiers = stave.getModifiers(StaveModifier.Position.BEGIN);\n    if (begModifiers.length === 1 && begModifiers[0].getCategory() === 'barlines') {\n      left -= begModifiers[0].getWidth();\n    }\n\n    if (!isNaN(this.render_options.padding_left)) {\n      left = stave.getX() + this.render_options.padding_left;\n    }\n\n    if (!isNaN(this.render_options.padding_right)) {\n      right = stave.getX() + stave.getWidth() - this.render_options.padding_right;\n    }\n\n    this.xs.left = left;\n    this.xs.right = right;\n\n    if (this.render_options.use_symbols) {\n      this.drawSymbols(ctx, left, right, sbl);\n    } else {\n      this.drawLine(ctx, left, right, sbl);\n    }\n\n    if (this.render_options.show_number) {\n      const timeSpec = '/' + this.number_of_measures;\n      const timeSig = new TimeSignature(null, undefined, false);\n      timeSig.point = this.render_options.number_glyph_point;\n      timeSig.setTimeSig(timeSpec);\n      timeSig.setStave(stave);\n      timeSig.x = left + ((right - left) * 0.5) - (timeSig.timeSig.glyph.getMetrics().width * 0.5);\n      timeSig.bottomLine = this.render_options.number_line;\n      timeSig.setContext(ctx).draw();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Copyright Mohit Muthanna 2010\n//\n// Author Taehoon Moon 2014\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Clef } from './clef';\nimport { Glyph } from './glyph';\n\n/** @constructor */\nexport class ClefNote extends Note {\n  static get CATEGORY() { return 'clefnote'; }\n\n  constructor(type, size, annotation) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'ClefNote');\n\n    this.setType(type, size, annotation);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  setType(type, size, annotation) {\n    this.type = type;\n    this.clef_obj = new Clef(type, size, annotation);\n    this.clef = this.clef_obj.clef;\n    this.glyph = new Glyph(this.clef.code, this.clef.point);\n    this.setWidth(this.glyph.getMetrics().width);\n    return this;\n  }\n\n  getClef() {\n    return this.clef;\n  }\n\n  setContext(context) {\n    this.context = context;\n    this.glyph.setContext(this.context);\n    return this;\n  }\n\n  getBoundingBox() {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  getCategory() { return ClefNote.CATEGORY; }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\n    if (!this.glyph.getContext()) {\n      this.glyph.setContext(this.context);\n    }\n\n    this.setRendered();\n    const abs_x = this.getAbsoluteX();\n\n    this.glyph.setStave(this.stave);\n    this.glyph.setYShift(\n      this.stave.getYForLine(this.clef.line) - this.stave.getYForGlyphs());\n    this.glyph.renderToStave(abs_x);\n\n    // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n    if (this.clef_obj.annotation !== undefined) {\n      const attachment = new Glyph(this.clef_obj.annotation.code, this.clef_obj.annotation.point);\n      if (!attachment.getContext()) {\n        attachment.setContext(this.context);\n      }\n      attachment.setStave(this.stave);\n      attachment.setYShift(\n        this.stave.getYForLine(this.clef_obj.annotation.line) - this.stave.getYForGlyphs());\n      attachment.setXShift(this.clef_obj.annotation.x_shift);\n      attachment.renderToStave(abs_x);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Mark Meeus 2019\n\nimport { Note } from './note';\nimport { KeySignature } from './keysignature';\n\nexport class KeySigNote extends Note {\n  constructor(keySpec, cancelKeySpec, alterKeySpec) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'KeySigNote');\n\n    this.keySignature = new KeySignature(keySpec, cancelKeySpec, alterKeySpec);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  getBoundingBox() {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    this.keySignature.setStave(this.stave);\n    this.keySignature.format();\n    this.setWidth(this.keySignature.width);\n    return this;\n  }\n\n  draw() {\n    this.stave.checkContext();\n    this.setRendered();\n    this.keySignature.x = this.getAbsoluteX();\n    this.keySignature.setContext(this.context);\n    this.keySignature.draw();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { Note } from './note';\nimport { TimeSignature } from './timesignature';\n\nexport class TimeSigNote extends Note {\n  constructor(timeSpec, customPadding) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'TimeSigNote');\n\n    const timeSignature = new TimeSignature(timeSpec, customPadding);\n    this.timeSig = timeSignature.getTimeSig();\n    this.setWidth(this.timeSig.glyph.getMetrics().width);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  getBoundingBox() {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    this.stave.checkContext();\n    this.setRendered();\n\n    if (!this.timeSig.glyph.getContext()) {\n      this.timeSig.glyph.setContext(this.context);\n    }\n\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setYShift(\n      this.stave.getYForLine(this.timeSig.line) - this.stave.getYForGlyphs());\n    this.timeSig.glyph.renderToStave(this.getAbsoluteX());\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { Vex } from './vex';\nimport { TabTie } from './tabtie';\n\nexport class TabSlide extends TabTie {\n  static get SLIDE_UP() {\n    return 1;\n  }\n  static get SLIDE_DOWN() {\n    return -1;\n  }\n\n  static createSlideUp(notes) {\n    return new TabSlide(notes, TabSlide.SLIDE_UP);\n  }\n\n  static createSlideDown(notes) {\n    return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n  }\n\n  constructor(notes, direction) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super(notes, 'sl.');\n    this.setAttribute('type', 'TabSlide');\n\n    if (!direction) {\n      const first_fret = notes.first_note.getPositions()[0].fret;\n      const last_fret = notes.last_note.getPositions()[0].fret;\n\n      direction = ((parseInt(first_fret, 10) > parseInt(last_fret, 10)) ?\n        TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP);\n    }\n\n    this.slide_direction = direction;\n    this.render_options.cp1 = 11;\n    this.render_options.cp2 = 14;\n    this.render_options.y_shift = 0.5;\n\n    this.setFont({ font: 'Times', size: 10, style: 'bold italic' });\n    this.setNotes(notes);\n  }\n\n  renderTie(params) {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.context;\n    const first_x_px = params.first_x_px;\n    const first_ys = params.first_ys;\n    const last_x_px = params.last_x_px;\n\n    const direction = this.slide_direction;\n    if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n      throw new Vex.RERR('BadSlide', 'Invalid slide direction');\n    }\n\n    for (let i = 0; i < this.first_indices.length; ++i) {\n      const slide_y = first_ys[this.first_indices[i]] +\n        this.render_options.y_shift;\n\n      if (isNaN(slide_y)) {\n        throw new Vex.RERR('BadArguments', 'Bad indices for slide rendering.');\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(first_x_px, slide_y + (3 * direction));\n      ctx.lineTo(last_x_px, slide_y - (3 * direction));\n      ctx.closePath();\n      ctx.stroke();\n    }\n\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { StaveNote } from './stavenote';\nimport { Stem } from './stem';\nimport { Flow } from './tables';\n\nexport class GraceNote extends StaveNote {\n  static get CATEGORY() { return 'gracenotes'; }\n  static get LEDGER_LINE_OFFSET() { return 2; }\n  static get SCALE() { return 0.66; }\n\n  constructor(note_struct) {\n    super(Object.assign(note_struct, {\n      glyph_font_scale: Flow.DEFAULT_NOTATION_FONT_SCALE * GraceNote.SCALE,\n      stroke_px: GraceNote.LEDGER_LINE_OFFSET,\n    }));\n    this.setAttribute('type', 'GraceNote');\n\n    this.slash = note_struct.slash;\n    this.slur = true;\n\n    this.buildNoteHeads();\n\n    this.width = 3;\n  }\n\n  getStemExtension() {\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    const glyph = this.getGlyph();\n    if (glyph) {\n      let ret = super.getStemExtension();\n      if (glyph.stem) {\n        const staveNoteScale = this.getStaveNoteScale();\n        ret = ((Stem.HEIGHT + ret) * staveNoteScale) - Stem.HEIGHT;\n      }\n      return ret;\n    }\n\n    return 0;\n  }\n\n  getCategory() { return GraceNote.CATEGORY; }\n\n  // FIXME: move this to more basic class.\n  getStaveNoteScale() {\n    return this.render_options.glyph_font_scale / Flow.DEFAULT_NOTATION_FONT_SCALE;\n  }\n\n  draw() {\n    super.draw();\n    this.setRendered();\n    const stem = this.stem;\n    if (this.slash && stem) {\n      const staveNoteScale = this.getStaveNoteScale();\n\n      // some magic numbers are based on the staveNoteScale 0.66.\n      const offsetScale = staveNoteScale / 0.66;\n      let slashBBox = undefined;\n      const beam = this.beam;\n      if (beam) {\n        // FIXME: should render slash after beam?\n        if (!beam.postFormatted) {\n          beam.postFormat();\n        }\n\n        slashBBox = this.calcBeamedNotesSlashBBox(8 * offsetScale,\n          8 * offsetScale,\n          {\n            stem: 6 * offsetScale,\n            beam: 5 * offsetScale,\n          });\n      } else {\n        const stem_direction = this.getStemDirection();\n        const noteHeadBounds = this.getNoteHeadBounds();\n        const noteStemHeight = stem.getHeight();\n        let x = this.getAbsoluteX();\n        let y = stem_direction === Flow.Stem.DOWN ?\n          noteHeadBounds.y_top - noteStemHeight :\n          noteHeadBounds.y_bottom - noteStemHeight;\n\n        const defaultStemExtention = stem_direction === Flow.Stem.DOWN ?\n          this.glyph.stem_down_extension :\n          this.glyph.stem_up_extension;\n\n        let defaultOffsetY = Flow.STEM_HEIGHT;\n        defaultOffsetY -= (defaultOffsetY / 2.8);\n        defaultOffsetY += defaultStemExtention;\n        y += ((defaultOffsetY * staveNoteScale) * stem_direction);\n\n        const offsets = stem_direction === Flow.Stem.UP ? {\n          x1: 1,\n          y1: 0,\n          x2: 13,\n          y2: -9,\n        } : {\n          x1: -4,\n          y1: 1,\n          x2: 13,\n          y2: 9,\n        };\n\n        x += (offsets.x1 * offsetScale);\n        y += (offsets.y1 * offsetScale);\n        slashBBox = {\n          x1: x,\n          y1: y,\n          x2: x + (offsets.x2 * offsetScale),\n          y2: y + (offsets.y2 * offsetScale),\n        };\n      }\n\n      // FIXME: avoide staff lines, leadger lines or others.\n\n      const ctx = this.context;\n      ctx.save();\n      ctx.setLineWidth(1 * offsetScale); // FIXME: use more appropriate value.\n      ctx.beginPath();\n      ctx.moveTo(slashBBox.x1, slashBBox.y1);\n      ctx.lineTo(slashBBox.x2, slashBBox.y2);\n      ctx.closePath();\n      ctx.stroke();\n      ctx.restore();\n    }\n  }\n\n  calcBeamedNotesSlashBBox(slashStemOffset, slashBeamOffset, protrusions) {\n    const beam = this.beam;\n    const beam_slope = beam.slope;\n    const isBeamEndNote = (beam.notes[beam.notes.length - 1] === this);\n    const scaleX = isBeamEndNote ? -1 : 1;\n    const beam_angle = Math.atan(beam_slope * scaleX);\n\n    // slash line intersecting point on beam.\n    const iPointOnBeam = {\n      dx: Math.cos(beam_angle) * slashBeamOffset,\n      dy: Math.sin(beam_angle) * slashBeamOffset,\n    };\n\n    slashStemOffset *= this.getStemDirection();\n    const slash_angle = Math.atan((iPointOnBeam.dy - slashStemOffset) / iPointOnBeam.dx);\n    const protrusion_stem_dx = Math.cos(slash_angle) * protrusions.stem * scaleX;\n    const protrusion_stem_dy = Math.sin(slash_angle) * protrusions.stem;\n    const protrusion_beam_dx = Math.cos(slash_angle) * protrusions.beam * scaleX;\n    const protrusion_beam_dy = Math.sin(slash_angle) * protrusions.beam;\n\n    const stemX = this.getStemX();\n    const stem0X = beam.notes[0].getStemX();\n    const stemY = this.beam.getBeamYToDraw() + ((stemX - stem0X) * beam_slope);\n\n    const ret = {\n      x1: stemX - protrusion_stem_dx,\n      y1: (stemY + slashStemOffset - protrusion_stem_dy),\n      x2: stemX + (iPointOnBeam.dx * scaleX) + protrusion_beam_dx,\n      y2: stemY + iPointOnBeam.dy + protrusion_beam_dy,\n    };\n    return ret;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Balazs Forian-Szabo\n//\n// ## Description\n//\n// A basic implementation of grace notes\n// to be rendered on a tab stave.\n//\n// See `tests/gracetabnote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { TabNote } from './tabnote';\n\nexport class GraceTabNote extends TabNote {\n  static get CATEGORY() { return 'gracetabnotes'; }\n\n  constructor(note_struct) {\n    super(note_struct, false);\n    this.setAttribute('type', 'GraceTabNote');\n\n    Vex.Merge(this.render_options, {\n      // vertical shift from stave line\n      y_shift: 0.3,\n      // grace glyph scale\n      scale: 0.6,\n      // grace tablature font\n      font: '7.5pt Arial',\n    });\n\n    this.updateWidth();\n  }\n\n  getCategory() { return GraceTabNote.CATEGORY; }\n\n  draw() {\n    super.draw();\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of tunings for tablature.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\n\nexport class Tuning {\n  static get names() {\n    return {\n      'standard': 'E/5,B/4,G/4,D/4,A/3,E/3',\n      'dagdad': 'D/5,A/4,G/4,D/4,A/3,D/3',\n      'dropd': 'E/5,B/4,G/4,D/4,A/3,D/3',\n      'eb': 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n      'standardBanjo': 'D/5,B/4,G/4,D/4,G/5',\n    };\n  }\n\n  constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n    // Default to standard tuning.\n    this.setTuning(tuningString);\n  }\n\n  noteToInteger(noteString) {\n    return Flow.keyProperties(noteString).int_value;\n  }\n\n  setTuning(noteString) {\n    if (Tuning.names[noteString]) {\n      noteString = Tuning.names[noteString];\n    }\n\n    this.tuningString = noteString;\n    this.tuningValues = [];\n    this.numStrings = 0;\n\n    const keys = noteString.split(/\\s*,\\s*/);\n    if (keys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'Invalid tuning string: ' + noteString);\n    }\n\n    this.numStrings = keys.length;\n    for (let i = 0; i < this.numStrings; ++i) {\n      this.tuningValues[i] = this.noteToInteger(keys[i]);\n    }\n  }\n\n  getValueForString(stringNum) {\n    const s = parseInt(stringNum, 10);\n    if (s < 1 || s > this.numStrings) {\n      throw new Vex.RERR(\n        'BadArguments', `String number must be between 1 and ${this.numStrings}:${stringNum}`\n      );\n    }\n\n    return this.tuningValues[s - 1];\n  }\n\n  getValueForFret(fretNum, stringNum) {\n    const stringValue = this.getValueForString(stringNum);\n    const f = parseInt(fretNum, 10);\n\n    if (f < 0) {\n      throw new Vex.RERR('BadArguments', 'Fret number must be 0 or higher: ' +\n          fretNum);\n    }\n\n    return stringValue + f;\n  }\n\n  getNoteForFret(fretNum, stringNum) {\n    const noteValue = this.getValueForFret(fretNum, stringNum);\n\n    const octave = Math.floor(noteValue / 12);\n    const value = noteValue % 12;\n\n    return Flow.integerToNote(value) + '/' + octave;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements diatonic key management.\n\nimport { Vex } from './vex';\nimport { Music } from './music';\n\nexport class KeyManager {\n  constructor(key) {\n    this.music = new Music();\n    this.setKey(key);\n  }\n\n  setKey(key) {\n    this.key = key;\n    this.reset();\n    return this;\n  }\n\n  getKey() { return this.key; }\n\n  reset() {\n    this.keyParts = this.music.getKeyParts(this.key);\n\n    this.keyString = this.keyParts.root;\n    if (this.keyParts.accidental) this.keyString += this.keyParts.accidental;\n\n    const is_supported_type = Music.scaleTypes[this.keyParts.type];\n    if (!is_supported_type) {\n      throw new Vex.RERR('BadArguments', `Unsupported key type: ${this.key}`);\n    }\n\n    this.scale = this.music.getScaleTones(\n      this.music.getNoteValue(this.keyString),\n      Music.scaleTypes[this.keyParts.type]\n    );\n\n    this.scaleMap = {};\n    this.scaleMapByValue = {};\n    this.originalScaleMapByValue = {};\n\n    const noteLocation = Music.root_indices[this.keyParts.root];\n\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n\n      const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n      this.scaleMap[rootName] = noteName;\n      this.scaleMapByValue[this.scale[i]] = noteName;\n      this.originalScaleMapByValue[this.scale[i]] = noteName;\n    }\n\n    return this;\n  }\n\n  getAccidental(key) {\n    const root = this.music.getKeyParts(key).root;\n    const parts = this.music.getNoteParts(this.scaleMap[root]);\n\n    return {\n      note: this.scaleMap[root],\n      accidental: parts.accidental,\n    };\n  }\n\n  selectNote(note) {\n    note = note.toLowerCase();\n    const parts = this.music.getNoteParts(note);\n\n    // First look for matching note in our altered scale\n    const scaleNote = this.scaleMap[parts.root];\n    const modparts = this.music.getNoteParts(scaleNote);\n\n    if (scaleNote === note) {\n      return {\n        'note': scaleNote,\n        'accidental': parts.accidental,\n        'change': false,\n      };\n    }\n\n    // Then search for a note of equivalent value in our altered scale\n    const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n    if (valueNote != null) {\n      return {\n        'note': valueNote,\n        'accidental': this.music.getNoteParts(valueNote).accidental,\n        'change': false,\n      };\n    }\n\n    // Then search for a note of equivalent value in the original scale\n    const originalValueNote = this.originalScaleMapByValue[\n      this.music.getNoteValue(note)];\n    if (originalValueNote != null) {\n      this.scaleMap[modparts.root] = originalValueNote;\n      delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n      this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n      return {\n        'note': originalValueNote,\n        'accidental': this.music.getNoteParts(originalValueNote).accidental,\n        'change': true,\n      };\n    }\n\n    // Then try to unmodify a currently modified note.\n    if (modparts.root === note) {\n      delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n      this.scaleMapByValue[this.music.getNoteValue(modparts.root)] =  modparts.root;\n      this.scaleMap[modparts.root] = modparts.root;\n      return {\n        'note': modparts.root,\n        'accidental': null,\n        'change': true,\n      };\n    }\n\n    // Last resort -- shitshoot\n    delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n    this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n\n    delete this.scaleMap[modparts.root];\n    this.scaleMap[modparts.root] = note;\n\n    return {\n      note,\n      'accidental': parts.accidental,\n      'change': true,\n    };\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class by Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either Crescendo or Descrescendo.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Modifier } from './modifier';\n\nexport class StaveHairpin extends Element {\n  static get type() {\n    return {\n      CRESC: 1,\n      DECRESC: 2,\n    };\n  }\n\n  /* Helper function to convert ticks into pixels.\n   * Requires a Formatter with voices joined and formatted (to\n   * get pixels per tick)\n   *\n   * options is struct that has:\n   *\n   *  {\n   *   height: px,\n   *   y_shift: px, //vertical offset\n   *   left_shift_ticks: 0, //left horizontal offset expressed in ticks\n   *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n   *  }\n   *\n   **/\n  static FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n    const ppt = formatter.pixelsPerTick;\n\n    if (ppt == null) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        'A valid Formatter must be provide to draw offsets by ticks.'\n      );\n    }\n\n    const l_shift_px = ppt * options.left_shift_ticks;\n    const r_shift_px = ppt * options.right_shift_ticks;\n\n    const hairpin_options = {\n      height: options.height,\n      y_shift: options.y_shift,\n      left_shift_px: l_shift_px,\n      right_shift_px: r_shift_px };\n\n    new StaveHairpin({\n      first_note: notes.first_note,\n      last_note: notes.last_note,\n    }, type)\n      .setContext(ctx)\n      .setRenderOptions(hairpin_options)\n      .setPosition(position)\n      .draw();\n  }\n\n  /**\n   * Create a new hairpin from the specified notes.\n   *\n   * @constructor\n   * @param {!Object} notes The notes to tie up.\n   * @param {!Object} type The type of hairpin\n   */\n  constructor(notes, type) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveHairpin');\n    this.notes = notes;\n    this.hairpin = type;\n    this.position = Modifier.Position.BELOW;\n\n    this.render_options = {\n      height: 10,\n      y_shift: 0, // vertical offset\n      left_shift_px: 0, // left horizontal offset\n      right_shift_px: 0, // right horizontal offset\n    };\n\n    this.setNotes(notes);\n  }\n\n  setPosition(position) {\n    if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n      this.position = position;\n    }\n    return this;\n  }\n\n  setRenderOptions(options) {\n    if (\n      options.height != null &&\n      options.y_shift != null &&\n      options.left_shift_px != null &&\n      options.right_shift_px != null\n    ) {\n      this.render_options = options;\n    }\n    return this;\n  }\n\n  /**\n   * Set the notes to attach this hairpin to.\n   *\n   * @param {!Object} notes The start and end notes.\n   */\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        'Hairpin needs to have either first_note or last_note set.'\n      );\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.last_note = notes.last_note;\n    return this;\n  }\n\n  renderHairpin(params) {\n    const ctx = this.checkContext();\n    let dis = this.render_options.y_shift + 20;\n    let y_shift = params.first_y;\n\n    if (this.position === Modifier.Position.ABOVE) {\n      dis = -dis + 30;\n      y_shift = params.first_y - params.staff_height;\n    }\n\n    const l_shift = this.render_options.left_shift_px;\n    const r_shift = this.render_options.right_shift_px;\n\n    ctx.beginPath();\n\n    switch (this.hairpin) {\n      case StaveHairpin.type.CRESC:\n        ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + (this.render_options.height / 2) + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n        break;\n      case StaveHairpin.type.DECRESC:\n        ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + (this.render_options.height / 2) + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const firstNote = this.first_note;\n    const lastNote = this.last_note;\n\n    const start = firstNote.getModifierStartXY(this.position, 0);\n    const end = lastNote.getModifierStartXY(this.position, 0);\n\n    this.renderHairpin({\n      first_x: start.x,\n      last_x: end.x,\n      first_y: firstNote.getStave().y + firstNote.getStave().height,\n      last_y: lastNote.getStave().y + lastNote.getStave().height,\n      staff_height: firstNote.getStave().height,\n    });\n    return true;\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements curves (for slurs)\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\nexport class Curve extends Element {\n  static get Position() {\n    return {\n      NEAR_HEAD: 1,\n      NEAR_TOP: 2,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      nearHead: Curve.Position.NEAR_HEAD,\n      nearTop: Curve.Position.NEAR_TOP,\n    };\n  }\n\n  // from: Start note\n  // to: End note\n  // options:\n  //    cps: List of control points\n  //    x_shift: pixels to shift\n  //    y_shift: pixels to shift\n  constructor(from, to, options) {\n    super();\n    this.setAttribute('type', 'Curve');\n\n    this.render_options = {\n      spacing: 2,\n      thickness: 2,\n      x_shift: 0,\n      y_shift: 10,\n      position: Curve.Position.NEAR_HEAD,\n      position_end: Curve.Position.NEAR_HEAD,\n      invert: false,\n      cps: [{ x: 0, y: 10 }, { x: 0, y: 10 }],\n    };\n\n    Vex.Merge(this.render_options, options);\n    this.setNotes(from, to);\n  }\n\n  setNotes(from, to) {\n    if (!from && !to) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Curve needs to have either first_note or last_note set.'\n      );\n    }\n\n    this.from = from;\n    this.to = to;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial() {\n    return (!this.from || !this.to);\n  }\n\n  renderCurve(params) {\n    const ctx = this.context;\n    const cps = this.render_options.cps;\n\n    const x_shift = this.render_options.x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    const first_x = params.first_x + x_shift;\n    const first_y = params.first_y + y_shift;\n    const last_x = params.last_x - x_shift;\n    const last_y = params.last_y + y_shift;\n    const thickness = this.render_options.thickness;\n\n    const cp_spacing = (last_x - first_x) / (cps.length + 2);\n\n    ctx.beginPath();\n    ctx.moveTo(first_x, first_y);\n    ctx.bezierCurveTo(\n      first_x + cp_spacing + cps[0].x,\n      first_y + (cps[0].y * params.direction),\n      last_x - cp_spacing + cps[1].x,\n      last_y + (cps[1].y * params.direction),\n      last_x,\n      last_y\n    );\n    ctx.bezierCurveTo(\n      last_x - cp_spacing + cps[1].x,\n      last_y + ((cps[1].y + thickness) * params.direction),\n      first_x + cp_spacing + cps[0].x,\n      first_y + ((cps[0].y + thickness) * params.direction),\n      first_x,\n      first_y\n    );\n    ctx.stroke();\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.from;\n    const last_note = this.to;\n    let first_x;\n    let last_x;\n    let first_y;\n    let last_y;\n    let stem_direction;\n\n    let metric = 'baseY';\n    let end_metric = 'baseY';\n\n    function getPosition(position) {\n      return typeof(position) === 'string'\n        ? Curve.PositionString[position]\n        : position;\n    }\n    const position = getPosition(this.render_options.position);\n    const position_end = getPosition(this.render_options.position_end);\n\n    if (position === Curve.Position.NEAR_TOP) {\n      metric = 'topY';\n      end_metric = 'topY';\n    }\n\n    if (position_end === Curve.Position.NEAR_HEAD) {\n      end_metric = 'baseY';\n    } else if (position_end === Curve.Position.NEAR_TOP) {\n      end_metric = 'topY';\n    }\n\n    if (first_note) {\n      first_x = first_note.getTieRightX();\n      stem_direction = first_note.getStemDirection();\n      first_y = first_note.getStemExtents()[metric];\n    } else {\n      first_x = last_note.getStave().getTieStartX();\n      first_y = last_note.getStemExtents()[metric];\n    }\n\n    if (last_note) {\n      last_x = last_note.getTieLeftX();\n      stem_direction = last_note.getStemDirection();\n      last_y = last_note.getStemExtents()[end_metric];\n    } else {\n      last_x = first_note.getStave().getTieEndX();\n      last_y = first_note.getStemExtents()[end_metric];\n    }\n\n    this.renderCurve({\n      first_x,\n      last_x,\n      first_y,\n      last_y,\n      direction: stem_direction * (this.render_options.invert === true ? -1 : 1),\n    });\n    return true;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `TextDynamics` which renders traditional\n// text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n//\n// You can render any dynamics string that contains a combination of\n// the following letters:  P, M, F, Z, R, S\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`.\nfunction L(...args) { if (TextDynamics.DEBUG) Vex.L('Vex.Flow.TextDynamics', args); }\n\nexport class TextDynamics extends Note {\n  // The glyph data for each dynamics letter\n  static get GLYPHS() {\n    return {\n      'f': {\n        code: 'vba',\n        width: 12,\n      },\n      'p': {\n        code: 'vbf',\n        width: 14,\n      },\n      'm': {\n        code: 'v62',\n        width: 17,\n      },\n      's': {\n        code: 'v4a',\n        width: 10,\n      },\n      'z': {\n        code: 'v80',\n        width: 12,\n      },\n      'r': {\n        code: 'vb1',\n        width: 12,\n      },\n    };\n  }\n\n  // A `TextDynamics` object inherits from `Note` so that it can be formatted\n  // within a `Voice`.\n  // Create the dynamics marking. `text_struct` is an object\n  // that contains a `duration` property and a `sequence` of\n  // letters that represents the letters to render\n  constructor(text_struct) {\n    super(text_struct);\n    this.setAttribute('type', 'TextDynamics');\n\n    this.sequence = text_struct.text.toLowerCase();\n    this.line = text_struct.line || 0;\n    this.glyphs = [];\n\n    Vex.Merge(this.render_options, {\n      glyph_font_size: 40,\n    });\n\n    L('New Dynamics Text: ', this.sequence);\n  }\n\n  // Set the Stave line on which the note should be placed\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n\n  // Preformat the dynamics text\n  preFormat() {\n    let total_width = 0;\n    // Iterate through each letter\n    this.sequence.split('').forEach(letter => {\n      // Get the glyph data for the letter\n      const glyph_data = TextDynamics.GLYPHS[letter];\n      if (!glyph_data) throw new Vex.RERR('Invalid dynamics character: ' + letter);\n\n      const size =  this.render_options.glyph_font_size;\n      const glyph = new Glyph(glyph_data.code, size);\n\n      // Add the glyph\n      this.glyphs.push(glyph);\n\n      total_width += glyph_data.width;\n    });\n\n    // Store the width of the text\n    this.setWidth(total_width);\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Draw the dynamics text on the rendering context\n  draw() {\n    this.setRendered();\n    const x = this.getAbsoluteX();\n    const y = this.stave.getYForLine(this.line + (-3));\n\n    L('Rendering Dynamics: ', this.sequence);\n\n    let letter_x = x;\n    this.glyphs.forEach((glyph, index) => {\n      const current_letter = this.sequence[index];\n      glyph.render(this.context, letter_x, y);\n      letter_x += TextDynamics.GLYPHS[current_letter].width;\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `render_options`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\n\n// Attribution: Arrow rendering implementations based off of\n// Patrick Horgan's article, \"Drawing lines and arcs with\n// arrow heads on  HTML5 Canvas\"\n//\n// Draw an arrow head that connects between 3 coordinates\nfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n  // all cases do this.\n  ctx.beginPath();\n  ctx.moveTo(x0, y0);\n  ctx.lineTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.lineTo(x0, y0);\n  ctx.closePath();\n\n  ctx.fill();\n}\n\n// Helper function to draw a line with arrow heads\nfunction drawArrowLine(ctx, point1, point2, config) {\n  const both_arrows = config.draw_start_arrow && config.draw_end_arrow;\n\n  const x1 = point1.x;\n  const y1 = point1.y;\n  const x2 = point2.x;\n  const y2 = point2.y;\n\n  // For ends with arrow we actually want to stop before we get to the arrow\n  // so that wide lines won't put a flat end on the arrow.\n  const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  const ratio = (distance - config.arrowhead_length / 3) / distance;\n  let end_x;\n  let end_y;\n  let start_x;\n  let start_y;\n  if (config.draw_end_arrow || both_arrows) {\n    end_x = Math.round(x1 + (x2 - x1) * ratio);\n    end_y = Math.round(y1 + (y2 - y1) * ratio);\n  } else {\n    end_x = x2;\n    end_y = y2;\n  }\n\n  if (config.draw_start_arrow || both_arrows) {\n    start_x = x1 + (x2 - x1) * (1 - ratio);\n    start_y = y1 + (y2 - y1) * (1 - ratio);\n  } else {\n    start_x = x1;\n    start_y = y1;\n  }\n\n  if (config.color) {\n    ctx.setStrokeStyle(config.color);\n    ctx.setFillStyle(config.color);\n  }\n\n  // Draw the shaft of the arrow\n  ctx.beginPath();\n  ctx.moveTo(start_x, start_y);\n  ctx.lineTo(end_x, end_y);\n  ctx.stroke();\n  ctx.closePath();\n\n  // calculate the angle of the line\n  const line_angle = Math.atan2(y2 - y1, x2 - x1);\n  // h is the line length of a side of the arrow head\n  const h = Math.abs(config.arrowhead_length / Math.cos(config.arrowhead_angle));\n\n  let angle1;\n  let angle2;\n  let top_x;\n  let top_y;\n  let bottom_x;\n  let bottom_y;\n\n  if (config.draw_end_arrow || both_arrows) {\n    angle1 = line_angle + Math.PI + config.arrowhead_angle;\n    top_x = x2 + Math.cos(angle1) * h;\n    top_y = y2 + Math.sin(angle1) * h;\n\n    angle2 = line_angle + Math.PI - config.arrowhead_angle;\n    bottom_x = x2 + Math.cos(angle2) * h;\n    bottom_y = y2 + Math.sin(angle2) * h;\n\n    drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n  }\n\n  if (config.draw_start_arrow || both_arrows) {\n    angle1 = line_angle + config.arrowhead_angle;\n    top_x = x1 + Math.cos(angle1) * h;\n    top_y = y1 + Math.sin(angle1) * h;\n\n    angle2 = line_angle - config.arrowhead_angle;\n    bottom_x = x1 + Math.cos(angle2) * h;\n    bottom_y = y1 + Math.sin(angle2) * h;\n\n    drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n  }\n}\n\nexport class StaveLine extends Element {\n  // Text Positioning\n  static get TextVerticalPosition() {\n    return {\n      TOP: 1,\n      BOTTOM: 2,\n    };\n  }\n\n  static get TextJustification() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n    };\n  }\n\n  // Initialize the StaveLine with the given `notes`.\n  //\n  // `notes` is a struct that has:\n  //\n  //  ```\n  //  {\n  //    first_note: Note,\n  //    last_note: Note,\n  //    first_indices: [n1, n2, n3],\n  //    last_indices: [n1, n2, n3]\n  //  }\n  //  ```\n  constructor(notes) {\n    super();\n    this.setAttribute('type', 'StaveLine');\n\n    this.notes = notes;\n\n    this.text = '';\n\n    this.font = {\n      family: 'Arial',\n      size: 10,\n      weight: '',\n    };\n\n    this.render_options = {\n      // Space to add to the left or the right\n      padding_left: 4,\n      padding_right: 3,\n\n      // The width of the line in pixels\n      line_width: 1,\n      // An array of line/space lengths. Unsupported with Raphael (SVG)\n      line_dash: null,\n      // Can draw rounded line end, instead of a square. Unsupported with Raphael (SVG)\n      rounded_end: true,\n      // The color of the line and arrowheads\n      color: null,\n\n      // Flags to draw arrows on each end of the line\n      draw_start_arrow: false,\n      draw_end_arrow: false,\n\n      // The length of the arrowhead sides\n      arrowhead_length: 10,\n      // The angle of the arrowhead\n      arrowhead_angle: Math.PI / 8,\n\n      // The position of the text\n      text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n      text_justification: StaveLine.TextJustification.CENTER,\n    };\n\n    this.setNotes(notes);\n  }\n\n  // Set the font for the `StaveLine` text\n  setFont(font) { this.font = font; return this; }\n  // The the annotation for the `StaveLine`\n  setText(text) { this.text = text; return this; }\n\n  // Set the notes for the `StaveLine`\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Notes needs to have either first_note or last_note set.'\n      );\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Connected notes must have similar index sizes'\n      );\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  // Apply the style of the `StaveLine` to the context\n  applyLineStyle() {\n    const ctx = this.checkContext();\n    const render_options = this.render_options;\n\n    if (render_options.line_dash) {\n      ctx.setLineDash(render_options.line_dash);\n    }\n\n    if (render_options.line_width) {\n      ctx.setLineWidth(render_options.line_width);\n    }\n\n    if (render_options.rounded_end) {\n      ctx.setLineCap('round');\n    } else {\n      ctx.setLineCap('square');\n    }\n  }\n\n  // Apply the text styling to the context\n  applyFontStyle() {\n    const ctx = this.checkContext();\n\n    if (this.font) {\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    }\n\n    if (this.render_options.color) {\n      ctx.setStrokeStyle(this.render_options.color);\n      ctx.setFillStyle(this.render_options.color);\n    }\n  }\n\n  // Renders the `StaveLine` on the context\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n    const render_options = this.render_options;\n\n    ctx.save();\n    this.applyLineStyle();\n\n    // Cycle through each set of indices and draw lines\n    let start_position;\n    let end_position;\n    this.first_indices.forEach((first_index, i) => {\n      const last_index = this.last_indices[i];\n\n      // Get initial coordinates for the start/end of the line\n      start_position = first_note.getModifierStartXY(2, first_index);\n      end_position = last_note.getModifierStartXY(1, last_index);\n      const upwards_slope = start_position.y > end_position.y;\n\n      // Adjust `x` coordinates for modifiers\n      start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n      end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n\n\n      // Adjust first `x` coordinates for displacements\n      const notehead_width = first_note.getGlyph().getWidth();\n      const first_displaced = first_note.getKeyProps()[first_index].displaced;\n      if (first_displaced && first_note.getStemDirection() === 1) {\n        start_position.x += notehead_width + render_options.padding_left;\n      }\n\n      // Adjust last `x` coordinates for displacements\n      const last_displaced = last_note.getKeyProps()[last_index].displaced;\n      if (last_displaced && last_note.getStemDirection() === -1) {\n        end_position.x -= notehead_width + render_options.padding_right;\n      }\n\n      // Adjust y position better if it's not coming from the center of the note\n      start_position.y += upwards_slope ? -3 : 1;\n      end_position.y += upwards_slope ? 2 : 0;\n\n      drawArrowLine(ctx, start_position, end_position, this.render_options);\n    });\n\n    ctx.restore();\n\n    // Determine the x coordinate where to start the text\n    const text_width = ctx.measureText(this.text).width;\n    const justification = render_options.text_justification;\n    let x = 0;\n    if (justification === StaveLine.TextJustification.LEFT) {\n      x = start_position.x;\n    } else if (justification === StaveLine.TextJustification.CENTER) {\n      const delta_x = (end_position.x - start_position.x);\n      const center_x = (delta_x / 2) + start_position.x;\n      x = center_x - (text_width / 2);\n    } else if (justification === StaveLine.TextJustification.RIGHT) {\n      x = end_position.x  -  text_width;\n    }\n\n    // Determine the y value to start the text\n    let y;\n    const vertical_position = render_options.text_position_vertical;\n    if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n      y = first_note.getStave().getYForTopText();\n    } else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n      y = first_note.getStave().getYForBottomText(Flow.TEXT_HEIGHT_OFFSET_HACK);\n    }\n\n    // Draw the text\n    ctx.save();\n    this.applyFontStyle();\n    ctx.fillText(this.text, x, y);\n    ctx.restore();\n\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements different types of pedal markings. These notation\n// elements indicate to the performer when to depress and release the a pedal.\n//\n// In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n// custom text for the release/depress pedal markings.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`.\nfunction L(...args) { if (PedalMarking.DEBUG) Vex.L('Vex.Flow.PedalMarking', args); }\n\n// Draws a pedal glyph with the provided `name` on a rendering `context`\n// at the coordinates `x` and `y. Takes into account the glyph data\n// coordinate shifts.\nfunction drawPedalGlyph(name, context, x, y, point) {\n  const glyph_data = PedalMarking.GLYPHS[name];\n  const glyph = new Glyph(glyph_data.code, point);\n  glyph.render(context, x + glyph_data.x_shift, y + glyph_data.y_shift);\n}\n\nexport class PedalMarking extends Element {\n  // Glyph data\n  static get GLYPHS() {\n    return {\n      'pedal_depress': {\n        code: 'v36',\n        x_shift: -10,\n        y_shift: 0,\n      },\n      'pedal_release': {\n        code: 'v5d',\n        x_shift: -2,\n        y_shift: 3,\n      },\n    };\n  }\n\n  static get Styles() {\n    return {\n      TEXT: 1,\n      BRACKET: 2,\n      MIXED: 3,\n    };\n  }\n\n  static get StylesString() {\n    return {\n      text: PedalMarking.Styles.TEXT,\n      bracket: PedalMarking.Styles.BRACKET,\n      mixed: PedalMarking.Styles.MIXED,\n    };\n  }\n\n  // Create a sustain pedal marking. Returns the defaults PedalMarking.\n  // Which uses the traditional \"Ped\" and \"*\"\" markings.\n  static createSustain(notes) {\n    const pedal = new PedalMarking(notes);\n    return pedal;\n  }\n\n  // Create a sostenuto pedal marking\n  static createSostenuto(notes) {\n    const pedal = new PedalMarking(notes);\n    pedal.setStyle(PedalMarking.Styles.MIXED);\n    pedal.setCustomText('Sost. Ped.');\n    return pedal;\n  }\n\n  // Create an una corda pedal marking\n  static createUnaCorda(notes) {\n    const pedal = new PedalMarking(notes);\n    pedal.setStyle(PedalMarking.Styles.TEXT);\n    pedal.setCustomText('una corda', 'tre corda');\n    return pedal;\n  }\n\n  // ## Prototype Methods\n  constructor(notes) {\n    super();\n    this.setAttribute('type', 'PedalMarking');\n\n    this.notes = notes;\n    this.style = PedalMarking.TEXT;\n    this.line = 0;\n\n    // Custom text for the release/depress markings\n    this.custom_depress_text = '';\n    this.custom_release_text = '';\n\n    this.font = {\n      family: 'Times New Roman',\n      size: 12,\n      weight: 'italic bold',\n    };\n\n    this.render_options = {\n      bracket_height: 10,\n      text_margin_right: 6,\n      bracket_line_width: 1,\n      glyph_point_size: 40,\n      color: 'black',\n    };\n  }\n\n  // Set custom text for the `depress`/`release` pedal markings. No text is\n  // set if the parameter is falsy.\n  setCustomText(depress, release) {\n    this.custom_depress_text = depress || '';\n    this.custom_release_text = release || '';\n    return this;\n  }\n\n  // Set the pedal marking style\n  setStyle(style) {\n    if (style < 1 && style > 3)  {\n      throw new Vex.RERR('InvalidParameter', 'The style must be one found in PedalMarking.Styles');\n    }\n\n    this.style = style;\n    return this;\n  }\n\n  // Set the staff line to render the markings on\n  setLine(line) { this.line = line; return this; }\n\n  // Draw the bracket based pedal markings\n  drawBracketed() {\n    const ctx = this.context;\n    let is_pedal_depressed = false;\n    let prev_x;\n    let prev_y;\n    const pedal = this;\n\n    // Iterate through each note\n    this.notes.forEach((note, index, notes) => {\n      // Each note triggers the opposite pedal action\n      is_pedal_depressed = !is_pedal_depressed;\n\n      // Get the initial coordinates for the note\n      const x = note.getAbsoluteX();\n      const y = note.getStave().getYForBottomText(pedal.line + 3);\n\n      // Throw if current note is positioned before the previous note\n      if (x < prev_x) {\n        throw new Vex.RERR(\n          'InvalidConfiguration', 'The notes provided must be in order of ascending x positions'\n        );\n      }\n\n      // Determine if the previous or next note are the same\n      // as the current note. We need to keep track of this for\n      // when adjustments are made for the release+depress action\n      const next_is_same = notes[index + 1] === note;\n      const prev_is_same = notes[index - 1] === note;\n\n      let x_shift = 0;\n      if (is_pedal_depressed) {\n        // Adjustment for release+depress\n        x_shift =  prev_is_same ? 5 : 0;\n\n        if (pedal.style === PedalMarking.Styles.MIXED && !prev_is_same) {\n          // For MIXED style, start with text instead of bracket\n          if (pedal.custom_depress_text) {\n            // If we have custom text, use instead of the default \"Ped\" glyph\n            const text_width = ctx.measureText(pedal.custom_depress_text).width;\n            ctx.fillText(pedal.custom_depress_text, x - (text_width / 2), y);\n            x_shift = (text_width / 2) + pedal.render_options.text_margin_right;\n          } else {\n            // Render the Ped glyph in position\n            drawPedalGlyph('pedal_depress', ctx, x, y, pedal.render_options.glyph_point_size);\n            x_shift = 20 + pedal.render_options.text_margin_right;\n          }\n        } else {\n          // Draw start bracket\n          ctx.beginPath();\n          ctx.moveTo(x, y - pedal.render_options.bracket_height);\n          ctx.lineTo(x + x_shift, y);\n          ctx.stroke();\n          ctx.closePath();\n        }\n      } else {\n        // Adjustment for release+depress\n        x_shift = next_is_same ? -5 : 0;\n\n        // Draw end bracket\n        ctx.beginPath();\n        ctx.moveTo(prev_x, prev_y);\n        ctx.lineTo(x + x_shift, y);\n        ctx.lineTo(x, y - pedal.render_options.bracket_height);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      // Store previous coordinates\n      prev_x = x + x_shift;\n      prev_y = y;\n    });\n  }\n\n  // Draw the text based pedal markings. This defaults to the traditional\n  // \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n  drawText() {\n    const ctx = this.context;\n    let is_pedal_depressed = false;\n    const pedal = this;\n\n    // The glyph point size\n    const point = pedal.render_options.glyph_point_size;\n\n    // Iterate through each note, placing glyphs or custom text accordingly\n    this.notes.forEach(note => {\n      is_pedal_depressed = !is_pedal_depressed;\n      const stave = note.getStave();\n      const x = note.getAbsoluteX();\n      const y = stave.getYForBottomText(pedal.line + 3);\n\n      let text_width = 0;\n      if (is_pedal_depressed) {\n        if (pedal.custom_depress_text) {\n          text_width = ctx.measureText(pedal.custom_depress_text).width;\n          ctx.fillText(pedal.custom_depress_text, x - (text_width / 2), y);\n        } else {\n          drawPedalGlyph('pedal_depress', ctx, x, y, point);\n        }\n      } else {\n        if (pedal.custom_release_text) {\n          text_width = ctx.measureText(pedal.custom_release_text).width;\n          ctx.fillText(pedal.custom_release_text, x - (text_width / 2), y);\n        } else {\n          drawPedalGlyph('pedal_release', ctx, x, y, point);\n        }\n      }\n    });\n  }\n\n  // Render the pedal marking in position on the rendering context\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.setStrokeStyle(this.render_options.color);\n    ctx.setFillStyle(this.render_options.color);\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\n    L('Rendering Pedal Marking');\n\n    if (this.style === PedalMarking.Styles.BRACKET || this.style === PedalMarking.Styles.MIXED) {\n      ctx.setLineWidth(this.render_options.bracket_line_width);\n      this.drawBracketed();\n    } else if (this.style === PedalMarking.Styles.TEXT) {\n      this.drawText();\n    }\n\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implement `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Renderer } from './renderer';\n\n// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\nfunction L(...args) { if (TextBracket.DEBUG) Vex.L('Vex.Flow.TextBracket', args); }\n\nexport class TextBracket extends Element {\n  // FIXME: Modifier.Position is singular while this is plural, make consistent\n  static get Positions() {\n    return {\n      TOP: 1,\n      BOTTOM: -1,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      top: TextBracket.Positions.TOP,\n      bottom: TextBracket.Positions.BOTTOM,\n    };\n  }\n\n  constructor({\n    start,\n    stop,\n    text = '',\n    superscript = '',\n    position = TextBracket.Positions.TOP,\n  }) {\n    super();\n    this.setAttribute('type', 'TextBracket');\n\n    this.start = start;\n    this.stop = stop;\n\n    this.text = text;\n    this.superscript = superscript;\n\n    this.position = typeof position === 'string'\n      ? TextBracket.PositionString[position]\n      : position;\n\n    this.line = 1;\n\n    this.font = {\n      family: 'Serif',\n      size: 15,\n      weight: 'italic',\n    };\n\n    this.render_options = {\n      dashed: true,\n      dash: [5],\n      color: 'black',\n      line_width: 1,\n      show_bracket: true,\n      bracket_height: 8,\n\n      // In the BOTTOM position, the bracket line can extend\n      // under the superscript.\n      underline_superscript: true,\n    };\n  }\n\n  // Apply the text backet styling to the provided `context`\n  applyStyle(context) {\n    // Apply style for the octave bracket\n    context.setFont(this.font.family, this.font.size, this.font.weight);\n    context.setStrokeStyle(this.render_options.color);\n    context.setFillStyle(this.render_options.color);\n    context.setLineWidth(this.render_options.line_width);\n\n    return this;\n  }\n\n  // Set whether the bracket line should be `dashed`. You can also\n  // optionally set the `dash` pattern by passing in an array of numbers\n  setDashed(dashed, dash) {\n    this.render_options.dashed = dashed;\n    if (dash) this.render_options.dash = dash;\n    return this;\n  }\n\n  // Set the font for the text\n  setFont(font) {\n    // We use Object.assign to support partial updates to the font object\n    this.font = Object.assign({}, this.font, font);\n    return this;\n  }\n  // Set the rendering `context` for the octave bracket\n  setLine(line) { this.line = line; return this; }\n\n  // Draw the octave bracket on the rendering context\n  draw() {\n    const ctx = this.context;\n    this.setRendered();\n\n    let y = 0;\n    switch (this.position) {\n      case TextBracket.Positions.TOP:\n        y =  this.start.getStave().getYForTopText(this.line);\n        break;\n      case TextBracket.Positions.BOTTOM:\n        y =  this.start.getStave().getYForBottomText(this.line + Flow.TEXT_HEIGHT_OFFSET_HACK);\n        break;\n      default:\n        throw new Vex.RERR('InvalidPosition', `The position ${this.position} is invalid`);\n    }\n\n    // Get the preliminary start and stop coordintates for the bracket\n    const start = { x: this.start.getAbsoluteX(), y };\n    const stop = { x: this.stop.getAbsoluteX(), y };\n\n    L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n\n    const bracket_height = this.render_options.bracket_height * this.position;\n\n    ctx.save();\n    this.applyStyle(ctx);\n\n    // Draw text\n    ctx.fillText(this.text, start.x, start.y);\n\n    // Get the width and height for the octave number\n    const main_width = ctx.measureText(this.text).width;\n    const main_height = ctx.measureText('M').width;\n\n    // Calculate the y position for the super script\n    const super_y = start.y - (main_height / 2.5);\n\n    // Draw the superscript\n    ctx.setFont(this.font.family, this.font.size / 1.4, this.font.weight);\n    ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n\n    // Determine width and height of the superscript\n    const superscript_width = ctx.measureText(this.superscript).width;\n    const super_height = ctx.measureText('M').width;\n\n    // Setup initial coordinates for the bracket line\n    let start_x = start.x;\n    let line_y = super_y;\n    const end_x = stop.x + this.stop.getGlyph().getWidth();\n\n    // Adjust x and y coordinates based on position\n    if (this.position === TextBracket.Positions.TOP) {\n      start_x += main_width + superscript_width + 5;\n      line_y -= super_height / 2.7;\n    } else if (this.position === TextBracket.Positions.BOTTOM) {\n      line_y += super_height / 2.7;\n      start_x += main_width + 2;\n\n      if (!this.render_options.underline_superscript) {\n        start_x += superscript_width;\n      }\n    }\n\n    if (this.render_options.dashed) {\n      // Main line\n      Renderer.drawDashedLine(\n        ctx,\n        start_x,\n        line_y,\n        end_x,\n        line_y,\n        this.render_options.dash\n      );\n      // Ending Bracket\n      if (this.render_options.show_bracket) {\n        Renderer.drawDashedLine(\n          ctx,\n          end_x,\n          line_y + (1 * this.position),\n          end_x,\n          line_y + bracket_height,\n          this.render_options.dash\n        );\n      }\n    } else {\n      ctx.beginPath();\n      ctx.moveTo(start_x, line_y);\n      // Main line\n      ctx.lineTo(end_x, line_y);\n      if (this.render_options.show_bracket) {\n        // Ending bracket\n        ctx.lineTo(end_x, line_y + bracket_height);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// A `BarNote` is used to render bar lines (from `barline.js`). `BarNote`s can\n// be added to a voice and rendered in the middle of a stave. Since it has no\n// duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n//\n// See `tests/barnote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Barline } from './stavebarline';\n\n// To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`.\nfunction L(...args) { if (BarNote.DEBUG) Vex.L('Vex.Flow.BarNote', args); }\n\nexport class BarNote extends Note {\n  constructor(type = Barline.type.SINGLE) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'BarNote');\n\n    this.metrics = {\n      widths: {},\n    };\n\n    const TYPE = Barline.type;\n    this.metrics.widths = {\n      [TYPE.SINGLE]: 8,\n      [TYPE.DOUBLE]: 12,\n      [TYPE.END]: 15,\n      [TYPE.REPEAT_BEGIN]: 14,\n      [TYPE.REPEAT_END]: 14,\n      [TYPE.REPEAT_BOTH]: 18,\n      [TYPE.NONE]: 0,\n    };\n\n    // Tell the formatter that bar notes have no duration.\n    this.ignore_ticks = true;\n    this.setType(type);\n  }\n\n  // Get and set the type of Bar note. `type` must be one of `Vex.Flow.Barline.type`.\n  getType() { return this.type; }\n  setType(type) {\n    this.type = typeof(type) === 'string'\n      ? Barline.typeString[type]\n      : type;\n\n    // Set width to width of relevant `Barline`.\n    this.setWidth(this.metrics.widths[this.type]);\n    return this;\n  }\n\n  getBoundingBox() {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    /* overridden to ignore */\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  // Render note to stave.\n  draw() {\n    this.checkContext();\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    L('Rendering bar line at: ', this.getAbsoluteX());\n    const barline = new Barline(this.type);\n    barline.setX(this.getAbsoluteX());\n    barline.draw(this.stave);\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n\nimport { Vex } from './vex';\nimport { StemmableNote } from './stemmablenote';\n\nexport class GhostNote extends StemmableNote {\n  /** @constructor */\n  constructor(parameter) {\n    // Sanity check\n    if (!parameter) {\n      throw new Vex.RuntimeError('BadArguments',\n        'Ghost note must have valid initialization data to identify ' +\n        'duration.');\n    }\n\n    let note_struct;\n\n    // Preserve backwards-compatibility\n    if (typeof (parameter) === 'string') {\n      note_struct = { duration: parameter };\n    } else if (typeof (parameter) === 'object') {\n      note_struct = parameter;\n    } else {\n      throw new Vex.RuntimeError('BadArguments',\n        'Ghost note must have valid initialization data to identify ' +\n        'duration.');\n    }\n\n    super(note_struct);\n    this.setAttribute('type', 'GhostNote');\n\n    // Note properties\n    this.setWidth(0);\n  }\n\n  isRest() { return true; }\n\n  setStave(stave) {\n    super.setStave(stave);\n  }\n\n  addToModifierContext() { /* intentionally overridden */ return this; }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\n    // Draw the modifiers\n    this.setRendered();\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      const modifier = this.modifiers[i];\n      modifier.setContext(this.context);\n      modifier.draw();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Mike Corrigan <corrigan@gmail.com>\n//\n// This class implements tremolo notation.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\nimport { GraceNote } from './gracenote';\n\nexport class Tremolo extends Modifier {\n  static get CATEGORY() { return 'tremolo'; }\n  static get YOFFSETSTEMUP() { return -9; }\n  static get YOFFSETSTEMDOWN() { return -21; }\n  static get XOFFSETSTEMUP() { return 6; }\n  static get XOFFSETSTEMDOWN() { return -2; }\n  constructor(num) {\n    super();\n    this.setAttribute('type', 'Tremolo');\n\n    this.num = num;\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.CENTER;\n    this.code = 'v74';\n  }\n\n  getCategory() { return Tremolo.CATEGORY; }\n\n  draw() {\n    this.checkContext();\n\n    if (!(this.note && this.index != null)) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Tremolo without a note and index.\");\n    }\n\n    this.setRendered();\n    const stemDirection = this.note.getStemDirection();\n    this.y_spacing = 4 * stemDirection;\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let x = start.x;\n    let y = this.note.stem.getExtents().topY;\n    const scale = this.note.getCategory() === 'gracenotes' ? GraceNote.SCALE : 1;\n    if (stemDirection < 0) {\n      y += Tremolo.YOFFSETSTEMDOWN * scale;\n    } else {\n      y += Tremolo.YOFFSETSTEMUP * scale;\n    }\n\n    this.font = {\n      family: 'Arial',\n      size: 16 * scale,\n      weight: '',\n    };\n\n    this.render_options = {\n      font_scale: 35 * scale,\n      stroke_px: 3,\n      stroke_spacing: 10 * scale,\n    };\n\n    x += stemDirection < 0 ? Tremolo.XOFFSETSTEMDOWN : Tremolo.XOFFSETSTEMUP;\n    for (let i = 0; i < this.num; ++i) {\n      Glyph.renderGlyph(this.context, x, y, this.render_options.font_scale, this.code);\n      y += this.y_spacing;\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { TickContext } from './tickcontext';\n\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\nfunction L(...args) { if (Crescendo.DEBUG) Vex.L('Vex.Flow.Crescendo', args); }\n\n// Private helper to draw the hairpin\nfunction renderHairpin(ctx, params) {\n  const begin_x = params.begin_x;\n  const end_x = params.end_x;\n  const y = params.y;\n  const half_height =  params.height / 2;\n\n  ctx.beginPath();\n\n  if (params.reverse) {\n    ctx.moveTo(begin_x, y - half_height);\n    ctx.lineTo(end_x,  y);\n    ctx.lineTo(begin_x, y + half_height);\n  } else {\n    ctx.moveTo(end_x,  y - half_height);\n    ctx.lineTo(begin_x, y);\n    ctx.lineTo(end_x,  y + half_height);\n  }\n\n  ctx.stroke();\n  ctx.closePath();\n}\n\nexport class Crescendo extends Note {\n  // Initialize the crescendo's properties\n  constructor(note_struct) {\n    super(note_struct);\n    this.setAttribute('type', 'Crescendo');\n\n    // Whether the object is a decrescendo\n    this.decrescendo = false;\n\n    // The staff line to be placed on\n    this.line = note_struct.line || 0;\n\n    // The height at the open end of the cresc/decresc\n    this.height = 15;\n\n    Vex.Merge(this.render_options, {\n      // Extensions to the length of the crescendo on either side\n      extend_left: 0,\n      extend_right: 0,\n      // Vertical shift\n      y_shift: 0,\n    });\n  }\n\n  // Set the line to center the element on\n  setLine(line) { this.line = line; return this; }\n\n  // Set the full height at the open end\n  setHeight(height) { this.height = height; return this; }\n\n  // Set whether the sign should be a descresendo by passing a bool\n  // to `decresc`\n  setDecrescendo(decresc) {\n    this.decrescendo = decresc;\n    return this;\n  }\n\n  // Preformat the note\n  preFormat() { this.preFormatted = true; return this; }\n\n  // Render the Crescendo object onto the canvas\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const tick_context = this.getTickContext();\n    const next_context = TickContext.getNextContext(tick_context);\n\n    const begin_x = this.getAbsoluteX();\n    const end_x  = next_context ? next_context.getX() : this.stave.x + this.stave.width;\n    const y = this.stave.getYForLine(this.line + (-3)) + 1;\n\n    L(\n      'Drawing ',\n      this.decrescendo ? 'decrescendo ' : 'crescendo ',\n      this.height,\n      'x',\n      begin_x - end_x\n    );\n\n    renderHairpin(this.context, {\n      begin_x: begin_x - this.render_options.extend_left,\n      end_x: end_x + this.render_options.extend_right,\n      y: y + this.render_options.y_shift,\n      height: this.height,\n      reverse: this.decrescendo,\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// A generic text parsing class for VexFlow.\n\nimport { Vex } from './vex';\n\n// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\nfunction L(...args) { if (Parser.DEBUG) Vex.L('Vex.Flow.Parser', args); }\n\nexport const X = Vex.MakeException('ParserError');\n\n// Converts parser results into an easy to reference list that can be\n// used in triggers.\nfunction flattenMatches(results) {\n  if (results.matchedString !== undefined) return results.matchedString;\n  if (results.results) return flattenMatches(results.results);\n  if (results.length === 1) return flattenMatches(results[0]);\n  if (results.length === 0) return null;\n  return results.map(flattenMatches);\n}\n\n// This is the base parser class. Given an arbitrary context-free grammar, it\n// can parse any line and execute code when specific rules are met (e.g.,\n// when a string is terminated.)\nexport class Parser {\n  // For an example of a simple grammar, take a look at tests/parser_tests.js or\n  // the EasyScore grammar in easyscore.js.\n  constructor(grammar) {\n    this.grammar = grammar;\n  }\n\n  // Parse `line` using current grammar. Returns {success: true} if the\n  // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n  // where `errorPos` is the location of the error in the string.\n  parse(line) {\n    this.line = line;\n    this.pos = 0;\n    this.errorPos = -1;\n    const results = this.expect(this.grammar.begin());\n    results.errorPos = this.errorPos;\n    return results;\n  }\n\n  matchFail(returnPos) {\n    if (this.errorPos === -1) this.errorPos = this.pos;\n    this.pos = returnPos;\n  }\n\n  matchSuccess() {\n    this.errorPos = -1;\n  }\n\n  // Look for `token` in this.line[this.pos], and return success\n  // if one is found. `token` is specified as a regular expression.\n  matchToken(token, noSpace = false) {\n    const regexp = noSpace\n      ? new RegExp('^((' + token + '))')\n      : new RegExp('^((' + token + ')\\\\s*)');\n    const workingLine = this.line.slice(this.pos);\n    const result = workingLine.match(regexp);\n    if (result !== null) {\n      return {\n        success: true,\n        matchedString: result[2],\n        incrementPos: result[1].length,\n        pos: this.pos,\n      };\n    } else {\n      return {\n        success: false,\n        pos: this.pos,\n      };\n    }\n  }\n\n  // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n  // set, then return success even if the token is not found, but reset\n  // the position before exiting.\n  expectOne(rule, maybe = false) {\n    const results = [];\n    const pos = this.pos;\n\n    let allMatches = true;\n    let oneMatch = false;\n    maybe = (maybe === true) || (rule.maybe === true);\n\n    // Execute all sub rules in sequence.\n    for (let i = 0; i < rule.expect.length; i++) {\n      const next = rule.expect[i];\n      const localPos = this.pos;\n      const result = this.expect(next);\n\n      // If `rule.or` is set, then return success if any one\n      // of the subrules match, else all subrules must match.\n      if (result.success) {\n        results.push(result);\n        oneMatch = true;\n        if (rule.or) break;\n      } else {\n        allMatches = false;\n        if (!rule.or) {\n          this.pos = localPos;\n          break;\n        }\n      }\n    }\n\n    const gotOne = (rule.or && oneMatch) || allMatches;\n    const success = gotOne || (maybe === true);\n    if (maybe && !gotOne) this.pos = pos;\n    if (success) this.matchSuccess(); else this.matchFail(pos);\n    return { success, results, numMatches: gotOne ? 1 : 0 };\n  }\n\n  // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n  // then a failed match is also a success (but the position is reset).\n  expectOneOrMore(rule, maybe = false) {\n    const results = [];\n    const pos = this.pos;\n    let numMatches = 0;\n    let more = true;\n\n    do {\n      const result = this.expectOne(rule);\n      if (result.success) {\n        numMatches++;\n        results.push(result.results);\n      } else {\n        more = false;\n      }\n    } while (more);\n\n    const success = (numMatches > 0) || (maybe === true);\n    if (maybe && !(numMatches > 0)) this.pos = pos;\n    if (success) this.matchSuccess(); else this.matchFail(pos);\n    return { success, results, numMatches };\n  }\n\n  // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n  expectZeroOrMore(rule) {\n    return this.expectOneOrMore(rule, true);\n  }\n\n  // Execute the rule produced by the provided the `rules` function. This\n  // ofloads to one of the above matchers and consolidates the results. It is also\n  // responsible for executing any code triggered by the rule (in `rule.run`.)\n  expect(rules) {\n    L('Evaluating rules:', rules);\n    let result;\n    if (!rules) {\n      throw new X('Invalid Rule: ' + rules, rules);\n    }\n\n    // Get rule from Grammar class.\n    const rule = rules.bind(this.grammar)();\n\n    if (rule.token) {\n      // Base case: parse the regex and throw an error if the\n      // line doesn't match.\n      result = this.matchToken(rule.token, (rule.noSpace === true));\n      if (result.success) {\n        // Token match! Update position and throw away parsed portion\n        // of string.\n        this.pos += result.incrementPos;\n      }\n    } else if (rule.expect) {\n      if (rule.oneOrMore) {\n        result = this.expectOneOrMore(rule);\n      } else if (rule.zeroOrMore) {\n        result = this.expectZeroOrMore(rule);\n      } else {\n        result = this.expectOne(rule);\n      }\n    } else {\n      throw new X('Bad grammar! No `token` or `expect` property', rule);\n    }\n\n    // If there's a trigger attached to this rule, then pull it.\n    result.matches = [];\n    if (result.results) result.results.forEach(r => result.matches.push(flattenMatches(r)));\n    if (rule.run && result.success) rule.run(result);\n    return result;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements a parser for a simple language to generate\n// VexFlow objects.\n\nimport { Vex } from './vex';\nimport { StaveNote } from './stavenote';\nimport { Parser } from './parser';\nimport { Articulation } from './articulation';\n\n// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\nfunction L(...args) { if (EasyScore.DEBUG) Vex.L('Vex.Flow.EasyScore', args); }\n\nexport const X = Vex.MakeException('EasyScoreError');\n\nclass Grammar {\n  constructor(builder) {\n    this.builder = builder;\n  }\n\n  begin() { return this.LINE; }\n\n  LINE() {\n    return {\n      expect: [this.PIECE, this.PIECES, this.EOL],\n    };\n  }\n  PIECE() {\n    return {\n      expect: [this.CHORDORNOTE, this.PARAMS],\n      run: () => this.builder.commitPiece(),\n    };\n  }\n  PIECES() {\n    return {\n      expect: [this.COMMA, this.PIECE],\n      zeroOrMore: true,\n    };\n  }\n  PARAMS() {\n    return {\n      expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n    };\n  }\n  CHORDORNOTE() {\n    return {\n      expect: [this.CHORD, this.SINGLENOTE],\n      or: true,\n    };\n  }\n  CHORD() {\n    return {\n      expect: [this.LPAREN, this.NOTES, this.RPAREN],\n      run: (state) => this.builder.addChord(state.matches[1]),\n    };\n  }\n  NOTES() {\n    return {\n      expect: [this.NOTE],\n      oneOrMore: true,\n    };\n  }\n  NOTE() {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n    };\n  }\n  SINGLENOTE() {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n      run: (state) =>\n        this.builder.addSingleNote(state.matches[0], state.matches[1], state.matches[2]),\n    };\n  }\n  ACCIDENTAL() {\n    return {\n      expect: [this.ACCIDENTALS],\n      maybe: true,\n    };\n  }\n  DOTS() {\n    return {\n      expect: [this.DOT],\n      zeroOrMore: true,\n      run: (state) => this.builder.setNoteDots(state.matches[0]),\n    };\n  }\n  TYPE() {\n    return {\n      expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n      maybe: true,\n      run: (state) => this.builder.setNoteType(state.matches[2]),\n    };\n  }\n  DURATION() {\n    return {\n      expect: [this.SLASH, this.DURATIONS],\n      maybe: true,\n      run: (state) => this.builder.setNoteDuration(state.matches[1]),\n    };\n  }\n  OPTS() {\n    return {\n      expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n      maybe: true,\n    };\n  }\n  KEYVALS() {\n    return {\n      expect: [this.COMMA, this.KEYVAL],\n      zeroOrMore: true,\n    };\n  }\n  KEYVAL() {\n    const unquote = (str) => str.slice(1, -1);\n\n    return {\n      expect: [this.KEY, this.EQUALS, this.VAL],\n      run: (state) => this.builder.addNoteOption(state.matches[0], unquote(state.matches[2])),\n    };\n  }\n  VAL()  {\n    return {\n      expect: [this.SVAL, this.DVAL],\n      or: true,\n    };\n  }\n\n  KEY()         { return { token: '[a-zA-Z][a-zA-Z0-9]*' }; }\n  DVAL()        { return { token: '[\"][^\"]*[\"]' }; }\n  SVAL()        { return { token: \"['][^']*[']\" }; }\n  NOTENAME()    { return { token: '[a-gA-G]' }; }\n  OCTAVE()      { return { token: '[0-9]+' }; }\n  ACCIDENTALS() { return { token: 'bbs|bb|bss|bs|b|db|d|##|#|n|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' }; }\n  DURATIONS()   { return { token: '[0-9whq]+' }; }\n  TYPES()       { return { token: '[rRsSxX]' }; }\n  LPAREN()      { return { token: '[(]' }; }\n  RPAREN()      { return { token: '[)]' }; }\n  COMMA()       { return { token: '[,]' }; }\n  DOT()         { return { token: '[.]' }; }\n  SLASH()       { return { token: '[/]' }; }\n  MAYBESLASH()  { return { token: '[/]?' }; }\n  EQUALS()      { return { token: '[=]' }; }\n  LBRACKET()    { return { token: '\\\\[' }; }\n  RBRACKET()    { return { token: '\\\\]' }; }\n  EOL()         { return { token: '$' }; }\n}\n\nclass Builder {\n  constructor(factory) {\n    this.factory = factory;\n    this.commitHooks = [];\n    this.reset();\n  }\n\n  reset(options = {}) {\n    this.options = {\n      stem: 'auto',\n      clef: 'treble',\n    };\n    this.elements = {\n      notes: [],\n      accidentals: [],\n    };\n    this.rollingDuration = '8';\n    this.resetPiece();\n    Object.assign(this.options, options);\n  }\n\n  getFactory() { return this.factory; }\n\n  getElements() { return this.elements; }\n\n  addCommitHook(commitHook) {\n    this.commitHooks.push(commitHook);\n  }\n\n  resetPiece() {\n    L('resetPiece');\n    this.piece = {\n      chord: [],\n      duration: this.rollingDuration,\n      dots: 0,\n      type: undefined,\n      options: {},\n    };\n  }\n\n  setNoteDots(dots) {\n    L('setNoteDots:', dots);\n    if (dots) this.piece.dots = dots.length;\n  }\n\n  setNoteDuration(duration) {\n    L('setNoteDuration:', duration);\n    this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n  }\n\n  setNoteType(type) {\n    L('setNoteType:', type);\n    if (type) this.piece.type = type;\n  }\n\n  addNoteOption(key, value) {\n    L('addNoteOption: key:', key, 'value:', value);\n    this.piece.options[key] = value;\n  }\n\n  addNote(key, accid, octave) {\n    L('addNote:', key, accid, octave);\n    this.piece.chord.push({ key, accid, octave });\n  }\n\n  addSingleNote(key, accid, octave) {\n    L('addSingleNote:', key, accid, octave);\n    this.addNote(key, accid, octave);\n  }\n\n  addChord(notes) {\n    L('startChord');\n    if (typeof(notes[0]) !== 'object') {\n      this.addSingleNote(notes[0]);\n    } else {\n      notes.forEach(n => {\n        if (n) this.addNote(...n);\n      });\n    }\n    L('endChord');\n  }\n\n  commitPiece() {\n    L('commitPiece');\n    const { factory } = this;\n\n    if (!factory) return;\n\n    const options = Object.assign({}, this.options, this.piece.options);\n    const { stem, clef } = options;\n    const autoStem = stem.toLowerCase() === 'auto';\n    const stemDirection = !autoStem && stem.toLowerCase() === 'up'\n      ? StaveNote.STEM_UP\n      : StaveNote.STEM_DOWN;\n\n    // Build StaveNotes.\n    const { chord, duration, dots, type } = this.piece;\n    const keys = chord.map(note => note.key + '/' + note.octave);\n    const note = factory.StaveNote({\n      keys,\n      duration,\n      dots,\n      type,\n      clef,\n      auto_stem: autoStem,\n    });\n    if (!autoStem) note.setStemDirection(stemDirection);\n\n    // Attach accidentals.\n    const accids = chord.map(note => note.accid || null);\n    accids.forEach((accid, i) => {\n      if (accid) note.addAccidental(i, factory.Accidental({ type: accid }));\n    });\n\n    // Attach dots.\n    for (let i = 0; i < dots; i++) note.addDotToAll();\n\n    this.commitHooks.forEach(fn => fn(options, note, this));\n\n    this.elements.notes.push(note);\n    this.elements.accidentals.concat(accids);\n    this.resetPiece();\n  }\n}\n\nfunction setId({ id }, note) {\n  if (id === undefined) return;\n\n  note.setAttribute('id', id);\n}\n\n\nfunction setClass(options, note) {\n  if (!options.class) return;\n\n  const commaSeparatedRegex = /\\s*,\\s*/;\n\n  options.class\n    .split(commaSeparatedRegex)\n    .forEach(className => note.addClass(className));\n}\n\nexport class EasyScore {\n  constructor(options = {}) {\n    this.setOptions(options);\n    this.defaults = {\n      clef: 'treble',\n      time: '4/4',\n      stem: 'auto',\n    };\n  }\n\n  set(defaults) {\n    Object.assign(this.defaults, defaults);\n    return this;\n  }\n\n  setOptions(options) {\n    this.options = Object.assign({\n      factory: null,\n      builder: null,\n      commitHooks: [\n        setId,\n        setClass,\n        Articulation.easyScoreHook,\n      ],\n      throwOnError: false,\n    }, options);\n\n    this.factory = this.options.factory;\n    this.builder = this.options.builder || new Builder(this.factory);\n    this.grammar = new Grammar(this.builder);\n    this.parser = new Parser(this.grammar);\n    this.options.commitHooks.forEach(commitHook => this.addCommitHook(commitHook));\n    return this;\n  }\n\n  setContext(context) {\n    if (this.factory) this.factory.setContext(context);\n    return this;\n  }\n\n  parse(line, options = {}) {\n    this.builder.reset(options);\n    const result = this.parser.parse(line);\n    if (!result.success && this.options.throwOnError) {\n      throw new X('Error parsing line: ' + line, result);\n    }\n    return result;\n  }\n\n  beam(notes, options = {}) {\n    this.factory.Beam({ notes, options });\n    return notes;\n  }\n\n  tuplet(notes, options = {}) {\n    this.factory.Tuplet({ notes, options });\n    return notes;\n  }\n\n  notes(line, options = {}) {\n    options = Object.assign({ clef: this.defaults.clef, stem: this.defaults.stem }, options);\n    this.parse(line, options);\n    return this.builder.getElements().notes;\n  }\n\n  voice(notes, voiceOptions) {\n    voiceOptions = Object.assign({ time: this.defaults.time }, voiceOptions);\n    return this.factory.Voice(voiceOptions).addTickables(notes);\n  }\n\n  addCommitHook(commitHook) {\n    return this.builder.addCommitHook(commitHook);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a high level API around VexFlow. It will eventually\n// become the canonical way to use VexFlow.\n//\n// *This API is currently DRAFT*\n\nimport { Vex } from './vex';\nimport { Accidental } from './accidental';\nimport { Articulation } from './articulation';\nimport { Annotation } from './annotation';\nimport { Formatter } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { StringNumber } from './stringnumber';\nimport { TextDynamics } from './textdynamics';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { Renderer } from './renderer';\nimport { Stave } from './stave';\nimport { StaveTie } from './stavetie';\nimport { StaveLine } from './staveline';\nimport { StaveNote } from './stavenote';\nimport { StaveConnector } from './staveconnector';\nimport { System } from './system';\nimport { TickContext } from './tickcontext';\nimport { Tuplet } from './tuplet';\nimport { Voice } from './voice';\nimport { Beam } from './beam';\nimport { Curve } from './curve';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { NoteSubGroup } from './notesubgroup';\nimport { EasyScore } from './easyscore';\nimport { TimeSigNote } from './timesignote';\nimport { KeySigNote } from './keysignote';\nimport { ClefNote } from './clefnote';\nimport { PedalMarking } from './pedalmarking';\nimport { TextBracket } from './textbracket';\nimport { VibratoBracket } from './vibratobracket';\nimport { GhostNote } from './ghostnote';\nimport { BarNote } from './barnote';\nimport { TabNote } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { TextNote } from './textnote';\n\n// To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`.\nfunction L(...args) { if (Factory.DEBUG) Vex.L('Vex.Flow.Factory', args); }\n\nexport const X = Vex.MakeException('FactoryError');\n\nfunction setDefaults(params = {}, defaults) {\n  const default_options = defaults.options;\n  params = Object.assign(defaults, params);\n  params.options = Object.assign(default_options, params.options);\n  return params;\n}\n\nexport class Factory {\n  constructor(options) {\n    L('New factory: ', options);\n    const defaults = {\n      stave: {\n        space: 10,\n      },\n      renderer: {\n        context: null,\n        elementId: '',\n        backend: Renderer.Backends.SVG,\n        width: 500,\n        height: 200,\n        background: '#FFF',\n      },\n      font: {\n        face: 'Arial',\n        point: 10,\n        style: '',\n      },\n    };\n\n    this.options = defaults;\n    this.setOptions(options);\n  }\n\n  static newFromElementId(elementId, width = 500, height = 200) {\n    return new Factory({ renderer: { elementId, width, height } });\n  }\n\n  reset() {\n    this.renderQ = [];\n    this.systems = [];\n    this.staves = [];\n    this.voices = [];\n    this.stave = null; // current stave\n  }\n\n  getOptions() { return this.options; }\n  setOptions(options) {\n    for (const key of ['stave', 'renderer', 'font']) {\n      Object.assign(this.options[key], options[key]);\n    }\n    if (this.options.renderer.elementId !== null || this.options.renderer.context) {\n      this.initRenderer();\n    }\n\n    this.reset();\n  }\n\n  initRenderer() {\n    const { elementId, backend, width, height, background } = this.options.renderer;\n    if (elementId === '') {\n      throw new X('HTML DOM element not set in Factory');\n    }\n\n    this.context = Renderer.buildContext(elementId, backend, width, height, background);\n  }\n\n  getContext() { return this.context; }\n  setContext(context) { this.context = context; return this; }\n  getStave() { return this.stave; }\n  getVoices() { return this.voices; }\n\n  // Returns pixels from current stave spacing.\n  space(spacing) { return this.options.stave.space * spacing; }\n\n  Stave(params) {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space,\n      },\n    });\n\n    const stave = new Stave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  TabStave(params) {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space * 1.3,\n      },\n    });\n\n    const stave = new TabStave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  StaveNote(noteStruct) {\n    const note = new StaveNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GhostNote(noteStruct) {\n    const ghostNote = new GhostNote(noteStruct);\n    if (this.stave) ghostNote.setStave(this.stave);\n    ghostNote.setContext(this.context);\n    this.renderQ.push(ghostNote);\n    return ghostNote;\n  }\n\n  TextNote(textNoteStruct) {\n    const textNote = new TextNote(textNoteStruct);\n    if (this.stave) textNote.setStave(this.stave);\n    textNote.setContext(this.context);\n    this.renderQ.push(textNote);\n    return textNote;\n  }\n\n  BarNote(params) {\n    params = setDefaults(params, {\n      type: 'single',\n      options: {},\n    });\n\n    const barNote = new BarNote(params.type);\n    if (this.stave) barNote.setStave(this.stave);\n    barNote.setContext(this.context);\n    this.renderQ.push(barNote);\n    return barNote;\n  }\n\n  ClefNote(params) {\n    params = setDefaults(params, {\n      type: 'treble',\n      options: {\n        size: 'default',\n      },\n    });\n\n    const clefNote = new ClefNote(params.type, params.options.size, params.options.annotation);\n    if (this.stave) clefNote.setStave(this.stave);\n    clefNote.setContext(this.context);\n    this.renderQ.push(clefNote);\n    return clefNote;\n  }\n\n  TimeSigNote(params) {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {},\n    });\n\n    const timeSigNote = new TimeSigNote(params.time);\n    if (this.stave) timeSigNote.setStave(this.stave);\n    timeSigNote.setContext(this.context);\n    this.renderQ.push(timeSigNote);\n    return timeSigNote;\n  }\n\n  KeySigNote(params) {\n    const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n    if (this.stave) keySigNote.setStave(this.stave);\n    keySigNote.setContext(this.context);\n    this.renderQ.push(keySigNote);\n    return keySigNote;\n  }\n\n  TabNote(noteStruct) {\n    const note = new TabNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GraceNote(noteStruct) {\n    const note = new GraceNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    return note;\n  }\n\n  GraceNoteGroup(params) {\n    const group = new GraceNoteGroup(params.notes, params.slur);\n    group.setContext(this.context);\n    return group;\n  }\n\n  Accidental(params) {\n    params = setDefaults(params, {\n      type: null,\n      options: {},\n    });\n\n    const accid = new Accidental(params.type);\n    accid.setContext(this.context);\n    return accid;\n  }\n\n  Annotation(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      vJustify: 'below',\n      hJustify: 'center',\n      fontFamily: 'Times',\n      fontSize: 14,\n      fontWeight: 'bold italic',\n      options: {},\n    });\n\n    const annotation = new Annotation(params.text);\n    annotation.setJustification(params.hJustify);\n    annotation.setVerticalJustification(params.vJustify);\n    annotation.setFont(params.fontFamily, params.fontSize, params.fontWeight);\n    annotation.setContext(this.context);\n    return annotation;\n  }\n\n  Articulation(params) {\n    params = setDefaults(params, {\n      type: 'a.',\n      position: 'above',\n      options: {},\n    });\n\n    const articulation = new Articulation(params.type);\n    articulation.setPosition(params.position);\n    articulation.setContext(this.context);\n    return articulation;\n  }\n\n  TextDynamics(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      duration: 'q',\n      dots: 0,\n      line: 0,\n      options: {},\n    });\n\n    const text = new TextDynamics({\n      text: params.text,\n      line: params.line,\n      duration: params.duration,\n      dots: params.dots,\n    });\n\n    if (this.stave) text.setStave(this.stave);\n    text.setContext(this.context);\n    this.renderQ.push(text);\n    return text;\n  }\n\n  Fingering(params) {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {},\n    });\n\n    const fingering = new FretHandFinger(params.number);\n    fingering.setPosition(params.position);\n    fingering.setContext(this.context);\n    return fingering;\n  }\n\n  StringNumber(params) {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {},\n    });\n\n    const stringNumber = new StringNumber(params.number);\n    stringNumber.setPosition(params.position);\n    stringNumber.setContext(this.context);\n    return stringNumber;\n  }\n\n  TickContext() {\n    return new TickContext().setContext(this.context);\n  }\n\n  ModifierContext() {\n    return new ModifierContext();\n  }\n\n  MultiMeasureRest(params) {\n    const multimeasurerest = new MultiMeasureRest(params.number_of_measures, params);\n    multimeasurerest.setContext(this.context);\n    this.renderQ.push(multimeasurerest);\n    return  multimeasurerest;\n  }\n\n  Voice(params) {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {},\n    });\n    const voice = new Voice(params.time);\n    this.voices.push(voice);\n    return voice;\n  }\n\n  StaveConnector(params) {\n    params = setDefaults(params, {\n      top_stave: null,\n      bottom_stave: null,\n      type: 'double',\n      options: {},\n    });\n    const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n    connector.setType(params.type).setContext(this.context);\n    this.renderQ.push(connector);\n    return connector;\n  }\n\n  Formatter() {\n    return new Formatter();\n  }\n\n  Tuplet(params) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {},\n    });\n\n    const tuplet = new Tuplet(params.notes, params.options).setContext(this.context);\n    this.renderQ.push(tuplet);\n    return tuplet;\n  }\n\n  Beam(params) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        autoStem: false,\n        secondaryBeamBreaks: [],\n      },\n    });\n\n    const beam = new Beam(params.notes, params.options.autoStem).setContext(this.context);\n    beam.breakSecondaryAt(params.options.secondaryBeamBreaks);\n    this.renderQ.push(beam);\n    return beam;\n  }\n\n  Curve(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {},\n    });\n\n    const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n    this.renderQ.push(curve);\n    return curve;\n  }\n\n  StaveTie(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      text: null,\n      options: {\n        direction: undefined,\n      },\n    });\n\n    const tie = new StaveTie({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    }, params.text);\n\n    if (params.options.direction) tie.setDirection(params.options.direction);\n    tie.setContext(this.context);\n    this.renderQ.push(tie);\n    return tie;\n  }\n\n  StaveLine(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      options: {},\n    });\n\n    const line = new StaveLine({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    });\n\n    if (params.options.text) line.setText(params.options.text);\n    if (params.options.font) line.setFont(params.options.font);\n\n    line.setContext(this.context);\n    this.renderQ.push(line);\n    return line;\n  }\n\n  VibratoBracket(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {\n        harsh: false,\n      },\n    });\n\n    const vibratoBracket = new VibratoBracket({\n      start: params.from,\n      stop: params.to,\n    });\n\n    if (params.options.line) vibratoBracket.setLine(params.options.line);\n    if (params.options.harsh) vibratoBracket.setHarsh(params.options.harsh);\n\n    vibratoBracket.setContext(this.context);\n    this.renderQ.push(vibratoBracket);\n\n    return vibratoBracket;\n  }\n\n  TextBracket(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      text: '',\n      options: {\n        superscript: '',\n        position: 1,\n      },\n    });\n\n    const textBracket = new TextBracket({\n      start: params.from,\n      stop: params.to,\n      text: params.text,\n      superscript: params.options.superscript,\n      position: params.options.position,\n    });\n\n    if (params.options.line) textBracket.setLine(params.options.line);\n    if (params.options.font) textBracket.setFont(params.options.font);\n\n    textBracket.setContext(this.context);\n    this.renderQ.push(textBracket);\n    return textBracket;\n  }\n\n  System(params = {}) {\n    params.factory = this;\n    const system = new System(params).setContext(this.context);\n    this.systems.push(system);\n    return system;\n  }\n\n  EasyScore(params = {}) {\n    params.factory = this;\n    return new EasyScore(params);\n  }\n\n  PedalMarking(params = {}) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        style: 'mixed',\n      },\n    });\n\n    const pedal = new PedalMarking(params.notes);\n    pedal.setStyle(PedalMarking.StylesString[params.options.style]);\n    pedal.setContext(this.context);\n    this.renderQ.push(pedal);\n    return pedal;\n  }\n\n  NoteSubGroup(params = {}) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {},\n    });\n\n    const group = new NoteSubGroup(params.notes);\n    group.setContext(this.context);\n    return group;\n  }\n\n  draw() {\n    this.systems.forEach(i => i.setContext(this.context).format());\n    this.staves.forEach(i => i.setContext(this.context).draw());\n    this.voices.forEach(i => i.setContext(this.context).draw());\n    this.renderQ.forEach(i => {\n      if (!i.isRendered()) i.setContext(this.context).draw();\n    });\n    this.systems.forEach(i => i.setContext(this.context).draw());\n    this.reset();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements a musical system, which is a collection of staves,\n// each which can have one or more voices. All voices across all staves in\n// the system are formatted together.\n\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Formatter } from './formatter';\nimport { Note } from './note';\n\nfunction setDefaults(params, defaults) {\n  const default_options = defaults.options;\n  params = Object.assign(defaults, params);\n  params.options = Object.assign(default_options, params.options);\n  return params;\n}\n\nexport class System extends Element {\n  constructor(params = {}) {\n    super();\n    this.setAttribute('type', 'System');\n    this.setOptions(params);\n    this.parts = [];\n  }\n\n  setOptions(options = {}) {\n    this.options = setDefaults(options, {\n      x: 10,\n      y: 10,\n      width: 500,\n      connector: null,\n      spaceBetweenStaves: 12, // stave spaces\n      factory: null,\n      debugFormatter: false,\n      formatIterations: 0,   // number of formatter tuning steps\n      options: {},\n    });\n\n    this.factory = this.options.factory || new Factory({ renderer: { el: null } });\n  }\n\n  setContext(context) {\n    super.setContext(context);\n    this.factory.setContext(context);\n    return this;\n  }\n\n  addConnector(type = 'double') {\n    this.connector = this.factory.StaveConnector({\n      top_stave: this.parts[0].stave,\n      bottom_stave: this.parts[this.parts.length - 1].stave,\n      type,\n    });\n    return this.connector;\n  }\n\n  addStave(params) {\n    params = setDefaults(params, {\n      stave: null,\n      voices: [],\n      spaceAbove: 0, // stave spaces\n      spaceBelow: 0, // stave spaces\n      debugNoteMetrics: false,\n      options: { left_bar: false },\n    });\n\n    if (!params.stave) {\n      params.stave = this.factory.Stave({\n        x: this.options.x,\n        y: this.options.y,\n        width: this.options.width,\n        options: params.options,\n      });\n    }\n\n    params.voices.forEach(voice =>\n      voice\n        .setContext(this.context)\n        .setStave(params.stave)\n        .getTickables()\n        .forEach(tickable => tickable.setStave(params.stave))\n    );\n\n    this.parts.push(params);\n    return params.stave;\n  }\n\n  format() {\n    const formatter = new Formatter();\n    this.formatter = formatter;\n\n    let y = this.options.y;\n    let startX = 0;\n    let allVoices = [];\n    const debugNoteMetricsYs = [];\n\n    // Join the voices for each stave.\n    this.parts.forEach(part => {\n      y = y + part.stave.space(part.spaceAbove);\n      part.stave.setY(y);\n      formatter.joinVoices(part.voices);\n      y = y + part.stave.space(part.spaceBelow);\n      y = y + part.stave.space(this.options.spaceBetweenStaves);\n      if (part.debugNoteMetrics) {\n        debugNoteMetricsYs.push({ y, voice: part.voices[0] });\n        y += 15;\n      }\n      allVoices = allVoices.concat(part.voices);\n\n      startX = Math.max(startX, part.stave.getNoteStartX());\n    });\n\n    // Update the start position of all staves.\n    this.parts.forEach(part => part.stave.setNoteStartX(startX));\n    const justifyWidth = this.options.width - (startX - this.options.x) - Note.STAVEPADDING;\n    formatter.format(allVoices, justifyWidth);\n\n    for (let i = 0; i < this.options.formatIterations; i++) {\n      formatter.tune();\n    }\n\n    this.startX = startX;\n    this.debugNoteMetricsYs = debugNoteMetricsYs;\n    this.lastY = y;\n  }\n\n  draw() {\n    // Render debugging information, if requested.\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    if (this.options.debugFormatter) {\n      Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n    }\n\n    this.debugNoteMetricsYs.forEach(d => {\n      d.voice.getTickables().forEach(note => Note.plotMetrics(ctx, note, d.y));\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Renderer } from './renderer';\nimport { Formatter } from './formatter';\nimport { Music } from './music';\nimport { Glyph } from './glyph';\nimport { Stave } from './stave';\nimport { StaveNote } from './stavenote';\nimport { StaveModifier } from './stavemodifier';\nimport { StaveTempo } from './stavetempo';\nimport { Voice } from './voice';\nimport { Accidental } from './accidental';\nimport { Beam } from './beam';\nimport { StaveTie } from './stavetie';\nimport { TabStave } from './tabstave';\nimport { TabNote } from './tabnote';\nimport { Bend } from './bend';\nimport { Vibrato } from './vibrato';\nimport { VibratoBracket } from './vibratobracket';\nimport { Note } from './note';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { TickContext } from './tickcontext';\nimport { Articulation } from './articulation';\nimport { Annotation } from './annotation';\nimport { Barline } from './stavebarline';\nimport { NoteHead } from './notehead';\nimport { StaveConnector } from './staveconnector';\nimport { ClefNote } from './clefnote';\nimport { KeySignature } from './keysignature';\nimport { KeySigNote } from './keysignote';\nimport { TimeSignature } from './timesignature';\nimport { TimeSigNote } from './timesignote';\nimport { Stem } from './stem';\nimport { TabTie } from './tabtie';\nimport { Clef } from './clef';\nimport { Dot } from './dot';\nimport { Modifier } from './modifier';\nimport { TabSlide } from './tabslide';\nimport { Tuplet } from './tuplet';\nimport { GraceNote } from './gracenote';\nimport { GraceTabNote } from './gracetabnote';\nimport { Tuning } from './tuning';\nimport { KeyManager } from './keymanager';\nimport { StaveHairpin } from './stavehairpin';\nimport { BoundingBox } from './boundingbox';\nimport { Stroke } from './strokes';\nimport { TextNote } from './textnote';\nimport { Curve } from './curve';\nimport { TextDynamics } from './textdynamics';\nimport { StaveLine } from './staveline';\nimport { Ornament } from './ornament';\nimport { PedalMarking } from './pedalmarking';\nimport { TextBracket } from './textbracket';\nimport { FretHandFinger } from './frethandfinger';\nimport { Repetition } from './staverepetition';\nimport { BarNote } from './barnote';\nimport { GhostNote } from './ghostnote';\nimport { NoteSubGroup } from './notesubgroup';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { Tremolo } from './tremolo';\nimport { StringNumber } from './stringnumber';\nimport { Crescendo } from './crescendo';\nimport { Volta } from './stavevolta';\nimport { Font } from './fonts/vexflow_font';\nimport { System } from './system';\nimport { Factory } from './factory';\nimport { Parser } from './parser';\nimport { EasyScore } from './easyscore';\nimport { Registry } from './registry';\n\nVex.Flow = Flow;\nVex.Flow.Element = Element;\nVex.Flow.Fraction = Fraction;\nVex.Flow.Renderer = Renderer;\nVex.Flow.Formatter = Formatter;\nVex.Flow.Music = Music;\nVex.Flow.Glyph = Glyph;\nVex.Flow.Stave = Stave;\nVex.Flow.StaveNote = StaveNote;\nVex.Flow.StaveModifier = StaveModifier;\nVex.Flow.StaveTempo = StaveTempo;\nVex.Flow.Voice = Voice;\nVex.Flow.Accidental = Accidental;\nVex.Flow.Beam = Beam;\nVex.Flow.StaveTie = StaveTie;\nVex.Flow.TabStave = TabStave;\nVex.Flow.TabNote = TabNote;\nVex.Flow.Bend = Bend;\nVex.Flow.Vibrato = Vibrato;\nVex.Flow.VibratoBracket = VibratoBracket;\nVex.Flow.Note = Note;\nVex.Flow.ModifierContext = ModifierContext;\nVex.Flow.MultiMeasureRest = MultiMeasureRest;\nVex.Flow.TickContext = TickContext;\nVex.Flow.Articulation = Articulation;\nVex.Flow.Annotation = Annotation;\nVex.Flow.Barline = Barline;\nVex.Flow.NoteHead = NoteHead;\nVex.Flow.StaveConnector = StaveConnector;\nVex.Flow.ClefNote = ClefNote;\nVex.Flow.KeySignature = KeySignature;\nVex.Flow.KeySigNote = KeySigNote;\nVex.Flow.TimeSignature = TimeSignature;\nVex.Flow.TimeSigNote = TimeSigNote;\nVex.Flow.Stem = Stem;\nVex.Flow.TabTie = TabTie;\nVex.Flow.Clef = Clef;\nVex.Flow.Dot = Dot;\nVex.Flow.Modifier = Modifier;\nVex.Flow.TabSlide = TabSlide;\nVex.Flow.Tuplet = Tuplet;\nVex.Flow.GraceNote = GraceNote;\nVex.Flow.GraceTabNote = GraceTabNote;\nVex.Flow.Tuning = Tuning;\nVex.Flow.KeyManager = KeyManager;\nVex.Flow.StaveHairpin = StaveHairpin;\nVex.Flow.BoundingBox = BoundingBox;\nVex.Flow.Stroke = Stroke;\nVex.Flow.TextNote = TextNote;\nVex.Flow.Curve = Curve;\nVex.Flow.TextDynamics = TextDynamics;\nVex.Flow.StaveLine = StaveLine;\nVex.Flow.Ornament = Ornament;\nVex.Flow.PedalMarking = PedalMarking;\nVex.Flow.TextBracket = TextBracket;\nVex.Flow.FretHandFinger = FretHandFinger;\nVex.Flow.Repetition = Repetition;\nVex.Flow.BarNote = BarNote;\nVex.Flow.GhostNote = GhostNote;\nVex.Flow.NoteSubGroup = NoteSubGroup;\nVex.Flow.GraceNoteGroup = GraceNoteGroup;\nVex.Flow.Tremolo = Tremolo;\nVex.Flow.StringNumber = StringNumber;\nVex.Flow.Crescendo = Crescendo;\nVex.Flow.Volta = Volta;\nVex.Flow.Font = Font;\nVex.Flow.System = System;\nVex.Flow.Factory = Factory;\nVex.Flow.Parser = Parser;\nVex.Flow.EasyScore = EasyScore;\nVex.Flow.Registry = Registry;\n\nexport default Vex;\n"],"sourceRoot":""}